-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2018.2.1 (win64) Build 2288692 Thu Jul 26 18:24:02 MDT 2018
-- Date        : Mon Oct 14 15:24:03 2019
-- Host        : DESKTOP-UAK7KP3 running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
--               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ IP_Test_MemoryTestBlock_0_0_sim_netlist.vhdl
-- Design      : IP_Test_MemoryTestBlock_0_0
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xczu3eg-sbva484-1-e
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim is
  port (
    clk : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 56 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 56 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim : entity is "builtin_prim";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim is
  signal \gf36e2_inst.sngfifo36e2_n_0\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_1\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_10\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_100\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_101\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_102\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_103\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_104\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_105\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_106\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_107\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_108\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_109\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_11\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_110\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_12\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_13\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_14\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_15\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_16\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_168\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_169\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_17\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_170\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_171\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_172\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_173\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_174\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_175\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_176\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_177\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_178\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_179\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_18\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_180\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_181\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_182\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_183\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_184\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_185\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_186\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_187\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_188\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_189\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_19\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_190\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_191\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_2\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_20\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_21\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_22\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_23\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_24\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_25\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_26\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_27\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_28\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_29\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_3\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_30\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_31\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_32\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_33\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_34\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_35\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_36\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_37\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_38\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_39\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_4\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_40\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_41\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_42\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_43\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_44\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_45\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_46\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_47\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_48\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_49\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_5\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_50\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_51\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_52\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_53\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_54\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_55\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_56\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_57\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_58\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_59\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_6\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_60\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_61\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_62\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_63\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_64\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_65\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_66\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_67\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_68\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_69\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_7\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_70\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_71\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_72\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_73\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_74\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_75\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_76\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_77\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_78\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_79\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_8\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_80\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_81\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_82\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_83\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_84\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_85\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_86\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_87\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_88\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_89\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_9\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_90\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_91\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_92\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_93\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_94\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_95\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_96\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_97\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_98\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_99\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \gf36e2_inst.sngfifo36e2\ : label is "PRIMITIVE";
begin
\gf36e2_inst.sngfifo36e2\: unisim.vcomponents.FIFO36E2
    generic map(
      CASCADE_ORDER => "NONE",
      CLOCK_DOMAINS => "COMMON",
      EN_ECC_PIPE => "FALSE",
      EN_ECC_READ => "FALSE",
      EN_ECC_WRITE => "FALSE",
      FIRST_WORD_FALL_THROUGH => "TRUE",
      INIT => X"000000000000000000",
      IS_RDCLK_INVERTED => '0',
      IS_RDEN_INVERTED => '0',
      IS_RSTREG_INVERTED => '0',
      IS_RST_INVERTED => '0',
      IS_WRCLK_INVERTED => '0',
      IS_WREN_INVERTED => '0',
      PROG_EMPTY_THRESH => 4,
      PROG_FULL_THRESH => 480,
      RDCOUNT_TYPE => "EXTENDED_DATACOUNT",
      READ_WIDTH => 72,
      REGISTER_MODE => "REGISTERED",
      RSTREG_PRIORITY => "REGCE",
      SLEEP_ASYNC => "FALSE",
      SRVAL => X"000000000000000000",
      WRCOUNT_TYPE => "EXTENDED_DATACOUNT",
      WRITE_WIDTH => 72
    )
        port map (
      CASDIN(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      CASDINP(7 downto 0) => B"00000000",
      CASDOMUX => '0',
      CASDOMUXEN => '1',
      CASDOUT(63) => \gf36e2_inst.sngfifo36e2_n_40\,
      CASDOUT(62) => \gf36e2_inst.sngfifo36e2_n_41\,
      CASDOUT(61) => \gf36e2_inst.sngfifo36e2_n_42\,
      CASDOUT(60) => \gf36e2_inst.sngfifo36e2_n_43\,
      CASDOUT(59) => \gf36e2_inst.sngfifo36e2_n_44\,
      CASDOUT(58) => \gf36e2_inst.sngfifo36e2_n_45\,
      CASDOUT(57) => \gf36e2_inst.sngfifo36e2_n_46\,
      CASDOUT(56) => \gf36e2_inst.sngfifo36e2_n_47\,
      CASDOUT(55) => \gf36e2_inst.sngfifo36e2_n_48\,
      CASDOUT(54) => \gf36e2_inst.sngfifo36e2_n_49\,
      CASDOUT(53) => \gf36e2_inst.sngfifo36e2_n_50\,
      CASDOUT(52) => \gf36e2_inst.sngfifo36e2_n_51\,
      CASDOUT(51) => \gf36e2_inst.sngfifo36e2_n_52\,
      CASDOUT(50) => \gf36e2_inst.sngfifo36e2_n_53\,
      CASDOUT(49) => \gf36e2_inst.sngfifo36e2_n_54\,
      CASDOUT(48) => \gf36e2_inst.sngfifo36e2_n_55\,
      CASDOUT(47) => \gf36e2_inst.sngfifo36e2_n_56\,
      CASDOUT(46) => \gf36e2_inst.sngfifo36e2_n_57\,
      CASDOUT(45) => \gf36e2_inst.sngfifo36e2_n_58\,
      CASDOUT(44) => \gf36e2_inst.sngfifo36e2_n_59\,
      CASDOUT(43) => \gf36e2_inst.sngfifo36e2_n_60\,
      CASDOUT(42) => \gf36e2_inst.sngfifo36e2_n_61\,
      CASDOUT(41) => \gf36e2_inst.sngfifo36e2_n_62\,
      CASDOUT(40) => \gf36e2_inst.sngfifo36e2_n_63\,
      CASDOUT(39) => \gf36e2_inst.sngfifo36e2_n_64\,
      CASDOUT(38) => \gf36e2_inst.sngfifo36e2_n_65\,
      CASDOUT(37) => \gf36e2_inst.sngfifo36e2_n_66\,
      CASDOUT(36) => \gf36e2_inst.sngfifo36e2_n_67\,
      CASDOUT(35) => \gf36e2_inst.sngfifo36e2_n_68\,
      CASDOUT(34) => \gf36e2_inst.sngfifo36e2_n_69\,
      CASDOUT(33) => \gf36e2_inst.sngfifo36e2_n_70\,
      CASDOUT(32) => \gf36e2_inst.sngfifo36e2_n_71\,
      CASDOUT(31) => \gf36e2_inst.sngfifo36e2_n_72\,
      CASDOUT(30) => \gf36e2_inst.sngfifo36e2_n_73\,
      CASDOUT(29) => \gf36e2_inst.sngfifo36e2_n_74\,
      CASDOUT(28) => \gf36e2_inst.sngfifo36e2_n_75\,
      CASDOUT(27) => \gf36e2_inst.sngfifo36e2_n_76\,
      CASDOUT(26) => \gf36e2_inst.sngfifo36e2_n_77\,
      CASDOUT(25) => \gf36e2_inst.sngfifo36e2_n_78\,
      CASDOUT(24) => \gf36e2_inst.sngfifo36e2_n_79\,
      CASDOUT(23) => \gf36e2_inst.sngfifo36e2_n_80\,
      CASDOUT(22) => \gf36e2_inst.sngfifo36e2_n_81\,
      CASDOUT(21) => \gf36e2_inst.sngfifo36e2_n_82\,
      CASDOUT(20) => \gf36e2_inst.sngfifo36e2_n_83\,
      CASDOUT(19) => \gf36e2_inst.sngfifo36e2_n_84\,
      CASDOUT(18) => \gf36e2_inst.sngfifo36e2_n_85\,
      CASDOUT(17) => \gf36e2_inst.sngfifo36e2_n_86\,
      CASDOUT(16) => \gf36e2_inst.sngfifo36e2_n_87\,
      CASDOUT(15) => \gf36e2_inst.sngfifo36e2_n_88\,
      CASDOUT(14) => \gf36e2_inst.sngfifo36e2_n_89\,
      CASDOUT(13) => \gf36e2_inst.sngfifo36e2_n_90\,
      CASDOUT(12) => \gf36e2_inst.sngfifo36e2_n_91\,
      CASDOUT(11) => \gf36e2_inst.sngfifo36e2_n_92\,
      CASDOUT(10) => \gf36e2_inst.sngfifo36e2_n_93\,
      CASDOUT(9) => \gf36e2_inst.sngfifo36e2_n_94\,
      CASDOUT(8) => \gf36e2_inst.sngfifo36e2_n_95\,
      CASDOUT(7) => \gf36e2_inst.sngfifo36e2_n_96\,
      CASDOUT(6) => \gf36e2_inst.sngfifo36e2_n_97\,
      CASDOUT(5) => \gf36e2_inst.sngfifo36e2_n_98\,
      CASDOUT(4) => \gf36e2_inst.sngfifo36e2_n_99\,
      CASDOUT(3) => \gf36e2_inst.sngfifo36e2_n_100\,
      CASDOUT(2) => \gf36e2_inst.sngfifo36e2_n_101\,
      CASDOUT(1) => \gf36e2_inst.sngfifo36e2_n_102\,
      CASDOUT(0) => \gf36e2_inst.sngfifo36e2_n_103\,
      CASDOUTP(7) => \gf36e2_inst.sngfifo36e2_n_168\,
      CASDOUTP(6) => \gf36e2_inst.sngfifo36e2_n_169\,
      CASDOUTP(5) => \gf36e2_inst.sngfifo36e2_n_170\,
      CASDOUTP(4) => \gf36e2_inst.sngfifo36e2_n_171\,
      CASDOUTP(3) => \gf36e2_inst.sngfifo36e2_n_172\,
      CASDOUTP(2) => \gf36e2_inst.sngfifo36e2_n_173\,
      CASDOUTP(1) => \gf36e2_inst.sngfifo36e2_n_174\,
      CASDOUTP(0) => \gf36e2_inst.sngfifo36e2_n_175\,
      CASNXTEMPTY => \gf36e2_inst.sngfifo36e2_n_0\,
      CASNXTRDEN => '0',
      CASOREGIMUX => '0',
      CASOREGIMUXEN => '1',
      CASPRVEMPTY => '0',
      CASPRVRDEN => \gf36e2_inst.sngfifo36e2_n_1\,
      DBITERR => \gf36e2_inst.sngfifo36e2_n_2\,
      DIN(63 downto 57) => B"0000000",
      DIN(56 downto 0) => din(56 downto 0),
      DINP(7 downto 0) => B"00000000",
      DOUT(63) => \gf36e2_inst.sngfifo36e2_n_104\,
      DOUT(62) => \gf36e2_inst.sngfifo36e2_n_105\,
      DOUT(61) => \gf36e2_inst.sngfifo36e2_n_106\,
      DOUT(60) => \gf36e2_inst.sngfifo36e2_n_107\,
      DOUT(59) => \gf36e2_inst.sngfifo36e2_n_108\,
      DOUT(58) => \gf36e2_inst.sngfifo36e2_n_109\,
      DOUT(57) => \gf36e2_inst.sngfifo36e2_n_110\,
      DOUT(56 downto 0) => dout(56 downto 0),
      DOUTP(7) => \gf36e2_inst.sngfifo36e2_n_176\,
      DOUTP(6) => \gf36e2_inst.sngfifo36e2_n_177\,
      DOUTP(5) => \gf36e2_inst.sngfifo36e2_n_178\,
      DOUTP(4) => \gf36e2_inst.sngfifo36e2_n_179\,
      DOUTP(3) => \gf36e2_inst.sngfifo36e2_n_180\,
      DOUTP(2) => \gf36e2_inst.sngfifo36e2_n_181\,
      DOUTP(1) => \gf36e2_inst.sngfifo36e2_n_182\,
      DOUTP(0) => \gf36e2_inst.sngfifo36e2_n_183\,
      ECCPARITY(7) => \gf36e2_inst.sngfifo36e2_n_184\,
      ECCPARITY(6) => \gf36e2_inst.sngfifo36e2_n_185\,
      ECCPARITY(5) => \gf36e2_inst.sngfifo36e2_n_186\,
      ECCPARITY(4) => \gf36e2_inst.sngfifo36e2_n_187\,
      ECCPARITY(3) => \gf36e2_inst.sngfifo36e2_n_188\,
      ECCPARITY(2) => \gf36e2_inst.sngfifo36e2_n_189\,
      ECCPARITY(1) => \gf36e2_inst.sngfifo36e2_n_190\,
      ECCPARITY(0) => \gf36e2_inst.sngfifo36e2_n_191\,
      EMPTY => \gf36e2_inst.sngfifo36e2_n_3\,
      FULL => \gf36e2_inst.sngfifo36e2_n_4\,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      PROGEMPTY => \gf36e2_inst.sngfifo36e2_n_5\,
      PROGFULL => \gf36e2_inst.sngfifo36e2_n_6\,
      RDCLK => clk,
      RDCOUNT(13) => \gf36e2_inst.sngfifo36e2_n_12\,
      RDCOUNT(12) => \gf36e2_inst.sngfifo36e2_n_13\,
      RDCOUNT(11) => \gf36e2_inst.sngfifo36e2_n_14\,
      RDCOUNT(10) => \gf36e2_inst.sngfifo36e2_n_15\,
      RDCOUNT(9) => \gf36e2_inst.sngfifo36e2_n_16\,
      RDCOUNT(8) => \gf36e2_inst.sngfifo36e2_n_17\,
      RDCOUNT(7) => \gf36e2_inst.sngfifo36e2_n_18\,
      RDCOUNT(6) => \gf36e2_inst.sngfifo36e2_n_19\,
      RDCOUNT(5) => \gf36e2_inst.sngfifo36e2_n_20\,
      RDCOUNT(4) => \gf36e2_inst.sngfifo36e2_n_21\,
      RDCOUNT(3) => \gf36e2_inst.sngfifo36e2_n_22\,
      RDCOUNT(2) => \gf36e2_inst.sngfifo36e2_n_23\,
      RDCOUNT(1) => \gf36e2_inst.sngfifo36e2_n_24\,
      RDCOUNT(0) => \gf36e2_inst.sngfifo36e2_n_25\,
      RDEN => rd_en,
      RDERR => \gf36e2_inst.sngfifo36e2_n_7\,
      RDRSTBUSY => \gf36e2_inst.sngfifo36e2_n_8\,
      REGCE => rd_en,
      RST => srst,
      RSTREG => srst,
      SBITERR => \gf36e2_inst.sngfifo36e2_n_9\,
      SLEEP => '0',
      WRCLK => clk,
      WRCOUNT(13) => \gf36e2_inst.sngfifo36e2_n_26\,
      WRCOUNT(12) => \gf36e2_inst.sngfifo36e2_n_27\,
      WRCOUNT(11) => \gf36e2_inst.sngfifo36e2_n_28\,
      WRCOUNT(10) => \gf36e2_inst.sngfifo36e2_n_29\,
      WRCOUNT(9) => \gf36e2_inst.sngfifo36e2_n_30\,
      WRCOUNT(8) => \gf36e2_inst.sngfifo36e2_n_31\,
      WRCOUNT(7) => \gf36e2_inst.sngfifo36e2_n_32\,
      WRCOUNT(6) => \gf36e2_inst.sngfifo36e2_n_33\,
      WRCOUNT(5) => \gf36e2_inst.sngfifo36e2_n_34\,
      WRCOUNT(4) => \gf36e2_inst.sngfifo36e2_n_35\,
      WRCOUNT(3) => \gf36e2_inst.sngfifo36e2_n_36\,
      WRCOUNT(2) => \gf36e2_inst.sngfifo36e2_n_37\,
      WRCOUNT(1) => \gf36e2_inst.sngfifo36e2_n_38\,
      WRCOUNT(0) => \gf36e2_inst.sngfifo36e2_n_39\,
      WREN => wr_en,
      WRERR => \gf36e2_inst.sngfifo36e2_n_10\,
      WRRSTBUSY => \gf36e2_inst.sngfifo36e2_n_11\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim_1 is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim_1 : entity is "builtin_prim";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim_1;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim_1 is
  signal \^empty\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_0\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_1\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_100\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_101\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_102\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_103\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_12\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_13\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_14\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_15\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_16\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_168\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_169\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_17\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_170\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_171\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_172\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_173\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_174\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_175\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_18\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_184\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_185\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_186\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_187\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_188\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_189\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_19\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_190\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_191\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_20\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_21\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_22\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_23\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_24\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_25\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_26\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_27\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_28\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_29\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_30\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_31\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_32\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_33\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_34\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_35\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_36\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_37\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_38\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_39\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_40\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_41\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_42\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_43\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_44\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_45\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_46\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_47\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_48\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_49\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_5\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_50\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_51\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_52\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_53\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_54\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_55\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_56\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_57\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_58\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_59\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_60\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_61\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_62\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_63\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_64\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_65\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_66\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_67\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_68\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_69\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_70\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_71\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_72\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_73\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_74\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_75\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_76\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_77\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_78\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_79\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_80\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_81\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_82\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_83\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_84\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_85\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_86\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_87\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_88\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_89\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_90\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_91\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_92\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_93\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_94\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_95\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_96\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_97\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_98\ : STD_LOGIC;
  signal \gf36e2_inst.sngfifo36e2_n_99\ : STD_LOGIC;
  signal p_4_out : STD_LOGIC;
  signal p_5_out : STD_LOGIC;
  signal p_7_out : STD_LOGIC;
  signal p_8_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \gf36e2_inst.sngfifo36e2\ : label is "PRIMITIVE";
begin
  empty <= \^empty\;
\gf36e2_inst.sngfifo36e2\: unisim.vcomponents.FIFO36E2
    generic map(
      CASCADE_ORDER => "NONE",
      CLOCK_DOMAINS => "COMMON",
      EN_ECC_PIPE => "FALSE",
      EN_ECC_READ => "FALSE",
      EN_ECC_WRITE => "FALSE",
      FIRST_WORD_FALL_THROUGH => "TRUE",
      INIT => X"000000000000000000",
      IS_RDCLK_INVERTED => '0',
      IS_RDEN_INVERTED => '0',
      IS_RSTREG_INVERTED => '0',
      IS_RST_INVERTED => '0',
      IS_WRCLK_INVERTED => '0',
      IS_WREN_INVERTED => '0',
      PROG_EMPTY_THRESH => 4,
      PROG_FULL_THRESH => 480,
      RDCOUNT_TYPE => "EXTENDED_DATACOUNT",
      READ_WIDTH => 72,
      REGISTER_MODE => "REGISTERED",
      RSTREG_PRIORITY => "REGCE",
      SLEEP_ASYNC => "FALSE",
      SRVAL => X"000000000000000000",
      WRCOUNT_TYPE => "EXTENDED_DATACOUNT",
      WRITE_WIDTH => 72
    )
        port map (
      CASDIN(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      CASDINP(7 downto 0) => B"00000000",
      CASDOMUX => '0',
      CASDOMUXEN => '1',
      CASDOUT(63) => \gf36e2_inst.sngfifo36e2_n_40\,
      CASDOUT(62) => \gf36e2_inst.sngfifo36e2_n_41\,
      CASDOUT(61) => \gf36e2_inst.sngfifo36e2_n_42\,
      CASDOUT(60) => \gf36e2_inst.sngfifo36e2_n_43\,
      CASDOUT(59) => \gf36e2_inst.sngfifo36e2_n_44\,
      CASDOUT(58) => \gf36e2_inst.sngfifo36e2_n_45\,
      CASDOUT(57) => \gf36e2_inst.sngfifo36e2_n_46\,
      CASDOUT(56) => \gf36e2_inst.sngfifo36e2_n_47\,
      CASDOUT(55) => \gf36e2_inst.sngfifo36e2_n_48\,
      CASDOUT(54) => \gf36e2_inst.sngfifo36e2_n_49\,
      CASDOUT(53) => \gf36e2_inst.sngfifo36e2_n_50\,
      CASDOUT(52) => \gf36e2_inst.sngfifo36e2_n_51\,
      CASDOUT(51) => \gf36e2_inst.sngfifo36e2_n_52\,
      CASDOUT(50) => \gf36e2_inst.sngfifo36e2_n_53\,
      CASDOUT(49) => \gf36e2_inst.sngfifo36e2_n_54\,
      CASDOUT(48) => \gf36e2_inst.sngfifo36e2_n_55\,
      CASDOUT(47) => \gf36e2_inst.sngfifo36e2_n_56\,
      CASDOUT(46) => \gf36e2_inst.sngfifo36e2_n_57\,
      CASDOUT(45) => \gf36e2_inst.sngfifo36e2_n_58\,
      CASDOUT(44) => \gf36e2_inst.sngfifo36e2_n_59\,
      CASDOUT(43) => \gf36e2_inst.sngfifo36e2_n_60\,
      CASDOUT(42) => \gf36e2_inst.sngfifo36e2_n_61\,
      CASDOUT(41) => \gf36e2_inst.sngfifo36e2_n_62\,
      CASDOUT(40) => \gf36e2_inst.sngfifo36e2_n_63\,
      CASDOUT(39) => \gf36e2_inst.sngfifo36e2_n_64\,
      CASDOUT(38) => \gf36e2_inst.sngfifo36e2_n_65\,
      CASDOUT(37) => \gf36e2_inst.sngfifo36e2_n_66\,
      CASDOUT(36) => \gf36e2_inst.sngfifo36e2_n_67\,
      CASDOUT(35) => \gf36e2_inst.sngfifo36e2_n_68\,
      CASDOUT(34) => \gf36e2_inst.sngfifo36e2_n_69\,
      CASDOUT(33) => \gf36e2_inst.sngfifo36e2_n_70\,
      CASDOUT(32) => \gf36e2_inst.sngfifo36e2_n_71\,
      CASDOUT(31) => \gf36e2_inst.sngfifo36e2_n_72\,
      CASDOUT(30) => \gf36e2_inst.sngfifo36e2_n_73\,
      CASDOUT(29) => \gf36e2_inst.sngfifo36e2_n_74\,
      CASDOUT(28) => \gf36e2_inst.sngfifo36e2_n_75\,
      CASDOUT(27) => \gf36e2_inst.sngfifo36e2_n_76\,
      CASDOUT(26) => \gf36e2_inst.sngfifo36e2_n_77\,
      CASDOUT(25) => \gf36e2_inst.sngfifo36e2_n_78\,
      CASDOUT(24) => \gf36e2_inst.sngfifo36e2_n_79\,
      CASDOUT(23) => \gf36e2_inst.sngfifo36e2_n_80\,
      CASDOUT(22) => \gf36e2_inst.sngfifo36e2_n_81\,
      CASDOUT(21) => \gf36e2_inst.sngfifo36e2_n_82\,
      CASDOUT(20) => \gf36e2_inst.sngfifo36e2_n_83\,
      CASDOUT(19) => \gf36e2_inst.sngfifo36e2_n_84\,
      CASDOUT(18) => \gf36e2_inst.sngfifo36e2_n_85\,
      CASDOUT(17) => \gf36e2_inst.sngfifo36e2_n_86\,
      CASDOUT(16) => \gf36e2_inst.sngfifo36e2_n_87\,
      CASDOUT(15) => \gf36e2_inst.sngfifo36e2_n_88\,
      CASDOUT(14) => \gf36e2_inst.sngfifo36e2_n_89\,
      CASDOUT(13) => \gf36e2_inst.sngfifo36e2_n_90\,
      CASDOUT(12) => \gf36e2_inst.sngfifo36e2_n_91\,
      CASDOUT(11) => \gf36e2_inst.sngfifo36e2_n_92\,
      CASDOUT(10) => \gf36e2_inst.sngfifo36e2_n_93\,
      CASDOUT(9) => \gf36e2_inst.sngfifo36e2_n_94\,
      CASDOUT(8) => \gf36e2_inst.sngfifo36e2_n_95\,
      CASDOUT(7) => \gf36e2_inst.sngfifo36e2_n_96\,
      CASDOUT(6) => \gf36e2_inst.sngfifo36e2_n_97\,
      CASDOUT(5) => \gf36e2_inst.sngfifo36e2_n_98\,
      CASDOUT(4) => \gf36e2_inst.sngfifo36e2_n_99\,
      CASDOUT(3) => \gf36e2_inst.sngfifo36e2_n_100\,
      CASDOUT(2) => \gf36e2_inst.sngfifo36e2_n_101\,
      CASDOUT(1) => \gf36e2_inst.sngfifo36e2_n_102\,
      CASDOUT(0) => \gf36e2_inst.sngfifo36e2_n_103\,
      CASDOUTP(7) => \gf36e2_inst.sngfifo36e2_n_168\,
      CASDOUTP(6) => \gf36e2_inst.sngfifo36e2_n_169\,
      CASDOUTP(5) => \gf36e2_inst.sngfifo36e2_n_170\,
      CASDOUTP(4) => \gf36e2_inst.sngfifo36e2_n_171\,
      CASDOUTP(3) => \gf36e2_inst.sngfifo36e2_n_172\,
      CASDOUTP(2) => \gf36e2_inst.sngfifo36e2_n_173\,
      CASDOUTP(1) => \gf36e2_inst.sngfifo36e2_n_174\,
      CASDOUTP(0) => \gf36e2_inst.sngfifo36e2_n_175\,
      CASNXTEMPTY => \gf36e2_inst.sngfifo36e2_n_0\,
      CASNXTRDEN => '0',
      CASOREGIMUX => '0',
      CASOREGIMUXEN => '1',
      CASPRVEMPTY => '0',
      CASPRVRDEN => \gf36e2_inst.sngfifo36e2_n_1\,
      DBITERR => p_4_out,
      DIN(63 downto 0) => din(63 downto 0),
      DINP(7 downto 0) => din(71 downto 64),
      DOUT(63 downto 0) => dout(63 downto 0),
      DOUTP(7 downto 0) => dout(71 downto 64),
      ECCPARITY(7) => \gf36e2_inst.sngfifo36e2_n_184\,
      ECCPARITY(6) => \gf36e2_inst.sngfifo36e2_n_185\,
      ECCPARITY(5) => \gf36e2_inst.sngfifo36e2_n_186\,
      ECCPARITY(4) => \gf36e2_inst.sngfifo36e2_n_187\,
      ECCPARITY(3) => \gf36e2_inst.sngfifo36e2_n_188\,
      ECCPARITY(2) => \gf36e2_inst.sngfifo36e2_n_189\,
      ECCPARITY(1) => \gf36e2_inst.sngfifo36e2_n_190\,
      ECCPARITY(0) => \gf36e2_inst.sngfifo36e2_n_191\,
      EMPTY => \^empty\,
      FULL => full,
      INJECTDBITERR => '0',
      INJECTSBITERR => '0',
      PROGEMPTY => \gf36e2_inst.sngfifo36e2_n_5\,
      PROGFULL => prog_full,
      RDCLK => clk,
      RDCOUNT(13) => \gf36e2_inst.sngfifo36e2_n_12\,
      RDCOUNT(12) => \gf36e2_inst.sngfifo36e2_n_13\,
      RDCOUNT(11) => \gf36e2_inst.sngfifo36e2_n_14\,
      RDCOUNT(10) => \gf36e2_inst.sngfifo36e2_n_15\,
      RDCOUNT(9) => \gf36e2_inst.sngfifo36e2_n_16\,
      RDCOUNT(8) => \gf36e2_inst.sngfifo36e2_n_17\,
      RDCOUNT(7) => \gf36e2_inst.sngfifo36e2_n_18\,
      RDCOUNT(6) => \gf36e2_inst.sngfifo36e2_n_19\,
      RDCOUNT(5) => \gf36e2_inst.sngfifo36e2_n_20\,
      RDCOUNT(4) => \gf36e2_inst.sngfifo36e2_n_21\,
      RDCOUNT(3) => \gf36e2_inst.sngfifo36e2_n_22\,
      RDCOUNT(2) => \gf36e2_inst.sngfifo36e2_n_23\,
      RDCOUNT(1) => \gf36e2_inst.sngfifo36e2_n_24\,
      RDCOUNT(0) => \gf36e2_inst.sngfifo36e2_n_25\,
      RDEN => rd_en,
      RDERR => p_7_out,
      RDRSTBUSY => rd_rst_busy,
      REGCE => rd_en,
      RST => srst,
      RSTREG => srst,
      SBITERR => p_5_out,
      SLEEP => '0',
      WRCLK => clk,
      WRCOUNT(13) => \gf36e2_inst.sngfifo36e2_n_26\,
      WRCOUNT(12) => \gf36e2_inst.sngfifo36e2_n_27\,
      WRCOUNT(11) => \gf36e2_inst.sngfifo36e2_n_28\,
      WRCOUNT(10) => \gf36e2_inst.sngfifo36e2_n_29\,
      WRCOUNT(9) => \gf36e2_inst.sngfifo36e2_n_30\,
      WRCOUNT(8) => \gf36e2_inst.sngfifo36e2_n_31\,
      WRCOUNT(7) => \gf36e2_inst.sngfifo36e2_n_32\,
      WRCOUNT(6) => \gf36e2_inst.sngfifo36e2_n_33\,
      WRCOUNT(5) => \gf36e2_inst.sngfifo36e2_n_34\,
      WRCOUNT(4) => \gf36e2_inst.sngfifo36e2_n_35\,
      WRCOUNT(3) => \gf36e2_inst.sngfifo36e2_n_36\,
      WRCOUNT(2) => \gf36e2_inst.sngfifo36e2_n_37\,
      WRCOUNT(1) => \gf36e2_inst.sngfifo36e2_n_38\,
      WRCOUNT(0) => \gf36e2_inst.sngfifo36e2_n_39\,
      WREN => wr_en,
      WRERR => p_8_out,
      WRRSTBUSY => wr_rst_busy
    );
valid_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^empty\,
      O => valid
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_prim is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_prim : entity is "builtin_prim";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_prim;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_prim is
  signal \gf18e2_inst.sngfifo18e2_n_0\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_1\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_10\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_100\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_101\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_102\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_103\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_104\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_105\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_106\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_107\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_11\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_12\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_13\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_14\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_15\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_16\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_17\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_18\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_19\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_20\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_21\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_22\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_23\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_24\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_25\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_26\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_27\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_28\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_29\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_30\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_31\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_32\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_33\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_34\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_35\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_36\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_37\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_38\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_39\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_4\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_40\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_41\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_42\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_43\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_44\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_45\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_46\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_47\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_48\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_49\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_50\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_51\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_52\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_53\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_54\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_55\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_56\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_57\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_58\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_59\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_60\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_61\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_62\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_63\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_64\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_65\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_66\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_67\ : STD_LOGIC;
  signal p_7_out : STD_LOGIC;
  signal p_8_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \gf18e2_inst.sngfifo18e2\ : label is "PRIMITIVE";
begin
\gf18e2_inst.sngfifo18e2\: unisim.vcomponents.FIFO18E2
    generic map(
      CASCADE_ORDER => "NONE",
      CLOCK_DOMAINS => "COMMON",
      FIRST_WORD_FALL_THROUGH => "TRUE",
      INIT => X"000000000",
      IS_RDCLK_INVERTED => '0',
      IS_RDEN_INVERTED => '0',
      IS_RSTREG_INVERTED => '0',
      IS_RST_INVERTED => '0',
      IS_WRCLK_INVERTED => '0',
      IS_WREN_INVERTED => '0',
      PROG_EMPTY_THRESH => 4,
      PROG_FULL_THRESH => 400,
      RDCOUNT_TYPE => "EXTENDED_DATACOUNT",
      READ_WIDTH => 36,
      REGISTER_MODE => "REGISTERED",
      RSTREG_PRIORITY => "REGCE",
      SLEEP_ASYNC => "FALSE",
      SRVAL => X"000000000",
      WRCOUNT_TYPE => "EXTENDED_DATACOUNT",
      WRITE_WIDTH => 36
    )
        port map (
      CASDIN(31 downto 0) => B"00000000000000000000000000000000",
      CASDINP(3 downto 0) => B"0000",
      CASDOMUX => '0',
      CASDOMUXEN => '1',
      CASDOUT(31) => \gf18e2_inst.sngfifo18e2_n_36\,
      CASDOUT(30) => \gf18e2_inst.sngfifo18e2_n_37\,
      CASDOUT(29) => \gf18e2_inst.sngfifo18e2_n_38\,
      CASDOUT(28) => \gf18e2_inst.sngfifo18e2_n_39\,
      CASDOUT(27) => \gf18e2_inst.sngfifo18e2_n_40\,
      CASDOUT(26) => \gf18e2_inst.sngfifo18e2_n_41\,
      CASDOUT(25) => \gf18e2_inst.sngfifo18e2_n_42\,
      CASDOUT(24) => \gf18e2_inst.sngfifo18e2_n_43\,
      CASDOUT(23) => \gf18e2_inst.sngfifo18e2_n_44\,
      CASDOUT(22) => \gf18e2_inst.sngfifo18e2_n_45\,
      CASDOUT(21) => \gf18e2_inst.sngfifo18e2_n_46\,
      CASDOUT(20) => \gf18e2_inst.sngfifo18e2_n_47\,
      CASDOUT(19) => \gf18e2_inst.sngfifo18e2_n_48\,
      CASDOUT(18) => \gf18e2_inst.sngfifo18e2_n_49\,
      CASDOUT(17) => \gf18e2_inst.sngfifo18e2_n_50\,
      CASDOUT(16) => \gf18e2_inst.sngfifo18e2_n_51\,
      CASDOUT(15) => \gf18e2_inst.sngfifo18e2_n_52\,
      CASDOUT(14) => \gf18e2_inst.sngfifo18e2_n_53\,
      CASDOUT(13) => \gf18e2_inst.sngfifo18e2_n_54\,
      CASDOUT(12) => \gf18e2_inst.sngfifo18e2_n_55\,
      CASDOUT(11) => \gf18e2_inst.sngfifo18e2_n_56\,
      CASDOUT(10) => \gf18e2_inst.sngfifo18e2_n_57\,
      CASDOUT(9) => \gf18e2_inst.sngfifo18e2_n_58\,
      CASDOUT(8) => \gf18e2_inst.sngfifo18e2_n_59\,
      CASDOUT(7) => \gf18e2_inst.sngfifo18e2_n_60\,
      CASDOUT(6) => \gf18e2_inst.sngfifo18e2_n_61\,
      CASDOUT(5) => \gf18e2_inst.sngfifo18e2_n_62\,
      CASDOUT(4) => \gf18e2_inst.sngfifo18e2_n_63\,
      CASDOUT(3) => \gf18e2_inst.sngfifo18e2_n_64\,
      CASDOUT(2) => \gf18e2_inst.sngfifo18e2_n_65\,
      CASDOUT(1) => \gf18e2_inst.sngfifo18e2_n_66\,
      CASDOUT(0) => \gf18e2_inst.sngfifo18e2_n_67\,
      CASDOUTP(3) => \gf18e2_inst.sngfifo18e2_n_100\,
      CASDOUTP(2) => \gf18e2_inst.sngfifo18e2_n_101\,
      CASDOUTP(1) => \gf18e2_inst.sngfifo18e2_n_102\,
      CASDOUTP(0) => \gf18e2_inst.sngfifo18e2_n_103\,
      CASNXTEMPTY => \gf18e2_inst.sngfifo18e2_n_0\,
      CASNXTRDEN => '0',
      CASOREGIMUX => '0',
      CASOREGIMUXEN => '1',
      CASPRVEMPTY => '0',
      CASPRVRDEN => \gf18e2_inst.sngfifo18e2_n_1\,
      DIN(31 downto 0) => din(31 downto 0),
      DINP(3 downto 0) => B"0000",
      DOUT(31 downto 0) => dout(31 downto 0),
      DOUTP(3) => \gf18e2_inst.sngfifo18e2_n_104\,
      DOUTP(2) => \gf18e2_inst.sngfifo18e2_n_105\,
      DOUTP(1) => \gf18e2_inst.sngfifo18e2_n_106\,
      DOUTP(0) => \gf18e2_inst.sngfifo18e2_n_107\,
      EMPTY => empty,
      FULL => full,
      PROGEMPTY => \gf18e2_inst.sngfifo18e2_n_4\,
      PROGFULL => prog_full,
      RDCLK => clk,
      RDCOUNT(12) => \gf18e2_inst.sngfifo18e2_n_10\,
      RDCOUNT(11) => \gf18e2_inst.sngfifo18e2_n_11\,
      RDCOUNT(10) => \gf18e2_inst.sngfifo18e2_n_12\,
      RDCOUNT(9) => \gf18e2_inst.sngfifo18e2_n_13\,
      RDCOUNT(8) => \gf18e2_inst.sngfifo18e2_n_14\,
      RDCOUNT(7) => \gf18e2_inst.sngfifo18e2_n_15\,
      RDCOUNT(6) => \gf18e2_inst.sngfifo18e2_n_16\,
      RDCOUNT(5) => \gf18e2_inst.sngfifo18e2_n_17\,
      RDCOUNT(4) => \gf18e2_inst.sngfifo18e2_n_18\,
      RDCOUNT(3) => \gf18e2_inst.sngfifo18e2_n_19\,
      RDCOUNT(2) => \gf18e2_inst.sngfifo18e2_n_20\,
      RDCOUNT(1) => \gf18e2_inst.sngfifo18e2_n_21\,
      RDCOUNT(0) => \gf18e2_inst.sngfifo18e2_n_22\,
      RDEN => rd_en,
      RDERR => p_7_out,
      RDRSTBUSY => rd_rst_busy,
      REGCE => rd_en,
      RST => srst,
      RSTREG => srst,
      SLEEP => '0',
      WRCLK => clk,
      WRCOUNT(12) => \gf18e2_inst.sngfifo18e2_n_23\,
      WRCOUNT(11) => \gf18e2_inst.sngfifo18e2_n_24\,
      WRCOUNT(10) => \gf18e2_inst.sngfifo18e2_n_25\,
      WRCOUNT(9) => \gf18e2_inst.sngfifo18e2_n_26\,
      WRCOUNT(8) => \gf18e2_inst.sngfifo18e2_n_27\,
      WRCOUNT(7) => \gf18e2_inst.sngfifo18e2_n_28\,
      WRCOUNT(6) => \gf18e2_inst.sngfifo18e2_n_29\,
      WRCOUNT(5) => \gf18e2_inst.sngfifo18e2_n_30\,
      WRCOUNT(4) => \gf18e2_inst.sngfifo18e2_n_31\,
      WRCOUNT(3) => \gf18e2_inst.sngfifo18e2_n_32\,
      WRCOUNT(2) => \gf18e2_inst.sngfifo18e2_n_33\,
      WRCOUNT(1) => \gf18e2_inst.sngfifo18e2_n_34\,
      WRCOUNT(0) => \gf18e2_inst.sngfifo18e2_n_35\,
      WREN => wr_en,
      WRERR => p_8_out,
      WRRSTBUSY => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_bram_fifo_rstlogic is
  port (
    clk : in STD_LOGIC;
    srst : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_bram_fifo_rstlogic : entity is "bram_fifo_rstlogic";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_bram_fifo_rstlogic;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_bram_fifo_rstlogic is
  signal d_asreg : STD_LOGIC;
  attribute async_reg : string;
  attribute async_reg of d_asreg : signal is "true";
  signal rd_rst_reg : STD_LOGIC;
  attribute async_reg of rd_rst_reg : signal is "true";
  signal rdrst_q1 : STD_LOGIC;
  attribute async_reg of rdrst_q1 : signal is "true";
  signal rdrst_q2 : STD_LOGIC;
  attribute async_reg of rdrst_q2 : signal is "true";
  signal rdrst_q3 : STD_LOGIC;
  attribute async_reg of rdrst_q3 : signal is "true";
  signal rst_d1 : STD_LOGIC;
  attribute async_reg of rst_d1 : signal is "true";
  signal rst_d2 : STD_LOGIC;
  attribute async_reg of rst_d2 : signal is "true";
  signal \^wr_rst_busy\ : STD_LOGIC;
  signal wr_rst_reg_i_1_n_0 : STD_LOGIC;
  signal wrrst_q1 : STD_LOGIC;
  attribute async_reg of wrrst_q1 : signal is "true";
  signal wrrst_q2 : STD_LOGIC;
  attribute async_reg of wrrst_q2 : signal is "true";
  signal wrrst_q3 : STD_LOGIC;
  attribute async_reg of wrrst_q3 : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of rst_d1_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of rst_d1_reg : label is "yes";
  attribute ASYNC_REG_boolean of rst_d2_reg : label is std.standard.true;
  attribute KEEP of rst_d2_reg : label is "yes";
begin
  wr_rst_busy <= \^wr_rst_busy\;
\goreg_dm.dout_i[71]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => srst,
      I1 => \^wr_rst_busy\,
      O => SR(0)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => d_asreg
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => rd_rst_reg
    );
i_2: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => wrrst_q1
    );
i_3: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => wrrst_q2
    );
i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => wrrst_q3
    );
i_5: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => rdrst_q1
    );
i_6: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => rdrst_q2
    );
i_7: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => rdrst_q3
    );
rst_d1_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => srst,
      Q => rst_d1,
      R => '0'
    );
rst_d2_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => rst_d1,
      Q => rst_d2,
      R => '0'
    );
wr_rst_reg_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => srst,
      I1 => \^wr_rst_busy\,
      O => wr_rst_reg_i_1_n_0
    );
wr_rst_reg_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => wr_rst_reg_i_1_n_0,
      Q => \^wr_rst_busy\,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_dmem is
  port (
    clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    \gcc0.gc0.count_d1_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \goreg_dm.dout_i_reg[71]\ : out STD_LOGIC_VECTOR ( 71 downto 0 );
    \gpregsm1.curr_fwft_state_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_dmem : entity is "dmem";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_dmem;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_dmem is
  signal p_0_out : STD_LOGIC_VECTOR ( 71 downto 0 );
  signal NLW_RAM_reg_0_31_0_5_DOH_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_12_17_DOH_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_18_23_DOH_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_24_29_DOH_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_30_35_DOB_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_30_35_DOC_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_30_35_DOE_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_30_35_DOF_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_30_35_DOG_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_30_35_DOH_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_RAM_reg_0_31_6_11_DOH_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of RAM_reg_0_31_0_5 : label is "";
  attribute METHODOLOGY_DRC_VIOS of RAM_reg_0_31_12_17 : label is "";
  attribute METHODOLOGY_DRC_VIOS of RAM_reg_0_31_18_23 : label is "";
  attribute METHODOLOGY_DRC_VIOS of RAM_reg_0_31_24_29 : label is "";
  attribute METHODOLOGY_DRC_VIOS of RAM_reg_0_31_30_35 : label is "";
  attribute METHODOLOGY_DRC_VIOS of RAM_reg_0_31_6_11 : label is "";
begin
RAM_reg_0_31_0_5: unisim.vcomponents.RAM32M16
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      INIT_E => X"0000000000000000",
      INIT_F => X"0000000000000000",
      INIT_G => X"0000000000000000",
      INIT_H => X"0000000000000000"
    )
        port map (
      ADDRA(4 downto 0) => Q(4 downto 0),
      ADDRB(4 downto 0) => Q(4 downto 0),
      ADDRC(4 downto 0) => Q(4 downto 0),
      ADDRD(4 downto 0) => Q(4 downto 0),
      ADDRE(4 downto 0) => Q(4 downto 0),
      ADDRF(4 downto 0) => Q(4 downto 0),
      ADDRG(4 downto 0) => Q(4 downto 0),
      ADDRH(4 downto 0) => \gcc0.gc0.count_d1_reg[4]\(4 downto 0),
      DIA(1 downto 0) => din(1 downto 0),
      DIB(1 downto 0) => din(3 downto 2),
      DIC(1 downto 0) => din(5 downto 4),
      DID(1 downto 0) => din(7 downto 6),
      DIE(1 downto 0) => din(9 downto 8),
      DIF(1 downto 0) => din(11 downto 10),
      DIG(1 downto 0) => din(13 downto 12),
      DIH(1 downto 0) => B"00",
      DOA(1 downto 0) => p_0_out(1 downto 0),
      DOB(1 downto 0) => p_0_out(3 downto 2),
      DOC(1 downto 0) => p_0_out(5 downto 4),
      DOD(1 downto 0) => p_0_out(7 downto 6),
      DOE(1 downto 0) => p_0_out(9 downto 8),
      DOF(1 downto 0) => p_0_out(11 downto 10),
      DOG(1 downto 0) => p_0_out(13 downto 12),
      DOH(1 downto 0) => NLW_RAM_reg_0_31_0_5_DOH_UNCONNECTED(1 downto 0),
      WCLK => clk,
      WE => E(0)
    );
RAM_reg_0_31_12_17: unisim.vcomponents.RAM32M16
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      INIT_E => X"0000000000000000",
      INIT_F => X"0000000000000000",
      INIT_G => X"0000000000000000",
      INIT_H => X"0000000000000000"
    )
        port map (
      ADDRA(4 downto 0) => Q(4 downto 0),
      ADDRB(4 downto 0) => Q(4 downto 0),
      ADDRC(4 downto 0) => Q(4 downto 0),
      ADDRD(4 downto 0) => Q(4 downto 0),
      ADDRE(4 downto 0) => Q(4 downto 0),
      ADDRF(4 downto 0) => Q(4 downto 0),
      ADDRG(4 downto 0) => Q(4 downto 0),
      ADDRH(4 downto 0) => \gcc0.gc0.count_d1_reg[4]\(4 downto 0),
      DIA(1 downto 0) => din(29 downto 28),
      DIB(1 downto 0) => din(31 downto 30),
      DIC(1 downto 0) => din(33 downto 32),
      DID(1 downto 0) => din(35 downto 34),
      DIE(1 downto 0) => din(37 downto 36),
      DIF(1 downto 0) => din(39 downto 38),
      DIG(1 downto 0) => din(41 downto 40),
      DIH(1 downto 0) => B"00",
      DOA(1 downto 0) => p_0_out(29 downto 28),
      DOB(1 downto 0) => p_0_out(31 downto 30),
      DOC(1 downto 0) => p_0_out(33 downto 32),
      DOD(1 downto 0) => p_0_out(35 downto 34),
      DOE(1 downto 0) => p_0_out(37 downto 36),
      DOF(1 downto 0) => p_0_out(39 downto 38),
      DOG(1 downto 0) => p_0_out(41 downto 40),
      DOH(1 downto 0) => NLW_RAM_reg_0_31_12_17_DOH_UNCONNECTED(1 downto 0),
      WCLK => clk,
      WE => E(0)
    );
RAM_reg_0_31_18_23: unisim.vcomponents.RAM32M16
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      INIT_E => X"0000000000000000",
      INIT_F => X"0000000000000000",
      INIT_G => X"0000000000000000",
      INIT_H => X"0000000000000000"
    )
        port map (
      ADDRA(4 downto 0) => Q(4 downto 0),
      ADDRB(4 downto 0) => Q(4 downto 0),
      ADDRC(4 downto 0) => Q(4 downto 0),
      ADDRD(4 downto 0) => Q(4 downto 0),
      ADDRE(4 downto 0) => Q(4 downto 0),
      ADDRF(4 downto 0) => Q(4 downto 0),
      ADDRG(4 downto 0) => Q(4 downto 0),
      ADDRH(4 downto 0) => \gcc0.gc0.count_d1_reg[4]\(4 downto 0),
      DIA(1 downto 0) => din(43 downto 42),
      DIB(1 downto 0) => din(45 downto 44),
      DIC(1 downto 0) => din(47 downto 46),
      DID(1 downto 0) => din(49 downto 48),
      DIE(1 downto 0) => din(51 downto 50),
      DIF(1 downto 0) => din(53 downto 52),
      DIG(1 downto 0) => din(55 downto 54),
      DIH(1 downto 0) => B"00",
      DOA(1 downto 0) => p_0_out(43 downto 42),
      DOB(1 downto 0) => p_0_out(45 downto 44),
      DOC(1 downto 0) => p_0_out(47 downto 46),
      DOD(1 downto 0) => p_0_out(49 downto 48),
      DOE(1 downto 0) => p_0_out(51 downto 50),
      DOF(1 downto 0) => p_0_out(53 downto 52),
      DOG(1 downto 0) => p_0_out(55 downto 54),
      DOH(1 downto 0) => NLW_RAM_reg_0_31_18_23_DOH_UNCONNECTED(1 downto 0),
      WCLK => clk,
      WE => E(0)
    );
RAM_reg_0_31_24_29: unisim.vcomponents.RAM32M16
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      INIT_E => X"0000000000000000",
      INIT_F => X"0000000000000000",
      INIT_G => X"0000000000000000",
      INIT_H => X"0000000000000000"
    )
        port map (
      ADDRA(4 downto 0) => Q(4 downto 0),
      ADDRB(4 downto 0) => Q(4 downto 0),
      ADDRC(4 downto 0) => Q(4 downto 0),
      ADDRD(4 downto 0) => Q(4 downto 0),
      ADDRE(4 downto 0) => Q(4 downto 0),
      ADDRF(4 downto 0) => Q(4 downto 0),
      ADDRG(4 downto 0) => Q(4 downto 0),
      ADDRH(4 downto 0) => \gcc0.gc0.count_d1_reg[4]\(4 downto 0),
      DIA(1 downto 0) => din(57 downto 56),
      DIB(1 downto 0) => din(59 downto 58),
      DIC(1 downto 0) => din(61 downto 60),
      DID(1 downto 0) => din(63 downto 62),
      DIE(1 downto 0) => din(65 downto 64),
      DIF(1 downto 0) => din(67 downto 66),
      DIG(1 downto 0) => din(69 downto 68),
      DIH(1 downto 0) => B"00",
      DOA(1 downto 0) => p_0_out(57 downto 56),
      DOB(1 downto 0) => p_0_out(59 downto 58),
      DOC(1 downto 0) => p_0_out(61 downto 60),
      DOD(1 downto 0) => p_0_out(63 downto 62),
      DOE(1 downto 0) => p_0_out(65 downto 64),
      DOF(1 downto 0) => p_0_out(67 downto 66),
      DOG(1 downto 0) => p_0_out(69 downto 68),
      DOH(1 downto 0) => NLW_RAM_reg_0_31_24_29_DOH_UNCONNECTED(1 downto 0),
      WCLK => clk,
      WE => E(0)
    );
RAM_reg_0_31_30_35: unisim.vcomponents.RAM32M16
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      INIT_E => X"0000000000000000",
      INIT_F => X"0000000000000000",
      INIT_G => X"0000000000000000",
      INIT_H => X"0000000000000000"
    )
        port map (
      ADDRA(4 downto 0) => Q(4 downto 0),
      ADDRB(4 downto 0) => Q(4 downto 0),
      ADDRC(4 downto 0) => Q(4 downto 0),
      ADDRD(4 downto 0) => Q(4 downto 0),
      ADDRE(4 downto 0) => Q(4 downto 0),
      ADDRF(4 downto 0) => Q(4 downto 0),
      ADDRG(4 downto 0) => Q(4 downto 0),
      ADDRH(4 downto 0) => \gcc0.gc0.count_d1_reg[4]\(4 downto 0),
      DIA(1 downto 0) => din(71 downto 70),
      DIB(1 downto 0) => B"00",
      DIC(1 downto 0) => B"00",
      DID(1 downto 0) => B"00",
      DIE(1 downto 0) => B"00",
      DIF(1 downto 0) => B"00",
      DIG(1 downto 0) => B"00",
      DIH(1 downto 0) => B"00",
      DOA(1 downto 0) => p_0_out(71 downto 70),
      DOB(1 downto 0) => NLW_RAM_reg_0_31_30_35_DOB_UNCONNECTED(1 downto 0),
      DOC(1 downto 0) => NLW_RAM_reg_0_31_30_35_DOC_UNCONNECTED(1 downto 0),
      DOD(1 downto 0) => NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED(1 downto 0),
      DOE(1 downto 0) => NLW_RAM_reg_0_31_30_35_DOE_UNCONNECTED(1 downto 0),
      DOF(1 downto 0) => NLW_RAM_reg_0_31_30_35_DOF_UNCONNECTED(1 downto 0),
      DOG(1 downto 0) => NLW_RAM_reg_0_31_30_35_DOG_UNCONNECTED(1 downto 0),
      DOH(1 downto 0) => NLW_RAM_reg_0_31_30_35_DOH_UNCONNECTED(1 downto 0),
      WCLK => clk,
      WE => E(0)
    );
RAM_reg_0_31_6_11: unisim.vcomponents.RAM32M16
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      INIT_E => X"0000000000000000",
      INIT_F => X"0000000000000000",
      INIT_G => X"0000000000000000",
      INIT_H => X"0000000000000000"
    )
        port map (
      ADDRA(4 downto 0) => Q(4 downto 0),
      ADDRB(4 downto 0) => Q(4 downto 0),
      ADDRC(4 downto 0) => Q(4 downto 0),
      ADDRD(4 downto 0) => Q(4 downto 0),
      ADDRE(4 downto 0) => Q(4 downto 0),
      ADDRF(4 downto 0) => Q(4 downto 0),
      ADDRG(4 downto 0) => Q(4 downto 0),
      ADDRH(4 downto 0) => \gcc0.gc0.count_d1_reg[4]\(4 downto 0),
      DIA(1 downto 0) => din(15 downto 14),
      DIB(1 downto 0) => din(17 downto 16),
      DIC(1 downto 0) => din(19 downto 18),
      DID(1 downto 0) => din(21 downto 20),
      DIE(1 downto 0) => din(23 downto 22),
      DIF(1 downto 0) => din(25 downto 24),
      DIG(1 downto 0) => din(27 downto 26),
      DIH(1 downto 0) => B"00",
      DOA(1 downto 0) => p_0_out(15 downto 14),
      DOB(1 downto 0) => p_0_out(17 downto 16),
      DOC(1 downto 0) => p_0_out(19 downto 18),
      DOD(1 downto 0) => p_0_out(21 downto 20),
      DOE(1 downto 0) => p_0_out(23 downto 22),
      DOF(1 downto 0) => p_0_out(25 downto 24),
      DOG(1 downto 0) => p_0_out(27 downto 26),
      DOH(1 downto 0) => NLW_RAM_reg_0_31_6_11_DOH_UNCONNECTED(1 downto 0),
      WCLK => clk,
      WE => E(0)
    );
\gpr1.dout_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(0),
      Q => \goreg_dm.dout_i_reg[71]\(0),
      R => SR(0)
    );
\gpr1.dout_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(10),
      Q => \goreg_dm.dout_i_reg[71]\(10),
      R => SR(0)
    );
\gpr1.dout_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(11),
      Q => \goreg_dm.dout_i_reg[71]\(11),
      R => SR(0)
    );
\gpr1.dout_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(12),
      Q => \goreg_dm.dout_i_reg[71]\(12),
      R => SR(0)
    );
\gpr1.dout_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(13),
      Q => \goreg_dm.dout_i_reg[71]\(13),
      R => SR(0)
    );
\gpr1.dout_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(14),
      Q => \goreg_dm.dout_i_reg[71]\(14),
      R => SR(0)
    );
\gpr1.dout_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(15),
      Q => \goreg_dm.dout_i_reg[71]\(15),
      R => SR(0)
    );
\gpr1.dout_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(16),
      Q => \goreg_dm.dout_i_reg[71]\(16),
      R => SR(0)
    );
\gpr1.dout_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(17),
      Q => \goreg_dm.dout_i_reg[71]\(17),
      R => SR(0)
    );
\gpr1.dout_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(18),
      Q => \goreg_dm.dout_i_reg[71]\(18),
      R => SR(0)
    );
\gpr1.dout_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(19),
      Q => \goreg_dm.dout_i_reg[71]\(19),
      R => SR(0)
    );
\gpr1.dout_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(1),
      Q => \goreg_dm.dout_i_reg[71]\(1),
      R => SR(0)
    );
\gpr1.dout_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(20),
      Q => \goreg_dm.dout_i_reg[71]\(20),
      R => SR(0)
    );
\gpr1.dout_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(21),
      Q => \goreg_dm.dout_i_reg[71]\(21),
      R => SR(0)
    );
\gpr1.dout_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(22),
      Q => \goreg_dm.dout_i_reg[71]\(22),
      R => SR(0)
    );
\gpr1.dout_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(23),
      Q => \goreg_dm.dout_i_reg[71]\(23),
      R => SR(0)
    );
\gpr1.dout_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(24),
      Q => \goreg_dm.dout_i_reg[71]\(24),
      R => SR(0)
    );
\gpr1.dout_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(25),
      Q => \goreg_dm.dout_i_reg[71]\(25),
      R => SR(0)
    );
\gpr1.dout_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(26),
      Q => \goreg_dm.dout_i_reg[71]\(26),
      R => SR(0)
    );
\gpr1.dout_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(27),
      Q => \goreg_dm.dout_i_reg[71]\(27),
      R => SR(0)
    );
\gpr1.dout_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(28),
      Q => \goreg_dm.dout_i_reg[71]\(28),
      R => SR(0)
    );
\gpr1.dout_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(29),
      Q => \goreg_dm.dout_i_reg[71]\(29),
      R => SR(0)
    );
\gpr1.dout_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(2),
      Q => \goreg_dm.dout_i_reg[71]\(2),
      R => SR(0)
    );
\gpr1.dout_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(30),
      Q => \goreg_dm.dout_i_reg[71]\(30),
      R => SR(0)
    );
\gpr1.dout_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(31),
      Q => \goreg_dm.dout_i_reg[71]\(31),
      R => SR(0)
    );
\gpr1.dout_i_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(32),
      Q => \goreg_dm.dout_i_reg[71]\(32),
      R => SR(0)
    );
\gpr1.dout_i_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(33),
      Q => \goreg_dm.dout_i_reg[71]\(33),
      R => SR(0)
    );
\gpr1.dout_i_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(34),
      Q => \goreg_dm.dout_i_reg[71]\(34),
      R => SR(0)
    );
\gpr1.dout_i_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(35),
      Q => \goreg_dm.dout_i_reg[71]\(35),
      R => SR(0)
    );
\gpr1.dout_i_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(36),
      Q => \goreg_dm.dout_i_reg[71]\(36),
      R => SR(0)
    );
\gpr1.dout_i_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(37),
      Q => \goreg_dm.dout_i_reg[71]\(37),
      R => SR(0)
    );
\gpr1.dout_i_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(38),
      Q => \goreg_dm.dout_i_reg[71]\(38),
      R => SR(0)
    );
\gpr1.dout_i_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(39),
      Q => \goreg_dm.dout_i_reg[71]\(39),
      R => SR(0)
    );
\gpr1.dout_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(3),
      Q => \goreg_dm.dout_i_reg[71]\(3),
      R => SR(0)
    );
\gpr1.dout_i_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(40),
      Q => \goreg_dm.dout_i_reg[71]\(40),
      R => SR(0)
    );
\gpr1.dout_i_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(41),
      Q => \goreg_dm.dout_i_reg[71]\(41),
      R => SR(0)
    );
\gpr1.dout_i_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(42),
      Q => \goreg_dm.dout_i_reg[71]\(42),
      R => SR(0)
    );
\gpr1.dout_i_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(43),
      Q => \goreg_dm.dout_i_reg[71]\(43),
      R => SR(0)
    );
\gpr1.dout_i_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(44),
      Q => \goreg_dm.dout_i_reg[71]\(44),
      R => SR(0)
    );
\gpr1.dout_i_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(45),
      Q => \goreg_dm.dout_i_reg[71]\(45),
      R => SR(0)
    );
\gpr1.dout_i_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(46),
      Q => \goreg_dm.dout_i_reg[71]\(46),
      R => SR(0)
    );
\gpr1.dout_i_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(47),
      Q => \goreg_dm.dout_i_reg[71]\(47),
      R => SR(0)
    );
\gpr1.dout_i_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(48),
      Q => \goreg_dm.dout_i_reg[71]\(48),
      R => SR(0)
    );
\gpr1.dout_i_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(49),
      Q => \goreg_dm.dout_i_reg[71]\(49),
      R => SR(0)
    );
\gpr1.dout_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(4),
      Q => \goreg_dm.dout_i_reg[71]\(4),
      R => SR(0)
    );
\gpr1.dout_i_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(50),
      Q => \goreg_dm.dout_i_reg[71]\(50),
      R => SR(0)
    );
\gpr1.dout_i_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(51),
      Q => \goreg_dm.dout_i_reg[71]\(51),
      R => SR(0)
    );
\gpr1.dout_i_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(52),
      Q => \goreg_dm.dout_i_reg[71]\(52),
      R => SR(0)
    );
\gpr1.dout_i_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(53),
      Q => \goreg_dm.dout_i_reg[71]\(53),
      R => SR(0)
    );
\gpr1.dout_i_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(54),
      Q => \goreg_dm.dout_i_reg[71]\(54),
      R => SR(0)
    );
\gpr1.dout_i_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(55),
      Q => \goreg_dm.dout_i_reg[71]\(55),
      R => SR(0)
    );
\gpr1.dout_i_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(56),
      Q => \goreg_dm.dout_i_reg[71]\(56),
      R => SR(0)
    );
\gpr1.dout_i_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(57),
      Q => \goreg_dm.dout_i_reg[71]\(57),
      R => SR(0)
    );
\gpr1.dout_i_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(58),
      Q => \goreg_dm.dout_i_reg[71]\(58),
      R => SR(0)
    );
\gpr1.dout_i_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(59),
      Q => \goreg_dm.dout_i_reg[71]\(59),
      R => SR(0)
    );
\gpr1.dout_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(5),
      Q => \goreg_dm.dout_i_reg[71]\(5),
      R => SR(0)
    );
\gpr1.dout_i_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(60),
      Q => \goreg_dm.dout_i_reg[71]\(60),
      R => SR(0)
    );
\gpr1.dout_i_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(61),
      Q => \goreg_dm.dout_i_reg[71]\(61),
      R => SR(0)
    );
\gpr1.dout_i_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(62),
      Q => \goreg_dm.dout_i_reg[71]\(62),
      R => SR(0)
    );
\gpr1.dout_i_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(63),
      Q => \goreg_dm.dout_i_reg[71]\(63),
      R => SR(0)
    );
\gpr1.dout_i_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(64),
      Q => \goreg_dm.dout_i_reg[71]\(64),
      R => SR(0)
    );
\gpr1.dout_i_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(65),
      Q => \goreg_dm.dout_i_reg[71]\(65),
      R => SR(0)
    );
\gpr1.dout_i_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(66),
      Q => \goreg_dm.dout_i_reg[71]\(66),
      R => SR(0)
    );
\gpr1.dout_i_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(67),
      Q => \goreg_dm.dout_i_reg[71]\(67),
      R => SR(0)
    );
\gpr1.dout_i_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(68),
      Q => \goreg_dm.dout_i_reg[71]\(68),
      R => SR(0)
    );
\gpr1.dout_i_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(69),
      Q => \goreg_dm.dout_i_reg[71]\(69),
      R => SR(0)
    );
\gpr1.dout_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(6),
      Q => \goreg_dm.dout_i_reg[71]\(6),
      R => SR(0)
    );
\gpr1.dout_i_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(70),
      Q => \goreg_dm.dout_i_reg[71]\(70),
      R => SR(0)
    );
\gpr1.dout_i_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(71),
      Q => \goreg_dm.dout_i_reg[71]\(71),
      R => SR(0)
    );
\gpr1.dout_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(7),
      Q => \goreg_dm.dout_i_reg[71]\(7),
      R => SR(0)
    );
\gpr1.dout_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(8),
      Q => \goreg_dm.dout_i_reg[71]\(8),
      R => SR(0)
    );
\gpr1.dout_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[0]\(0),
      D => p_0_out(9),
      Q => \goreg_dm.dout_i_reg[71]\(9),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_bin_cntr is
  port (
    clk : in STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    S : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \gc0.count_d1_reg[4]_0\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \gcc0.gc0.count_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_bin_cntr : entity is "rd_bin_cntr";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_bin_cntr;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_bin_cntr is
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^gc0.count_d1_reg[4]_0\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \plusOp__0\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gc0.count[1]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \gc0.count[2]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \gc0.count[3]_i_1\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \gc0.count[4]_i_1\ : label is "soft_lutpair0";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
  \gc0.count_d1_reg[4]_0\(4 downto 0) <= \^gc0.count_d1_reg[4]_0\(4 downto 0);
\gc0.count[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^gc0.count_d1_reg[4]_0\(0),
      O => \plusOp__0\(0)
    );
\gc0.count[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^gc0.count_d1_reg[4]_0\(0),
      I1 => \^gc0.count_d1_reg[4]_0\(1),
      O => \plusOp__0\(1)
    );
\gc0.count[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^gc0.count_d1_reg[4]_0\(0),
      I1 => \^gc0.count_d1_reg[4]_0\(1),
      I2 => \^gc0.count_d1_reg[4]_0\(2),
      O => \plusOp__0\(2)
    );
\gc0.count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \^gc0.count_d1_reg[4]_0\(1),
      I1 => \^gc0.count_d1_reg[4]_0\(0),
      I2 => \^gc0.count_d1_reg[4]_0\(2),
      I3 => \^gc0.count_d1_reg[4]_0\(3),
      O => \plusOp__0\(3)
    );
\gc0.count[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \^gc0.count_d1_reg[4]_0\(2),
      I1 => \^gc0.count_d1_reg[4]_0\(0),
      I2 => \^gc0.count_d1_reg[4]_0\(1),
      I3 => \^gc0.count_d1_reg[4]_0\(3),
      I4 => \^gc0.count_d1_reg[4]_0\(4),
      O => \plusOp__0\(4)
    );
\gc0.count_d1_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^gc0.count_d1_reg[4]_0\(0),
      Q => \^q\(0),
      R => srst_full_ff_i
    );
\gc0.count_d1_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^gc0.count_d1_reg[4]_0\(1),
      Q => \^q\(1),
      R => srst_full_ff_i
    );
\gc0.count_d1_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^gc0.count_d1_reg[4]_0\(2),
      Q => \^q\(2),
      R => srst_full_ff_i
    );
\gc0.count_d1_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^gc0.count_d1_reg[4]_0\(3),
      Q => \^q\(3),
      R => srst_full_ff_i
    );
\gc0.count_d1_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^gc0.count_d1_reg[4]_0\(4),
      Q => \^q\(4),
      R => srst_full_ff_i
    );
\gc0.count_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__0\(0),
      Q => \^gc0.count_d1_reg[4]_0\(0),
      S => srst_full_ff_i
    );
\gc0.count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__0\(1),
      Q => \^gc0.count_d1_reg[4]_0\(1),
      R => srst_full_ff_i
    );
\gc0.count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__0\(2),
      Q => \^gc0.count_d1_reg[4]_0\(2),
      R => srst_full_ff_i
    );
\gc0.count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__0\(3),
      Q => \^gc0.count_d1_reg[4]_0\(3),
      R => srst_full_ff_i
    );
\gc0.count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__0\(4),
      Q => \^gc0.count_d1_reg[4]_0\(4),
      R => srst_full_ff_i
    );
plusOp_carry_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(4),
      I1 => \gcc0.gc0.count_reg[4]\(4),
      O => S(4)
    );
plusOp_carry_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(3),
      I1 => \gcc0.gc0.count_reg[4]\(3),
      O => S(3)
    );
plusOp_carry_i_4: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(2),
      I1 => \gcc0.gc0.count_reg[4]\(2),
      O => S(2)
    );
plusOp_carry_i_5: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(1),
      I1 => \gcc0.gc0.count_reg[4]\(1),
      O => S(1)
    );
plusOp_carry_i_6: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(0),
      I1 => \gcc0.gc0.count_reg[4]\(0),
      O => S(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_fwft is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    \out\ : in STD_LOGIC;
    p_1_out : out STD_LOGIC;
    ram_full_fb_i_reg : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    \gc0.count_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \goreg_dm.dout_i_reg[71]\ : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_fwft : entity is "rd_fwft";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_fwft;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_fwft is
  signal aempty_fwft_fb_i : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of aempty_fwft_fb_i : signal is std.standard.true;
  signal aempty_fwft_i : STD_LOGIC;
  attribute DONT_TOUCH of aempty_fwft_i : signal is std.standard.true;
  signal \aempty_fwft_i0__1\ : STD_LOGIC;
  signal curr_fwft_state : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute DONT_TOUCH of curr_fwft_state : signal is std.standard.true;
  signal empty_fwft_fb_i : STD_LOGIC;
  attribute DONT_TOUCH of empty_fwft_fb_i : signal is std.standard.true;
  signal empty_fwft_fb_o_i : STD_LOGIC;
  attribute DONT_TOUCH of empty_fwft_fb_o_i : signal is std.standard.true;
  signal empty_fwft_fb_o_i_reg0 : STD_LOGIC;
  signal empty_fwft_i : STD_LOGIC;
  attribute DONT_TOUCH of empty_fwft_i : signal is std.standard.true;
  signal \empty_fwft_i0__1\ : STD_LOGIC;
  signal next_fwft_state : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal user_valid : STD_LOGIC;
  attribute DONT_TOUCH of user_valid : signal is std.standard.true;
  attribute DONT_TOUCH of aempty_fwft_fb_i_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of aempty_fwft_fb_i_reg : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of aempty_fwft_fb_i_reg : label is "no";
  attribute DONT_TOUCH of aempty_fwft_i_reg : label is std.standard.true;
  attribute KEEP of aempty_fwft_i_reg : label is "yes";
  attribute equivalent_register_removal of aempty_fwft_i_reg : label is "no";
  attribute DONT_TOUCH of empty_fwft_fb_i_reg : label is std.standard.true;
  attribute KEEP of empty_fwft_fb_i_reg : label is "yes";
  attribute equivalent_register_removal of empty_fwft_fb_i_reg : label is "no";
  attribute DONT_TOUCH of empty_fwft_fb_o_i_reg : label is std.standard.true;
  attribute KEEP of empty_fwft_fb_o_i_reg : label is "yes";
  attribute equivalent_register_removal of empty_fwft_fb_o_i_reg : label is "no";
  attribute DONT_TOUCH of empty_fwft_i_reg : label is std.standard.true;
  attribute KEEP of empty_fwft_i_reg : label is "yes";
  attribute equivalent_register_removal of empty_fwft_i_reg : label is "no";
  attribute DONT_TOUCH of \gpregsm1.curr_fwft_state_reg[0]\ : label is std.standard.true;
  attribute KEEP of \gpregsm1.curr_fwft_state_reg[0]\ : label is "yes";
  attribute equivalent_register_removal of \gpregsm1.curr_fwft_state_reg[0]\ : label is "no";
  attribute DONT_TOUCH of \gpregsm1.curr_fwft_state_reg[1]\ : label is std.standard.true;
  attribute KEEP of \gpregsm1.curr_fwft_state_reg[1]\ : label is "yes";
  attribute equivalent_register_removal of \gpregsm1.curr_fwft_state_reg[1]\ : label is "no";
  attribute DONT_TOUCH of \gpregsm1.user_valid_reg\ : label is std.standard.true;
  attribute KEEP of \gpregsm1.user_valid_reg\ : label is "yes";
  attribute equivalent_register_removal of \gpregsm1.user_valid_reg\ : label is "no";
begin
  empty <= empty_fwft_i;
  valid <= user_valid;
aempty_fwft_fb_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFCB8000"
    )
        port map (
      I0 => rd_en,
      I1 => curr_fwft_state(0),
      I2 => curr_fwft_state(1),
      I3 => \out\,
      I4 => aempty_fwft_fb_i,
      O => \aempty_fwft_i0__1\
    );
aempty_fwft_fb_i_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => \aempty_fwft_i0__1\,
      Q => aempty_fwft_fb_i,
      S => srst_full_ff_i
    );
aempty_fwft_i_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => \aempty_fwft_i0__1\,
      Q => aempty_fwft_i,
      S => srst_full_ff_i
    );
empty_fwft_fb_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F320"
    )
        port map (
      I0 => rd_en,
      I1 => curr_fwft_state(1),
      I2 => curr_fwft_state(0),
      I3 => empty_fwft_fb_i,
      O => \empty_fwft_i0__1\
    );
empty_fwft_fb_i_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => \empty_fwft_i0__1\,
      Q => empty_fwft_fb_i,
      S => srst_full_ff_i
    );
empty_fwft_fb_o_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F320"
    )
        port map (
      I0 => rd_en,
      I1 => curr_fwft_state(1),
      I2 => curr_fwft_state(0),
      I3 => empty_fwft_fb_o_i,
      O => empty_fwft_fb_o_i_reg0
    );
empty_fwft_fb_o_i_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => empty_fwft_fb_o_i_reg0,
      Q => empty_fwft_fb_o_i,
      S => srst_full_ff_i
    );
empty_fwft_i_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => \empty_fwft_i0__1\,
      Q => empty_fwft_i,
      S => srst_full_ff_i
    );
\gc0.count_d1[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4555"
    )
        port map (
      I0 => \out\,
      I1 => rd_en,
      I2 => curr_fwft_state(1),
      I3 => curr_fwft_state(0),
      O => \gc0.count_reg[0]\(0)
    );
\goreg_dm.dout_i[71]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A2"
    )
        port map (
      I0 => curr_fwft_state(1),
      I1 => curr_fwft_state(0),
      I2 => rd_en,
      O => \goreg_dm.dout_i_reg[71]\(0)
    );
\gpr1.dout_i[71]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00F7"
    )
        port map (
      I0 => curr_fwft_state(0),
      I1 => curr_fwft_state(1),
      I2 => rd_en,
      I3 => \out\,
      O => E(0)
    );
\gpregsm1.curr_fwft_state[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => curr_fwft_state(1),
      I1 => rd_en,
      I2 => curr_fwft_state(0),
      O => next_fwft_state(0)
    );
\gpregsm1.curr_fwft_state[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"20FF"
    )
        port map (
      I0 => curr_fwft_state(1),
      I1 => rd_en,
      I2 => curr_fwft_state(0),
      I3 => \out\,
      O => next_fwft_state(1)
    );
\gpregsm1.curr_fwft_state_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => next_fwft_state(0),
      Q => curr_fwft_state(0),
      R => srst_full_ff_i
    );
\gpregsm1.curr_fwft_state_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => next_fwft_state(1),
      Q => curr_fwft_state(1),
      R => srst_full_ff_i
    );
\gpregsm1.user_valid_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => next_fwft_state(0),
      Q => user_valid,
      R => srst_full_ff_i
    );
plusOp_carry_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444444400004000"
    )
        port map (
      I0 => ram_full_fb_i_reg,
      I1 => wr_en,
      I2 => curr_fwft_state(0),
      I3 => curr_fwft_state(1),
      I4 => rd_en,
      I5 => \out\,
      O => p_1_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_status_flags_ss is
  port (
    clk : in STD_LOGIC;
    \out\ : out STD_LOGIC;
    ram_full_fb_i_reg : in STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_status_flags_ss : entity is "rd_status_flags_ss";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_status_flags_ss;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_status_flags_ss is
  signal ram_empty_fb_i : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of ram_empty_fb_i : signal is std.standard.true;
  signal ram_empty_i : STD_LOGIC;
  attribute DONT_TOUCH of ram_empty_i : signal is std.standard.true;
  attribute DONT_TOUCH of ram_empty_fb_i_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of ram_empty_fb_i_reg : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of ram_empty_fb_i_reg : label is "no";
  attribute DONT_TOUCH of ram_empty_i_reg : label is std.standard.true;
  attribute KEEP of ram_empty_i_reg : label is "yes";
  attribute equivalent_register_removal of ram_empty_i_reg : label is "no";
begin
  \out\ <= ram_empty_fb_i;
ram_empty_fb_i_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => ram_full_fb_i_reg,
      Q => ram_empty_fb_i,
      S => srst_full_ff_i
    );
ram_empty_i_reg: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => '1',
      D => ram_full_fb_i_reg,
      Q => ram_empty_i,
      S => srst_full_ff_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_bin_cntr is
  port (
    clk : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    ram_empty_fb_i_reg_0 : in STD_LOGIC;
    ram_empty_i_reg : out STD_LOGIC;
    ram_full_comb : out STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \gc0.count_d1_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \gc0.count_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \gpr1.dout_i_reg[1]\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    ram_empty_fb_i_reg : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_bin_cntr : entity is "wr_bin_cntr";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_bin_cntr;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_bin_cntr is
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1\ : STD_LOGIC;
  signal \^gpr1.dout_i_reg[1]\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \gwss.wsts/comp0\ : STD_LOGIC;
  signal \gwss.wsts/comp1\ : STD_LOGIC;
  signal \plusOp__1\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal ram_empty_fb_i_i_3_n_0 : STD_LOGIC;
  signal ram_full_fb_i_i_4_n_0 : STD_LOGIC;
  signal ram_full_fb_i_i_5_n_0 : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \gcc0.gc0.count[0]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \gcc0.gc0.count[1]_i_1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \gcc0.gc0.count[2]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \gcc0.gc0.count[3]_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \gcc0.gc0.count[4]_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of ram_full_fb_i_i_2 : label is "soft_lutpair2";
begin
  Q(4 downto 0) <= \^q\(4 downto 0);
  \gpr1.dout_i_reg[1]\(4 downto 0) <= \^gpr1.dout_i_reg[1]\(4 downto 0);
\gcc0.gc0.count[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(0),
      O => \plusOp__1\(0)
    );
\gcc0.gc0.count[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      O => \plusOp__1\(1)
    );
\gcc0.gc0.count[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \^q\(2),
      O => \plusOp__1\(2)
    );
\gcc0.gc0.count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F80"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(0),
      I2 => \^q\(2),
      I3 => \^q\(3),
      O => \plusOp__1\(3)
    );
\gcc0.gc0.count[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7FFF8000"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^q\(3),
      I4 => \^q\(4),
      O => \plusOp__1\(4)
    );
\gcc0.gc0.count_d1_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^q\(0),
      Q => \^gpr1.dout_i_reg[1]\(0),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_d1_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^q\(1),
      Q => \^gpr1.dout_i_reg[1]\(1),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_d1_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^q\(2),
      Q => \^gpr1.dout_i_reg[1]\(2),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_d1_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^q\(3),
      Q => \^gpr1.dout_i_reg[1]\(3),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_d1_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \^q\(4),
      Q => \^gpr1.dout_i_reg[1]\(4),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_reg[0]\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__1\(0),
      Q => \^q\(0),
      S => srst_full_ff_i
    );
\gcc0.gc0.count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__1\(1),
      Q => \^q\(1),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__1\(2),
      Q => \^q\(2),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__1\(3),
      Q => \^q\(3),
      R => srst_full_ff_i
    );
\gcc0.gc0.count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \plusOp__1\(4),
      Q => \^q\(4),
      R => srst_full_ff_i
    );
ram_empty_fb_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF0FFFFF88008888"
    )
        port map (
      I0 => ram_empty_fb_i_reg(0),
      I1 => \gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1\,
      I2 => \gwss.wsts/comp0\,
      I3 => \out\,
      I4 => wr_en,
      I5 => ram_empty_fb_i_reg_0,
      O => ram_empty_i_reg
    );
ram_empty_fb_i_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"90090000"
    )
        port map (
      I0 => \^gpr1.dout_i_reg[1]\(1),
      I1 => \gc0.count_reg[4]\(1),
      I2 => \^gpr1.dout_i_reg[1]\(0),
      I3 => \gc0.count_reg[4]\(0),
      I4 => ram_empty_fb_i_i_3_n_0,
      O => \gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1\
    );
ram_empty_fb_i_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gpr1.dout_i_reg[1]\(3),
      I1 => \gc0.count_reg[4]\(3),
      I2 => \^gpr1.dout_i_reg[1]\(2),
      I3 => \gc0.count_reg[4]\(2),
      I4 => \gc0.count_reg[4]\(4),
      I5 => \^gpr1.dout_i_reg[1]\(4),
      O => ram_empty_fb_i_i_3_n_0
    );
ram_full_fb_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0FFF0088"
    )
        port map (
      I0 => wr_en,
      I1 => \gwss.wsts/comp1\,
      I2 => \gwss.wsts/comp0\,
      I3 => ram_empty_fb_i_reg(0),
      I4 => \out\,
      O => ram_full_comb
    );
ram_full_fb_i_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"90090000"
    )
        port map (
      I0 => \^q\(1),
      I1 => \gc0.count_d1_reg[4]\(1),
      I2 => \^q\(0),
      I3 => \gc0.count_d1_reg[4]\(0),
      I4 => ram_full_fb_i_i_4_n_0,
      O => \gwss.wsts/comp1\
    );
ram_full_fb_i_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"90090000"
    )
        port map (
      I0 => \^gpr1.dout_i_reg[1]\(1),
      I1 => \gc0.count_d1_reg[4]\(1),
      I2 => \^gpr1.dout_i_reg[1]\(0),
      I3 => \gc0.count_d1_reg[4]\(0),
      I4 => ram_full_fb_i_i_5_n_0,
      O => \gwss.wsts/comp0\
    );
ram_full_fb_i_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^q\(3),
      I1 => \gc0.count_d1_reg[4]\(3),
      I2 => \^q\(2),
      I3 => \gc0.count_d1_reg[4]\(2),
      I4 => \gc0.count_d1_reg[4]\(4),
      I5 => \^q\(4),
      O => ram_full_fb_i_i_4_n_0
    );
ram_full_fb_i_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^gpr1.dout_i_reg[1]\(3),
      I1 => \gc0.count_d1_reg[4]\(3),
      I2 => \^gpr1.dout_i_reg[1]\(2),
      I3 => \gc0.count_d1_reg[4]\(2),
      I4 => \gc0.count_d1_reg[4]\(4),
      I5 => \^gpr1.dout_i_reg[1]\(4),
      O => ram_full_fb_i_i_5_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_pf_ss is
  port (
    clk : in STD_LOGIC;
    p_1_out : in STD_LOGIC;
    prog_full : out STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    S : in STD_LOGIC_VECTOR ( 4 downto 0 );
    ram_empty_fb_i_reg : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_pf_ss : entity is "wr_pf_ss";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_pf_ss;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_pf_ss is
  signal diff_pntr_pad : STD_LOGIC_VECTOR ( 5 downto 1 );
  signal \eqOp__3\ : STD_LOGIC;
  signal \gpfs.prog_full_i_i_1_n_0\ : STD_LOGIC;
  signal plusOp : STD_LOGIC_VECTOR ( 5 downto 1 );
  signal plusOp_carry_n_5 : STD_LOGIC;
  signal plusOp_carry_n_6 : STD_LOGIC;
  signal plusOp_carry_n_7 : STD_LOGIC;
  signal \^prog_full\ : STD_LOGIC;
  signal ram_rd_en_i : STD_LOGIC;
  signal ram_wr_en_i : STD_LOGIC;
  signal NLW_plusOp_carry_CO_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal NLW_plusOp_carry_O_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 5 );
begin
  prog_full <= \^prog_full\;
\gdiff.gcry_1_sym.diff_pntr_pad_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => plusOp(1),
      Q => diff_pntr_pad(1),
      R => srst_full_ff_i
    );
\gdiff.gcry_1_sym.diff_pntr_pad_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => plusOp(2),
      Q => diff_pntr_pad(2),
      R => srst_full_ff_i
    );
\gdiff.gcry_1_sym.diff_pntr_pad_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => plusOp(3),
      Q => diff_pntr_pad(3),
      R => srst_full_ff_i
    );
\gdiff.gcry_1_sym.diff_pntr_pad_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => plusOp(4),
      Q => diff_pntr_pad(4),
      R => srst_full_ff_i
    );
\gdiff.gcry_1_sym.diff_pntr_pad_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => plusOp(5),
      Q => diff_pntr_pad(5),
      R => srst_full_ff_i
    );
\gpfs.prog_full_i_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"DF40"
    )
        port map (
      I0 => ram_rd_en_i,
      I1 => ram_wr_en_i,
      I2 => \eqOp__3\,
      I3 => \^prog_full\,
      O => \gpfs.prog_full_i_i_1_n_0\
    );
\gpfs.prog_full_i_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"10000000"
    )
        port map (
      I0 => diff_pntr_pad(3),
      I1 => diff_pntr_pad(1),
      I2 => diff_pntr_pad(2),
      I3 => diff_pntr_pad(5),
      I4 => diff_pntr_pad(4),
      O => \eqOp__3\
    );
\gpfs.prog_full_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \gpfs.prog_full_i_i_1_n_0\,
      Q => \^prog_full\,
      R => srst_full_ff_i
    );
\greg.ram_rd_en_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => ram_empty_fb_i_reg(0),
      Q => ram_rd_en_i,
      R => srst_full_ff_i
    );
\greg.ram_wr_en_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => E(0),
      Q => ram_wr_en_i,
      R => srst_full_ff_i
    );
plusOp_carry: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => p_1_out,
      CI_TOP => '0',
      CO(7 downto 3) => NLW_plusOp_carry_CO_UNCONNECTED(7 downto 3),
      CO(2) => plusOp_carry_n_5,
      CO(1) => plusOp_carry_n_6,
      CO(0) => plusOp_carry_n_7,
      DI(7 downto 4) => B"0000",
      DI(3 downto 0) => Q(3 downto 0),
      O(7 downto 5) => NLW_plusOp_carry_O_UNCONNECTED(7 downto 5),
      O(4 downto 0) => plusOp(5 downto 1),
      S(7 downto 5) => B"000",
      S(4 downto 0) => S(4 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_status_flags_ss is
  port (
    clk : in STD_LOGIC;
    full : out STD_LOGIC;
    \out\ : out STD_LOGIC;
    ram_full_comb : in STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_status_flags_ss : entity is "wr_status_flags_ss";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_status_flags_ss;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_status_flags_ss is
  signal ram_afull_fb : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of ram_afull_fb : signal is std.standard.true;
  signal ram_afull_i : STD_LOGIC;
  attribute DONT_TOUCH of ram_afull_i : signal is std.standard.true;
  signal ram_full_fb_i : STD_LOGIC;
  attribute DONT_TOUCH of ram_full_fb_i : signal is std.standard.true;
  signal ram_full_i : STD_LOGIC;
  attribute DONT_TOUCH of ram_full_i : signal is std.standard.true;
  attribute DONT_TOUCH of ram_full_fb_i_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of ram_full_fb_i_reg : label is "yes";
  attribute equivalent_register_removal : string;
  attribute equivalent_register_removal of ram_full_fb_i_reg : label is "no";
  attribute DONT_TOUCH of ram_full_i_reg : label is std.standard.true;
  attribute KEEP of ram_full_i_reg : label is "yes";
  attribute equivalent_register_removal of ram_full_i_reg : label is "no";
begin
  full <= ram_full_i;
  \out\ <= ram_full_fb_i;
\gcc0.gc0.count_d1[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => wr_en,
      I1 => ram_full_fb_i,
      O => E(0)
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => ram_afull_i
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => ram_afull_fb
    );
ram_full_fb_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => ram_full_comb,
      Q => ram_full_fb_i,
      R => srst_full_ff_i
    );
ram_full_i_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => ram_full_comb,
      Q => ram_full_i,
      R => srst_full_ff_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_prim is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_prim : entity is "builtin_prim";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_prim;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_prim is
  signal \gf18e2_inst.sngfifo18e2_n_0\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_1\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_10\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_100\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_101\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_102\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_103\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_104\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_105\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_106\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_107\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_11\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_12\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_13\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_14\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_15\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_16\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_17\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_18\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_19\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_20\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_21\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_22\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_23\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_24\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_25\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_26\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_27\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_28\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_29\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_30\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_31\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_32\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_33\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_34\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_35\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_36\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_37\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_38\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_39\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_4\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_40\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_41\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_42\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_43\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_44\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_45\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_46\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_47\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_48\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_49\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_50\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_51\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_52\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_53\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_54\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_55\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_56\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_57\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_58\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_59\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_60\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_61\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_62\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_63\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_64\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_65\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_66\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_67\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_68\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_69\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_70\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_71\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_72\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_73\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_74\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_75\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_76\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_77\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_78\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_79\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_80\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_81\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_82\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_83\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_84\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_85\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_86\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_87\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_88\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_89\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_90\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_91\ : STD_LOGIC;
  signal \gf18e2_inst.sngfifo18e2_n_92\ : STD_LOGIC;
  signal p_7_out : STD_LOGIC;
  signal p_8_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \gf18e2_inst.sngfifo18e2\ : label is "PRIMITIVE";
begin
\gf18e2_inst.sngfifo18e2\: unisim.vcomponents.FIFO18E2
    generic map(
      CASCADE_ORDER => "NONE",
      CLOCK_DOMAINS => "COMMON",
      FIRST_WORD_FALL_THROUGH => "TRUE",
      INIT => X"000000000",
      IS_RDCLK_INVERTED => '0',
      IS_RDEN_INVERTED => '0',
      IS_RSTREG_INVERTED => '0',
      IS_RST_INVERTED => '0',
      IS_WRCLK_INVERTED => '0',
      IS_WREN_INVERTED => '0',
      PROG_EMPTY_THRESH => 4,
      PROG_FULL_THRESH => 400,
      RDCOUNT_TYPE => "EXTENDED_DATACOUNT",
      READ_WIDTH => 36,
      REGISTER_MODE => "REGISTERED",
      RSTREG_PRIORITY => "REGCE",
      SLEEP_ASYNC => "FALSE",
      SRVAL => X"000000000",
      WRCOUNT_TYPE => "EXTENDED_DATACOUNT",
      WRITE_WIDTH => 36
    )
        port map (
      CASDIN(31 downto 0) => B"00000000000000000000000000000000",
      CASDINP(3 downto 0) => B"0000",
      CASDOMUX => '0',
      CASDOMUXEN => '1',
      CASDOUT(31) => \gf18e2_inst.sngfifo18e2_n_36\,
      CASDOUT(30) => \gf18e2_inst.sngfifo18e2_n_37\,
      CASDOUT(29) => \gf18e2_inst.sngfifo18e2_n_38\,
      CASDOUT(28) => \gf18e2_inst.sngfifo18e2_n_39\,
      CASDOUT(27) => \gf18e2_inst.sngfifo18e2_n_40\,
      CASDOUT(26) => \gf18e2_inst.sngfifo18e2_n_41\,
      CASDOUT(25) => \gf18e2_inst.sngfifo18e2_n_42\,
      CASDOUT(24) => \gf18e2_inst.sngfifo18e2_n_43\,
      CASDOUT(23) => \gf18e2_inst.sngfifo18e2_n_44\,
      CASDOUT(22) => \gf18e2_inst.sngfifo18e2_n_45\,
      CASDOUT(21) => \gf18e2_inst.sngfifo18e2_n_46\,
      CASDOUT(20) => \gf18e2_inst.sngfifo18e2_n_47\,
      CASDOUT(19) => \gf18e2_inst.sngfifo18e2_n_48\,
      CASDOUT(18) => \gf18e2_inst.sngfifo18e2_n_49\,
      CASDOUT(17) => \gf18e2_inst.sngfifo18e2_n_50\,
      CASDOUT(16) => \gf18e2_inst.sngfifo18e2_n_51\,
      CASDOUT(15) => \gf18e2_inst.sngfifo18e2_n_52\,
      CASDOUT(14) => \gf18e2_inst.sngfifo18e2_n_53\,
      CASDOUT(13) => \gf18e2_inst.sngfifo18e2_n_54\,
      CASDOUT(12) => \gf18e2_inst.sngfifo18e2_n_55\,
      CASDOUT(11) => \gf18e2_inst.sngfifo18e2_n_56\,
      CASDOUT(10) => \gf18e2_inst.sngfifo18e2_n_57\,
      CASDOUT(9) => \gf18e2_inst.sngfifo18e2_n_58\,
      CASDOUT(8) => \gf18e2_inst.sngfifo18e2_n_59\,
      CASDOUT(7) => \gf18e2_inst.sngfifo18e2_n_60\,
      CASDOUT(6) => \gf18e2_inst.sngfifo18e2_n_61\,
      CASDOUT(5) => \gf18e2_inst.sngfifo18e2_n_62\,
      CASDOUT(4) => \gf18e2_inst.sngfifo18e2_n_63\,
      CASDOUT(3) => \gf18e2_inst.sngfifo18e2_n_64\,
      CASDOUT(2) => \gf18e2_inst.sngfifo18e2_n_65\,
      CASDOUT(1) => \gf18e2_inst.sngfifo18e2_n_66\,
      CASDOUT(0) => \gf18e2_inst.sngfifo18e2_n_67\,
      CASDOUTP(3) => \gf18e2_inst.sngfifo18e2_n_100\,
      CASDOUTP(2) => \gf18e2_inst.sngfifo18e2_n_101\,
      CASDOUTP(1) => \gf18e2_inst.sngfifo18e2_n_102\,
      CASDOUTP(0) => \gf18e2_inst.sngfifo18e2_n_103\,
      CASNXTEMPTY => \gf18e2_inst.sngfifo18e2_n_0\,
      CASNXTRDEN => '0',
      CASOREGIMUX => '0',
      CASOREGIMUXEN => '1',
      CASPRVEMPTY => '0',
      CASPRVRDEN => \gf18e2_inst.sngfifo18e2_n_1\,
      DIN(31 downto 7) => B"0000000000000000000000000",
      DIN(6 downto 0) => din(6 downto 0),
      DINP(3 downto 0) => B"0000",
      DOUT(31) => \gf18e2_inst.sngfifo18e2_n_68\,
      DOUT(30) => \gf18e2_inst.sngfifo18e2_n_69\,
      DOUT(29) => \gf18e2_inst.sngfifo18e2_n_70\,
      DOUT(28) => \gf18e2_inst.sngfifo18e2_n_71\,
      DOUT(27) => \gf18e2_inst.sngfifo18e2_n_72\,
      DOUT(26) => \gf18e2_inst.sngfifo18e2_n_73\,
      DOUT(25) => \gf18e2_inst.sngfifo18e2_n_74\,
      DOUT(24) => \gf18e2_inst.sngfifo18e2_n_75\,
      DOUT(23) => \gf18e2_inst.sngfifo18e2_n_76\,
      DOUT(22) => \gf18e2_inst.sngfifo18e2_n_77\,
      DOUT(21) => \gf18e2_inst.sngfifo18e2_n_78\,
      DOUT(20) => \gf18e2_inst.sngfifo18e2_n_79\,
      DOUT(19) => \gf18e2_inst.sngfifo18e2_n_80\,
      DOUT(18) => \gf18e2_inst.sngfifo18e2_n_81\,
      DOUT(17) => \gf18e2_inst.sngfifo18e2_n_82\,
      DOUT(16) => \gf18e2_inst.sngfifo18e2_n_83\,
      DOUT(15) => \gf18e2_inst.sngfifo18e2_n_84\,
      DOUT(14) => \gf18e2_inst.sngfifo18e2_n_85\,
      DOUT(13) => \gf18e2_inst.sngfifo18e2_n_86\,
      DOUT(12) => \gf18e2_inst.sngfifo18e2_n_87\,
      DOUT(11) => \gf18e2_inst.sngfifo18e2_n_88\,
      DOUT(10) => \gf18e2_inst.sngfifo18e2_n_89\,
      DOUT(9) => \gf18e2_inst.sngfifo18e2_n_90\,
      DOUT(8) => \gf18e2_inst.sngfifo18e2_n_91\,
      DOUT(7) => \gf18e2_inst.sngfifo18e2_n_92\,
      DOUT(6 downto 0) => dout(6 downto 0),
      DOUTP(3) => \gf18e2_inst.sngfifo18e2_n_104\,
      DOUTP(2) => \gf18e2_inst.sngfifo18e2_n_105\,
      DOUTP(1) => \gf18e2_inst.sngfifo18e2_n_106\,
      DOUTP(0) => \gf18e2_inst.sngfifo18e2_n_107\,
      EMPTY => empty,
      FULL => full,
      PROGEMPTY => \gf18e2_inst.sngfifo18e2_n_4\,
      PROGFULL => prog_full,
      RDCLK => clk,
      RDCOUNT(12) => \gf18e2_inst.sngfifo18e2_n_10\,
      RDCOUNT(11) => \gf18e2_inst.sngfifo18e2_n_11\,
      RDCOUNT(10) => \gf18e2_inst.sngfifo18e2_n_12\,
      RDCOUNT(9) => \gf18e2_inst.sngfifo18e2_n_13\,
      RDCOUNT(8) => \gf18e2_inst.sngfifo18e2_n_14\,
      RDCOUNT(7) => \gf18e2_inst.sngfifo18e2_n_15\,
      RDCOUNT(6) => \gf18e2_inst.sngfifo18e2_n_16\,
      RDCOUNT(5) => \gf18e2_inst.sngfifo18e2_n_17\,
      RDCOUNT(4) => \gf18e2_inst.sngfifo18e2_n_18\,
      RDCOUNT(3) => \gf18e2_inst.sngfifo18e2_n_19\,
      RDCOUNT(2) => \gf18e2_inst.sngfifo18e2_n_20\,
      RDCOUNT(1) => \gf18e2_inst.sngfifo18e2_n_21\,
      RDCOUNT(0) => \gf18e2_inst.sngfifo18e2_n_22\,
      RDEN => rd_en,
      RDERR => p_7_out,
      RDRSTBUSY => rd_rst_busy,
      REGCE => rd_en,
      RST => srst,
      RSTREG => srst,
      SLEEP => '0',
      WRCLK => clk,
      WRCOUNT(12) => \gf18e2_inst.sngfifo18e2_n_23\,
      WRCOUNT(11) => \gf18e2_inst.sngfifo18e2_n_24\,
      WRCOUNT(10) => \gf18e2_inst.sngfifo18e2_n_25\,
      WRCOUNT(9) => \gf18e2_inst.sngfifo18e2_n_26\,
      WRCOUNT(8) => \gf18e2_inst.sngfifo18e2_n_27\,
      WRCOUNT(7) => \gf18e2_inst.sngfifo18e2_n_28\,
      WRCOUNT(6) => \gf18e2_inst.sngfifo18e2_n_29\,
      WRCOUNT(5) => \gf18e2_inst.sngfifo18e2_n_30\,
      WRCOUNT(4) => \gf18e2_inst.sngfifo18e2_n_31\,
      WRCOUNT(3) => \gf18e2_inst.sngfifo18e2_n_32\,
      WRCOUNT(2) => \gf18e2_inst.sngfifo18e2_n_33\,
      WRCOUNT(1) => \gf18e2_inst.sngfifo18e2_n_34\,
      WRCOUNT(0) => \gf18e2_inst.sngfifo18e2_n_35\,
      WREN => wr_en,
      WRERR => p_8_out,
      WRRSTBUSY => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth : entity is "builtin_extdepth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth is
  signal srst_qr : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of srst_qr : signal is "true";
  attribute msgon : string;
  attribute msgon of srst_qr : signal is "true";
begin
\gonep.inst_prim\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim_1
     port map (
      clk => clk,
      din(71 downto 0) => din(71 downto 0),
      dout(71 downto 0) => dout(71 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(1)
    );
i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth_0 is
  port (
    clk : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 56 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 56 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth_0 : entity is "builtin_extdepth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth_0;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth_0 is
  signal srst_qr : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of srst_qr : signal is "true";
  attribute msgon : string;
  attribute msgon of srst_qr : signal is "true";
begin
\gonep.inst_prim\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim
     port map (
      clk => clk,
      din(56 downto 0) => din(56 downto 0),
      dout(56 downto 0) => dout(56 downto 0),
      rd_en => rd_en,
      srst => srst,
      wr_en => wr_en
    );
\rst_val_sym.gextw_sym[2].inst_extdi_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(1)
    );
\rst_val_sym.gextw_sym[2].inst_extdi_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_extdepth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_extdepth : entity is "builtin_extdepth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_extdepth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_extdepth is
  signal srst_qr : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of srst_qr : signal is "true";
  attribute msgon : string;
  attribute msgon of srst_qr : signal is "true";
begin
\gonep.inst_prim\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_prim
     port map (
      clk => clk,
      din(31 downto 0) => din(31 downto 0),
      dout(31 downto 0) => dout(31 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
\rst_val_sym.gextw_sym[1].inst_extdi_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(1)
    );
\rst_val_sym.gextw_sym[1].inst_extdi_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_memory is
  port (
    clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 4 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 );
    \gcc0.gc0.count_d1_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \gpregsm1.curr_fwft_state_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \gpregsm1.curr_fwft_state_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_memory : entity is "memory";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_memory;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_memory is
  signal dout_i : STD_LOGIC_VECTOR ( 71 downto 0 );
begin
\gdm.dm_gen.dm\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_dmem
     port map (
      E(0) => E(0),
      Q(4 downto 0) => Q(4 downto 0),
      SR(0) => SR(0),
      clk => clk,
      din(71 downto 0) => din(71 downto 0),
      \gcc0.gc0.count_d1_reg[4]\(4 downto 0) => \gcc0.gc0.count_d1_reg[4]\(4 downto 0),
      \goreg_dm.dout_i_reg[71]\(71 downto 0) => dout_i(71 downto 0),
      \gpregsm1.curr_fwft_state_reg[0]\(0) => \gpregsm1.curr_fwft_state_reg[0]\(0)
    );
\goreg_dm.dout_i_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(0),
      Q => dout(0),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(10),
      Q => dout(10),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(11),
      Q => dout(11),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(12),
      Q => dout(12),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(13),
      Q => dout(13),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(14),
      Q => dout(14),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(15),
      Q => dout(15),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(16),
      Q => dout(16),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(17),
      Q => dout(17),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(18),
      Q => dout(18),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(19),
      Q => dout(19),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(1),
      Q => dout(1),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(20),
      Q => dout(20),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(21),
      Q => dout(21),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(22),
      Q => dout(22),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(23),
      Q => dout(23),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(24),
      Q => dout(24),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(25),
      Q => dout(25),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(26),
      Q => dout(26),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(27),
      Q => dout(27),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(28),
      Q => dout(28),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(29),
      Q => dout(29),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(2),
      Q => dout(2),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(30),
      Q => dout(30),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(31),
      Q => dout(31),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(32),
      Q => dout(32),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(33),
      Q => dout(33),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(34),
      Q => dout(34),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(35),
      Q => dout(35),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(36),
      Q => dout(36),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(37),
      Q => dout(37),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(38),
      Q => dout(38),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(39),
      Q => dout(39),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(3),
      Q => dout(3),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(40),
      Q => dout(40),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(41),
      Q => dout(41),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(42),
      Q => dout(42),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(43),
      Q => dout(43),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(44),
      Q => dout(44),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(45),
      Q => dout(45),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(46),
      Q => dout(46),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(47),
      Q => dout(47),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(48),
      Q => dout(48),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(49),
      Q => dout(49),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(4),
      Q => dout(4),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(50),
      Q => dout(50),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(51),
      Q => dout(51),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(52),
      Q => dout(52),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(53),
      Q => dout(53),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(54),
      Q => dout(54),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(55),
      Q => dout(55),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(56),
      Q => dout(56),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(57),
      Q => dout(57),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(58),
      Q => dout(58),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(59),
      Q => dout(59),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(5),
      Q => dout(5),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(60),
      Q => dout(60),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(61),
      Q => dout(61),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(62),
      Q => dout(62),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(63),
      Q => dout(63),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(64),
      Q => dout(64),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(65),
      Q => dout(65),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(66),
      Q => dout(66),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(67),
      Q => dout(67),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(68),
      Q => dout(68),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(69),
      Q => dout(69),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(6),
      Q => dout(6),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(70),
      Q => dout(70),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(71),
      Q => dout(71),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(7),
      Q => dout(7),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(8),
      Q => dout(8),
      R => SR(0)
    );
\goreg_dm.dout_i_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \gpregsm1.curr_fwft_state_reg[1]\(0),
      D => dout_i(9),
      Q => dout(9),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_logic is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    \out\ : out STD_LOGIC;
    p_1_out : out STD_LOGIC;
    ram_full_fb_i_reg : in STD_LOGIC;
    ram_full_fb_i_reg_0 : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    S : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \gc0.count_d1_reg[4]\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \gc0.count_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \gcc0.gc0.count_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \goreg_dm.dout_i_reg[71]\ : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_logic : entity is "rd_logic";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_logic;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_logic is
  signal \^gc0.count_reg[0]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^out\ : STD_LOGIC;
begin
  \gc0.count_reg[0]\(0) <= \^gc0.count_reg[0]\(0);
  \out\ <= \^out\;
\gr1.gr1_int.rfwft\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_fwft
     port map (
      E(0) => E(0),
      clk => clk,
      empty => empty,
      \gc0.count_reg[0]\(0) => \^gc0.count_reg[0]\(0),
      \goreg_dm.dout_i_reg[71]\(0) => \goreg_dm.dout_i_reg[71]\(0),
      \out\ => \^out\,
      p_1_out => p_1_out,
      ram_full_fb_i_reg => ram_full_fb_i_reg_0,
      rd_en => rd_en,
      srst_full_ff_i => srst_full_ff_i,
      valid => valid,
      wr_en => wr_en
    );
\grss.rsts\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_status_flags_ss
     port map (
      clk => clk,
      \out\ => \^out\,
      ram_full_fb_i_reg => ram_full_fb_i_reg,
      srst_full_ff_i => srst_full_ff_i
    );
rpntr: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_bin_cntr
     port map (
      E(0) => \^gc0.count_reg[0]\(0),
      Q(4 downto 0) => Q(4 downto 0),
      S(4 downto 0) => S(4 downto 0),
      clk => clk,
      \gc0.count_d1_reg[4]_0\(4 downto 0) => \gc0.count_d1_reg[4]\(4 downto 0),
      \gcc0.gc0.count_reg[4]\(4 downto 0) => \gcc0.gc0.count_reg[4]\(4 downto 0),
      srst_full_ff_i => srst_full_ff_i
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_reset_blk_ramfifo is
  port (
    clk : in STD_LOGIC;
    srst : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_reset_blk_ramfifo : entity is "reset_blk_ramfifo";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_reset_blk_ramfifo;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_reset_blk_ramfifo is
begin
\g8serrst.usrst_inst\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_bram_fifo_rstlogic
     port map (
      SR(0) => SR(0),
      clk => clk,
      srst => srst,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_logic is
  port (
    clk : in STD_LOGIC;
    full : out STD_LOGIC;
    \out\ : out STD_LOGIC;
    p_1_out : in STD_LOGIC;
    prog_full : out STD_LOGIC;
    ram_empty_fb_i_reg_0 : in STD_LOGIC;
    ram_empty_i_reg : out STD_LOGIC;
    srst_full_ff_i : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 4 downto 0 );
    S : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \gc0.count_d1_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \gc0.count_reg[4]\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \gpr1.dout_i_reg[1]\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    ram_empty_fb_i_reg : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_logic : entity is "wr_logic";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_logic;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_logic is
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^q\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^out\ : STD_LOGIC;
  signal ram_full_comb : STD_LOGIC;
begin
  E(0) <= \^e\(0);
  Q(4 downto 0) <= \^q\(4 downto 0);
  \out\ <= \^out\;
\gwss.gpf.wrpf\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_pf_ss
     port map (
      E(0) => \^e\(0),
      Q(3 downto 0) => \^q\(3 downto 0),
      S(4 downto 0) => S(4 downto 0),
      clk => clk,
      p_1_out => p_1_out,
      prog_full => prog_full,
      ram_empty_fb_i_reg(0) => ram_empty_fb_i_reg(0),
      srst_full_ff_i => srst_full_ff_i
    );
\gwss.wsts\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_status_flags_ss
     port map (
      E(0) => \^e\(0),
      clk => clk,
      full => full,
      \out\ => \^out\,
      ram_full_comb => ram_full_comb,
      srst_full_ff_i => srst_full_ff_i,
      wr_en => wr_en
    );
wpntr: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_bin_cntr
     port map (
      E(0) => \^e\(0),
      Q(4 downto 0) => \^q\(4 downto 0),
      clk => clk,
      \gc0.count_d1_reg[4]\(4 downto 0) => \gc0.count_d1_reg[4]\(4 downto 0),
      \gc0.count_reg[4]\(4 downto 0) => \gc0.count_reg[4]\(4 downto 0),
      \gpr1.dout_i_reg[1]\(4 downto 0) => \gpr1.dout_i_reg[1]\(4 downto 0),
      \out\ => \^out\,
      ram_empty_fb_i_reg(0) => ram_empty_fb_i_reg(0),
      ram_empty_fb_i_reg_0 => ram_empty_fb_i_reg_0,
      ram_empty_i_reg => ram_empty_i_reg,
      ram_full_comb => ram_full_comb,
      srst_full_ff_i => srst_full_ff_i,
      wr_en => wr_en
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_extdepth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_extdepth : entity is "builtin_extdepth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_extdepth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_extdepth is
  signal srst_qr : STD_LOGIC_VECTOR ( 1 downto 0 );
  attribute async_reg : string;
  attribute async_reg of srst_qr : signal is "true";
  attribute msgon : string;
  attribute msgon of srst_qr : signal is "true";
begin
\gonep.inst_prim\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_prim
     port map (
      clk => clk,
      din(6 downto 0) => din(6 downto 0),
      dout(6 downto 0) => dout(6 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
\rst_val_sym.gextw_sym[1].inst_extdi_0\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(1)
    );
\rst_val_sym.gextw_sym[1].inst_extdi_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => srst_qr(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_top is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 128 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 128 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_top : entity is "builtin_top";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_top is
begin
\rst_val_sym.gextw_sym[1].inst_extd\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth
     port map (
      clk => clk,
      din(71 downto 0) => din(71 downto 0),
      dout(71 downto 0) => dout(71 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
\rst_val_sym.gextw_sym[2].inst_extd\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth_0
     port map (
      clk => clk,
      din(56 downto 0) => din(128 downto 72),
      dout(56 downto 0) => dout(128 downto 72),
      rd_en => rd_en,
      srst => srst,
      wr_en => wr_en
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_top is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_top : entity is "builtin_top";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_top is
begin
\rst_val_sym.gextw_sym[1].inst_extd\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_extdepth
     port map (
      clk => clk,
      din(31 downto 0) => din(31 downto 0),
      dout(31 downto 0) => dout(31 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_ramfifo is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_ramfifo : entity is "fifo_generator_ramfifo";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_ramfifo;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_ramfifo is
  signal \gntv_or_sync_fifo.gl0.rd_n_3\ : STD_LOGIC;
  signal \gntv_or_sync_fifo.gl0.rd_n_4\ : STD_LOGIC;
  signal \gntv_or_sync_fifo.gl0.rd_n_5\ : STD_LOGIC;
  signal \gntv_or_sync_fifo.gl0.rd_n_6\ : STD_LOGIC;
  signal \gntv_or_sync_fifo.gl0.rd_n_7\ : STD_LOGIC;
  signal \gntv_or_sync_fifo.gl0.wr_n_0\ : STD_LOGIC;
  signal \gntv_or_sync_fifo.gl0.wr_n_9\ : STD_LOGIC;
  signal \gwss.gpf.wrpf/p_1_out\ : STD_LOGIC;
  signal p_0_out_0 : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal p_11_out : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal p_12_out : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal p_17_out : STD_LOGIC;
  signal p_2_out : STD_LOGIC;
  signal p_5_out : STD_LOGIC;
  signal p_7_out : STD_LOGIC;
  signal ram_rd_en_i : STD_LOGIC;
  signal rd_pntr_plus1 : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal srst_full_ff_i : STD_LOGIC;
begin
\gntv_or_sync_fifo.gl0.rd\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_logic
     port map (
      E(0) => ram_rd_en_i,
      Q(4 downto 0) => p_0_out_0(4 downto 0),
      S(4) => \gntv_or_sync_fifo.gl0.rd_n_3\,
      S(3) => \gntv_or_sync_fifo.gl0.rd_n_4\,
      S(2) => \gntv_or_sync_fifo.gl0.rd_n_5\,
      S(1) => \gntv_or_sync_fifo.gl0.rd_n_6\,
      S(0) => \gntv_or_sync_fifo.gl0.rd_n_7\,
      clk => clk,
      empty => empty,
      \gc0.count_d1_reg[4]\(4 downto 0) => rd_pntr_plus1(4 downto 0),
      \gc0.count_reg[0]\(0) => p_7_out,
      \gcc0.gc0.count_reg[4]\(4 downto 0) => p_12_out(4 downto 0),
      \goreg_dm.dout_i_reg[71]\(0) => p_5_out,
      \out\ => p_2_out,
      p_1_out => \gwss.gpf.wrpf/p_1_out\,
      ram_full_fb_i_reg => \gntv_or_sync_fifo.gl0.wr_n_9\,
      ram_full_fb_i_reg_0 => \gntv_or_sync_fifo.gl0.wr_n_0\,
      rd_en => rd_en,
      srst_full_ff_i => srst_full_ff_i,
      valid => valid,
      wr_en => wr_en
    );
\gntv_or_sync_fifo.gl0.wr\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_logic
     port map (
      E(0) => p_17_out,
      Q(4 downto 0) => p_12_out(4 downto 0),
      S(4) => \gntv_or_sync_fifo.gl0.rd_n_3\,
      S(3) => \gntv_or_sync_fifo.gl0.rd_n_4\,
      S(2) => \gntv_or_sync_fifo.gl0.rd_n_5\,
      S(1) => \gntv_or_sync_fifo.gl0.rd_n_6\,
      S(0) => \gntv_or_sync_fifo.gl0.rd_n_7\,
      clk => clk,
      full => full,
      \gc0.count_d1_reg[4]\(4 downto 0) => p_0_out_0(4 downto 0),
      \gc0.count_reg[4]\(4 downto 0) => rd_pntr_plus1(4 downto 0),
      \gpr1.dout_i_reg[1]\(4 downto 0) => p_11_out(4 downto 0),
      \out\ => \gntv_or_sync_fifo.gl0.wr_n_0\,
      p_1_out => \gwss.gpf.wrpf/p_1_out\,
      prog_full => prog_full,
      ram_empty_fb_i_reg(0) => p_7_out,
      ram_empty_fb_i_reg_0 => p_2_out,
      ram_empty_i_reg => \gntv_or_sync_fifo.gl0.wr_n_9\,
      srst_full_ff_i => srst_full_ff_i,
      wr_en => wr_en
    );
\gntv_or_sync_fifo.mem\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_memory
     port map (
      E(0) => p_17_out,
      Q(4 downto 0) => p_0_out_0(4 downto 0),
      SR(0) => srst_full_ff_i,
      clk => clk,
      din(71 downto 0) => din(71 downto 0),
      dout(71 downto 0) => dout(71 downto 0),
      \gcc0.gc0.count_d1_reg[4]\(4 downto 0) => p_11_out(4 downto 0),
      \gpregsm1.curr_fwft_state_reg[0]\(0) => ram_rd_en_i,
      \gpregsm1.curr_fwft_state_reg[1]\(0) => p_5_out
    );
rstblk: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_reset_blk_ramfifo
     port map (
      SR(0) => srst_full_ff_i,
      clk => clk,
      srst => srst,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_top is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_top : entity is "builtin_top";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_top is
begin
\rst_val_sym.gextw_sym[1].inst_extd\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_extdepth
     port map (
      clk => clk,
      din(6 downto 0) => din(6 downto 0),
      dout(6 downto 0) => dout(6 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_builtin is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 128 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 128 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_builtin : entity is "fifo_generator_v13_2_2_builtin";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_builtin;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_builtin is
begin
\v8_fifo.fblk\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_top
     port map (
      clk => clk,
      din(128 downto 0) => din(128 downto 0),
      dout(128 downto 0) => dout(128 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_builtin is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_builtin : entity is "fifo_generator_v13_2_2_builtin";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_builtin;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_builtin is
begin
\v8_fifo.fblk\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_top
     port map (
      clk => clk,
      din(31 downto 0) => din(31 downto 0),
      dout(31 downto 0) => dout(31 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_top is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_top : entity is "fifo_generator_top";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_top is
begin
\grf.rf\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_ramfifo
     port map (
      clk => clk,
      din(71 downto 0) => din(71 downto 0),
      dout(71 downto 0) => dout(71 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_builtin is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_builtin : entity is "fifo_generator_v13_2_2_builtin";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_builtin;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_builtin is
begin
\v8_fifo.fblk\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_top
     port map (
      clk => clk,
      din(6 downto 0) => din(6 downto 0),
      dout(6 downto 0) => dout(6 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_top is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 128 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 128 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_top : entity is "fifo_generator_top";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_top is
begin
\gbi.bi\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_builtin
     port map (
      clk => clk,
      din(128 downto 0) => din(128 downto 0),
      dout(128 downto 0) => dout(128 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_top is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_top : entity is "fifo_generator_top";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_top is
begin
\gbi.bi\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_builtin
     port map (
      clk => clk,
      din(31 downto 0) => din(31 downto 0),
      dout(31 downto 0) => dout(31 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2_synth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2_synth : entity is "fifo_generator_v13_2_2_synth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2_synth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2_synth is
begin
\gconvfifo.rf\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_top
     port map (
      clk => clk,
      din(71 downto 0) => din(71 downto 0),
      dout(71 downto 0) => dout(71 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_top is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_top : entity is "fifo_generator_top";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_top;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_top is
begin
\gbi.bi\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_builtin
     port map (
      clk => clk,
      din(6 downto 0) => din(6 downto 0),
      dout(6 downto 0) => dout(6 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_synth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 128 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 128 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_synth : entity is "fifo_generator_v13_2_2_synth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_synth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_synth is
begin
\gconvfifo.rf\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_top
     port map (
      clk => clk,
      din(128 downto 0) => din(128 downto 0),
      dout(128 downto 0) => dout(128 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_synth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_synth : entity is "fifo_generator_v13_2_2_synth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_synth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_synth is
begin
\gconvfifo.rf\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_top
     port map (
      clk => clk,
      din(31 downto 0) => din(31 downto 0),
      dout(31 downto 0) => dout(31 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 is
  port (
    almost_empty : out STD_LOGIC;
    almost_full : out STD_LOGIC;
    axi_ar_dbiterr : out STD_LOGIC;
    axi_ar_injectdbiterr : in STD_LOGIC;
    axi_ar_injectsbiterr : in STD_LOGIC;
    axi_ar_overflow : out STD_LOGIC;
    axi_ar_prog_empty : out STD_LOGIC;
    axi_ar_prog_full : out STD_LOGIC;
    axi_ar_sbiterr : out STD_LOGIC;
    axi_ar_underflow : out STD_LOGIC;
    axi_aw_dbiterr : out STD_LOGIC;
    axi_aw_injectdbiterr : in STD_LOGIC;
    axi_aw_injectsbiterr : in STD_LOGIC;
    axi_aw_overflow : out STD_LOGIC;
    axi_aw_prog_empty : out STD_LOGIC;
    axi_aw_prog_full : out STD_LOGIC;
    axi_aw_sbiterr : out STD_LOGIC;
    axi_aw_underflow : out STD_LOGIC;
    axi_b_dbiterr : out STD_LOGIC;
    axi_b_injectdbiterr : in STD_LOGIC;
    axi_b_injectsbiterr : in STD_LOGIC;
    axi_b_overflow : out STD_LOGIC;
    axi_b_prog_empty : out STD_LOGIC;
    axi_b_prog_full : out STD_LOGIC;
    axi_b_sbiterr : out STD_LOGIC;
    axi_b_underflow : out STD_LOGIC;
    axi_r_dbiterr : out STD_LOGIC;
    axi_r_injectdbiterr : in STD_LOGIC;
    axi_r_injectsbiterr : in STD_LOGIC;
    axi_r_overflow : out STD_LOGIC;
    axi_r_prog_empty : out STD_LOGIC;
    axi_r_prog_full : out STD_LOGIC;
    axi_r_sbiterr : out STD_LOGIC;
    axi_r_underflow : out STD_LOGIC;
    axi_w_dbiterr : out STD_LOGIC;
    axi_w_injectdbiterr : in STD_LOGIC;
    axi_w_injectsbiterr : in STD_LOGIC;
    axi_w_overflow : out STD_LOGIC;
    axi_w_prog_empty : out STD_LOGIC;
    axi_w_prog_full : out STD_LOGIC;
    axi_w_sbiterr : out STD_LOGIC;
    axi_w_underflow : out STD_LOGIC;
    axis_dbiterr : out STD_LOGIC;
    axis_injectdbiterr : in STD_LOGIC;
    axis_injectsbiterr : in STD_LOGIC;
    axis_overflow : out STD_LOGIC;
    axis_prog_empty : out STD_LOGIC;
    axis_prog_full : out STD_LOGIC;
    axis_sbiterr : out STD_LOGIC;
    axis_underflow : out STD_LOGIC;
    backup : in STD_LOGIC;
    backup_marker : in STD_LOGIC;
    clk : in STD_LOGIC;
    dbiterr : out STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    injectdbiterr : in STD_LOGIC;
    injectsbiterr : in STD_LOGIC;
    int_clk : in STD_LOGIC;
    m_aclk : in STD_LOGIC;
    m_aclk_en : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_awvalid : out STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_bvalid : in STD_LOGIC;
    m_axi_rlast : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC;
    m_axi_rvalid : in STD_LOGIC;
    m_axi_wlast : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_wvalid : out STD_LOGIC;
    m_axis_tlast : out STD_LOGIC;
    m_axis_tready : in STD_LOGIC;
    m_axis_tvalid : out STD_LOGIC;
    overflow : out STD_LOGIC;
    prog_empty : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_clk : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    rst : in STD_LOGIC;
    s_aclk : in STD_LOGIC;
    s_aclk_en : in STD_LOGIC;
    s_aresetn : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    s_axi_rlast : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_wlast : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axis_tlast : in STD_LOGIC;
    s_axis_tready : out STD_LOGIC;
    s_axis_tvalid : in STD_LOGIC;
    sbiterr : out STD_LOGIC;
    sleep : in STD_LOGIC;
    srst : in STD_LOGIC;
    underflow : out STD_LOGIC;
    valid : out STD_LOGIC;
    wr_ack : out STD_LOGIC;
    wr_clk : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    axi_ar_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_r_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    data_count : out STD_LOGIC_VECTOR ( 5 downto 0 );
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_rid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_ruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_wid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_wuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tdata : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axis_tdest : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tkeep : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tstrb : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tuser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    prog_empty_thresh : in STD_LOGIC_VECTOR ( 4 downto 0 );
    prog_empty_thresh_assert : in STD_LOGIC_VECTOR ( 4 downto 0 );
    prog_empty_thresh_negate : in STD_LOGIC_VECTOR ( 4 downto 0 );
    prog_full_thresh : in STD_LOGIC_VECTOR ( 4 downto 0 );
    prog_full_thresh_assert : in STD_LOGIC_VECTOR ( 4 downto 0 );
    prog_full_thresh_negate : in STD_LOGIC_VECTOR ( 4 downto 0 );
    rd_data_count : out STD_LOGIC_VECTOR ( 5 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_rid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_wid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_wuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tdata : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axis_tdest : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tkeep : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tstrb : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tuser : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wr_data_count : out STD_LOGIC_VECTOR ( 5 downto 0 )
  );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 6;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 72;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 72;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 28;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 27;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 6;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 5;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 6;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 5;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is 1;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 : entity is "fifo_generator_v13_2_2";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^wr_rst_busy\ : STD_LOGIC;
begin
  almost_empty <= \<const0>\;
  almost_full <= \<const0>\;
  axi_ar_data_count(4) <= \<const0>\;
  axi_ar_data_count(3) <= \<const0>\;
  axi_ar_data_count(2) <= \<const0>\;
  axi_ar_data_count(1) <= \<const0>\;
  axi_ar_data_count(0) <= \<const0>\;
  axi_ar_dbiterr <= \<const0>\;
  axi_ar_overflow <= \<const0>\;
  axi_ar_prog_empty <= \<const1>\;
  axi_ar_prog_full <= \<const0>\;
  axi_ar_rd_data_count(4) <= \<const0>\;
  axi_ar_rd_data_count(3) <= \<const0>\;
  axi_ar_rd_data_count(2) <= \<const0>\;
  axi_ar_rd_data_count(1) <= \<const0>\;
  axi_ar_rd_data_count(0) <= \<const0>\;
  axi_ar_sbiterr <= \<const0>\;
  axi_ar_underflow <= \<const0>\;
  axi_ar_wr_data_count(4) <= \<const0>\;
  axi_ar_wr_data_count(3) <= \<const0>\;
  axi_ar_wr_data_count(2) <= \<const0>\;
  axi_ar_wr_data_count(1) <= \<const0>\;
  axi_ar_wr_data_count(0) <= \<const0>\;
  axi_aw_data_count(4) <= \<const0>\;
  axi_aw_data_count(3) <= \<const0>\;
  axi_aw_data_count(2) <= \<const0>\;
  axi_aw_data_count(1) <= \<const0>\;
  axi_aw_data_count(0) <= \<const0>\;
  axi_aw_dbiterr <= \<const0>\;
  axi_aw_overflow <= \<const0>\;
  axi_aw_prog_empty <= \<const1>\;
  axi_aw_prog_full <= \<const0>\;
  axi_aw_rd_data_count(4) <= \<const0>\;
  axi_aw_rd_data_count(3) <= \<const0>\;
  axi_aw_rd_data_count(2) <= \<const0>\;
  axi_aw_rd_data_count(1) <= \<const0>\;
  axi_aw_rd_data_count(0) <= \<const0>\;
  axi_aw_sbiterr <= \<const0>\;
  axi_aw_underflow <= \<const0>\;
  axi_aw_wr_data_count(4) <= \<const0>\;
  axi_aw_wr_data_count(3) <= \<const0>\;
  axi_aw_wr_data_count(2) <= \<const0>\;
  axi_aw_wr_data_count(1) <= \<const0>\;
  axi_aw_wr_data_count(0) <= \<const0>\;
  axi_b_data_count(4) <= \<const0>\;
  axi_b_data_count(3) <= \<const0>\;
  axi_b_data_count(2) <= \<const0>\;
  axi_b_data_count(1) <= \<const0>\;
  axi_b_data_count(0) <= \<const0>\;
  axi_b_dbiterr <= \<const0>\;
  axi_b_overflow <= \<const0>\;
  axi_b_prog_empty <= \<const1>\;
  axi_b_prog_full <= \<const0>\;
  axi_b_rd_data_count(4) <= \<const0>\;
  axi_b_rd_data_count(3) <= \<const0>\;
  axi_b_rd_data_count(2) <= \<const0>\;
  axi_b_rd_data_count(1) <= \<const0>\;
  axi_b_rd_data_count(0) <= \<const0>\;
  axi_b_sbiterr <= \<const0>\;
  axi_b_underflow <= \<const0>\;
  axi_b_wr_data_count(4) <= \<const0>\;
  axi_b_wr_data_count(3) <= \<const0>\;
  axi_b_wr_data_count(2) <= \<const0>\;
  axi_b_wr_data_count(1) <= \<const0>\;
  axi_b_wr_data_count(0) <= \<const0>\;
  axi_r_data_count(10) <= \<const0>\;
  axi_r_data_count(9) <= \<const0>\;
  axi_r_data_count(8) <= \<const0>\;
  axi_r_data_count(7) <= \<const0>\;
  axi_r_data_count(6) <= \<const0>\;
  axi_r_data_count(5) <= \<const0>\;
  axi_r_data_count(4) <= \<const0>\;
  axi_r_data_count(3) <= \<const0>\;
  axi_r_data_count(2) <= \<const0>\;
  axi_r_data_count(1) <= \<const0>\;
  axi_r_data_count(0) <= \<const0>\;
  axi_r_dbiterr <= \<const0>\;
  axi_r_overflow <= \<const0>\;
  axi_r_prog_empty <= \<const1>\;
  axi_r_prog_full <= \<const0>\;
  axi_r_rd_data_count(10) <= \<const0>\;
  axi_r_rd_data_count(9) <= \<const0>\;
  axi_r_rd_data_count(8) <= \<const0>\;
  axi_r_rd_data_count(7) <= \<const0>\;
  axi_r_rd_data_count(6) <= \<const0>\;
  axi_r_rd_data_count(5) <= \<const0>\;
  axi_r_rd_data_count(4) <= \<const0>\;
  axi_r_rd_data_count(3) <= \<const0>\;
  axi_r_rd_data_count(2) <= \<const0>\;
  axi_r_rd_data_count(1) <= \<const0>\;
  axi_r_rd_data_count(0) <= \<const0>\;
  axi_r_sbiterr <= \<const0>\;
  axi_r_underflow <= \<const0>\;
  axi_r_wr_data_count(10) <= \<const0>\;
  axi_r_wr_data_count(9) <= \<const0>\;
  axi_r_wr_data_count(8) <= \<const0>\;
  axi_r_wr_data_count(7) <= \<const0>\;
  axi_r_wr_data_count(6) <= \<const0>\;
  axi_r_wr_data_count(5) <= \<const0>\;
  axi_r_wr_data_count(4) <= \<const0>\;
  axi_r_wr_data_count(3) <= \<const0>\;
  axi_r_wr_data_count(2) <= \<const0>\;
  axi_r_wr_data_count(1) <= \<const0>\;
  axi_r_wr_data_count(0) <= \<const0>\;
  axi_w_data_count(10) <= \<const0>\;
  axi_w_data_count(9) <= \<const0>\;
  axi_w_data_count(8) <= \<const0>\;
  axi_w_data_count(7) <= \<const0>\;
  axi_w_data_count(6) <= \<const0>\;
  axi_w_data_count(5) <= \<const0>\;
  axi_w_data_count(4) <= \<const0>\;
  axi_w_data_count(3) <= \<const0>\;
  axi_w_data_count(2) <= \<const0>\;
  axi_w_data_count(1) <= \<const0>\;
  axi_w_data_count(0) <= \<const0>\;
  axi_w_dbiterr <= \<const0>\;
  axi_w_overflow <= \<const0>\;
  axi_w_prog_empty <= \<const1>\;
  axi_w_prog_full <= \<const0>\;
  axi_w_rd_data_count(10) <= \<const0>\;
  axi_w_rd_data_count(9) <= \<const0>\;
  axi_w_rd_data_count(8) <= \<const0>\;
  axi_w_rd_data_count(7) <= \<const0>\;
  axi_w_rd_data_count(6) <= \<const0>\;
  axi_w_rd_data_count(5) <= \<const0>\;
  axi_w_rd_data_count(4) <= \<const0>\;
  axi_w_rd_data_count(3) <= \<const0>\;
  axi_w_rd_data_count(2) <= \<const0>\;
  axi_w_rd_data_count(1) <= \<const0>\;
  axi_w_rd_data_count(0) <= \<const0>\;
  axi_w_sbiterr <= \<const0>\;
  axi_w_underflow <= \<const0>\;
  axi_w_wr_data_count(10) <= \<const0>\;
  axi_w_wr_data_count(9) <= \<const0>\;
  axi_w_wr_data_count(8) <= \<const0>\;
  axi_w_wr_data_count(7) <= \<const0>\;
  axi_w_wr_data_count(6) <= \<const0>\;
  axi_w_wr_data_count(5) <= \<const0>\;
  axi_w_wr_data_count(4) <= \<const0>\;
  axi_w_wr_data_count(3) <= \<const0>\;
  axi_w_wr_data_count(2) <= \<const0>\;
  axi_w_wr_data_count(1) <= \<const0>\;
  axi_w_wr_data_count(0) <= \<const0>\;
  axis_data_count(10) <= \<const0>\;
  axis_data_count(9) <= \<const0>\;
  axis_data_count(8) <= \<const0>\;
  axis_data_count(7) <= \<const0>\;
  axis_data_count(6) <= \<const0>\;
  axis_data_count(5) <= \<const0>\;
  axis_data_count(4) <= \<const0>\;
  axis_data_count(3) <= \<const0>\;
  axis_data_count(2) <= \<const0>\;
  axis_data_count(1) <= \<const0>\;
  axis_data_count(0) <= \<const0>\;
  axis_dbiterr <= \<const0>\;
  axis_overflow <= \<const0>\;
  axis_prog_empty <= \<const1>\;
  axis_prog_full <= \<const0>\;
  axis_rd_data_count(10) <= \<const0>\;
  axis_rd_data_count(9) <= \<const0>\;
  axis_rd_data_count(8) <= \<const0>\;
  axis_rd_data_count(7) <= \<const0>\;
  axis_rd_data_count(6) <= \<const0>\;
  axis_rd_data_count(5) <= \<const0>\;
  axis_rd_data_count(4) <= \<const0>\;
  axis_rd_data_count(3) <= \<const0>\;
  axis_rd_data_count(2) <= \<const0>\;
  axis_rd_data_count(1) <= \<const0>\;
  axis_rd_data_count(0) <= \<const0>\;
  axis_sbiterr <= \<const0>\;
  axis_underflow <= \<const0>\;
  axis_wr_data_count(10) <= \<const0>\;
  axis_wr_data_count(9) <= \<const0>\;
  axis_wr_data_count(8) <= \<const0>\;
  axis_wr_data_count(7) <= \<const0>\;
  axis_wr_data_count(6) <= \<const0>\;
  axis_wr_data_count(5) <= \<const0>\;
  axis_wr_data_count(4) <= \<const0>\;
  axis_wr_data_count(3) <= \<const0>\;
  axis_wr_data_count(2) <= \<const0>\;
  axis_wr_data_count(1) <= \<const0>\;
  axis_wr_data_count(0) <= \<const0>\;
  data_count(5) <= \<const0>\;
  data_count(4) <= \<const0>\;
  data_count(3) <= \<const0>\;
  data_count(2) <= \<const0>\;
  data_count(1) <= \<const0>\;
  data_count(0) <= \<const0>\;
  dbiterr <= \<const0>\;
  m_axi_araddr(31) <= \<const0>\;
  m_axi_araddr(30) <= \<const0>\;
  m_axi_araddr(29) <= \<const0>\;
  m_axi_araddr(28) <= \<const0>\;
  m_axi_araddr(27) <= \<const0>\;
  m_axi_araddr(26) <= \<const0>\;
  m_axi_araddr(25) <= \<const0>\;
  m_axi_araddr(24) <= \<const0>\;
  m_axi_araddr(23) <= \<const0>\;
  m_axi_araddr(22) <= \<const0>\;
  m_axi_araddr(21) <= \<const0>\;
  m_axi_araddr(20) <= \<const0>\;
  m_axi_araddr(19) <= \<const0>\;
  m_axi_araddr(18) <= \<const0>\;
  m_axi_araddr(17) <= \<const0>\;
  m_axi_araddr(16) <= \<const0>\;
  m_axi_araddr(15) <= \<const0>\;
  m_axi_araddr(14) <= \<const0>\;
  m_axi_araddr(13) <= \<const0>\;
  m_axi_araddr(12) <= \<const0>\;
  m_axi_araddr(11) <= \<const0>\;
  m_axi_araddr(10) <= \<const0>\;
  m_axi_araddr(9) <= \<const0>\;
  m_axi_araddr(8) <= \<const0>\;
  m_axi_araddr(7) <= \<const0>\;
  m_axi_araddr(6) <= \<const0>\;
  m_axi_araddr(5) <= \<const0>\;
  m_axi_araddr(4) <= \<const0>\;
  m_axi_araddr(3) <= \<const0>\;
  m_axi_araddr(2) <= \<const0>\;
  m_axi_araddr(1) <= \<const0>\;
  m_axi_araddr(0) <= \<const0>\;
  m_axi_arburst(1) <= \<const0>\;
  m_axi_arburst(0) <= \<const0>\;
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(0) <= \<const0>\;
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3) <= \<const0>\;
  m_axi_arlen(2) <= \<const0>\;
  m_axi_arlen(1) <= \<const0>\;
  m_axi_arlen(0) <= \<const0>\;
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arprot(2) <= \<const0>\;
  m_axi_arprot(1) <= \<const0>\;
  m_axi_arprot(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_arregion(3) <= \<const0>\;
  m_axi_arregion(2) <= \<const0>\;
  m_axi_arregion(1) <= \<const0>\;
  m_axi_arregion(0) <= \<const0>\;
  m_axi_arsize(2) <= \<const0>\;
  m_axi_arsize(1) <= \<const0>\;
  m_axi_arsize(0) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_arvalid <= \<const0>\;
  m_axi_awaddr(31) <= \<const0>\;
  m_axi_awaddr(30) <= \<const0>\;
  m_axi_awaddr(29) <= \<const0>\;
  m_axi_awaddr(28) <= \<const0>\;
  m_axi_awaddr(27) <= \<const0>\;
  m_axi_awaddr(26) <= \<const0>\;
  m_axi_awaddr(25) <= \<const0>\;
  m_axi_awaddr(24) <= \<const0>\;
  m_axi_awaddr(23) <= \<const0>\;
  m_axi_awaddr(22) <= \<const0>\;
  m_axi_awaddr(21) <= \<const0>\;
  m_axi_awaddr(20) <= \<const0>\;
  m_axi_awaddr(19) <= \<const0>\;
  m_axi_awaddr(18) <= \<const0>\;
  m_axi_awaddr(17) <= \<const0>\;
  m_axi_awaddr(16) <= \<const0>\;
  m_axi_awaddr(15) <= \<const0>\;
  m_axi_awaddr(14) <= \<const0>\;
  m_axi_awaddr(13) <= \<const0>\;
  m_axi_awaddr(12) <= \<const0>\;
  m_axi_awaddr(11) <= \<const0>\;
  m_axi_awaddr(10) <= \<const0>\;
  m_axi_awaddr(9) <= \<const0>\;
  m_axi_awaddr(8) <= \<const0>\;
  m_axi_awaddr(7) <= \<const0>\;
  m_axi_awaddr(6) <= \<const0>\;
  m_axi_awaddr(5) <= \<const0>\;
  m_axi_awaddr(4) <= \<const0>\;
  m_axi_awaddr(3) <= \<const0>\;
  m_axi_awaddr(2) <= \<const0>\;
  m_axi_awaddr(1) <= \<const0>\;
  m_axi_awaddr(0) <= \<const0>\;
  m_axi_awburst(1) <= \<const0>\;
  m_axi_awburst(0) <= \<const0>\;
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(0) <= \<const0>\;
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awprot(2) <= \<const0>\;
  m_axi_awprot(1) <= \<const0>\;
  m_axi_awprot(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awregion(3) <= \<const0>\;
  m_axi_awregion(2) <= \<const0>\;
  m_axi_awregion(1) <= \<const0>\;
  m_axi_awregion(0) <= \<const0>\;
  m_axi_awsize(2) <= \<const0>\;
  m_axi_awsize(1) <= \<const0>\;
  m_axi_awsize(0) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_awvalid <= \<const0>\;
  m_axi_bready <= \<const0>\;
  m_axi_rready <= \<const0>\;
  m_axi_wdata(63) <= \<const0>\;
  m_axi_wdata(62) <= \<const0>\;
  m_axi_wdata(61) <= \<const0>\;
  m_axi_wdata(60) <= \<const0>\;
  m_axi_wdata(59) <= \<const0>\;
  m_axi_wdata(58) <= \<const0>\;
  m_axi_wdata(57) <= \<const0>\;
  m_axi_wdata(56) <= \<const0>\;
  m_axi_wdata(55) <= \<const0>\;
  m_axi_wdata(54) <= \<const0>\;
  m_axi_wdata(53) <= \<const0>\;
  m_axi_wdata(52) <= \<const0>\;
  m_axi_wdata(51) <= \<const0>\;
  m_axi_wdata(50) <= \<const0>\;
  m_axi_wdata(49) <= \<const0>\;
  m_axi_wdata(48) <= \<const0>\;
  m_axi_wdata(47) <= \<const0>\;
  m_axi_wdata(46) <= \<const0>\;
  m_axi_wdata(45) <= \<const0>\;
  m_axi_wdata(44) <= \<const0>\;
  m_axi_wdata(43) <= \<const0>\;
  m_axi_wdata(42) <= \<const0>\;
  m_axi_wdata(41) <= \<const0>\;
  m_axi_wdata(40) <= \<const0>\;
  m_axi_wdata(39) <= \<const0>\;
  m_axi_wdata(38) <= \<const0>\;
  m_axi_wdata(37) <= \<const0>\;
  m_axi_wdata(36) <= \<const0>\;
  m_axi_wdata(35) <= \<const0>\;
  m_axi_wdata(34) <= \<const0>\;
  m_axi_wdata(33) <= \<const0>\;
  m_axi_wdata(32) <= \<const0>\;
  m_axi_wdata(31) <= \<const0>\;
  m_axi_wdata(30) <= \<const0>\;
  m_axi_wdata(29) <= \<const0>\;
  m_axi_wdata(28) <= \<const0>\;
  m_axi_wdata(27) <= \<const0>\;
  m_axi_wdata(26) <= \<const0>\;
  m_axi_wdata(25) <= \<const0>\;
  m_axi_wdata(24) <= \<const0>\;
  m_axi_wdata(23) <= \<const0>\;
  m_axi_wdata(22) <= \<const0>\;
  m_axi_wdata(21) <= \<const0>\;
  m_axi_wdata(20) <= \<const0>\;
  m_axi_wdata(19) <= \<const0>\;
  m_axi_wdata(18) <= \<const0>\;
  m_axi_wdata(17) <= \<const0>\;
  m_axi_wdata(16) <= \<const0>\;
  m_axi_wdata(15) <= \<const0>\;
  m_axi_wdata(14) <= \<const0>\;
  m_axi_wdata(13) <= \<const0>\;
  m_axi_wdata(12) <= \<const0>\;
  m_axi_wdata(11) <= \<const0>\;
  m_axi_wdata(10) <= \<const0>\;
  m_axi_wdata(9) <= \<const0>\;
  m_axi_wdata(8) <= \<const0>\;
  m_axi_wdata(7) <= \<const0>\;
  m_axi_wdata(6) <= \<const0>\;
  m_axi_wdata(5) <= \<const0>\;
  m_axi_wdata(4) <= \<const0>\;
  m_axi_wdata(3) <= \<const0>\;
  m_axi_wdata(2) <= \<const0>\;
  m_axi_wdata(1) <= \<const0>\;
  m_axi_wdata(0) <= \<const0>\;
  m_axi_wid(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wstrb(7) <= \<const0>\;
  m_axi_wstrb(6) <= \<const0>\;
  m_axi_wstrb(5) <= \<const0>\;
  m_axi_wstrb(4) <= \<const0>\;
  m_axi_wstrb(3) <= \<const0>\;
  m_axi_wstrb(2) <= \<const0>\;
  m_axi_wstrb(1) <= \<const0>\;
  m_axi_wstrb(0) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  m_axi_wvalid <= \<const0>\;
  m_axis_tdata(7) <= \<const0>\;
  m_axis_tdata(6) <= \<const0>\;
  m_axis_tdata(5) <= \<const0>\;
  m_axis_tdata(4) <= \<const0>\;
  m_axis_tdata(3) <= \<const0>\;
  m_axis_tdata(2) <= \<const0>\;
  m_axis_tdata(1) <= \<const0>\;
  m_axis_tdata(0) <= \<const0>\;
  m_axis_tdest(0) <= \<const0>\;
  m_axis_tid(0) <= \<const0>\;
  m_axis_tkeep(0) <= \<const0>\;
  m_axis_tlast <= \<const0>\;
  m_axis_tstrb(0) <= \<const0>\;
  m_axis_tuser(3) <= \<const0>\;
  m_axis_tuser(2) <= \<const0>\;
  m_axis_tuser(1) <= \<const0>\;
  m_axis_tuser(0) <= \<const0>\;
  m_axis_tvalid <= \<const0>\;
  overflow <= \<const0>\;
  prog_empty <= \<const0>\;
  rd_data_count(5) <= \<const0>\;
  rd_data_count(4) <= \<const0>\;
  rd_data_count(3) <= \<const0>\;
  rd_data_count(2) <= \<const0>\;
  rd_data_count(1) <= \<const0>\;
  rd_data_count(0) <= \<const0>\;
  rd_rst_busy <= \^wr_rst_busy\;
  s_axi_arready <= \<const0>\;
  s_axi_awready <= \<const0>\;
  s_axi_bid(0) <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_bvalid <= \<const0>\;
  s_axi_rdata(63) <= \<const0>\;
  s_axi_rdata(62) <= \<const0>\;
  s_axi_rdata(61) <= \<const0>\;
  s_axi_rdata(60) <= \<const0>\;
  s_axi_rdata(59) <= \<const0>\;
  s_axi_rdata(58) <= \<const0>\;
  s_axi_rdata(57) <= \<const0>\;
  s_axi_rdata(56) <= \<const0>\;
  s_axi_rdata(55) <= \<const0>\;
  s_axi_rdata(54) <= \<const0>\;
  s_axi_rdata(53) <= \<const0>\;
  s_axi_rdata(52) <= \<const0>\;
  s_axi_rdata(51) <= \<const0>\;
  s_axi_rdata(50) <= \<const0>\;
  s_axi_rdata(49) <= \<const0>\;
  s_axi_rdata(48) <= \<const0>\;
  s_axi_rdata(47) <= \<const0>\;
  s_axi_rdata(46) <= \<const0>\;
  s_axi_rdata(45) <= \<const0>\;
  s_axi_rdata(44) <= \<const0>\;
  s_axi_rdata(43) <= \<const0>\;
  s_axi_rdata(42) <= \<const0>\;
  s_axi_rdata(41) <= \<const0>\;
  s_axi_rdata(40) <= \<const0>\;
  s_axi_rdata(39) <= \<const0>\;
  s_axi_rdata(38) <= \<const0>\;
  s_axi_rdata(37) <= \<const0>\;
  s_axi_rdata(36) <= \<const0>\;
  s_axi_rdata(35) <= \<const0>\;
  s_axi_rdata(34) <= \<const0>\;
  s_axi_rdata(33) <= \<const0>\;
  s_axi_rdata(32) <= \<const0>\;
  s_axi_rdata(31) <= \<const0>\;
  s_axi_rdata(30) <= \<const0>\;
  s_axi_rdata(29) <= \<const0>\;
  s_axi_rdata(28) <= \<const0>\;
  s_axi_rdata(27) <= \<const0>\;
  s_axi_rdata(26) <= \<const0>\;
  s_axi_rdata(25) <= \<const0>\;
  s_axi_rdata(24) <= \<const0>\;
  s_axi_rdata(23) <= \<const0>\;
  s_axi_rdata(22) <= \<const0>\;
  s_axi_rdata(21) <= \<const0>\;
  s_axi_rdata(20) <= \<const0>\;
  s_axi_rdata(19) <= \<const0>\;
  s_axi_rdata(18) <= \<const0>\;
  s_axi_rdata(17) <= \<const0>\;
  s_axi_rdata(16) <= \<const0>\;
  s_axi_rdata(15) <= \<const0>\;
  s_axi_rdata(14) <= \<const0>\;
  s_axi_rdata(13) <= \<const0>\;
  s_axi_rdata(12) <= \<const0>\;
  s_axi_rdata(11) <= \<const0>\;
  s_axi_rdata(10) <= \<const0>\;
  s_axi_rdata(9) <= \<const0>\;
  s_axi_rdata(8) <= \<const0>\;
  s_axi_rdata(7) <= \<const0>\;
  s_axi_rdata(6) <= \<const0>\;
  s_axi_rdata(5) <= \<const0>\;
  s_axi_rdata(4) <= \<const0>\;
  s_axi_rdata(3) <= \<const0>\;
  s_axi_rdata(2) <= \<const0>\;
  s_axi_rdata(1) <= \<const0>\;
  s_axi_rdata(0) <= \<const0>\;
  s_axi_rid(0) <= \<const0>\;
  s_axi_rlast <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
  s_axi_rvalid <= \<const0>\;
  s_axi_wready <= \<const0>\;
  s_axis_tready <= \<const0>\;
  sbiterr <= \<const0>\;
  underflow <= \<const0>\;
  wr_ack <= \<const0>\;
  wr_data_count(5) <= \<const0>\;
  wr_data_count(4) <= \<const0>\;
  wr_data_count(3) <= \<const0>\;
  wr_data_count(2) <= \<const0>\;
  wr_data_count(1) <= \<const0>\;
  wr_data_count(0) <= \<const0>\;
  wr_rst_busy <= \^wr_rst_busy\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
inst_fifo_gen: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2_synth
     port map (
      clk => clk,
      din(71 downto 0) => din(71 downto 0),
      dout(71 downto 0) => dout(71 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => \^wr_rst_busy\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_synth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_synth : entity is "fifo_generator_v13_2_2_synth";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_synth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_synth is
begin
\gconvfifo.rf\: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_top
     port map (
      clk => clk,
      din(6 downto 0) => din(6 downto 0),
      dout(6 downto 0) => dout(6 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 is
  port (
    almost_empty : out STD_LOGIC;
    almost_full : out STD_LOGIC;
    axi_ar_dbiterr : out STD_LOGIC;
    axi_ar_injectdbiterr : in STD_LOGIC;
    axi_ar_injectsbiterr : in STD_LOGIC;
    axi_ar_overflow : out STD_LOGIC;
    axi_ar_prog_empty : out STD_LOGIC;
    axi_ar_prog_full : out STD_LOGIC;
    axi_ar_sbiterr : out STD_LOGIC;
    axi_ar_underflow : out STD_LOGIC;
    axi_aw_dbiterr : out STD_LOGIC;
    axi_aw_injectdbiterr : in STD_LOGIC;
    axi_aw_injectsbiterr : in STD_LOGIC;
    axi_aw_overflow : out STD_LOGIC;
    axi_aw_prog_empty : out STD_LOGIC;
    axi_aw_prog_full : out STD_LOGIC;
    axi_aw_sbiterr : out STD_LOGIC;
    axi_aw_underflow : out STD_LOGIC;
    axi_b_dbiterr : out STD_LOGIC;
    axi_b_injectdbiterr : in STD_LOGIC;
    axi_b_injectsbiterr : in STD_LOGIC;
    axi_b_overflow : out STD_LOGIC;
    axi_b_prog_empty : out STD_LOGIC;
    axi_b_prog_full : out STD_LOGIC;
    axi_b_sbiterr : out STD_LOGIC;
    axi_b_underflow : out STD_LOGIC;
    axi_r_dbiterr : out STD_LOGIC;
    axi_r_injectdbiterr : in STD_LOGIC;
    axi_r_injectsbiterr : in STD_LOGIC;
    axi_r_overflow : out STD_LOGIC;
    axi_r_prog_empty : out STD_LOGIC;
    axi_r_prog_full : out STD_LOGIC;
    axi_r_sbiterr : out STD_LOGIC;
    axi_r_underflow : out STD_LOGIC;
    axi_w_dbiterr : out STD_LOGIC;
    axi_w_injectdbiterr : in STD_LOGIC;
    axi_w_injectsbiterr : in STD_LOGIC;
    axi_w_overflow : out STD_LOGIC;
    axi_w_prog_empty : out STD_LOGIC;
    axi_w_prog_full : out STD_LOGIC;
    axi_w_sbiterr : out STD_LOGIC;
    axi_w_underflow : out STD_LOGIC;
    axis_dbiterr : out STD_LOGIC;
    axis_injectdbiterr : in STD_LOGIC;
    axis_injectsbiterr : in STD_LOGIC;
    axis_overflow : out STD_LOGIC;
    axis_prog_empty : out STD_LOGIC;
    axis_prog_full : out STD_LOGIC;
    axis_sbiterr : out STD_LOGIC;
    axis_underflow : out STD_LOGIC;
    backup : in STD_LOGIC;
    backup_marker : in STD_LOGIC;
    clk : in STD_LOGIC;
    dbiterr : out STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    injectdbiterr : in STD_LOGIC;
    injectsbiterr : in STD_LOGIC;
    int_clk : in STD_LOGIC;
    m_aclk : in STD_LOGIC;
    m_aclk_en : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_awvalid : out STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_bvalid : in STD_LOGIC;
    m_axi_rlast : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC;
    m_axi_rvalid : in STD_LOGIC;
    m_axi_wlast : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_wvalid : out STD_LOGIC;
    m_axis_tlast : out STD_LOGIC;
    m_axis_tready : in STD_LOGIC;
    m_axis_tvalid : out STD_LOGIC;
    overflow : out STD_LOGIC;
    prog_empty : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_clk : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    rst : in STD_LOGIC;
    s_aclk : in STD_LOGIC;
    s_aclk_en : in STD_LOGIC;
    s_aresetn : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    s_axi_rlast : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_wlast : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axis_tlast : in STD_LOGIC;
    s_axis_tready : out STD_LOGIC;
    s_axis_tvalid : in STD_LOGIC;
    sbiterr : out STD_LOGIC;
    sleep : in STD_LOGIC;
    srst : in STD_LOGIC;
    underflow : out STD_LOGIC;
    valid : out STD_LOGIC;
    wr_ack : out STD_LOGIC;
    wr_clk : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    axi_ar_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_r_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    data_count : out STD_LOGIC_VECTOR ( 8 downto 0 );
    din : in STD_LOGIC_VECTOR ( 128 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 128 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_rid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_ruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_wid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_wuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tdata : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axis_tdest : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tkeep : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tstrb : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tuser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    prog_empty_thresh : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_empty_thresh_assert : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_empty_thresh_negate : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh_assert : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh_negate : in STD_LOGIC_VECTOR ( 8 downto 0 );
    rd_data_count : out STD_LOGIC_VECTOR ( 8 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_rid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_wid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_wuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tdata : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axis_tdest : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tkeep : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tstrb : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tuser : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wr_data_count : out STD_LOGIC_VECTOR ( 8 downto 0 )
  );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 129;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 129;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 6;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 480;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 479;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 512;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 512;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 : entity is "fifo_generator_v13_2_2";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
begin
  almost_empty <= \<const0>\;
  almost_full <= \<const0>\;
  axi_ar_data_count(4) <= \<const0>\;
  axi_ar_data_count(3) <= \<const0>\;
  axi_ar_data_count(2) <= \<const0>\;
  axi_ar_data_count(1) <= \<const0>\;
  axi_ar_data_count(0) <= \<const0>\;
  axi_ar_dbiterr <= \<const0>\;
  axi_ar_overflow <= \<const0>\;
  axi_ar_prog_empty <= \<const1>\;
  axi_ar_prog_full <= \<const0>\;
  axi_ar_rd_data_count(4) <= \<const0>\;
  axi_ar_rd_data_count(3) <= \<const0>\;
  axi_ar_rd_data_count(2) <= \<const0>\;
  axi_ar_rd_data_count(1) <= \<const0>\;
  axi_ar_rd_data_count(0) <= \<const0>\;
  axi_ar_sbiterr <= \<const0>\;
  axi_ar_underflow <= \<const0>\;
  axi_ar_wr_data_count(4) <= \<const0>\;
  axi_ar_wr_data_count(3) <= \<const0>\;
  axi_ar_wr_data_count(2) <= \<const0>\;
  axi_ar_wr_data_count(1) <= \<const0>\;
  axi_ar_wr_data_count(0) <= \<const0>\;
  axi_aw_data_count(4) <= \<const0>\;
  axi_aw_data_count(3) <= \<const0>\;
  axi_aw_data_count(2) <= \<const0>\;
  axi_aw_data_count(1) <= \<const0>\;
  axi_aw_data_count(0) <= \<const0>\;
  axi_aw_dbiterr <= \<const0>\;
  axi_aw_overflow <= \<const0>\;
  axi_aw_prog_empty <= \<const1>\;
  axi_aw_prog_full <= \<const0>\;
  axi_aw_rd_data_count(4) <= \<const0>\;
  axi_aw_rd_data_count(3) <= \<const0>\;
  axi_aw_rd_data_count(2) <= \<const0>\;
  axi_aw_rd_data_count(1) <= \<const0>\;
  axi_aw_rd_data_count(0) <= \<const0>\;
  axi_aw_sbiterr <= \<const0>\;
  axi_aw_underflow <= \<const0>\;
  axi_aw_wr_data_count(4) <= \<const0>\;
  axi_aw_wr_data_count(3) <= \<const0>\;
  axi_aw_wr_data_count(2) <= \<const0>\;
  axi_aw_wr_data_count(1) <= \<const0>\;
  axi_aw_wr_data_count(0) <= \<const0>\;
  axi_b_data_count(4) <= \<const0>\;
  axi_b_data_count(3) <= \<const0>\;
  axi_b_data_count(2) <= \<const0>\;
  axi_b_data_count(1) <= \<const0>\;
  axi_b_data_count(0) <= \<const0>\;
  axi_b_dbiterr <= \<const0>\;
  axi_b_overflow <= \<const0>\;
  axi_b_prog_empty <= \<const1>\;
  axi_b_prog_full <= \<const0>\;
  axi_b_rd_data_count(4) <= \<const0>\;
  axi_b_rd_data_count(3) <= \<const0>\;
  axi_b_rd_data_count(2) <= \<const0>\;
  axi_b_rd_data_count(1) <= \<const0>\;
  axi_b_rd_data_count(0) <= \<const0>\;
  axi_b_sbiterr <= \<const0>\;
  axi_b_underflow <= \<const0>\;
  axi_b_wr_data_count(4) <= \<const0>\;
  axi_b_wr_data_count(3) <= \<const0>\;
  axi_b_wr_data_count(2) <= \<const0>\;
  axi_b_wr_data_count(1) <= \<const0>\;
  axi_b_wr_data_count(0) <= \<const0>\;
  axi_r_data_count(10) <= \<const0>\;
  axi_r_data_count(9) <= \<const0>\;
  axi_r_data_count(8) <= \<const0>\;
  axi_r_data_count(7) <= \<const0>\;
  axi_r_data_count(6) <= \<const0>\;
  axi_r_data_count(5) <= \<const0>\;
  axi_r_data_count(4) <= \<const0>\;
  axi_r_data_count(3) <= \<const0>\;
  axi_r_data_count(2) <= \<const0>\;
  axi_r_data_count(1) <= \<const0>\;
  axi_r_data_count(0) <= \<const0>\;
  axi_r_dbiterr <= \<const0>\;
  axi_r_overflow <= \<const0>\;
  axi_r_prog_empty <= \<const1>\;
  axi_r_prog_full <= \<const0>\;
  axi_r_rd_data_count(10) <= \<const0>\;
  axi_r_rd_data_count(9) <= \<const0>\;
  axi_r_rd_data_count(8) <= \<const0>\;
  axi_r_rd_data_count(7) <= \<const0>\;
  axi_r_rd_data_count(6) <= \<const0>\;
  axi_r_rd_data_count(5) <= \<const0>\;
  axi_r_rd_data_count(4) <= \<const0>\;
  axi_r_rd_data_count(3) <= \<const0>\;
  axi_r_rd_data_count(2) <= \<const0>\;
  axi_r_rd_data_count(1) <= \<const0>\;
  axi_r_rd_data_count(0) <= \<const0>\;
  axi_r_sbiterr <= \<const0>\;
  axi_r_underflow <= \<const0>\;
  axi_r_wr_data_count(10) <= \<const0>\;
  axi_r_wr_data_count(9) <= \<const0>\;
  axi_r_wr_data_count(8) <= \<const0>\;
  axi_r_wr_data_count(7) <= \<const0>\;
  axi_r_wr_data_count(6) <= \<const0>\;
  axi_r_wr_data_count(5) <= \<const0>\;
  axi_r_wr_data_count(4) <= \<const0>\;
  axi_r_wr_data_count(3) <= \<const0>\;
  axi_r_wr_data_count(2) <= \<const0>\;
  axi_r_wr_data_count(1) <= \<const0>\;
  axi_r_wr_data_count(0) <= \<const0>\;
  axi_w_data_count(10) <= \<const0>\;
  axi_w_data_count(9) <= \<const0>\;
  axi_w_data_count(8) <= \<const0>\;
  axi_w_data_count(7) <= \<const0>\;
  axi_w_data_count(6) <= \<const0>\;
  axi_w_data_count(5) <= \<const0>\;
  axi_w_data_count(4) <= \<const0>\;
  axi_w_data_count(3) <= \<const0>\;
  axi_w_data_count(2) <= \<const0>\;
  axi_w_data_count(1) <= \<const0>\;
  axi_w_data_count(0) <= \<const0>\;
  axi_w_dbiterr <= \<const0>\;
  axi_w_overflow <= \<const0>\;
  axi_w_prog_empty <= \<const1>\;
  axi_w_prog_full <= \<const0>\;
  axi_w_rd_data_count(10) <= \<const0>\;
  axi_w_rd_data_count(9) <= \<const0>\;
  axi_w_rd_data_count(8) <= \<const0>\;
  axi_w_rd_data_count(7) <= \<const0>\;
  axi_w_rd_data_count(6) <= \<const0>\;
  axi_w_rd_data_count(5) <= \<const0>\;
  axi_w_rd_data_count(4) <= \<const0>\;
  axi_w_rd_data_count(3) <= \<const0>\;
  axi_w_rd_data_count(2) <= \<const0>\;
  axi_w_rd_data_count(1) <= \<const0>\;
  axi_w_rd_data_count(0) <= \<const0>\;
  axi_w_sbiterr <= \<const0>\;
  axi_w_underflow <= \<const0>\;
  axi_w_wr_data_count(10) <= \<const0>\;
  axi_w_wr_data_count(9) <= \<const0>\;
  axi_w_wr_data_count(8) <= \<const0>\;
  axi_w_wr_data_count(7) <= \<const0>\;
  axi_w_wr_data_count(6) <= \<const0>\;
  axi_w_wr_data_count(5) <= \<const0>\;
  axi_w_wr_data_count(4) <= \<const0>\;
  axi_w_wr_data_count(3) <= \<const0>\;
  axi_w_wr_data_count(2) <= \<const0>\;
  axi_w_wr_data_count(1) <= \<const0>\;
  axi_w_wr_data_count(0) <= \<const0>\;
  axis_data_count(10) <= \<const0>\;
  axis_data_count(9) <= \<const0>\;
  axis_data_count(8) <= \<const0>\;
  axis_data_count(7) <= \<const0>\;
  axis_data_count(6) <= \<const0>\;
  axis_data_count(5) <= \<const0>\;
  axis_data_count(4) <= \<const0>\;
  axis_data_count(3) <= \<const0>\;
  axis_data_count(2) <= \<const0>\;
  axis_data_count(1) <= \<const0>\;
  axis_data_count(0) <= \<const0>\;
  axis_dbiterr <= \<const0>\;
  axis_overflow <= \<const0>\;
  axis_prog_empty <= \<const1>\;
  axis_prog_full <= \<const0>\;
  axis_rd_data_count(10) <= \<const0>\;
  axis_rd_data_count(9) <= \<const0>\;
  axis_rd_data_count(8) <= \<const0>\;
  axis_rd_data_count(7) <= \<const0>\;
  axis_rd_data_count(6) <= \<const0>\;
  axis_rd_data_count(5) <= \<const0>\;
  axis_rd_data_count(4) <= \<const0>\;
  axis_rd_data_count(3) <= \<const0>\;
  axis_rd_data_count(2) <= \<const0>\;
  axis_rd_data_count(1) <= \<const0>\;
  axis_rd_data_count(0) <= \<const0>\;
  axis_sbiterr <= \<const0>\;
  axis_underflow <= \<const0>\;
  axis_wr_data_count(10) <= \<const0>\;
  axis_wr_data_count(9) <= \<const0>\;
  axis_wr_data_count(8) <= \<const0>\;
  axis_wr_data_count(7) <= \<const0>\;
  axis_wr_data_count(6) <= \<const0>\;
  axis_wr_data_count(5) <= \<const0>\;
  axis_wr_data_count(4) <= \<const0>\;
  axis_wr_data_count(3) <= \<const0>\;
  axis_wr_data_count(2) <= \<const0>\;
  axis_wr_data_count(1) <= \<const0>\;
  axis_wr_data_count(0) <= \<const0>\;
  data_count(8) <= \<const0>\;
  data_count(7) <= \<const0>\;
  data_count(6) <= \<const0>\;
  data_count(5) <= \<const0>\;
  data_count(4) <= \<const0>\;
  data_count(3) <= \<const0>\;
  data_count(2) <= \<const0>\;
  data_count(1) <= \<const0>\;
  data_count(0) <= \<const0>\;
  dbiterr <= \<const0>\;
  m_axi_araddr(31) <= \<const0>\;
  m_axi_araddr(30) <= \<const0>\;
  m_axi_araddr(29) <= \<const0>\;
  m_axi_araddr(28) <= \<const0>\;
  m_axi_araddr(27) <= \<const0>\;
  m_axi_araddr(26) <= \<const0>\;
  m_axi_araddr(25) <= \<const0>\;
  m_axi_araddr(24) <= \<const0>\;
  m_axi_araddr(23) <= \<const0>\;
  m_axi_araddr(22) <= \<const0>\;
  m_axi_araddr(21) <= \<const0>\;
  m_axi_araddr(20) <= \<const0>\;
  m_axi_araddr(19) <= \<const0>\;
  m_axi_araddr(18) <= \<const0>\;
  m_axi_araddr(17) <= \<const0>\;
  m_axi_araddr(16) <= \<const0>\;
  m_axi_araddr(15) <= \<const0>\;
  m_axi_araddr(14) <= \<const0>\;
  m_axi_araddr(13) <= \<const0>\;
  m_axi_araddr(12) <= \<const0>\;
  m_axi_araddr(11) <= \<const0>\;
  m_axi_araddr(10) <= \<const0>\;
  m_axi_araddr(9) <= \<const0>\;
  m_axi_araddr(8) <= \<const0>\;
  m_axi_araddr(7) <= \<const0>\;
  m_axi_araddr(6) <= \<const0>\;
  m_axi_araddr(5) <= \<const0>\;
  m_axi_araddr(4) <= \<const0>\;
  m_axi_araddr(3) <= \<const0>\;
  m_axi_araddr(2) <= \<const0>\;
  m_axi_araddr(1) <= \<const0>\;
  m_axi_araddr(0) <= \<const0>\;
  m_axi_arburst(1) <= \<const0>\;
  m_axi_arburst(0) <= \<const0>\;
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(0) <= \<const0>\;
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3) <= \<const0>\;
  m_axi_arlen(2) <= \<const0>\;
  m_axi_arlen(1) <= \<const0>\;
  m_axi_arlen(0) <= \<const0>\;
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arprot(2) <= \<const0>\;
  m_axi_arprot(1) <= \<const0>\;
  m_axi_arprot(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_arregion(3) <= \<const0>\;
  m_axi_arregion(2) <= \<const0>\;
  m_axi_arregion(1) <= \<const0>\;
  m_axi_arregion(0) <= \<const0>\;
  m_axi_arsize(2) <= \<const0>\;
  m_axi_arsize(1) <= \<const0>\;
  m_axi_arsize(0) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_arvalid <= \<const0>\;
  m_axi_awaddr(31) <= \<const0>\;
  m_axi_awaddr(30) <= \<const0>\;
  m_axi_awaddr(29) <= \<const0>\;
  m_axi_awaddr(28) <= \<const0>\;
  m_axi_awaddr(27) <= \<const0>\;
  m_axi_awaddr(26) <= \<const0>\;
  m_axi_awaddr(25) <= \<const0>\;
  m_axi_awaddr(24) <= \<const0>\;
  m_axi_awaddr(23) <= \<const0>\;
  m_axi_awaddr(22) <= \<const0>\;
  m_axi_awaddr(21) <= \<const0>\;
  m_axi_awaddr(20) <= \<const0>\;
  m_axi_awaddr(19) <= \<const0>\;
  m_axi_awaddr(18) <= \<const0>\;
  m_axi_awaddr(17) <= \<const0>\;
  m_axi_awaddr(16) <= \<const0>\;
  m_axi_awaddr(15) <= \<const0>\;
  m_axi_awaddr(14) <= \<const0>\;
  m_axi_awaddr(13) <= \<const0>\;
  m_axi_awaddr(12) <= \<const0>\;
  m_axi_awaddr(11) <= \<const0>\;
  m_axi_awaddr(10) <= \<const0>\;
  m_axi_awaddr(9) <= \<const0>\;
  m_axi_awaddr(8) <= \<const0>\;
  m_axi_awaddr(7) <= \<const0>\;
  m_axi_awaddr(6) <= \<const0>\;
  m_axi_awaddr(5) <= \<const0>\;
  m_axi_awaddr(4) <= \<const0>\;
  m_axi_awaddr(3) <= \<const0>\;
  m_axi_awaddr(2) <= \<const0>\;
  m_axi_awaddr(1) <= \<const0>\;
  m_axi_awaddr(0) <= \<const0>\;
  m_axi_awburst(1) <= \<const0>\;
  m_axi_awburst(0) <= \<const0>\;
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(0) <= \<const0>\;
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awprot(2) <= \<const0>\;
  m_axi_awprot(1) <= \<const0>\;
  m_axi_awprot(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awregion(3) <= \<const0>\;
  m_axi_awregion(2) <= \<const0>\;
  m_axi_awregion(1) <= \<const0>\;
  m_axi_awregion(0) <= \<const0>\;
  m_axi_awsize(2) <= \<const0>\;
  m_axi_awsize(1) <= \<const0>\;
  m_axi_awsize(0) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_awvalid <= \<const0>\;
  m_axi_bready <= \<const0>\;
  m_axi_rready <= \<const0>\;
  m_axi_wdata(63) <= \<const0>\;
  m_axi_wdata(62) <= \<const0>\;
  m_axi_wdata(61) <= \<const0>\;
  m_axi_wdata(60) <= \<const0>\;
  m_axi_wdata(59) <= \<const0>\;
  m_axi_wdata(58) <= \<const0>\;
  m_axi_wdata(57) <= \<const0>\;
  m_axi_wdata(56) <= \<const0>\;
  m_axi_wdata(55) <= \<const0>\;
  m_axi_wdata(54) <= \<const0>\;
  m_axi_wdata(53) <= \<const0>\;
  m_axi_wdata(52) <= \<const0>\;
  m_axi_wdata(51) <= \<const0>\;
  m_axi_wdata(50) <= \<const0>\;
  m_axi_wdata(49) <= \<const0>\;
  m_axi_wdata(48) <= \<const0>\;
  m_axi_wdata(47) <= \<const0>\;
  m_axi_wdata(46) <= \<const0>\;
  m_axi_wdata(45) <= \<const0>\;
  m_axi_wdata(44) <= \<const0>\;
  m_axi_wdata(43) <= \<const0>\;
  m_axi_wdata(42) <= \<const0>\;
  m_axi_wdata(41) <= \<const0>\;
  m_axi_wdata(40) <= \<const0>\;
  m_axi_wdata(39) <= \<const0>\;
  m_axi_wdata(38) <= \<const0>\;
  m_axi_wdata(37) <= \<const0>\;
  m_axi_wdata(36) <= \<const0>\;
  m_axi_wdata(35) <= \<const0>\;
  m_axi_wdata(34) <= \<const0>\;
  m_axi_wdata(33) <= \<const0>\;
  m_axi_wdata(32) <= \<const0>\;
  m_axi_wdata(31) <= \<const0>\;
  m_axi_wdata(30) <= \<const0>\;
  m_axi_wdata(29) <= \<const0>\;
  m_axi_wdata(28) <= \<const0>\;
  m_axi_wdata(27) <= \<const0>\;
  m_axi_wdata(26) <= \<const0>\;
  m_axi_wdata(25) <= \<const0>\;
  m_axi_wdata(24) <= \<const0>\;
  m_axi_wdata(23) <= \<const0>\;
  m_axi_wdata(22) <= \<const0>\;
  m_axi_wdata(21) <= \<const0>\;
  m_axi_wdata(20) <= \<const0>\;
  m_axi_wdata(19) <= \<const0>\;
  m_axi_wdata(18) <= \<const0>\;
  m_axi_wdata(17) <= \<const0>\;
  m_axi_wdata(16) <= \<const0>\;
  m_axi_wdata(15) <= \<const0>\;
  m_axi_wdata(14) <= \<const0>\;
  m_axi_wdata(13) <= \<const0>\;
  m_axi_wdata(12) <= \<const0>\;
  m_axi_wdata(11) <= \<const0>\;
  m_axi_wdata(10) <= \<const0>\;
  m_axi_wdata(9) <= \<const0>\;
  m_axi_wdata(8) <= \<const0>\;
  m_axi_wdata(7) <= \<const0>\;
  m_axi_wdata(6) <= \<const0>\;
  m_axi_wdata(5) <= \<const0>\;
  m_axi_wdata(4) <= \<const0>\;
  m_axi_wdata(3) <= \<const0>\;
  m_axi_wdata(2) <= \<const0>\;
  m_axi_wdata(1) <= \<const0>\;
  m_axi_wdata(0) <= \<const0>\;
  m_axi_wid(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wstrb(7) <= \<const0>\;
  m_axi_wstrb(6) <= \<const0>\;
  m_axi_wstrb(5) <= \<const0>\;
  m_axi_wstrb(4) <= \<const0>\;
  m_axi_wstrb(3) <= \<const0>\;
  m_axi_wstrb(2) <= \<const0>\;
  m_axi_wstrb(1) <= \<const0>\;
  m_axi_wstrb(0) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  m_axi_wvalid <= \<const0>\;
  m_axis_tdata(7) <= \<const0>\;
  m_axis_tdata(6) <= \<const0>\;
  m_axis_tdata(5) <= \<const0>\;
  m_axis_tdata(4) <= \<const0>\;
  m_axis_tdata(3) <= \<const0>\;
  m_axis_tdata(2) <= \<const0>\;
  m_axis_tdata(1) <= \<const0>\;
  m_axis_tdata(0) <= \<const0>\;
  m_axis_tdest(0) <= \<const0>\;
  m_axis_tid(0) <= \<const0>\;
  m_axis_tkeep(0) <= \<const0>\;
  m_axis_tlast <= \<const0>\;
  m_axis_tstrb(0) <= \<const0>\;
  m_axis_tuser(3) <= \<const0>\;
  m_axis_tuser(2) <= \<const0>\;
  m_axis_tuser(1) <= \<const0>\;
  m_axis_tuser(0) <= \<const0>\;
  m_axis_tvalid <= \<const0>\;
  overflow <= \<const0>\;
  prog_empty <= \<const0>\;
  rd_data_count(8) <= \<const0>\;
  rd_data_count(7) <= \<const0>\;
  rd_data_count(6) <= \<const0>\;
  rd_data_count(5) <= \<const0>\;
  rd_data_count(4) <= \<const0>\;
  rd_data_count(3) <= \<const0>\;
  rd_data_count(2) <= \<const0>\;
  rd_data_count(1) <= \<const0>\;
  rd_data_count(0) <= \<const0>\;
  s_axi_arready <= \<const0>\;
  s_axi_awready <= \<const0>\;
  s_axi_bid(0) <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_bvalid <= \<const0>\;
  s_axi_rdata(63) <= \<const0>\;
  s_axi_rdata(62) <= \<const0>\;
  s_axi_rdata(61) <= \<const0>\;
  s_axi_rdata(60) <= \<const0>\;
  s_axi_rdata(59) <= \<const0>\;
  s_axi_rdata(58) <= \<const0>\;
  s_axi_rdata(57) <= \<const0>\;
  s_axi_rdata(56) <= \<const0>\;
  s_axi_rdata(55) <= \<const0>\;
  s_axi_rdata(54) <= \<const0>\;
  s_axi_rdata(53) <= \<const0>\;
  s_axi_rdata(52) <= \<const0>\;
  s_axi_rdata(51) <= \<const0>\;
  s_axi_rdata(50) <= \<const0>\;
  s_axi_rdata(49) <= \<const0>\;
  s_axi_rdata(48) <= \<const0>\;
  s_axi_rdata(47) <= \<const0>\;
  s_axi_rdata(46) <= \<const0>\;
  s_axi_rdata(45) <= \<const0>\;
  s_axi_rdata(44) <= \<const0>\;
  s_axi_rdata(43) <= \<const0>\;
  s_axi_rdata(42) <= \<const0>\;
  s_axi_rdata(41) <= \<const0>\;
  s_axi_rdata(40) <= \<const0>\;
  s_axi_rdata(39) <= \<const0>\;
  s_axi_rdata(38) <= \<const0>\;
  s_axi_rdata(37) <= \<const0>\;
  s_axi_rdata(36) <= \<const0>\;
  s_axi_rdata(35) <= \<const0>\;
  s_axi_rdata(34) <= \<const0>\;
  s_axi_rdata(33) <= \<const0>\;
  s_axi_rdata(32) <= \<const0>\;
  s_axi_rdata(31) <= \<const0>\;
  s_axi_rdata(30) <= \<const0>\;
  s_axi_rdata(29) <= \<const0>\;
  s_axi_rdata(28) <= \<const0>\;
  s_axi_rdata(27) <= \<const0>\;
  s_axi_rdata(26) <= \<const0>\;
  s_axi_rdata(25) <= \<const0>\;
  s_axi_rdata(24) <= \<const0>\;
  s_axi_rdata(23) <= \<const0>\;
  s_axi_rdata(22) <= \<const0>\;
  s_axi_rdata(21) <= \<const0>\;
  s_axi_rdata(20) <= \<const0>\;
  s_axi_rdata(19) <= \<const0>\;
  s_axi_rdata(18) <= \<const0>\;
  s_axi_rdata(17) <= \<const0>\;
  s_axi_rdata(16) <= \<const0>\;
  s_axi_rdata(15) <= \<const0>\;
  s_axi_rdata(14) <= \<const0>\;
  s_axi_rdata(13) <= \<const0>\;
  s_axi_rdata(12) <= \<const0>\;
  s_axi_rdata(11) <= \<const0>\;
  s_axi_rdata(10) <= \<const0>\;
  s_axi_rdata(9) <= \<const0>\;
  s_axi_rdata(8) <= \<const0>\;
  s_axi_rdata(7) <= \<const0>\;
  s_axi_rdata(6) <= \<const0>\;
  s_axi_rdata(5) <= \<const0>\;
  s_axi_rdata(4) <= \<const0>\;
  s_axi_rdata(3) <= \<const0>\;
  s_axi_rdata(2) <= \<const0>\;
  s_axi_rdata(1) <= \<const0>\;
  s_axi_rdata(0) <= \<const0>\;
  s_axi_rid(0) <= \<const0>\;
  s_axi_rlast <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
  s_axi_rvalid <= \<const0>\;
  s_axi_wready <= \<const0>\;
  s_axis_tready <= \<const0>\;
  sbiterr <= \<const0>\;
  underflow <= \<const0>\;
  wr_ack <= \<const0>\;
  wr_data_count(8) <= \<const0>\;
  wr_data_count(7) <= \<const0>\;
  wr_data_count(6) <= \<const0>\;
  wr_data_count(5) <= \<const0>\;
  wr_data_count(4) <= \<const0>\;
  wr_data_count(3) <= \<const0>\;
  wr_data_count(2) <= \<const0>\;
  wr_data_count(1) <= \<const0>\;
  wr_data_count(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
inst_fifo_gen: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_synth
     port map (
      clk => clk,
      din(128 downto 0) => din(128 downto 0),
      dout(128 downto 0) => dout(128 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      valid => valid,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 is
  port (
    almost_empty : out STD_LOGIC;
    almost_full : out STD_LOGIC;
    axi_ar_dbiterr : out STD_LOGIC;
    axi_ar_injectdbiterr : in STD_LOGIC;
    axi_ar_injectsbiterr : in STD_LOGIC;
    axi_ar_overflow : out STD_LOGIC;
    axi_ar_prog_empty : out STD_LOGIC;
    axi_ar_prog_full : out STD_LOGIC;
    axi_ar_sbiterr : out STD_LOGIC;
    axi_ar_underflow : out STD_LOGIC;
    axi_aw_dbiterr : out STD_LOGIC;
    axi_aw_injectdbiterr : in STD_LOGIC;
    axi_aw_injectsbiterr : in STD_LOGIC;
    axi_aw_overflow : out STD_LOGIC;
    axi_aw_prog_empty : out STD_LOGIC;
    axi_aw_prog_full : out STD_LOGIC;
    axi_aw_sbiterr : out STD_LOGIC;
    axi_aw_underflow : out STD_LOGIC;
    axi_b_dbiterr : out STD_LOGIC;
    axi_b_injectdbiterr : in STD_LOGIC;
    axi_b_injectsbiterr : in STD_LOGIC;
    axi_b_overflow : out STD_LOGIC;
    axi_b_prog_empty : out STD_LOGIC;
    axi_b_prog_full : out STD_LOGIC;
    axi_b_sbiterr : out STD_LOGIC;
    axi_b_underflow : out STD_LOGIC;
    axi_r_dbiterr : out STD_LOGIC;
    axi_r_injectdbiterr : in STD_LOGIC;
    axi_r_injectsbiterr : in STD_LOGIC;
    axi_r_overflow : out STD_LOGIC;
    axi_r_prog_empty : out STD_LOGIC;
    axi_r_prog_full : out STD_LOGIC;
    axi_r_sbiterr : out STD_LOGIC;
    axi_r_underflow : out STD_LOGIC;
    axi_w_dbiterr : out STD_LOGIC;
    axi_w_injectdbiterr : in STD_LOGIC;
    axi_w_injectsbiterr : in STD_LOGIC;
    axi_w_overflow : out STD_LOGIC;
    axi_w_prog_empty : out STD_LOGIC;
    axi_w_prog_full : out STD_LOGIC;
    axi_w_sbiterr : out STD_LOGIC;
    axi_w_underflow : out STD_LOGIC;
    axis_dbiterr : out STD_LOGIC;
    axis_injectdbiterr : in STD_LOGIC;
    axis_injectsbiterr : in STD_LOGIC;
    axis_overflow : out STD_LOGIC;
    axis_prog_empty : out STD_LOGIC;
    axis_prog_full : out STD_LOGIC;
    axis_sbiterr : out STD_LOGIC;
    axis_underflow : out STD_LOGIC;
    backup : in STD_LOGIC;
    backup_marker : in STD_LOGIC;
    clk : in STD_LOGIC;
    dbiterr : out STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    injectdbiterr : in STD_LOGIC;
    injectsbiterr : in STD_LOGIC;
    int_clk : in STD_LOGIC;
    m_aclk : in STD_LOGIC;
    m_aclk_en : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_awvalid : out STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_bvalid : in STD_LOGIC;
    m_axi_rlast : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC;
    m_axi_rvalid : in STD_LOGIC;
    m_axi_wlast : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_wvalid : out STD_LOGIC;
    m_axis_tlast : out STD_LOGIC;
    m_axis_tready : in STD_LOGIC;
    m_axis_tvalid : out STD_LOGIC;
    overflow : out STD_LOGIC;
    prog_empty : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_clk : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    rst : in STD_LOGIC;
    s_aclk : in STD_LOGIC;
    s_aclk_en : in STD_LOGIC;
    s_aresetn : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    s_axi_rlast : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_wlast : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axis_tlast : in STD_LOGIC;
    s_axis_tready : out STD_LOGIC;
    s_axis_tvalid : in STD_LOGIC;
    sbiterr : out STD_LOGIC;
    sleep : in STD_LOGIC;
    srst : in STD_LOGIC;
    underflow : out STD_LOGIC;
    valid : out STD_LOGIC;
    wr_ack : out STD_LOGIC;
    wr_clk : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    axi_ar_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_r_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    data_count : out STD_LOGIC_VECTOR ( 8 downto 0 );
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_rid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_ruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_wid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_wuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tdata : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axis_tdest : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tkeep : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tstrb : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tuser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    prog_empty_thresh : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_empty_thresh_assert : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_empty_thresh_negate : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh_assert : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh_negate : in STD_LOGIC_VECTOR ( 8 downto 0 );
    rd_data_count : out STD_LOGIC_VECTOR ( 8 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_rid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_wid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_wuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tdata : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axis_tdest : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tkeep : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tstrb : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tuser : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wr_data_count : out STD_LOGIC_VECTOR ( 8 downto 0 )
  );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 6;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 400;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 399;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 512;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 512;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 : entity is "fifo_generator_v13_2_2";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
begin
  almost_empty <= \<const0>\;
  almost_full <= \<const0>\;
  axi_ar_data_count(4) <= \<const0>\;
  axi_ar_data_count(3) <= \<const0>\;
  axi_ar_data_count(2) <= \<const0>\;
  axi_ar_data_count(1) <= \<const0>\;
  axi_ar_data_count(0) <= \<const0>\;
  axi_ar_dbiterr <= \<const0>\;
  axi_ar_overflow <= \<const0>\;
  axi_ar_prog_empty <= \<const1>\;
  axi_ar_prog_full <= \<const0>\;
  axi_ar_rd_data_count(4) <= \<const0>\;
  axi_ar_rd_data_count(3) <= \<const0>\;
  axi_ar_rd_data_count(2) <= \<const0>\;
  axi_ar_rd_data_count(1) <= \<const0>\;
  axi_ar_rd_data_count(0) <= \<const0>\;
  axi_ar_sbiterr <= \<const0>\;
  axi_ar_underflow <= \<const0>\;
  axi_ar_wr_data_count(4) <= \<const0>\;
  axi_ar_wr_data_count(3) <= \<const0>\;
  axi_ar_wr_data_count(2) <= \<const0>\;
  axi_ar_wr_data_count(1) <= \<const0>\;
  axi_ar_wr_data_count(0) <= \<const0>\;
  axi_aw_data_count(4) <= \<const0>\;
  axi_aw_data_count(3) <= \<const0>\;
  axi_aw_data_count(2) <= \<const0>\;
  axi_aw_data_count(1) <= \<const0>\;
  axi_aw_data_count(0) <= \<const0>\;
  axi_aw_dbiterr <= \<const0>\;
  axi_aw_overflow <= \<const0>\;
  axi_aw_prog_empty <= \<const1>\;
  axi_aw_prog_full <= \<const0>\;
  axi_aw_rd_data_count(4) <= \<const0>\;
  axi_aw_rd_data_count(3) <= \<const0>\;
  axi_aw_rd_data_count(2) <= \<const0>\;
  axi_aw_rd_data_count(1) <= \<const0>\;
  axi_aw_rd_data_count(0) <= \<const0>\;
  axi_aw_sbiterr <= \<const0>\;
  axi_aw_underflow <= \<const0>\;
  axi_aw_wr_data_count(4) <= \<const0>\;
  axi_aw_wr_data_count(3) <= \<const0>\;
  axi_aw_wr_data_count(2) <= \<const0>\;
  axi_aw_wr_data_count(1) <= \<const0>\;
  axi_aw_wr_data_count(0) <= \<const0>\;
  axi_b_data_count(4) <= \<const0>\;
  axi_b_data_count(3) <= \<const0>\;
  axi_b_data_count(2) <= \<const0>\;
  axi_b_data_count(1) <= \<const0>\;
  axi_b_data_count(0) <= \<const0>\;
  axi_b_dbiterr <= \<const0>\;
  axi_b_overflow <= \<const0>\;
  axi_b_prog_empty <= \<const1>\;
  axi_b_prog_full <= \<const0>\;
  axi_b_rd_data_count(4) <= \<const0>\;
  axi_b_rd_data_count(3) <= \<const0>\;
  axi_b_rd_data_count(2) <= \<const0>\;
  axi_b_rd_data_count(1) <= \<const0>\;
  axi_b_rd_data_count(0) <= \<const0>\;
  axi_b_sbiterr <= \<const0>\;
  axi_b_underflow <= \<const0>\;
  axi_b_wr_data_count(4) <= \<const0>\;
  axi_b_wr_data_count(3) <= \<const0>\;
  axi_b_wr_data_count(2) <= \<const0>\;
  axi_b_wr_data_count(1) <= \<const0>\;
  axi_b_wr_data_count(0) <= \<const0>\;
  axi_r_data_count(10) <= \<const0>\;
  axi_r_data_count(9) <= \<const0>\;
  axi_r_data_count(8) <= \<const0>\;
  axi_r_data_count(7) <= \<const0>\;
  axi_r_data_count(6) <= \<const0>\;
  axi_r_data_count(5) <= \<const0>\;
  axi_r_data_count(4) <= \<const0>\;
  axi_r_data_count(3) <= \<const0>\;
  axi_r_data_count(2) <= \<const0>\;
  axi_r_data_count(1) <= \<const0>\;
  axi_r_data_count(0) <= \<const0>\;
  axi_r_dbiterr <= \<const0>\;
  axi_r_overflow <= \<const0>\;
  axi_r_prog_empty <= \<const1>\;
  axi_r_prog_full <= \<const0>\;
  axi_r_rd_data_count(10) <= \<const0>\;
  axi_r_rd_data_count(9) <= \<const0>\;
  axi_r_rd_data_count(8) <= \<const0>\;
  axi_r_rd_data_count(7) <= \<const0>\;
  axi_r_rd_data_count(6) <= \<const0>\;
  axi_r_rd_data_count(5) <= \<const0>\;
  axi_r_rd_data_count(4) <= \<const0>\;
  axi_r_rd_data_count(3) <= \<const0>\;
  axi_r_rd_data_count(2) <= \<const0>\;
  axi_r_rd_data_count(1) <= \<const0>\;
  axi_r_rd_data_count(0) <= \<const0>\;
  axi_r_sbiterr <= \<const0>\;
  axi_r_underflow <= \<const0>\;
  axi_r_wr_data_count(10) <= \<const0>\;
  axi_r_wr_data_count(9) <= \<const0>\;
  axi_r_wr_data_count(8) <= \<const0>\;
  axi_r_wr_data_count(7) <= \<const0>\;
  axi_r_wr_data_count(6) <= \<const0>\;
  axi_r_wr_data_count(5) <= \<const0>\;
  axi_r_wr_data_count(4) <= \<const0>\;
  axi_r_wr_data_count(3) <= \<const0>\;
  axi_r_wr_data_count(2) <= \<const0>\;
  axi_r_wr_data_count(1) <= \<const0>\;
  axi_r_wr_data_count(0) <= \<const0>\;
  axi_w_data_count(10) <= \<const0>\;
  axi_w_data_count(9) <= \<const0>\;
  axi_w_data_count(8) <= \<const0>\;
  axi_w_data_count(7) <= \<const0>\;
  axi_w_data_count(6) <= \<const0>\;
  axi_w_data_count(5) <= \<const0>\;
  axi_w_data_count(4) <= \<const0>\;
  axi_w_data_count(3) <= \<const0>\;
  axi_w_data_count(2) <= \<const0>\;
  axi_w_data_count(1) <= \<const0>\;
  axi_w_data_count(0) <= \<const0>\;
  axi_w_dbiterr <= \<const0>\;
  axi_w_overflow <= \<const0>\;
  axi_w_prog_empty <= \<const1>\;
  axi_w_prog_full <= \<const0>\;
  axi_w_rd_data_count(10) <= \<const0>\;
  axi_w_rd_data_count(9) <= \<const0>\;
  axi_w_rd_data_count(8) <= \<const0>\;
  axi_w_rd_data_count(7) <= \<const0>\;
  axi_w_rd_data_count(6) <= \<const0>\;
  axi_w_rd_data_count(5) <= \<const0>\;
  axi_w_rd_data_count(4) <= \<const0>\;
  axi_w_rd_data_count(3) <= \<const0>\;
  axi_w_rd_data_count(2) <= \<const0>\;
  axi_w_rd_data_count(1) <= \<const0>\;
  axi_w_rd_data_count(0) <= \<const0>\;
  axi_w_sbiterr <= \<const0>\;
  axi_w_underflow <= \<const0>\;
  axi_w_wr_data_count(10) <= \<const0>\;
  axi_w_wr_data_count(9) <= \<const0>\;
  axi_w_wr_data_count(8) <= \<const0>\;
  axi_w_wr_data_count(7) <= \<const0>\;
  axi_w_wr_data_count(6) <= \<const0>\;
  axi_w_wr_data_count(5) <= \<const0>\;
  axi_w_wr_data_count(4) <= \<const0>\;
  axi_w_wr_data_count(3) <= \<const0>\;
  axi_w_wr_data_count(2) <= \<const0>\;
  axi_w_wr_data_count(1) <= \<const0>\;
  axi_w_wr_data_count(0) <= \<const0>\;
  axis_data_count(10) <= \<const0>\;
  axis_data_count(9) <= \<const0>\;
  axis_data_count(8) <= \<const0>\;
  axis_data_count(7) <= \<const0>\;
  axis_data_count(6) <= \<const0>\;
  axis_data_count(5) <= \<const0>\;
  axis_data_count(4) <= \<const0>\;
  axis_data_count(3) <= \<const0>\;
  axis_data_count(2) <= \<const0>\;
  axis_data_count(1) <= \<const0>\;
  axis_data_count(0) <= \<const0>\;
  axis_dbiterr <= \<const0>\;
  axis_overflow <= \<const0>\;
  axis_prog_empty <= \<const1>\;
  axis_prog_full <= \<const0>\;
  axis_rd_data_count(10) <= \<const0>\;
  axis_rd_data_count(9) <= \<const0>\;
  axis_rd_data_count(8) <= \<const0>\;
  axis_rd_data_count(7) <= \<const0>\;
  axis_rd_data_count(6) <= \<const0>\;
  axis_rd_data_count(5) <= \<const0>\;
  axis_rd_data_count(4) <= \<const0>\;
  axis_rd_data_count(3) <= \<const0>\;
  axis_rd_data_count(2) <= \<const0>\;
  axis_rd_data_count(1) <= \<const0>\;
  axis_rd_data_count(0) <= \<const0>\;
  axis_sbiterr <= \<const0>\;
  axis_underflow <= \<const0>\;
  axis_wr_data_count(10) <= \<const0>\;
  axis_wr_data_count(9) <= \<const0>\;
  axis_wr_data_count(8) <= \<const0>\;
  axis_wr_data_count(7) <= \<const0>\;
  axis_wr_data_count(6) <= \<const0>\;
  axis_wr_data_count(5) <= \<const0>\;
  axis_wr_data_count(4) <= \<const0>\;
  axis_wr_data_count(3) <= \<const0>\;
  axis_wr_data_count(2) <= \<const0>\;
  axis_wr_data_count(1) <= \<const0>\;
  axis_wr_data_count(0) <= \<const0>\;
  data_count(8) <= \<const0>\;
  data_count(7) <= \<const0>\;
  data_count(6) <= \<const0>\;
  data_count(5) <= \<const0>\;
  data_count(4) <= \<const0>\;
  data_count(3) <= \<const0>\;
  data_count(2) <= \<const0>\;
  data_count(1) <= \<const0>\;
  data_count(0) <= \<const0>\;
  dbiterr <= \<const0>\;
  m_axi_araddr(31) <= \<const0>\;
  m_axi_araddr(30) <= \<const0>\;
  m_axi_araddr(29) <= \<const0>\;
  m_axi_araddr(28) <= \<const0>\;
  m_axi_araddr(27) <= \<const0>\;
  m_axi_araddr(26) <= \<const0>\;
  m_axi_araddr(25) <= \<const0>\;
  m_axi_araddr(24) <= \<const0>\;
  m_axi_araddr(23) <= \<const0>\;
  m_axi_araddr(22) <= \<const0>\;
  m_axi_araddr(21) <= \<const0>\;
  m_axi_araddr(20) <= \<const0>\;
  m_axi_araddr(19) <= \<const0>\;
  m_axi_araddr(18) <= \<const0>\;
  m_axi_araddr(17) <= \<const0>\;
  m_axi_araddr(16) <= \<const0>\;
  m_axi_araddr(15) <= \<const0>\;
  m_axi_araddr(14) <= \<const0>\;
  m_axi_araddr(13) <= \<const0>\;
  m_axi_araddr(12) <= \<const0>\;
  m_axi_araddr(11) <= \<const0>\;
  m_axi_araddr(10) <= \<const0>\;
  m_axi_araddr(9) <= \<const0>\;
  m_axi_araddr(8) <= \<const0>\;
  m_axi_araddr(7) <= \<const0>\;
  m_axi_araddr(6) <= \<const0>\;
  m_axi_araddr(5) <= \<const0>\;
  m_axi_araddr(4) <= \<const0>\;
  m_axi_araddr(3) <= \<const0>\;
  m_axi_araddr(2) <= \<const0>\;
  m_axi_araddr(1) <= \<const0>\;
  m_axi_araddr(0) <= \<const0>\;
  m_axi_arburst(1) <= \<const0>\;
  m_axi_arburst(0) <= \<const0>\;
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(0) <= \<const0>\;
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3) <= \<const0>\;
  m_axi_arlen(2) <= \<const0>\;
  m_axi_arlen(1) <= \<const0>\;
  m_axi_arlen(0) <= \<const0>\;
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arprot(2) <= \<const0>\;
  m_axi_arprot(1) <= \<const0>\;
  m_axi_arprot(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_arregion(3) <= \<const0>\;
  m_axi_arregion(2) <= \<const0>\;
  m_axi_arregion(1) <= \<const0>\;
  m_axi_arregion(0) <= \<const0>\;
  m_axi_arsize(2) <= \<const0>\;
  m_axi_arsize(1) <= \<const0>\;
  m_axi_arsize(0) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_arvalid <= \<const0>\;
  m_axi_awaddr(31) <= \<const0>\;
  m_axi_awaddr(30) <= \<const0>\;
  m_axi_awaddr(29) <= \<const0>\;
  m_axi_awaddr(28) <= \<const0>\;
  m_axi_awaddr(27) <= \<const0>\;
  m_axi_awaddr(26) <= \<const0>\;
  m_axi_awaddr(25) <= \<const0>\;
  m_axi_awaddr(24) <= \<const0>\;
  m_axi_awaddr(23) <= \<const0>\;
  m_axi_awaddr(22) <= \<const0>\;
  m_axi_awaddr(21) <= \<const0>\;
  m_axi_awaddr(20) <= \<const0>\;
  m_axi_awaddr(19) <= \<const0>\;
  m_axi_awaddr(18) <= \<const0>\;
  m_axi_awaddr(17) <= \<const0>\;
  m_axi_awaddr(16) <= \<const0>\;
  m_axi_awaddr(15) <= \<const0>\;
  m_axi_awaddr(14) <= \<const0>\;
  m_axi_awaddr(13) <= \<const0>\;
  m_axi_awaddr(12) <= \<const0>\;
  m_axi_awaddr(11) <= \<const0>\;
  m_axi_awaddr(10) <= \<const0>\;
  m_axi_awaddr(9) <= \<const0>\;
  m_axi_awaddr(8) <= \<const0>\;
  m_axi_awaddr(7) <= \<const0>\;
  m_axi_awaddr(6) <= \<const0>\;
  m_axi_awaddr(5) <= \<const0>\;
  m_axi_awaddr(4) <= \<const0>\;
  m_axi_awaddr(3) <= \<const0>\;
  m_axi_awaddr(2) <= \<const0>\;
  m_axi_awaddr(1) <= \<const0>\;
  m_axi_awaddr(0) <= \<const0>\;
  m_axi_awburst(1) <= \<const0>\;
  m_axi_awburst(0) <= \<const0>\;
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(0) <= \<const0>\;
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awprot(2) <= \<const0>\;
  m_axi_awprot(1) <= \<const0>\;
  m_axi_awprot(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awregion(3) <= \<const0>\;
  m_axi_awregion(2) <= \<const0>\;
  m_axi_awregion(1) <= \<const0>\;
  m_axi_awregion(0) <= \<const0>\;
  m_axi_awsize(2) <= \<const0>\;
  m_axi_awsize(1) <= \<const0>\;
  m_axi_awsize(0) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_awvalid <= \<const0>\;
  m_axi_bready <= \<const0>\;
  m_axi_rready <= \<const0>\;
  m_axi_wdata(63) <= \<const0>\;
  m_axi_wdata(62) <= \<const0>\;
  m_axi_wdata(61) <= \<const0>\;
  m_axi_wdata(60) <= \<const0>\;
  m_axi_wdata(59) <= \<const0>\;
  m_axi_wdata(58) <= \<const0>\;
  m_axi_wdata(57) <= \<const0>\;
  m_axi_wdata(56) <= \<const0>\;
  m_axi_wdata(55) <= \<const0>\;
  m_axi_wdata(54) <= \<const0>\;
  m_axi_wdata(53) <= \<const0>\;
  m_axi_wdata(52) <= \<const0>\;
  m_axi_wdata(51) <= \<const0>\;
  m_axi_wdata(50) <= \<const0>\;
  m_axi_wdata(49) <= \<const0>\;
  m_axi_wdata(48) <= \<const0>\;
  m_axi_wdata(47) <= \<const0>\;
  m_axi_wdata(46) <= \<const0>\;
  m_axi_wdata(45) <= \<const0>\;
  m_axi_wdata(44) <= \<const0>\;
  m_axi_wdata(43) <= \<const0>\;
  m_axi_wdata(42) <= \<const0>\;
  m_axi_wdata(41) <= \<const0>\;
  m_axi_wdata(40) <= \<const0>\;
  m_axi_wdata(39) <= \<const0>\;
  m_axi_wdata(38) <= \<const0>\;
  m_axi_wdata(37) <= \<const0>\;
  m_axi_wdata(36) <= \<const0>\;
  m_axi_wdata(35) <= \<const0>\;
  m_axi_wdata(34) <= \<const0>\;
  m_axi_wdata(33) <= \<const0>\;
  m_axi_wdata(32) <= \<const0>\;
  m_axi_wdata(31) <= \<const0>\;
  m_axi_wdata(30) <= \<const0>\;
  m_axi_wdata(29) <= \<const0>\;
  m_axi_wdata(28) <= \<const0>\;
  m_axi_wdata(27) <= \<const0>\;
  m_axi_wdata(26) <= \<const0>\;
  m_axi_wdata(25) <= \<const0>\;
  m_axi_wdata(24) <= \<const0>\;
  m_axi_wdata(23) <= \<const0>\;
  m_axi_wdata(22) <= \<const0>\;
  m_axi_wdata(21) <= \<const0>\;
  m_axi_wdata(20) <= \<const0>\;
  m_axi_wdata(19) <= \<const0>\;
  m_axi_wdata(18) <= \<const0>\;
  m_axi_wdata(17) <= \<const0>\;
  m_axi_wdata(16) <= \<const0>\;
  m_axi_wdata(15) <= \<const0>\;
  m_axi_wdata(14) <= \<const0>\;
  m_axi_wdata(13) <= \<const0>\;
  m_axi_wdata(12) <= \<const0>\;
  m_axi_wdata(11) <= \<const0>\;
  m_axi_wdata(10) <= \<const0>\;
  m_axi_wdata(9) <= \<const0>\;
  m_axi_wdata(8) <= \<const0>\;
  m_axi_wdata(7) <= \<const0>\;
  m_axi_wdata(6) <= \<const0>\;
  m_axi_wdata(5) <= \<const0>\;
  m_axi_wdata(4) <= \<const0>\;
  m_axi_wdata(3) <= \<const0>\;
  m_axi_wdata(2) <= \<const0>\;
  m_axi_wdata(1) <= \<const0>\;
  m_axi_wdata(0) <= \<const0>\;
  m_axi_wid(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wstrb(7) <= \<const0>\;
  m_axi_wstrb(6) <= \<const0>\;
  m_axi_wstrb(5) <= \<const0>\;
  m_axi_wstrb(4) <= \<const0>\;
  m_axi_wstrb(3) <= \<const0>\;
  m_axi_wstrb(2) <= \<const0>\;
  m_axi_wstrb(1) <= \<const0>\;
  m_axi_wstrb(0) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  m_axi_wvalid <= \<const0>\;
  m_axis_tdata(7) <= \<const0>\;
  m_axis_tdata(6) <= \<const0>\;
  m_axis_tdata(5) <= \<const0>\;
  m_axis_tdata(4) <= \<const0>\;
  m_axis_tdata(3) <= \<const0>\;
  m_axis_tdata(2) <= \<const0>\;
  m_axis_tdata(1) <= \<const0>\;
  m_axis_tdata(0) <= \<const0>\;
  m_axis_tdest(0) <= \<const0>\;
  m_axis_tid(0) <= \<const0>\;
  m_axis_tkeep(0) <= \<const0>\;
  m_axis_tlast <= \<const0>\;
  m_axis_tstrb(0) <= \<const0>\;
  m_axis_tuser(3) <= \<const0>\;
  m_axis_tuser(2) <= \<const0>\;
  m_axis_tuser(1) <= \<const0>\;
  m_axis_tuser(0) <= \<const0>\;
  m_axis_tvalid <= \<const0>\;
  overflow <= \<const0>\;
  prog_empty <= \<const0>\;
  rd_data_count(8) <= \<const0>\;
  rd_data_count(7) <= \<const0>\;
  rd_data_count(6) <= \<const0>\;
  rd_data_count(5) <= \<const0>\;
  rd_data_count(4) <= \<const0>\;
  rd_data_count(3) <= \<const0>\;
  rd_data_count(2) <= \<const0>\;
  rd_data_count(1) <= \<const0>\;
  rd_data_count(0) <= \<const0>\;
  s_axi_arready <= \<const0>\;
  s_axi_awready <= \<const0>\;
  s_axi_bid(0) <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_bvalid <= \<const0>\;
  s_axi_rdata(63) <= \<const0>\;
  s_axi_rdata(62) <= \<const0>\;
  s_axi_rdata(61) <= \<const0>\;
  s_axi_rdata(60) <= \<const0>\;
  s_axi_rdata(59) <= \<const0>\;
  s_axi_rdata(58) <= \<const0>\;
  s_axi_rdata(57) <= \<const0>\;
  s_axi_rdata(56) <= \<const0>\;
  s_axi_rdata(55) <= \<const0>\;
  s_axi_rdata(54) <= \<const0>\;
  s_axi_rdata(53) <= \<const0>\;
  s_axi_rdata(52) <= \<const0>\;
  s_axi_rdata(51) <= \<const0>\;
  s_axi_rdata(50) <= \<const0>\;
  s_axi_rdata(49) <= \<const0>\;
  s_axi_rdata(48) <= \<const0>\;
  s_axi_rdata(47) <= \<const0>\;
  s_axi_rdata(46) <= \<const0>\;
  s_axi_rdata(45) <= \<const0>\;
  s_axi_rdata(44) <= \<const0>\;
  s_axi_rdata(43) <= \<const0>\;
  s_axi_rdata(42) <= \<const0>\;
  s_axi_rdata(41) <= \<const0>\;
  s_axi_rdata(40) <= \<const0>\;
  s_axi_rdata(39) <= \<const0>\;
  s_axi_rdata(38) <= \<const0>\;
  s_axi_rdata(37) <= \<const0>\;
  s_axi_rdata(36) <= \<const0>\;
  s_axi_rdata(35) <= \<const0>\;
  s_axi_rdata(34) <= \<const0>\;
  s_axi_rdata(33) <= \<const0>\;
  s_axi_rdata(32) <= \<const0>\;
  s_axi_rdata(31) <= \<const0>\;
  s_axi_rdata(30) <= \<const0>\;
  s_axi_rdata(29) <= \<const0>\;
  s_axi_rdata(28) <= \<const0>\;
  s_axi_rdata(27) <= \<const0>\;
  s_axi_rdata(26) <= \<const0>\;
  s_axi_rdata(25) <= \<const0>\;
  s_axi_rdata(24) <= \<const0>\;
  s_axi_rdata(23) <= \<const0>\;
  s_axi_rdata(22) <= \<const0>\;
  s_axi_rdata(21) <= \<const0>\;
  s_axi_rdata(20) <= \<const0>\;
  s_axi_rdata(19) <= \<const0>\;
  s_axi_rdata(18) <= \<const0>\;
  s_axi_rdata(17) <= \<const0>\;
  s_axi_rdata(16) <= \<const0>\;
  s_axi_rdata(15) <= \<const0>\;
  s_axi_rdata(14) <= \<const0>\;
  s_axi_rdata(13) <= \<const0>\;
  s_axi_rdata(12) <= \<const0>\;
  s_axi_rdata(11) <= \<const0>\;
  s_axi_rdata(10) <= \<const0>\;
  s_axi_rdata(9) <= \<const0>\;
  s_axi_rdata(8) <= \<const0>\;
  s_axi_rdata(7) <= \<const0>\;
  s_axi_rdata(6) <= \<const0>\;
  s_axi_rdata(5) <= \<const0>\;
  s_axi_rdata(4) <= \<const0>\;
  s_axi_rdata(3) <= \<const0>\;
  s_axi_rdata(2) <= \<const0>\;
  s_axi_rdata(1) <= \<const0>\;
  s_axi_rdata(0) <= \<const0>\;
  s_axi_rid(0) <= \<const0>\;
  s_axi_rlast <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
  s_axi_rvalid <= \<const0>\;
  s_axi_wready <= \<const0>\;
  s_axis_tready <= \<const0>\;
  sbiterr <= \<const0>\;
  underflow <= \<const0>\;
  valid <= \<const0>\;
  wr_ack <= \<const0>\;
  wr_data_count(8) <= \<const0>\;
  wr_data_count(7) <= \<const0>\;
  wr_data_count(6) <= \<const0>\;
  wr_data_count(5) <= \<const0>\;
  wr_data_count(4) <= \<const0>\;
  wr_data_count(3) <= \<const0>\;
  wr_data_count(2) <= \<const0>\;
  wr_data_count(1) <= \<const0>\;
  wr_data_count(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
inst_fifo_gen: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_synth
     port map (
      clk => clk,
      din(31 downto 0) => din(31 downto 0),
      dout(31 downto 0) => dout(31 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 71 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 71 downto 0 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth : entity is "fifo_generator_72b_fwft_32depth,fifo_generator_v13_2_2,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth : entity is "fifo_generator_v13_2_2,Vivado 2018.2.1";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth is
  signal NLW_U0_almost_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_almost_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_arvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_awvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_bready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_rready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_arready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_awready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_bvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_wready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axis_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_wr_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_r_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_U0_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_m_axi_wid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axis_tdest_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tkeep_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tuser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  signal NLW_U0_s_axi_bid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_s_axi_rid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 5 downto 0 );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of U0 : label is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of U0 : label is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of U0 : label is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of U0 : label is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of U0 : label is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of U0 : label is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of U0 : label is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of U0 : label is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of U0 : label is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of U0 : label is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of U0 : label is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of U0 : label is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of U0 : label is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of U0 : label is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of U0 : label is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of U0 : label is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of U0 : label is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of U0 : label is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of U0 : label is 6;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of U0 : label is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of U0 : label is 72;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of U0 : label is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of U0 : label is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of U0 : label is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of U0 : label is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of U0 : label is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of U0 : label is 72;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of U0 : label is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of U0 : label is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of U0 : label is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of U0 : label is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of U0 : label is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of U0 : label is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of U0 : label is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of U0 : label is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of U0 : label is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of U0 : label is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of U0 : label is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of U0 : label is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of U0 : label is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of U0 : label is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of U0 : label is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of U0 : label is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of U0 : label is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of U0 : label is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of U0 : label is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of U0 : label is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of U0 : label is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of U0 : label is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of U0 : label is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of U0 : label is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of U0 : label is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of U0 : label is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of U0 : label is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of U0 : label is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of U0 : label is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of U0 : label is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of U0 : label is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of U0 : label is 1;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of U0 : label is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of U0 : label is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of U0 : label is 0;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of U0 : label is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of U0 : label is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of U0 : label is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of U0 : label is 2;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of U0 : label is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of U0 : label is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of U0 : label is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of U0 : label is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of U0 : label is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of U0 : label is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of U0 : label is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of U0 : label is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of U0 : label is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of U0 : label is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of U0 : label is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of U0 : label is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of U0 : label is 28;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of U0 : label is 27;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of U0 : label is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of U0 : label is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of U0 : label is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of U0 : label is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of U0 : label is 6;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of U0 : label is 32;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of U0 : label is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of U0 : label is 5;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of U0 : label is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of U0 : label is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of U0 : label is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of U0 : label is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of U0 : label is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of U0 : label is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of U0 : label is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of U0 : label is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of U0 : label is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of U0 : label is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of U0 : label is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of U0 : label is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of U0 : label is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of U0 : label is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of U0 : label is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of U0 : label is 0;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of U0 : label is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of U0 : label is 1;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of U0 : label is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of U0 : label is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of U0 : label is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of U0 : label is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of U0 : label is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of U0 : label is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of U0 : label is 6;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of U0 : label is 32;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of U0 : label is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of U0 : label is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of U0 : label is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of U0 : label is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of U0 : label is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of U0 : label is 5;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of U0 : label is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of U0 : label is 1;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of clk : signal is "xilinx.com:signal:clock:1.0 core_clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of clk : signal is "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of empty : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY";
  attribute X_INTERFACE_INFO of full : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL";
  attribute X_INTERFACE_INFO of rd_en : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN";
  attribute X_INTERFACE_INFO of wr_en : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN";
begin
U0: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2
     port map (
      almost_empty => NLW_U0_almost_empty_UNCONNECTED,
      almost_full => NLW_U0_almost_full_UNCONNECTED,
      axi_ar_data_count(4 downto 0) => NLW_U0_axi_ar_data_count_UNCONNECTED(4 downto 0),
      axi_ar_dbiterr => NLW_U0_axi_ar_dbiterr_UNCONNECTED,
      axi_ar_injectdbiterr => '0',
      axi_ar_injectsbiterr => '0',
      axi_ar_overflow => NLW_U0_axi_ar_overflow_UNCONNECTED,
      axi_ar_prog_empty => NLW_U0_axi_ar_prog_empty_UNCONNECTED,
      axi_ar_prog_empty_thresh(3 downto 0) => B"0000",
      axi_ar_prog_full => NLW_U0_axi_ar_prog_full_UNCONNECTED,
      axi_ar_prog_full_thresh(3 downto 0) => B"0000",
      axi_ar_rd_data_count(4 downto 0) => NLW_U0_axi_ar_rd_data_count_UNCONNECTED(4 downto 0),
      axi_ar_sbiterr => NLW_U0_axi_ar_sbiterr_UNCONNECTED,
      axi_ar_underflow => NLW_U0_axi_ar_underflow_UNCONNECTED,
      axi_ar_wr_data_count(4 downto 0) => NLW_U0_axi_ar_wr_data_count_UNCONNECTED(4 downto 0),
      axi_aw_data_count(4 downto 0) => NLW_U0_axi_aw_data_count_UNCONNECTED(4 downto 0),
      axi_aw_dbiterr => NLW_U0_axi_aw_dbiterr_UNCONNECTED,
      axi_aw_injectdbiterr => '0',
      axi_aw_injectsbiterr => '0',
      axi_aw_overflow => NLW_U0_axi_aw_overflow_UNCONNECTED,
      axi_aw_prog_empty => NLW_U0_axi_aw_prog_empty_UNCONNECTED,
      axi_aw_prog_empty_thresh(3 downto 0) => B"0000",
      axi_aw_prog_full => NLW_U0_axi_aw_prog_full_UNCONNECTED,
      axi_aw_prog_full_thresh(3 downto 0) => B"0000",
      axi_aw_rd_data_count(4 downto 0) => NLW_U0_axi_aw_rd_data_count_UNCONNECTED(4 downto 0),
      axi_aw_sbiterr => NLW_U0_axi_aw_sbiterr_UNCONNECTED,
      axi_aw_underflow => NLW_U0_axi_aw_underflow_UNCONNECTED,
      axi_aw_wr_data_count(4 downto 0) => NLW_U0_axi_aw_wr_data_count_UNCONNECTED(4 downto 0),
      axi_b_data_count(4 downto 0) => NLW_U0_axi_b_data_count_UNCONNECTED(4 downto 0),
      axi_b_dbiterr => NLW_U0_axi_b_dbiterr_UNCONNECTED,
      axi_b_injectdbiterr => '0',
      axi_b_injectsbiterr => '0',
      axi_b_overflow => NLW_U0_axi_b_overflow_UNCONNECTED,
      axi_b_prog_empty => NLW_U0_axi_b_prog_empty_UNCONNECTED,
      axi_b_prog_empty_thresh(3 downto 0) => B"0000",
      axi_b_prog_full => NLW_U0_axi_b_prog_full_UNCONNECTED,
      axi_b_prog_full_thresh(3 downto 0) => B"0000",
      axi_b_rd_data_count(4 downto 0) => NLW_U0_axi_b_rd_data_count_UNCONNECTED(4 downto 0),
      axi_b_sbiterr => NLW_U0_axi_b_sbiterr_UNCONNECTED,
      axi_b_underflow => NLW_U0_axi_b_underflow_UNCONNECTED,
      axi_b_wr_data_count(4 downto 0) => NLW_U0_axi_b_wr_data_count_UNCONNECTED(4 downto 0),
      axi_r_data_count(10 downto 0) => NLW_U0_axi_r_data_count_UNCONNECTED(10 downto 0),
      axi_r_dbiterr => NLW_U0_axi_r_dbiterr_UNCONNECTED,
      axi_r_injectdbiterr => '0',
      axi_r_injectsbiterr => '0',
      axi_r_overflow => NLW_U0_axi_r_overflow_UNCONNECTED,
      axi_r_prog_empty => NLW_U0_axi_r_prog_empty_UNCONNECTED,
      axi_r_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_r_prog_full => NLW_U0_axi_r_prog_full_UNCONNECTED,
      axi_r_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_r_rd_data_count(10 downto 0) => NLW_U0_axi_r_rd_data_count_UNCONNECTED(10 downto 0),
      axi_r_sbiterr => NLW_U0_axi_r_sbiterr_UNCONNECTED,
      axi_r_underflow => NLW_U0_axi_r_underflow_UNCONNECTED,
      axi_r_wr_data_count(10 downto 0) => NLW_U0_axi_r_wr_data_count_UNCONNECTED(10 downto 0),
      axi_w_data_count(10 downto 0) => NLW_U0_axi_w_data_count_UNCONNECTED(10 downto 0),
      axi_w_dbiterr => NLW_U0_axi_w_dbiterr_UNCONNECTED,
      axi_w_injectdbiterr => '0',
      axi_w_injectsbiterr => '0',
      axi_w_overflow => NLW_U0_axi_w_overflow_UNCONNECTED,
      axi_w_prog_empty => NLW_U0_axi_w_prog_empty_UNCONNECTED,
      axi_w_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_w_prog_full => NLW_U0_axi_w_prog_full_UNCONNECTED,
      axi_w_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_w_rd_data_count(10 downto 0) => NLW_U0_axi_w_rd_data_count_UNCONNECTED(10 downto 0),
      axi_w_sbiterr => NLW_U0_axi_w_sbiterr_UNCONNECTED,
      axi_w_underflow => NLW_U0_axi_w_underflow_UNCONNECTED,
      axi_w_wr_data_count(10 downto 0) => NLW_U0_axi_w_wr_data_count_UNCONNECTED(10 downto 0),
      axis_data_count(10 downto 0) => NLW_U0_axis_data_count_UNCONNECTED(10 downto 0),
      axis_dbiterr => NLW_U0_axis_dbiterr_UNCONNECTED,
      axis_injectdbiterr => '0',
      axis_injectsbiterr => '0',
      axis_overflow => NLW_U0_axis_overflow_UNCONNECTED,
      axis_prog_empty => NLW_U0_axis_prog_empty_UNCONNECTED,
      axis_prog_empty_thresh(9 downto 0) => B"0000000000",
      axis_prog_full => NLW_U0_axis_prog_full_UNCONNECTED,
      axis_prog_full_thresh(9 downto 0) => B"0000000000",
      axis_rd_data_count(10 downto 0) => NLW_U0_axis_rd_data_count_UNCONNECTED(10 downto 0),
      axis_sbiterr => NLW_U0_axis_sbiterr_UNCONNECTED,
      axis_underflow => NLW_U0_axis_underflow_UNCONNECTED,
      axis_wr_data_count(10 downto 0) => NLW_U0_axis_wr_data_count_UNCONNECTED(10 downto 0),
      backup => '0',
      backup_marker => '0',
      clk => clk,
      data_count(5 downto 0) => NLW_U0_data_count_UNCONNECTED(5 downto 0),
      dbiterr => NLW_U0_dbiterr_UNCONNECTED,
      din(71 downto 0) => din(71 downto 0),
      dout(71 downto 0) => dout(71 downto 0),
      empty => empty,
      full => full,
      injectdbiterr => '0',
      injectsbiterr => '0',
      int_clk => '0',
      m_aclk => '0',
      m_aclk_en => '0',
      m_axi_araddr(31 downto 0) => NLW_U0_m_axi_araddr_UNCONNECTED(31 downto 0),
      m_axi_arburst(1 downto 0) => NLW_U0_m_axi_arburst_UNCONNECTED(1 downto 0),
      m_axi_arcache(3 downto 0) => NLW_U0_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(0) => NLW_U0_m_axi_arid_UNCONNECTED(0),
      m_axi_arlen(7 downto 0) => NLW_U0_m_axi_arlen_UNCONNECTED(7 downto 0),
      m_axi_arlock(0) => NLW_U0_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => NLW_U0_m_axi_arprot_UNCONNECTED(2 downto 0),
      m_axi_arqos(3 downto 0) => NLW_U0_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => '0',
      m_axi_arregion(3 downto 0) => NLW_U0_m_axi_arregion_UNCONNECTED(3 downto 0),
      m_axi_arsize(2 downto 0) => NLW_U0_m_axi_arsize_UNCONNECTED(2 downto 0),
      m_axi_aruser(0) => NLW_U0_m_axi_aruser_UNCONNECTED(0),
      m_axi_arvalid => NLW_U0_m_axi_arvalid_UNCONNECTED,
      m_axi_awaddr(31 downto 0) => NLW_U0_m_axi_awaddr_UNCONNECTED(31 downto 0),
      m_axi_awburst(1 downto 0) => NLW_U0_m_axi_awburst_UNCONNECTED(1 downto 0),
      m_axi_awcache(3 downto 0) => NLW_U0_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(0) => NLW_U0_m_axi_awid_UNCONNECTED(0),
      m_axi_awlen(7 downto 0) => NLW_U0_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_U0_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => NLW_U0_m_axi_awprot_UNCONNECTED(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_U0_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => '0',
      m_axi_awregion(3 downto 0) => NLW_U0_m_axi_awregion_UNCONNECTED(3 downto 0),
      m_axi_awsize(2 downto 0) => NLW_U0_m_axi_awsize_UNCONNECTED(2 downto 0),
      m_axi_awuser(0) => NLW_U0_m_axi_awuser_UNCONNECTED(0),
      m_axi_awvalid => NLW_U0_m_axi_awvalid_UNCONNECTED,
      m_axi_bid(0) => '0',
      m_axi_bready => NLW_U0_m_axi_bready_UNCONNECTED,
      m_axi_bresp(1 downto 0) => B"00",
      m_axi_buser(0) => '0',
      m_axi_bvalid => '0',
      m_axi_rdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      m_axi_rid(0) => '0',
      m_axi_rlast => '0',
      m_axi_rready => NLW_U0_m_axi_rready_UNCONNECTED,
      m_axi_rresp(1 downto 0) => B"00",
      m_axi_ruser(0) => '0',
      m_axi_rvalid => '0',
      m_axi_wdata(63 downto 0) => NLW_U0_m_axi_wdata_UNCONNECTED(63 downto 0),
      m_axi_wid(0) => NLW_U0_m_axi_wid_UNCONNECTED(0),
      m_axi_wlast => NLW_U0_m_axi_wlast_UNCONNECTED,
      m_axi_wready => '0',
      m_axi_wstrb(7 downto 0) => NLW_U0_m_axi_wstrb_UNCONNECTED(7 downto 0),
      m_axi_wuser(0) => NLW_U0_m_axi_wuser_UNCONNECTED(0),
      m_axi_wvalid => NLW_U0_m_axi_wvalid_UNCONNECTED,
      m_axis_tdata(7 downto 0) => NLW_U0_m_axis_tdata_UNCONNECTED(7 downto 0),
      m_axis_tdest(0) => NLW_U0_m_axis_tdest_UNCONNECTED(0),
      m_axis_tid(0) => NLW_U0_m_axis_tid_UNCONNECTED(0),
      m_axis_tkeep(0) => NLW_U0_m_axis_tkeep_UNCONNECTED(0),
      m_axis_tlast => NLW_U0_m_axis_tlast_UNCONNECTED,
      m_axis_tready => '0',
      m_axis_tstrb(0) => NLW_U0_m_axis_tstrb_UNCONNECTED(0),
      m_axis_tuser(3 downto 0) => NLW_U0_m_axis_tuser_UNCONNECTED(3 downto 0),
      m_axis_tvalid => NLW_U0_m_axis_tvalid_UNCONNECTED,
      overflow => NLW_U0_overflow_UNCONNECTED,
      prog_empty => NLW_U0_prog_empty_UNCONNECTED,
      prog_empty_thresh(4 downto 0) => B"00000",
      prog_empty_thresh_assert(4 downto 0) => B"00000",
      prog_empty_thresh_negate(4 downto 0) => B"00000",
      prog_full => prog_full,
      prog_full_thresh(4 downto 0) => B"00000",
      prog_full_thresh_assert(4 downto 0) => B"00000",
      prog_full_thresh_negate(4 downto 0) => B"00000",
      rd_clk => '0',
      rd_data_count(5 downto 0) => NLW_U0_rd_data_count_UNCONNECTED(5 downto 0),
      rd_en => rd_en,
      rd_rst => '0',
      rd_rst_busy => rd_rst_busy,
      rst => '0',
      s_aclk => '0',
      s_aclk_en => '0',
      s_aresetn => '0',
      s_axi_araddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_arburst(1 downto 0) => B"00",
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(0) => '0',
      s_axi_arlen(7 downto 0) => B"00000000",
      s_axi_arlock(0) => '0',
      s_axi_arprot(2 downto 0) => B"000",
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => NLW_U0_s_axi_arready_UNCONNECTED,
      s_axi_arregion(3 downto 0) => B"0000",
      s_axi_arsize(2 downto 0) => B"000",
      s_axi_aruser(0) => '0',
      s_axi_arvalid => '0',
      s_axi_awaddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_awburst(1 downto 0) => B"00",
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(0) => '0',
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awlock(0) => '0',
      s_axi_awprot(2 downto 0) => B"000",
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => NLW_U0_s_axi_awready_UNCONNECTED,
      s_axi_awregion(3 downto 0) => B"0000",
      s_axi_awsize(2 downto 0) => B"000",
      s_axi_awuser(0) => '0',
      s_axi_awvalid => '0',
      s_axi_bid(0) => NLW_U0_s_axi_bid_UNCONNECTED(0),
      s_axi_bready => '0',
      s_axi_bresp(1 downto 0) => NLW_U0_s_axi_bresp_UNCONNECTED(1 downto 0),
      s_axi_buser(0) => NLW_U0_s_axi_buser_UNCONNECTED(0),
      s_axi_bvalid => NLW_U0_s_axi_bvalid_UNCONNECTED,
      s_axi_rdata(63 downto 0) => NLW_U0_s_axi_rdata_UNCONNECTED(63 downto 0),
      s_axi_rid(0) => NLW_U0_s_axi_rid_UNCONNECTED(0),
      s_axi_rlast => NLW_U0_s_axi_rlast_UNCONNECTED,
      s_axi_rready => '0',
      s_axi_rresp(1 downto 0) => NLW_U0_s_axi_rresp_UNCONNECTED(1 downto 0),
      s_axi_ruser(0) => NLW_U0_s_axi_ruser_UNCONNECTED(0),
      s_axi_rvalid => NLW_U0_s_axi_rvalid_UNCONNECTED,
      s_axi_wdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      s_axi_wid(0) => '0',
      s_axi_wlast => '0',
      s_axi_wready => NLW_U0_s_axi_wready_UNCONNECTED,
      s_axi_wstrb(7 downto 0) => B"00000000",
      s_axi_wuser(0) => '0',
      s_axi_wvalid => '0',
      s_axis_tdata(7 downto 0) => B"00000000",
      s_axis_tdest(0) => '0',
      s_axis_tid(0) => '0',
      s_axis_tkeep(0) => '0',
      s_axis_tlast => '0',
      s_axis_tready => NLW_U0_s_axis_tready_UNCONNECTED,
      s_axis_tstrb(0) => '0',
      s_axis_tuser(3 downto 0) => B"0000",
      s_axis_tvalid => '0',
      sbiterr => NLW_U0_sbiterr_UNCONNECTED,
      sleep => '0',
      srst => srst,
      underflow => NLW_U0_underflow_UNCONNECTED,
      valid => valid,
      wr_ack => NLW_U0_wr_ack_UNCONNECTED,
      wr_clk => '0',
      wr_data_count(5 downto 0) => NLW_U0_wr_data_count_UNCONNECTED(5 downto 0),
      wr_en => wr_en,
      wr_rst => '0',
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 is
  port (
    almost_empty : out STD_LOGIC;
    almost_full : out STD_LOGIC;
    axi_ar_dbiterr : out STD_LOGIC;
    axi_ar_injectdbiterr : in STD_LOGIC;
    axi_ar_injectsbiterr : in STD_LOGIC;
    axi_ar_overflow : out STD_LOGIC;
    axi_ar_prog_empty : out STD_LOGIC;
    axi_ar_prog_full : out STD_LOGIC;
    axi_ar_sbiterr : out STD_LOGIC;
    axi_ar_underflow : out STD_LOGIC;
    axi_aw_dbiterr : out STD_LOGIC;
    axi_aw_injectdbiterr : in STD_LOGIC;
    axi_aw_injectsbiterr : in STD_LOGIC;
    axi_aw_overflow : out STD_LOGIC;
    axi_aw_prog_empty : out STD_LOGIC;
    axi_aw_prog_full : out STD_LOGIC;
    axi_aw_sbiterr : out STD_LOGIC;
    axi_aw_underflow : out STD_LOGIC;
    axi_b_dbiterr : out STD_LOGIC;
    axi_b_injectdbiterr : in STD_LOGIC;
    axi_b_injectsbiterr : in STD_LOGIC;
    axi_b_overflow : out STD_LOGIC;
    axi_b_prog_empty : out STD_LOGIC;
    axi_b_prog_full : out STD_LOGIC;
    axi_b_sbiterr : out STD_LOGIC;
    axi_b_underflow : out STD_LOGIC;
    axi_r_dbiterr : out STD_LOGIC;
    axi_r_injectdbiterr : in STD_LOGIC;
    axi_r_injectsbiterr : in STD_LOGIC;
    axi_r_overflow : out STD_LOGIC;
    axi_r_prog_empty : out STD_LOGIC;
    axi_r_prog_full : out STD_LOGIC;
    axi_r_sbiterr : out STD_LOGIC;
    axi_r_underflow : out STD_LOGIC;
    axi_w_dbiterr : out STD_LOGIC;
    axi_w_injectdbiterr : in STD_LOGIC;
    axi_w_injectsbiterr : in STD_LOGIC;
    axi_w_overflow : out STD_LOGIC;
    axi_w_prog_empty : out STD_LOGIC;
    axi_w_prog_full : out STD_LOGIC;
    axi_w_sbiterr : out STD_LOGIC;
    axi_w_underflow : out STD_LOGIC;
    axis_dbiterr : out STD_LOGIC;
    axis_injectdbiterr : in STD_LOGIC;
    axis_injectsbiterr : in STD_LOGIC;
    axis_overflow : out STD_LOGIC;
    axis_prog_empty : out STD_LOGIC;
    axis_prog_full : out STD_LOGIC;
    axis_sbiterr : out STD_LOGIC;
    axis_underflow : out STD_LOGIC;
    backup : in STD_LOGIC;
    backup_marker : in STD_LOGIC;
    clk : in STD_LOGIC;
    dbiterr : out STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    injectdbiterr : in STD_LOGIC;
    injectsbiterr : in STD_LOGIC;
    int_clk : in STD_LOGIC;
    m_aclk : in STD_LOGIC;
    m_aclk_en : in STD_LOGIC;
    m_axi_arready : in STD_LOGIC;
    m_axi_arvalid : out STD_LOGIC;
    m_axi_awready : in STD_LOGIC;
    m_axi_awvalid : out STD_LOGIC;
    m_axi_bready : out STD_LOGIC;
    m_axi_bvalid : in STD_LOGIC;
    m_axi_rlast : in STD_LOGIC;
    m_axi_rready : out STD_LOGIC;
    m_axi_rvalid : in STD_LOGIC;
    m_axi_wlast : out STD_LOGIC;
    m_axi_wready : in STD_LOGIC;
    m_axi_wvalid : out STD_LOGIC;
    m_axis_tlast : out STD_LOGIC;
    m_axis_tready : in STD_LOGIC;
    m_axis_tvalid : out STD_LOGIC;
    overflow : out STD_LOGIC;
    prog_empty : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_clk : in STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    rst : in STD_LOGIC;
    s_aclk : in STD_LOGIC;
    s_aclk_en : in STD_LOGIC;
    s_aresetn : in STD_LOGIC;
    s_axi_arready : out STD_LOGIC;
    s_axi_arvalid : in STD_LOGIC;
    s_axi_awready : out STD_LOGIC;
    s_axi_awvalid : in STD_LOGIC;
    s_axi_bready : in STD_LOGIC;
    s_axi_bvalid : out STD_LOGIC;
    s_axi_rlast : out STD_LOGIC;
    s_axi_rready : in STD_LOGIC;
    s_axi_rvalid : out STD_LOGIC;
    s_axi_wlast : in STD_LOGIC;
    s_axi_wready : out STD_LOGIC;
    s_axi_wvalid : in STD_LOGIC;
    s_axis_tlast : in STD_LOGIC;
    s_axis_tready : out STD_LOGIC;
    s_axis_tvalid : in STD_LOGIC;
    sbiterr : out STD_LOGIC;
    sleep : in STD_LOGIC;
    srst : in STD_LOGIC;
    underflow : out STD_LOGIC;
    valid : out STD_LOGIC;
    wr_ack : out STD_LOGIC;
    wr_clk : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    axi_ar_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_ar_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_ar_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_aw_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_aw_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_prog_empty_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_prog_full_thresh : in STD_LOGIC_VECTOR ( 3 downto 0 );
    axi_b_rd_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_b_wr_data_count : out STD_LOGIC_VECTOR ( 4 downto 0 );
    axi_r_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_r_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_r_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axi_w_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axi_w_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_prog_empty_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_prog_full_thresh : in STD_LOGIC_VECTOR ( 9 downto 0 );
    axis_rd_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    axis_wr_data_count : out STD_LOGIC_VECTOR ( 10 downto 0 );
    data_count : out STD_LOGIC_VECTOR ( 8 downto 0 );
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 );
    m_axi_araddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_arburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_arcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_arlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_arprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_arqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_arsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_aruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awaddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m_axi_awburst : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_awcache : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awlen : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_awlock : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_awprot : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awqos : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awregion : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_axi_awsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_axi_awuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_bresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_buser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_rid : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_rresp : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_axi_ruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_axi_wid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axi_wstrb : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axi_wuser : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tdata : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_axis_tdest : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tid : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tkeep : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tstrb : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_axis_tuser : out STD_LOGIC_VECTOR ( 3 downto 0 );
    prog_empty_thresh : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_empty_thresh_assert : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_empty_thresh_negate : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh_assert : in STD_LOGIC_VECTOR ( 8 downto 0 );
    prog_full_thresh_negate : in STD_LOGIC_VECTOR ( 8 downto 0 );
    rd_data_count : out STD_LOGIC_VECTOR ( 8 downto 0 );
    s_axi_araddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_arburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_arcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_arlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_arprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_arqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_arsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_aruser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awaddr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_awburst : in STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_awcache : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awlen : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_awlock : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_awprot : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awqos : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awregion : in STD_LOGIC_VECTOR ( 3 downto 0 );
    s_axi_awsize : in STD_LOGIC_VECTOR ( 2 downto 0 );
    s_axi_awuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_bresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_buser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rdata : out STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_rid : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_rresp : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_ruser : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wdata : in STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_wid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_wstrb : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axi_wuser : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tdata : in STD_LOGIC_VECTOR ( 7 downto 0 );
    s_axis_tdest : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tid : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tkeep : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tstrb : in STD_LOGIC_VECTOR ( 0 to 0 );
    s_axis_tuser : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wr_data_count : out STD_LOGIC_VECTOR ( 8 downto 0 )
  );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 7;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 7;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 6;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 400;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 399;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 512;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 512;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 9;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is 1;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 : entity is "fifo_generator_v13_2_2";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
begin
  almost_empty <= \<const0>\;
  almost_full <= \<const0>\;
  axi_ar_data_count(4) <= \<const0>\;
  axi_ar_data_count(3) <= \<const0>\;
  axi_ar_data_count(2) <= \<const0>\;
  axi_ar_data_count(1) <= \<const0>\;
  axi_ar_data_count(0) <= \<const0>\;
  axi_ar_dbiterr <= \<const0>\;
  axi_ar_overflow <= \<const0>\;
  axi_ar_prog_empty <= \<const1>\;
  axi_ar_prog_full <= \<const0>\;
  axi_ar_rd_data_count(4) <= \<const0>\;
  axi_ar_rd_data_count(3) <= \<const0>\;
  axi_ar_rd_data_count(2) <= \<const0>\;
  axi_ar_rd_data_count(1) <= \<const0>\;
  axi_ar_rd_data_count(0) <= \<const0>\;
  axi_ar_sbiterr <= \<const0>\;
  axi_ar_underflow <= \<const0>\;
  axi_ar_wr_data_count(4) <= \<const0>\;
  axi_ar_wr_data_count(3) <= \<const0>\;
  axi_ar_wr_data_count(2) <= \<const0>\;
  axi_ar_wr_data_count(1) <= \<const0>\;
  axi_ar_wr_data_count(0) <= \<const0>\;
  axi_aw_data_count(4) <= \<const0>\;
  axi_aw_data_count(3) <= \<const0>\;
  axi_aw_data_count(2) <= \<const0>\;
  axi_aw_data_count(1) <= \<const0>\;
  axi_aw_data_count(0) <= \<const0>\;
  axi_aw_dbiterr <= \<const0>\;
  axi_aw_overflow <= \<const0>\;
  axi_aw_prog_empty <= \<const1>\;
  axi_aw_prog_full <= \<const0>\;
  axi_aw_rd_data_count(4) <= \<const0>\;
  axi_aw_rd_data_count(3) <= \<const0>\;
  axi_aw_rd_data_count(2) <= \<const0>\;
  axi_aw_rd_data_count(1) <= \<const0>\;
  axi_aw_rd_data_count(0) <= \<const0>\;
  axi_aw_sbiterr <= \<const0>\;
  axi_aw_underflow <= \<const0>\;
  axi_aw_wr_data_count(4) <= \<const0>\;
  axi_aw_wr_data_count(3) <= \<const0>\;
  axi_aw_wr_data_count(2) <= \<const0>\;
  axi_aw_wr_data_count(1) <= \<const0>\;
  axi_aw_wr_data_count(0) <= \<const0>\;
  axi_b_data_count(4) <= \<const0>\;
  axi_b_data_count(3) <= \<const0>\;
  axi_b_data_count(2) <= \<const0>\;
  axi_b_data_count(1) <= \<const0>\;
  axi_b_data_count(0) <= \<const0>\;
  axi_b_dbiterr <= \<const0>\;
  axi_b_overflow <= \<const0>\;
  axi_b_prog_empty <= \<const1>\;
  axi_b_prog_full <= \<const0>\;
  axi_b_rd_data_count(4) <= \<const0>\;
  axi_b_rd_data_count(3) <= \<const0>\;
  axi_b_rd_data_count(2) <= \<const0>\;
  axi_b_rd_data_count(1) <= \<const0>\;
  axi_b_rd_data_count(0) <= \<const0>\;
  axi_b_sbiterr <= \<const0>\;
  axi_b_underflow <= \<const0>\;
  axi_b_wr_data_count(4) <= \<const0>\;
  axi_b_wr_data_count(3) <= \<const0>\;
  axi_b_wr_data_count(2) <= \<const0>\;
  axi_b_wr_data_count(1) <= \<const0>\;
  axi_b_wr_data_count(0) <= \<const0>\;
  axi_r_data_count(10) <= \<const0>\;
  axi_r_data_count(9) <= \<const0>\;
  axi_r_data_count(8) <= \<const0>\;
  axi_r_data_count(7) <= \<const0>\;
  axi_r_data_count(6) <= \<const0>\;
  axi_r_data_count(5) <= \<const0>\;
  axi_r_data_count(4) <= \<const0>\;
  axi_r_data_count(3) <= \<const0>\;
  axi_r_data_count(2) <= \<const0>\;
  axi_r_data_count(1) <= \<const0>\;
  axi_r_data_count(0) <= \<const0>\;
  axi_r_dbiterr <= \<const0>\;
  axi_r_overflow <= \<const0>\;
  axi_r_prog_empty <= \<const1>\;
  axi_r_prog_full <= \<const0>\;
  axi_r_rd_data_count(10) <= \<const0>\;
  axi_r_rd_data_count(9) <= \<const0>\;
  axi_r_rd_data_count(8) <= \<const0>\;
  axi_r_rd_data_count(7) <= \<const0>\;
  axi_r_rd_data_count(6) <= \<const0>\;
  axi_r_rd_data_count(5) <= \<const0>\;
  axi_r_rd_data_count(4) <= \<const0>\;
  axi_r_rd_data_count(3) <= \<const0>\;
  axi_r_rd_data_count(2) <= \<const0>\;
  axi_r_rd_data_count(1) <= \<const0>\;
  axi_r_rd_data_count(0) <= \<const0>\;
  axi_r_sbiterr <= \<const0>\;
  axi_r_underflow <= \<const0>\;
  axi_r_wr_data_count(10) <= \<const0>\;
  axi_r_wr_data_count(9) <= \<const0>\;
  axi_r_wr_data_count(8) <= \<const0>\;
  axi_r_wr_data_count(7) <= \<const0>\;
  axi_r_wr_data_count(6) <= \<const0>\;
  axi_r_wr_data_count(5) <= \<const0>\;
  axi_r_wr_data_count(4) <= \<const0>\;
  axi_r_wr_data_count(3) <= \<const0>\;
  axi_r_wr_data_count(2) <= \<const0>\;
  axi_r_wr_data_count(1) <= \<const0>\;
  axi_r_wr_data_count(0) <= \<const0>\;
  axi_w_data_count(10) <= \<const0>\;
  axi_w_data_count(9) <= \<const0>\;
  axi_w_data_count(8) <= \<const0>\;
  axi_w_data_count(7) <= \<const0>\;
  axi_w_data_count(6) <= \<const0>\;
  axi_w_data_count(5) <= \<const0>\;
  axi_w_data_count(4) <= \<const0>\;
  axi_w_data_count(3) <= \<const0>\;
  axi_w_data_count(2) <= \<const0>\;
  axi_w_data_count(1) <= \<const0>\;
  axi_w_data_count(0) <= \<const0>\;
  axi_w_dbiterr <= \<const0>\;
  axi_w_overflow <= \<const0>\;
  axi_w_prog_empty <= \<const1>\;
  axi_w_prog_full <= \<const0>\;
  axi_w_rd_data_count(10) <= \<const0>\;
  axi_w_rd_data_count(9) <= \<const0>\;
  axi_w_rd_data_count(8) <= \<const0>\;
  axi_w_rd_data_count(7) <= \<const0>\;
  axi_w_rd_data_count(6) <= \<const0>\;
  axi_w_rd_data_count(5) <= \<const0>\;
  axi_w_rd_data_count(4) <= \<const0>\;
  axi_w_rd_data_count(3) <= \<const0>\;
  axi_w_rd_data_count(2) <= \<const0>\;
  axi_w_rd_data_count(1) <= \<const0>\;
  axi_w_rd_data_count(0) <= \<const0>\;
  axi_w_sbiterr <= \<const0>\;
  axi_w_underflow <= \<const0>\;
  axi_w_wr_data_count(10) <= \<const0>\;
  axi_w_wr_data_count(9) <= \<const0>\;
  axi_w_wr_data_count(8) <= \<const0>\;
  axi_w_wr_data_count(7) <= \<const0>\;
  axi_w_wr_data_count(6) <= \<const0>\;
  axi_w_wr_data_count(5) <= \<const0>\;
  axi_w_wr_data_count(4) <= \<const0>\;
  axi_w_wr_data_count(3) <= \<const0>\;
  axi_w_wr_data_count(2) <= \<const0>\;
  axi_w_wr_data_count(1) <= \<const0>\;
  axi_w_wr_data_count(0) <= \<const0>\;
  axis_data_count(10) <= \<const0>\;
  axis_data_count(9) <= \<const0>\;
  axis_data_count(8) <= \<const0>\;
  axis_data_count(7) <= \<const0>\;
  axis_data_count(6) <= \<const0>\;
  axis_data_count(5) <= \<const0>\;
  axis_data_count(4) <= \<const0>\;
  axis_data_count(3) <= \<const0>\;
  axis_data_count(2) <= \<const0>\;
  axis_data_count(1) <= \<const0>\;
  axis_data_count(0) <= \<const0>\;
  axis_dbiterr <= \<const0>\;
  axis_overflow <= \<const0>\;
  axis_prog_empty <= \<const1>\;
  axis_prog_full <= \<const0>\;
  axis_rd_data_count(10) <= \<const0>\;
  axis_rd_data_count(9) <= \<const0>\;
  axis_rd_data_count(8) <= \<const0>\;
  axis_rd_data_count(7) <= \<const0>\;
  axis_rd_data_count(6) <= \<const0>\;
  axis_rd_data_count(5) <= \<const0>\;
  axis_rd_data_count(4) <= \<const0>\;
  axis_rd_data_count(3) <= \<const0>\;
  axis_rd_data_count(2) <= \<const0>\;
  axis_rd_data_count(1) <= \<const0>\;
  axis_rd_data_count(0) <= \<const0>\;
  axis_sbiterr <= \<const0>\;
  axis_underflow <= \<const0>\;
  axis_wr_data_count(10) <= \<const0>\;
  axis_wr_data_count(9) <= \<const0>\;
  axis_wr_data_count(8) <= \<const0>\;
  axis_wr_data_count(7) <= \<const0>\;
  axis_wr_data_count(6) <= \<const0>\;
  axis_wr_data_count(5) <= \<const0>\;
  axis_wr_data_count(4) <= \<const0>\;
  axis_wr_data_count(3) <= \<const0>\;
  axis_wr_data_count(2) <= \<const0>\;
  axis_wr_data_count(1) <= \<const0>\;
  axis_wr_data_count(0) <= \<const0>\;
  data_count(8) <= \<const0>\;
  data_count(7) <= \<const0>\;
  data_count(6) <= \<const0>\;
  data_count(5) <= \<const0>\;
  data_count(4) <= \<const0>\;
  data_count(3) <= \<const0>\;
  data_count(2) <= \<const0>\;
  data_count(1) <= \<const0>\;
  data_count(0) <= \<const0>\;
  dbiterr <= \<const0>\;
  m_axi_araddr(31) <= \<const0>\;
  m_axi_araddr(30) <= \<const0>\;
  m_axi_araddr(29) <= \<const0>\;
  m_axi_araddr(28) <= \<const0>\;
  m_axi_araddr(27) <= \<const0>\;
  m_axi_araddr(26) <= \<const0>\;
  m_axi_araddr(25) <= \<const0>\;
  m_axi_araddr(24) <= \<const0>\;
  m_axi_araddr(23) <= \<const0>\;
  m_axi_araddr(22) <= \<const0>\;
  m_axi_araddr(21) <= \<const0>\;
  m_axi_araddr(20) <= \<const0>\;
  m_axi_araddr(19) <= \<const0>\;
  m_axi_araddr(18) <= \<const0>\;
  m_axi_araddr(17) <= \<const0>\;
  m_axi_araddr(16) <= \<const0>\;
  m_axi_araddr(15) <= \<const0>\;
  m_axi_araddr(14) <= \<const0>\;
  m_axi_araddr(13) <= \<const0>\;
  m_axi_araddr(12) <= \<const0>\;
  m_axi_araddr(11) <= \<const0>\;
  m_axi_araddr(10) <= \<const0>\;
  m_axi_araddr(9) <= \<const0>\;
  m_axi_araddr(8) <= \<const0>\;
  m_axi_araddr(7) <= \<const0>\;
  m_axi_araddr(6) <= \<const0>\;
  m_axi_araddr(5) <= \<const0>\;
  m_axi_araddr(4) <= \<const0>\;
  m_axi_araddr(3) <= \<const0>\;
  m_axi_araddr(2) <= \<const0>\;
  m_axi_araddr(1) <= \<const0>\;
  m_axi_araddr(0) <= \<const0>\;
  m_axi_arburst(1) <= \<const0>\;
  m_axi_arburst(0) <= \<const0>\;
  m_axi_arcache(3) <= \<const0>\;
  m_axi_arcache(2) <= \<const0>\;
  m_axi_arcache(1) <= \<const0>\;
  m_axi_arcache(0) <= \<const0>\;
  m_axi_arid(0) <= \<const0>\;
  m_axi_arlen(7) <= \<const0>\;
  m_axi_arlen(6) <= \<const0>\;
  m_axi_arlen(5) <= \<const0>\;
  m_axi_arlen(4) <= \<const0>\;
  m_axi_arlen(3) <= \<const0>\;
  m_axi_arlen(2) <= \<const0>\;
  m_axi_arlen(1) <= \<const0>\;
  m_axi_arlen(0) <= \<const0>\;
  m_axi_arlock(0) <= \<const0>\;
  m_axi_arprot(2) <= \<const0>\;
  m_axi_arprot(1) <= \<const0>\;
  m_axi_arprot(0) <= \<const0>\;
  m_axi_arqos(3) <= \<const0>\;
  m_axi_arqos(2) <= \<const0>\;
  m_axi_arqos(1) <= \<const0>\;
  m_axi_arqos(0) <= \<const0>\;
  m_axi_arregion(3) <= \<const0>\;
  m_axi_arregion(2) <= \<const0>\;
  m_axi_arregion(1) <= \<const0>\;
  m_axi_arregion(0) <= \<const0>\;
  m_axi_arsize(2) <= \<const0>\;
  m_axi_arsize(1) <= \<const0>\;
  m_axi_arsize(0) <= \<const0>\;
  m_axi_aruser(0) <= \<const0>\;
  m_axi_arvalid <= \<const0>\;
  m_axi_awaddr(31) <= \<const0>\;
  m_axi_awaddr(30) <= \<const0>\;
  m_axi_awaddr(29) <= \<const0>\;
  m_axi_awaddr(28) <= \<const0>\;
  m_axi_awaddr(27) <= \<const0>\;
  m_axi_awaddr(26) <= \<const0>\;
  m_axi_awaddr(25) <= \<const0>\;
  m_axi_awaddr(24) <= \<const0>\;
  m_axi_awaddr(23) <= \<const0>\;
  m_axi_awaddr(22) <= \<const0>\;
  m_axi_awaddr(21) <= \<const0>\;
  m_axi_awaddr(20) <= \<const0>\;
  m_axi_awaddr(19) <= \<const0>\;
  m_axi_awaddr(18) <= \<const0>\;
  m_axi_awaddr(17) <= \<const0>\;
  m_axi_awaddr(16) <= \<const0>\;
  m_axi_awaddr(15) <= \<const0>\;
  m_axi_awaddr(14) <= \<const0>\;
  m_axi_awaddr(13) <= \<const0>\;
  m_axi_awaddr(12) <= \<const0>\;
  m_axi_awaddr(11) <= \<const0>\;
  m_axi_awaddr(10) <= \<const0>\;
  m_axi_awaddr(9) <= \<const0>\;
  m_axi_awaddr(8) <= \<const0>\;
  m_axi_awaddr(7) <= \<const0>\;
  m_axi_awaddr(6) <= \<const0>\;
  m_axi_awaddr(5) <= \<const0>\;
  m_axi_awaddr(4) <= \<const0>\;
  m_axi_awaddr(3) <= \<const0>\;
  m_axi_awaddr(2) <= \<const0>\;
  m_axi_awaddr(1) <= \<const0>\;
  m_axi_awaddr(0) <= \<const0>\;
  m_axi_awburst(1) <= \<const0>\;
  m_axi_awburst(0) <= \<const0>\;
  m_axi_awcache(3) <= \<const0>\;
  m_axi_awcache(2) <= \<const0>\;
  m_axi_awcache(1) <= \<const0>\;
  m_axi_awcache(0) <= \<const0>\;
  m_axi_awid(0) <= \<const0>\;
  m_axi_awlen(7) <= \<const0>\;
  m_axi_awlen(6) <= \<const0>\;
  m_axi_awlen(5) <= \<const0>\;
  m_axi_awlen(4) <= \<const0>\;
  m_axi_awlen(3) <= \<const0>\;
  m_axi_awlen(2) <= \<const0>\;
  m_axi_awlen(1) <= \<const0>\;
  m_axi_awlen(0) <= \<const0>\;
  m_axi_awlock(0) <= \<const0>\;
  m_axi_awprot(2) <= \<const0>\;
  m_axi_awprot(1) <= \<const0>\;
  m_axi_awprot(0) <= \<const0>\;
  m_axi_awqos(3) <= \<const0>\;
  m_axi_awqos(2) <= \<const0>\;
  m_axi_awqos(1) <= \<const0>\;
  m_axi_awqos(0) <= \<const0>\;
  m_axi_awregion(3) <= \<const0>\;
  m_axi_awregion(2) <= \<const0>\;
  m_axi_awregion(1) <= \<const0>\;
  m_axi_awregion(0) <= \<const0>\;
  m_axi_awsize(2) <= \<const0>\;
  m_axi_awsize(1) <= \<const0>\;
  m_axi_awsize(0) <= \<const0>\;
  m_axi_awuser(0) <= \<const0>\;
  m_axi_awvalid <= \<const0>\;
  m_axi_bready <= \<const0>\;
  m_axi_rready <= \<const0>\;
  m_axi_wdata(63) <= \<const0>\;
  m_axi_wdata(62) <= \<const0>\;
  m_axi_wdata(61) <= \<const0>\;
  m_axi_wdata(60) <= \<const0>\;
  m_axi_wdata(59) <= \<const0>\;
  m_axi_wdata(58) <= \<const0>\;
  m_axi_wdata(57) <= \<const0>\;
  m_axi_wdata(56) <= \<const0>\;
  m_axi_wdata(55) <= \<const0>\;
  m_axi_wdata(54) <= \<const0>\;
  m_axi_wdata(53) <= \<const0>\;
  m_axi_wdata(52) <= \<const0>\;
  m_axi_wdata(51) <= \<const0>\;
  m_axi_wdata(50) <= \<const0>\;
  m_axi_wdata(49) <= \<const0>\;
  m_axi_wdata(48) <= \<const0>\;
  m_axi_wdata(47) <= \<const0>\;
  m_axi_wdata(46) <= \<const0>\;
  m_axi_wdata(45) <= \<const0>\;
  m_axi_wdata(44) <= \<const0>\;
  m_axi_wdata(43) <= \<const0>\;
  m_axi_wdata(42) <= \<const0>\;
  m_axi_wdata(41) <= \<const0>\;
  m_axi_wdata(40) <= \<const0>\;
  m_axi_wdata(39) <= \<const0>\;
  m_axi_wdata(38) <= \<const0>\;
  m_axi_wdata(37) <= \<const0>\;
  m_axi_wdata(36) <= \<const0>\;
  m_axi_wdata(35) <= \<const0>\;
  m_axi_wdata(34) <= \<const0>\;
  m_axi_wdata(33) <= \<const0>\;
  m_axi_wdata(32) <= \<const0>\;
  m_axi_wdata(31) <= \<const0>\;
  m_axi_wdata(30) <= \<const0>\;
  m_axi_wdata(29) <= \<const0>\;
  m_axi_wdata(28) <= \<const0>\;
  m_axi_wdata(27) <= \<const0>\;
  m_axi_wdata(26) <= \<const0>\;
  m_axi_wdata(25) <= \<const0>\;
  m_axi_wdata(24) <= \<const0>\;
  m_axi_wdata(23) <= \<const0>\;
  m_axi_wdata(22) <= \<const0>\;
  m_axi_wdata(21) <= \<const0>\;
  m_axi_wdata(20) <= \<const0>\;
  m_axi_wdata(19) <= \<const0>\;
  m_axi_wdata(18) <= \<const0>\;
  m_axi_wdata(17) <= \<const0>\;
  m_axi_wdata(16) <= \<const0>\;
  m_axi_wdata(15) <= \<const0>\;
  m_axi_wdata(14) <= \<const0>\;
  m_axi_wdata(13) <= \<const0>\;
  m_axi_wdata(12) <= \<const0>\;
  m_axi_wdata(11) <= \<const0>\;
  m_axi_wdata(10) <= \<const0>\;
  m_axi_wdata(9) <= \<const0>\;
  m_axi_wdata(8) <= \<const0>\;
  m_axi_wdata(7) <= \<const0>\;
  m_axi_wdata(6) <= \<const0>\;
  m_axi_wdata(5) <= \<const0>\;
  m_axi_wdata(4) <= \<const0>\;
  m_axi_wdata(3) <= \<const0>\;
  m_axi_wdata(2) <= \<const0>\;
  m_axi_wdata(1) <= \<const0>\;
  m_axi_wdata(0) <= \<const0>\;
  m_axi_wid(0) <= \<const0>\;
  m_axi_wlast <= \<const0>\;
  m_axi_wstrb(7) <= \<const0>\;
  m_axi_wstrb(6) <= \<const0>\;
  m_axi_wstrb(5) <= \<const0>\;
  m_axi_wstrb(4) <= \<const0>\;
  m_axi_wstrb(3) <= \<const0>\;
  m_axi_wstrb(2) <= \<const0>\;
  m_axi_wstrb(1) <= \<const0>\;
  m_axi_wstrb(0) <= \<const0>\;
  m_axi_wuser(0) <= \<const0>\;
  m_axi_wvalid <= \<const0>\;
  m_axis_tdata(7) <= \<const0>\;
  m_axis_tdata(6) <= \<const0>\;
  m_axis_tdata(5) <= \<const0>\;
  m_axis_tdata(4) <= \<const0>\;
  m_axis_tdata(3) <= \<const0>\;
  m_axis_tdata(2) <= \<const0>\;
  m_axis_tdata(1) <= \<const0>\;
  m_axis_tdata(0) <= \<const0>\;
  m_axis_tdest(0) <= \<const0>\;
  m_axis_tid(0) <= \<const0>\;
  m_axis_tkeep(0) <= \<const0>\;
  m_axis_tlast <= \<const0>\;
  m_axis_tstrb(0) <= \<const0>\;
  m_axis_tuser(3) <= \<const0>\;
  m_axis_tuser(2) <= \<const0>\;
  m_axis_tuser(1) <= \<const0>\;
  m_axis_tuser(0) <= \<const0>\;
  m_axis_tvalid <= \<const0>\;
  overflow <= \<const0>\;
  prog_empty <= \<const0>\;
  rd_data_count(8) <= \<const0>\;
  rd_data_count(7) <= \<const0>\;
  rd_data_count(6) <= \<const0>\;
  rd_data_count(5) <= \<const0>\;
  rd_data_count(4) <= \<const0>\;
  rd_data_count(3) <= \<const0>\;
  rd_data_count(2) <= \<const0>\;
  rd_data_count(1) <= \<const0>\;
  rd_data_count(0) <= \<const0>\;
  s_axi_arready <= \<const0>\;
  s_axi_awready <= \<const0>\;
  s_axi_bid(0) <= \<const0>\;
  s_axi_bresp(1) <= \<const0>\;
  s_axi_bresp(0) <= \<const0>\;
  s_axi_buser(0) <= \<const0>\;
  s_axi_bvalid <= \<const0>\;
  s_axi_rdata(63) <= \<const0>\;
  s_axi_rdata(62) <= \<const0>\;
  s_axi_rdata(61) <= \<const0>\;
  s_axi_rdata(60) <= \<const0>\;
  s_axi_rdata(59) <= \<const0>\;
  s_axi_rdata(58) <= \<const0>\;
  s_axi_rdata(57) <= \<const0>\;
  s_axi_rdata(56) <= \<const0>\;
  s_axi_rdata(55) <= \<const0>\;
  s_axi_rdata(54) <= \<const0>\;
  s_axi_rdata(53) <= \<const0>\;
  s_axi_rdata(52) <= \<const0>\;
  s_axi_rdata(51) <= \<const0>\;
  s_axi_rdata(50) <= \<const0>\;
  s_axi_rdata(49) <= \<const0>\;
  s_axi_rdata(48) <= \<const0>\;
  s_axi_rdata(47) <= \<const0>\;
  s_axi_rdata(46) <= \<const0>\;
  s_axi_rdata(45) <= \<const0>\;
  s_axi_rdata(44) <= \<const0>\;
  s_axi_rdata(43) <= \<const0>\;
  s_axi_rdata(42) <= \<const0>\;
  s_axi_rdata(41) <= \<const0>\;
  s_axi_rdata(40) <= \<const0>\;
  s_axi_rdata(39) <= \<const0>\;
  s_axi_rdata(38) <= \<const0>\;
  s_axi_rdata(37) <= \<const0>\;
  s_axi_rdata(36) <= \<const0>\;
  s_axi_rdata(35) <= \<const0>\;
  s_axi_rdata(34) <= \<const0>\;
  s_axi_rdata(33) <= \<const0>\;
  s_axi_rdata(32) <= \<const0>\;
  s_axi_rdata(31) <= \<const0>\;
  s_axi_rdata(30) <= \<const0>\;
  s_axi_rdata(29) <= \<const0>\;
  s_axi_rdata(28) <= \<const0>\;
  s_axi_rdata(27) <= \<const0>\;
  s_axi_rdata(26) <= \<const0>\;
  s_axi_rdata(25) <= \<const0>\;
  s_axi_rdata(24) <= \<const0>\;
  s_axi_rdata(23) <= \<const0>\;
  s_axi_rdata(22) <= \<const0>\;
  s_axi_rdata(21) <= \<const0>\;
  s_axi_rdata(20) <= \<const0>\;
  s_axi_rdata(19) <= \<const0>\;
  s_axi_rdata(18) <= \<const0>\;
  s_axi_rdata(17) <= \<const0>\;
  s_axi_rdata(16) <= \<const0>\;
  s_axi_rdata(15) <= \<const0>\;
  s_axi_rdata(14) <= \<const0>\;
  s_axi_rdata(13) <= \<const0>\;
  s_axi_rdata(12) <= \<const0>\;
  s_axi_rdata(11) <= \<const0>\;
  s_axi_rdata(10) <= \<const0>\;
  s_axi_rdata(9) <= \<const0>\;
  s_axi_rdata(8) <= \<const0>\;
  s_axi_rdata(7) <= \<const0>\;
  s_axi_rdata(6) <= \<const0>\;
  s_axi_rdata(5) <= \<const0>\;
  s_axi_rdata(4) <= \<const0>\;
  s_axi_rdata(3) <= \<const0>\;
  s_axi_rdata(2) <= \<const0>\;
  s_axi_rdata(1) <= \<const0>\;
  s_axi_rdata(0) <= \<const0>\;
  s_axi_rid(0) <= \<const0>\;
  s_axi_rlast <= \<const0>\;
  s_axi_rresp(1) <= \<const0>\;
  s_axi_rresp(0) <= \<const0>\;
  s_axi_ruser(0) <= \<const0>\;
  s_axi_rvalid <= \<const0>\;
  s_axi_wready <= \<const0>\;
  s_axis_tready <= \<const0>\;
  sbiterr <= \<const0>\;
  underflow <= \<const0>\;
  valid <= \<const0>\;
  wr_ack <= \<const0>\;
  wr_data_count(8) <= \<const0>\;
  wr_data_count(7) <= \<const0>\;
  wr_data_count(6) <= \<const0>\;
  wr_data_count(5) <= \<const0>\;
  wr_data_count(4) <= \<const0>\;
  wr_data_count(3) <= \<const0>\;
  wr_data_count(2) <= \<const0>\;
  wr_data_count(1) <= \<const0>\;
  wr_data_count(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
inst_fifo_gen: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_synth
     port map (
      clk => clk,
      din(6 downto 0) => din(6 downto 0),
      dout(6 downto 0) => dout(6 downto 0),
      empty => empty,
      full => full,
      prog_full => prog_full,
      rd_en => rd_en,
      rd_rst_busy => rd_rst_busy,
      srst => srst,
      wr_en => wr_en,
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    valid : out STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 128 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 128 downto 0 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth : entity is "fifo_generator_129_fwft_512depth,fifo_generator_v13_2_2,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth : entity is "fifo_generator_v13_2_2,Vivado 2018.2.1";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth is
  signal NLW_U0_almost_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_almost_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_arvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_awvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_bready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_rready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_arready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_awready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_bvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_wready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axis_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_wr_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_r_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal NLW_U0_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_m_axi_wid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axis_tdest_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tkeep_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tuser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal NLW_U0_s_axi_bid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_s_axi_rid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of U0 : label is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of U0 : label is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of U0 : label is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of U0 : label is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of U0 : label is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of U0 : label is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of U0 : label is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of U0 : label is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of U0 : label is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of U0 : label is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of U0 : label is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of U0 : label is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of U0 : label is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of U0 : label is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of U0 : label is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of U0 : label is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of U0 : label is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of U0 : label is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of U0 : label is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of U0 : label is 129;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of U0 : label is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of U0 : label is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of U0 : label is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of U0 : label is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of U0 : label is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of U0 : label is 129;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of U0 : label is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of U0 : label is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of U0 : label is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of U0 : label is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of U0 : label is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of U0 : label is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of U0 : label is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of U0 : label is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of U0 : label is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of U0 : label is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of U0 : label is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of U0 : label is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of U0 : label is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of U0 : label is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of U0 : label is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of U0 : label is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of U0 : label is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of U0 : label is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of U0 : label is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of U0 : label is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of U0 : label is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of U0 : label is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of U0 : label is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of U0 : label is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of U0 : label is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of U0 : label is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of U0 : label is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of U0 : label is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of U0 : label is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of U0 : label is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of U0 : label is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of U0 : label is 1;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of U0 : label is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of U0 : label is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of U0 : label is 6;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of U0 : label is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of U0 : label is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of U0 : label is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of U0 : label is 4;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of U0 : label is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of U0 : label is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of U0 : label is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of U0 : label is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of U0 : label is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of U0 : label is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of U0 : label is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of U0 : label is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of U0 : label is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of U0 : label is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of U0 : label is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of U0 : label is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of U0 : label is 480;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of U0 : label is 479;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of U0 : label is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of U0 : label is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of U0 : label is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of U0 : label is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of U0 : label is 512;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of U0 : label is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of U0 : label is 9;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of U0 : label is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of U0 : label is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of U0 : label is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of U0 : label is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of U0 : label is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of U0 : label is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of U0 : label is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of U0 : label is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of U0 : label is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of U0 : label is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of U0 : label is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of U0 : label is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of U0 : label is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of U0 : label is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of U0 : label is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of U0 : label is 1;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of U0 : label is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of U0 : label is 0;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of U0 : label is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of U0 : label is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of U0 : label is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of U0 : label is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of U0 : label is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of U0 : label is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of U0 : label is 512;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of U0 : label is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of U0 : label is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of U0 : label is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of U0 : label is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of U0 : label is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of U0 : label is 9;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of U0 : label is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of U0 : label is 1;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of clk : signal is "xilinx.com:signal:clock:1.0 core_clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of clk : signal is "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of empty : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY";
  attribute X_INTERFACE_INFO of full : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL";
  attribute X_INTERFACE_INFO of rd_en : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN";
  attribute X_INTERFACE_INFO of wr_en : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN";
begin
U0: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2
     port map (
      almost_empty => NLW_U0_almost_empty_UNCONNECTED,
      almost_full => NLW_U0_almost_full_UNCONNECTED,
      axi_ar_data_count(4 downto 0) => NLW_U0_axi_ar_data_count_UNCONNECTED(4 downto 0),
      axi_ar_dbiterr => NLW_U0_axi_ar_dbiterr_UNCONNECTED,
      axi_ar_injectdbiterr => '0',
      axi_ar_injectsbiterr => '0',
      axi_ar_overflow => NLW_U0_axi_ar_overflow_UNCONNECTED,
      axi_ar_prog_empty => NLW_U0_axi_ar_prog_empty_UNCONNECTED,
      axi_ar_prog_empty_thresh(3 downto 0) => B"0000",
      axi_ar_prog_full => NLW_U0_axi_ar_prog_full_UNCONNECTED,
      axi_ar_prog_full_thresh(3 downto 0) => B"0000",
      axi_ar_rd_data_count(4 downto 0) => NLW_U0_axi_ar_rd_data_count_UNCONNECTED(4 downto 0),
      axi_ar_sbiterr => NLW_U0_axi_ar_sbiterr_UNCONNECTED,
      axi_ar_underflow => NLW_U0_axi_ar_underflow_UNCONNECTED,
      axi_ar_wr_data_count(4 downto 0) => NLW_U0_axi_ar_wr_data_count_UNCONNECTED(4 downto 0),
      axi_aw_data_count(4 downto 0) => NLW_U0_axi_aw_data_count_UNCONNECTED(4 downto 0),
      axi_aw_dbiterr => NLW_U0_axi_aw_dbiterr_UNCONNECTED,
      axi_aw_injectdbiterr => '0',
      axi_aw_injectsbiterr => '0',
      axi_aw_overflow => NLW_U0_axi_aw_overflow_UNCONNECTED,
      axi_aw_prog_empty => NLW_U0_axi_aw_prog_empty_UNCONNECTED,
      axi_aw_prog_empty_thresh(3 downto 0) => B"0000",
      axi_aw_prog_full => NLW_U0_axi_aw_prog_full_UNCONNECTED,
      axi_aw_prog_full_thresh(3 downto 0) => B"0000",
      axi_aw_rd_data_count(4 downto 0) => NLW_U0_axi_aw_rd_data_count_UNCONNECTED(4 downto 0),
      axi_aw_sbiterr => NLW_U0_axi_aw_sbiterr_UNCONNECTED,
      axi_aw_underflow => NLW_U0_axi_aw_underflow_UNCONNECTED,
      axi_aw_wr_data_count(4 downto 0) => NLW_U0_axi_aw_wr_data_count_UNCONNECTED(4 downto 0),
      axi_b_data_count(4 downto 0) => NLW_U0_axi_b_data_count_UNCONNECTED(4 downto 0),
      axi_b_dbiterr => NLW_U0_axi_b_dbiterr_UNCONNECTED,
      axi_b_injectdbiterr => '0',
      axi_b_injectsbiterr => '0',
      axi_b_overflow => NLW_U0_axi_b_overflow_UNCONNECTED,
      axi_b_prog_empty => NLW_U0_axi_b_prog_empty_UNCONNECTED,
      axi_b_prog_empty_thresh(3 downto 0) => B"0000",
      axi_b_prog_full => NLW_U0_axi_b_prog_full_UNCONNECTED,
      axi_b_prog_full_thresh(3 downto 0) => B"0000",
      axi_b_rd_data_count(4 downto 0) => NLW_U0_axi_b_rd_data_count_UNCONNECTED(4 downto 0),
      axi_b_sbiterr => NLW_U0_axi_b_sbiterr_UNCONNECTED,
      axi_b_underflow => NLW_U0_axi_b_underflow_UNCONNECTED,
      axi_b_wr_data_count(4 downto 0) => NLW_U0_axi_b_wr_data_count_UNCONNECTED(4 downto 0),
      axi_r_data_count(10 downto 0) => NLW_U0_axi_r_data_count_UNCONNECTED(10 downto 0),
      axi_r_dbiterr => NLW_U0_axi_r_dbiterr_UNCONNECTED,
      axi_r_injectdbiterr => '0',
      axi_r_injectsbiterr => '0',
      axi_r_overflow => NLW_U0_axi_r_overflow_UNCONNECTED,
      axi_r_prog_empty => NLW_U0_axi_r_prog_empty_UNCONNECTED,
      axi_r_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_r_prog_full => NLW_U0_axi_r_prog_full_UNCONNECTED,
      axi_r_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_r_rd_data_count(10 downto 0) => NLW_U0_axi_r_rd_data_count_UNCONNECTED(10 downto 0),
      axi_r_sbiterr => NLW_U0_axi_r_sbiterr_UNCONNECTED,
      axi_r_underflow => NLW_U0_axi_r_underflow_UNCONNECTED,
      axi_r_wr_data_count(10 downto 0) => NLW_U0_axi_r_wr_data_count_UNCONNECTED(10 downto 0),
      axi_w_data_count(10 downto 0) => NLW_U0_axi_w_data_count_UNCONNECTED(10 downto 0),
      axi_w_dbiterr => NLW_U0_axi_w_dbiterr_UNCONNECTED,
      axi_w_injectdbiterr => '0',
      axi_w_injectsbiterr => '0',
      axi_w_overflow => NLW_U0_axi_w_overflow_UNCONNECTED,
      axi_w_prog_empty => NLW_U0_axi_w_prog_empty_UNCONNECTED,
      axi_w_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_w_prog_full => NLW_U0_axi_w_prog_full_UNCONNECTED,
      axi_w_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_w_rd_data_count(10 downto 0) => NLW_U0_axi_w_rd_data_count_UNCONNECTED(10 downto 0),
      axi_w_sbiterr => NLW_U0_axi_w_sbiterr_UNCONNECTED,
      axi_w_underflow => NLW_U0_axi_w_underflow_UNCONNECTED,
      axi_w_wr_data_count(10 downto 0) => NLW_U0_axi_w_wr_data_count_UNCONNECTED(10 downto 0),
      axis_data_count(10 downto 0) => NLW_U0_axis_data_count_UNCONNECTED(10 downto 0),
      axis_dbiterr => NLW_U0_axis_dbiterr_UNCONNECTED,
      axis_injectdbiterr => '0',
      axis_injectsbiterr => '0',
      axis_overflow => NLW_U0_axis_overflow_UNCONNECTED,
      axis_prog_empty => NLW_U0_axis_prog_empty_UNCONNECTED,
      axis_prog_empty_thresh(9 downto 0) => B"0000000000",
      axis_prog_full => NLW_U0_axis_prog_full_UNCONNECTED,
      axis_prog_full_thresh(9 downto 0) => B"0000000000",
      axis_rd_data_count(10 downto 0) => NLW_U0_axis_rd_data_count_UNCONNECTED(10 downto 0),
      axis_sbiterr => NLW_U0_axis_sbiterr_UNCONNECTED,
      axis_underflow => NLW_U0_axis_underflow_UNCONNECTED,
      axis_wr_data_count(10 downto 0) => NLW_U0_axis_wr_data_count_UNCONNECTED(10 downto 0),
      backup => '0',
      backup_marker => '0',
      clk => clk,
      data_count(8 downto 0) => NLW_U0_data_count_UNCONNECTED(8 downto 0),
      dbiterr => NLW_U0_dbiterr_UNCONNECTED,
      din(128 downto 0) => din(128 downto 0),
      dout(128 downto 0) => dout(128 downto 0),
      empty => empty,
      full => full,
      injectdbiterr => '0',
      injectsbiterr => '0',
      int_clk => '0',
      m_aclk => '0',
      m_aclk_en => '0',
      m_axi_araddr(31 downto 0) => NLW_U0_m_axi_araddr_UNCONNECTED(31 downto 0),
      m_axi_arburst(1 downto 0) => NLW_U0_m_axi_arburst_UNCONNECTED(1 downto 0),
      m_axi_arcache(3 downto 0) => NLW_U0_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(0) => NLW_U0_m_axi_arid_UNCONNECTED(0),
      m_axi_arlen(7 downto 0) => NLW_U0_m_axi_arlen_UNCONNECTED(7 downto 0),
      m_axi_arlock(0) => NLW_U0_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => NLW_U0_m_axi_arprot_UNCONNECTED(2 downto 0),
      m_axi_arqos(3 downto 0) => NLW_U0_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => '0',
      m_axi_arregion(3 downto 0) => NLW_U0_m_axi_arregion_UNCONNECTED(3 downto 0),
      m_axi_arsize(2 downto 0) => NLW_U0_m_axi_arsize_UNCONNECTED(2 downto 0),
      m_axi_aruser(0) => NLW_U0_m_axi_aruser_UNCONNECTED(0),
      m_axi_arvalid => NLW_U0_m_axi_arvalid_UNCONNECTED,
      m_axi_awaddr(31 downto 0) => NLW_U0_m_axi_awaddr_UNCONNECTED(31 downto 0),
      m_axi_awburst(1 downto 0) => NLW_U0_m_axi_awburst_UNCONNECTED(1 downto 0),
      m_axi_awcache(3 downto 0) => NLW_U0_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(0) => NLW_U0_m_axi_awid_UNCONNECTED(0),
      m_axi_awlen(7 downto 0) => NLW_U0_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_U0_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => NLW_U0_m_axi_awprot_UNCONNECTED(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_U0_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => '0',
      m_axi_awregion(3 downto 0) => NLW_U0_m_axi_awregion_UNCONNECTED(3 downto 0),
      m_axi_awsize(2 downto 0) => NLW_U0_m_axi_awsize_UNCONNECTED(2 downto 0),
      m_axi_awuser(0) => NLW_U0_m_axi_awuser_UNCONNECTED(0),
      m_axi_awvalid => NLW_U0_m_axi_awvalid_UNCONNECTED,
      m_axi_bid(0) => '0',
      m_axi_bready => NLW_U0_m_axi_bready_UNCONNECTED,
      m_axi_bresp(1 downto 0) => B"00",
      m_axi_buser(0) => '0',
      m_axi_bvalid => '0',
      m_axi_rdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      m_axi_rid(0) => '0',
      m_axi_rlast => '0',
      m_axi_rready => NLW_U0_m_axi_rready_UNCONNECTED,
      m_axi_rresp(1 downto 0) => B"00",
      m_axi_ruser(0) => '0',
      m_axi_rvalid => '0',
      m_axi_wdata(63 downto 0) => NLW_U0_m_axi_wdata_UNCONNECTED(63 downto 0),
      m_axi_wid(0) => NLW_U0_m_axi_wid_UNCONNECTED(0),
      m_axi_wlast => NLW_U0_m_axi_wlast_UNCONNECTED,
      m_axi_wready => '0',
      m_axi_wstrb(7 downto 0) => NLW_U0_m_axi_wstrb_UNCONNECTED(7 downto 0),
      m_axi_wuser(0) => NLW_U0_m_axi_wuser_UNCONNECTED(0),
      m_axi_wvalid => NLW_U0_m_axi_wvalid_UNCONNECTED,
      m_axis_tdata(7 downto 0) => NLW_U0_m_axis_tdata_UNCONNECTED(7 downto 0),
      m_axis_tdest(0) => NLW_U0_m_axis_tdest_UNCONNECTED(0),
      m_axis_tid(0) => NLW_U0_m_axis_tid_UNCONNECTED(0),
      m_axis_tkeep(0) => NLW_U0_m_axis_tkeep_UNCONNECTED(0),
      m_axis_tlast => NLW_U0_m_axis_tlast_UNCONNECTED,
      m_axis_tready => '0',
      m_axis_tstrb(0) => NLW_U0_m_axis_tstrb_UNCONNECTED(0),
      m_axis_tuser(3 downto 0) => NLW_U0_m_axis_tuser_UNCONNECTED(3 downto 0),
      m_axis_tvalid => NLW_U0_m_axis_tvalid_UNCONNECTED,
      overflow => NLW_U0_overflow_UNCONNECTED,
      prog_empty => NLW_U0_prog_empty_UNCONNECTED,
      prog_empty_thresh(8 downto 0) => B"000000000",
      prog_empty_thresh_assert(8 downto 0) => B"000000000",
      prog_empty_thresh_negate(8 downto 0) => B"000000000",
      prog_full => prog_full,
      prog_full_thresh(8 downto 0) => B"000000000",
      prog_full_thresh_assert(8 downto 0) => B"000000000",
      prog_full_thresh_negate(8 downto 0) => B"000000000",
      rd_clk => '0',
      rd_data_count(8 downto 0) => NLW_U0_rd_data_count_UNCONNECTED(8 downto 0),
      rd_en => rd_en,
      rd_rst => '0',
      rd_rst_busy => rd_rst_busy,
      rst => '0',
      s_aclk => '0',
      s_aclk_en => '0',
      s_aresetn => '0',
      s_axi_araddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_arburst(1 downto 0) => B"00",
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(0) => '0',
      s_axi_arlen(7 downto 0) => B"00000000",
      s_axi_arlock(0) => '0',
      s_axi_arprot(2 downto 0) => B"000",
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => NLW_U0_s_axi_arready_UNCONNECTED,
      s_axi_arregion(3 downto 0) => B"0000",
      s_axi_arsize(2 downto 0) => B"000",
      s_axi_aruser(0) => '0',
      s_axi_arvalid => '0',
      s_axi_awaddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_awburst(1 downto 0) => B"00",
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(0) => '0',
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awlock(0) => '0',
      s_axi_awprot(2 downto 0) => B"000",
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => NLW_U0_s_axi_awready_UNCONNECTED,
      s_axi_awregion(3 downto 0) => B"0000",
      s_axi_awsize(2 downto 0) => B"000",
      s_axi_awuser(0) => '0',
      s_axi_awvalid => '0',
      s_axi_bid(0) => NLW_U0_s_axi_bid_UNCONNECTED(0),
      s_axi_bready => '0',
      s_axi_bresp(1 downto 0) => NLW_U0_s_axi_bresp_UNCONNECTED(1 downto 0),
      s_axi_buser(0) => NLW_U0_s_axi_buser_UNCONNECTED(0),
      s_axi_bvalid => NLW_U0_s_axi_bvalid_UNCONNECTED,
      s_axi_rdata(63 downto 0) => NLW_U0_s_axi_rdata_UNCONNECTED(63 downto 0),
      s_axi_rid(0) => NLW_U0_s_axi_rid_UNCONNECTED(0),
      s_axi_rlast => NLW_U0_s_axi_rlast_UNCONNECTED,
      s_axi_rready => '0',
      s_axi_rresp(1 downto 0) => NLW_U0_s_axi_rresp_UNCONNECTED(1 downto 0),
      s_axi_ruser(0) => NLW_U0_s_axi_ruser_UNCONNECTED(0),
      s_axi_rvalid => NLW_U0_s_axi_rvalid_UNCONNECTED,
      s_axi_wdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      s_axi_wid(0) => '0',
      s_axi_wlast => '0',
      s_axi_wready => NLW_U0_s_axi_wready_UNCONNECTED,
      s_axi_wstrb(7 downto 0) => B"00000000",
      s_axi_wuser(0) => '0',
      s_axi_wvalid => '0',
      s_axis_tdata(7 downto 0) => B"00000000",
      s_axis_tdest(0) => '0',
      s_axis_tid(0) => '0',
      s_axis_tkeep(0) => '0',
      s_axis_tlast => '0',
      s_axis_tready => NLW_U0_s_axis_tready_UNCONNECTED,
      s_axis_tstrb(0) => '0',
      s_axis_tuser(3 downto 0) => B"0000",
      s_axis_tvalid => '0',
      sbiterr => NLW_U0_sbiterr_UNCONNECTED,
      sleep => '0',
      srst => srst,
      underflow => NLW_U0_underflow_UNCONNECTED,
      valid => valid,
      wr_ack => NLW_U0_wr_ack_UNCONNECTED,
      wr_clk => '0',
      wr_data_count(8 downto 0) => NLW_U0_wr_data_count_UNCONNECTED(8 downto 0),
      wr_en => wr_en,
      wr_rst => '0',
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth : entity is "fifo_generator_32b_fwft_512depth,fifo_generator_v13_2_2,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth : entity is "fifo_generator_v13_2_2,Vivado 2018.2.1";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth is
  signal NLW_U0_almost_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_almost_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_arvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_awvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_bready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_rready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_arready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_awready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_bvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_wready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axis_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_valid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_wr_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_r_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal NLW_U0_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_m_axi_wid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axis_tdest_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tkeep_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tuser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal NLW_U0_s_axi_bid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_s_axi_rid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of U0 : label is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of U0 : label is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of U0 : label is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of U0 : label is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of U0 : label is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of U0 : label is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of U0 : label is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of U0 : label is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of U0 : label is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of U0 : label is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of U0 : label is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of U0 : label is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of U0 : label is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of U0 : label is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of U0 : label is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of U0 : label is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of U0 : label is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of U0 : label is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of U0 : label is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of U0 : label is 32;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of U0 : label is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of U0 : label is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of U0 : label is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of U0 : label is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of U0 : label is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of U0 : label is 32;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of U0 : label is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of U0 : label is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of U0 : label is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of U0 : label is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of U0 : label is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of U0 : label is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of U0 : label is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of U0 : label is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of U0 : label is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of U0 : label is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of U0 : label is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of U0 : label is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of U0 : label is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of U0 : label is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of U0 : label is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of U0 : label is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of U0 : label is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of U0 : label is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of U0 : label is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of U0 : label is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of U0 : label is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of U0 : label is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of U0 : label is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of U0 : label is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of U0 : label is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of U0 : label is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of U0 : label is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of U0 : label is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of U0 : label is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of U0 : label is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of U0 : label is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of U0 : label is 0;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of U0 : label is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of U0 : label is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of U0 : label is 6;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of U0 : label is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of U0 : label is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of U0 : label is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of U0 : label is 4;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of U0 : label is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of U0 : label is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of U0 : label is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of U0 : label is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of U0 : label is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of U0 : label is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of U0 : label is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of U0 : label is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of U0 : label is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of U0 : label is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of U0 : label is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of U0 : label is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of U0 : label is 400;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of U0 : label is 399;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of U0 : label is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of U0 : label is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of U0 : label is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of U0 : label is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of U0 : label is 512;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of U0 : label is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of U0 : label is 9;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of U0 : label is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of U0 : label is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of U0 : label is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of U0 : label is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of U0 : label is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of U0 : label is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of U0 : label is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of U0 : label is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of U0 : label is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of U0 : label is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of U0 : label is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of U0 : label is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of U0 : label is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of U0 : label is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of U0 : label is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of U0 : label is 1;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of U0 : label is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of U0 : label is 0;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of U0 : label is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of U0 : label is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of U0 : label is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of U0 : label is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of U0 : label is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of U0 : label is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of U0 : label is 512;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of U0 : label is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of U0 : label is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of U0 : label is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of U0 : label is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of U0 : label is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of U0 : label is 9;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of U0 : label is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of U0 : label is 1;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of clk : signal is "xilinx.com:signal:clock:1.0 core_clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of clk : signal is "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of empty : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY";
  attribute X_INTERFACE_INFO of full : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL";
  attribute X_INTERFACE_INFO of rd_en : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN";
  attribute X_INTERFACE_INFO of wr_en : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN";
begin
U0: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2
     port map (
      almost_empty => NLW_U0_almost_empty_UNCONNECTED,
      almost_full => NLW_U0_almost_full_UNCONNECTED,
      axi_ar_data_count(4 downto 0) => NLW_U0_axi_ar_data_count_UNCONNECTED(4 downto 0),
      axi_ar_dbiterr => NLW_U0_axi_ar_dbiterr_UNCONNECTED,
      axi_ar_injectdbiterr => '0',
      axi_ar_injectsbiterr => '0',
      axi_ar_overflow => NLW_U0_axi_ar_overflow_UNCONNECTED,
      axi_ar_prog_empty => NLW_U0_axi_ar_prog_empty_UNCONNECTED,
      axi_ar_prog_empty_thresh(3 downto 0) => B"0000",
      axi_ar_prog_full => NLW_U0_axi_ar_prog_full_UNCONNECTED,
      axi_ar_prog_full_thresh(3 downto 0) => B"0000",
      axi_ar_rd_data_count(4 downto 0) => NLW_U0_axi_ar_rd_data_count_UNCONNECTED(4 downto 0),
      axi_ar_sbiterr => NLW_U0_axi_ar_sbiterr_UNCONNECTED,
      axi_ar_underflow => NLW_U0_axi_ar_underflow_UNCONNECTED,
      axi_ar_wr_data_count(4 downto 0) => NLW_U0_axi_ar_wr_data_count_UNCONNECTED(4 downto 0),
      axi_aw_data_count(4 downto 0) => NLW_U0_axi_aw_data_count_UNCONNECTED(4 downto 0),
      axi_aw_dbiterr => NLW_U0_axi_aw_dbiterr_UNCONNECTED,
      axi_aw_injectdbiterr => '0',
      axi_aw_injectsbiterr => '0',
      axi_aw_overflow => NLW_U0_axi_aw_overflow_UNCONNECTED,
      axi_aw_prog_empty => NLW_U0_axi_aw_prog_empty_UNCONNECTED,
      axi_aw_prog_empty_thresh(3 downto 0) => B"0000",
      axi_aw_prog_full => NLW_U0_axi_aw_prog_full_UNCONNECTED,
      axi_aw_prog_full_thresh(3 downto 0) => B"0000",
      axi_aw_rd_data_count(4 downto 0) => NLW_U0_axi_aw_rd_data_count_UNCONNECTED(4 downto 0),
      axi_aw_sbiterr => NLW_U0_axi_aw_sbiterr_UNCONNECTED,
      axi_aw_underflow => NLW_U0_axi_aw_underflow_UNCONNECTED,
      axi_aw_wr_data_count(4 downto 0) => NLW_U0_axi_aw_wr_data_count_UNCONNECTED(4 downto 0),
      axi_b_data_count(4 downto 0) => NLW_U0_axi_b_data_count_UNCONNECTED(4 downto 0),
      axi_b_dbiterr => NLW_U0_axi_b_dbiterr_UNCONNECTED,
      axi_b_injectdbiterr => '0',
      axi_b_injectsbiterr => '0',
      axi_b_overflow => NLW_U0_axi_b_overflow_UNCONNECTED,
      axi_b_prog_empty => NLW_U0_axi_b_prog_empty_UNCONNECTED,
      axi_b_prog_empty_thresh(3 downto 0) => B"0000",
      axi_b_prog_full => NLW_U0_axi_b_prog_full_UNCONNECTED,
      axi_b_prog_full_thresh(3 downto 0) => B"0000",
      axi_b_rd_data_count(4 downto 0) => NLW_U0_axi_b_rd_data_count_UNCONNECTED(4 downto 0),
      axi_b_sbiterr => NLW_U0_axi_b_sbiterr_UNCONNECTED,
      axi_b_underflow => NLW_U0_axi_b_underflow_UNCONNECTED,
      axi_b_wr_data_count(4 downto 0) => NLW_U0_axi_b_wr_data_count_UNCONNECTED(4 downto 0),
      axi_r_data_count(10 downto 0) => NLW_U0_axi_r_data_count_UNCONNECTED(10 downto 0),
      axi_r_dbiterr => NLW_U0_axi_r_dbiterr_UNCONNECTED,
      axi_r_injectdbiterr => '0',
      axi_r_injectsbiterr => '0',
      axi_r_overflow => NLW_U0_axi_r_overflow_UNCONNECTED,
      axi_r_prog_empty => NLW_U0_axi_r_prog_empty_UNCONNECTED,
      axi_r_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_r_prog_full => NLW_U0_axi_r_prog_full_UNCONNECTED,
      axi_r_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_r_rd_data_count(10 downto 0) => NLW_U0_axi_r_rd_data_count_UNCONNECTED(10 downto 0),
      axi_r_sbiterr => NLW_U0_axi_r_sbiterr_UNCONNECTED,
      axi_r_underflow => NLW_U0_axi_r_underflow_UNCONNECTED,
      axi_r_wr_data_count(10 downto 0) => NLW_U0_axi_r_wr_data_count_UNCONNECTED(10 downto 0),
      axi_w_data_count(10 downto 0) => NLW_U0_axi_w_data_count_UNCONNECTED(10 downto 0),
      axi_w_dbiterr => NLW_U0_axi_w_dbiterr_UNCONNECTED,
      axi_w_injectdbiterr => '0',
      axi_w_injectsbiterr => '0',
      axi_w_overflow => NLW_U0_axi_w_overflow_UNCONNECTED,
      axi_w_prog_empty => NLW_U0_axi_w_prog_empty_UNCONNECTED,
      axi_w_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_w_prog_full => NLW_U0_axi_w_prog_full_UNCONNECTED,
      axi_w_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_w_rd_data_count(10 downto 0) => NLW_U0_axi_w_rd_data_count_UNCONNECTED(10 downto 0),
      axi_w_sbiterr => NLW_U0_axi_w_sbiterr_UNCONNECTED,
      axi_w_underflow => NLW_U0_axi_w_underflow_UNCONNECTED,
      axi_w_wr_data_count(10 downto 0) => NLW_U0_axi_w_wr_data_count_UNCONNECTED(10 downto 0),
      axis_data_count(10 downto 0) => NLW_U0_axis_data_count_UNCONNECTED(10 downto 0),
      axis_dbiterr => NLW_U0_axis_dbiterr_UNCONNECTED,
      axis_injectdbiterr => '0',
      axis_injectsbiterr => '0',
      axis_overflow => NLW_U0_axis_overflow_UNCONNECTED,
      axis_prog_empty => NLW_U0_axis_prog_empty_UNCONNECTED,
      axis_prog_empty_thresh(9 downto 0) => B"0000000000",
      axis_prog_full => NLW_U0_axis_prog_full_UNCONNECTED,
      axis_prog_full_thresh(9 downto 0) => B"0000000000",
      axis_rd_data_count(10 downto 0) => NLW_U0_axis_rd_data_count_UNCONNECTED(10 downto 0),
      axis_sbiterr => NLW_U0_axis_sbiterr_UNCONNECTED,
      axis_underflow => NLW_U0_axis_underflow_UNCONNECTED,
      axis_wr_data_count(10 downto 0) => NLW_U0_axis_wr_data_count_UNCONNECTED(10 downto 0),
      backup => '0',
      backup_marker => '0',
      clk => clk,
      data_count(8 downto 0) => NLW_U0_data_count_UNCONNECTED(8 downto 0),
      dbiterr => NLW_U0_dbiterr_UNCONNECTED,
      din(31 downto 0) => din(31 downto 0),
      dout(31 downto 0) => dout(31 downto 0),
      empty => empty,
      full => full,
      injectdbiterr => '0',
      injectsbiterr => '0',
      int_clk => '0',
      m_aclk => '0',
      m_aclk_en => '0',
      m_axi_araddr(31 downto 0) => NLW_U0_m_axi_araddr_UNCONNECTED(31 downto 0),
      m_axi_arburst(1 downto 0) => NLW_U0_m_axi_arburst_UNCONNECTED(1 downto 0),
      m_axi_arcache(3 downto 0) => NLW_U0_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(0) => NLW_U0_m_axi_arid_UNCONNECTED(0),
      m_axi_arlen(7 downto 0) => NLW_U0_m_axi_arlen_UNCONNECTED(7 downto 0),
      m_axi_arlock(0) => NLW_U0_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => NLW_U0_m_axi_arprot_UNCONNECTED(2 downto 0),
      m_axi_arqos(3 downto 0) => NLW_U0_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => '0',
      m_axi_arregion(3 downto 0) => NLW_U0_m_axi_arregion_UNCONNECTED(3 downto 0),
      m_axi_arsize(2 downto 0) => NLW_U0_m_axi_arsize_UNCONNECTED(2 downto 0),
      m_axi_aruser(0) => NLW_U0_m_axi_aruser_UNCONNECTED(0),
      m_axi_arvalid => NLW_U0_m_axi_arvalid_UNCONNECTED,
      m_axi_awaddr(31 downto 0) => NLW_U0_m_axi_awaddr_UNCONNECTED(31 downto 0),
      m_axi_awburst(1 downto 0) => NLW_U0_m_axi_awburst_UNCONNECTED(1 downto 0),
      m_axi_awcache(3 downto 0) => NLW_U0_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(0) => NLW_U0_m_axi_awid_UNCONNECTED(0),
      m_axi_awlen(7 downto 0) => NLW_U0_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_U0_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => NLW_U0_m_axi_awprot_UNCONNECTED(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_U0_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => '0',
      m_axi_awregion(3 downto 0) => NLW_U0_m_axi_awregion_UNCONNECTED(3 downto 0),
      m_axi_awsize(2 downto 0) => NLW_U0_m_axi_awsize_UNCONNECTED(2 downto 0),
      m_axi_awuser(0) => NLW_U0_m_axi_awuser_UNCONNECTED(0),
      m_axi_awvalid => NLW_U0_m_axi_awvalid_UNCONNECTED,
      m_axi_bid(0) => '0',
      m_axi_bready => NLW_U0_m_axi_bready_UNCONNECTED,
      m_axi_bresp(1 downto 0) => B"00",
      m_axi_buser(0) => '0',
      m_axi_bvalid => '0',
      m_axi_rdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      m_axi_rid(0) => '0',
      m_axi_rlast => '0',
      m_axi_rready => NLW_U0_m_axi_rready_UNCONNECTED,
      m_axi_rresp(1 downto 0) => B"00",
      m_axi_ruser(0) => '0',
      m_axi_rvalid => '0',
      m_axi_wdata(63 downto 0) => NLW_U0_m_axi_wdata_UNCONNECTED(63 downto 0),
      m_axi_wid(0) => NLW_U0_m_axi_wid_UNCONNECTED(0),
      m_axi_wlast => NLW_U0_m_axi_wlast_UNCONNECTED,
      m_axi_wready => '0',
      m_axi_wstrb(7 downto 0) => NLW_U0_m_axi_wstrb_UNCONNECTED(7 downto 0),
      m_axi_wuser(0) => NLW_U0_m_axi_wuser_UNCONNECTED(0),
      m_axi_wvalid => NLW_U0_m_axi_wvalid_UNCONNECTED,
      m_axis_tdata(7 downto 0) => NLW_U0_m_axis_tdata_UNCONNECTED(7 downto 0),
      m_axis_tdest(0) => NLW_U0_m_axis_tdest_UNCONNECTED(0),
      m_axis_tid(0) => NLW_U0_m_axis_tid_UNCONNECTED(0),
      m_axis_tkeep(0) => NLW_U0_m_axis_tkeep_UNCONNECTED(0),
      m_axis_tlast => NLW_U0_m_axis_tlast_UNCONNECTED,
      m_axis_tready => '0',
      m_axis_tstrb(0) => NLW_U0_m_axis_tstrb_UNCONNECTED(0),
      m_axis_tuser(3 downto 0) => NLW_U0_m_axis_tuser_UNCONNECTED(3 downto 0),
      m_axis_tvalid => NLW_U0_m_axis_tvalid_UNCONNECTED,
      overflow => NLW_U0_overflow_UNCONNECTED,
      prog_empty => NLW_U0_prog_empty_UNCONNECTED,
      prog_empty_thresh(8 downto 0) => B"000000000",
      prog_empty_thresh_assert(8 downto 0) => B"000000000",
      prog_empty_thresh_negate(8 downto 0) => B"000000000",
      prog_full => prog_full,
      prog_full_thresh(8 downto 0) => B"000000000",
      prog_full_thresh_assert(8 downto 0) => B"000000000",
      prog_full_thresh_negate(8 downto 0) => B"000000000",
      rd_clk => '0',
      rd_data_count(8 downto 0) => NLW_U0_rd_data_count_UNCONNECTED(8 downto 0),
      rd_en => rd_en,
      rd_rst => '0',
      rd_rst_busy => rd_rst_busy,
      rst => '0',
      s_aclk => '0',
      s_aclk_en => '0',
      s_aresetn => '0',
      s_axi_araddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_arburst(1 downto 0) => B"00",
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(0) => '0',
      s_axi_arlen(7 downto 0) => B"00000000",
      s_axi_arlock(0) => '0',
      s_axi_arprot(2 downto 0) => B"000",
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => NLW_U0_s_axi_arready_UNCONNECTED,
      s_axi_arregion(3 downto 0) => B"0000",
      s_axi_arsize(2 downto 0) => B"000",
      s_axi_aruser(0) => '0',
      s_axi_arvalid => '0',
      s_axi_awaddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_awburst(1 downto 0) => B"00",
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(0) => '0',
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awlock(0) => '0',
      s_axi_awprot(2 downto 0) => B"000",
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => NLW_U0_s_axi_awready_UNCONNECTED,
      s_axi_awregion(3 downto 0) => B"0000",
      s_axi_awsize(2 downto 0) => B"000",
      s_axi_awuser(0) => '0',
      s_axi_awvalid => '0',
      s_axi_bid(0) => NLW_U0_s_axi_bid_UNCONNECTED(0),
      s_axi_bready => '0',
      s_axi_bresp(1 downto 0) => NLW_U0_s_axi_bresp_UNCONNECTED(1 downto 0),
      s_axi_buser(0) => NLW_U0_s_axi_buser_UNCONNECTED(0),
      s_axi_bvalid => NLW_U0_s_axi_bvalid_UNCONNECTED,
      s_axi_rdata(63 downto 0) => NLW_U0_s_axi_rdata_UNCONNECTED(63 downto 0),
      s_axi_rid(0) => NLW_U0_s_axi_rid_UNCONNECTED(0),
      s_axi_rlast => NLW_U0_s_axi_rlast_UNCONNECTED,
      s_axi_rready => '0',
      s_axi_rresp(1 downto 0) => NLW_U0_s_axi_rresp_UNCONNECTED(1 downto 0),
      s_axi_ruser(0) => NLW_U0_s_axi_ruser_UNCONNECTED(0),
      s_axi_rvalid => NLW_U0_s_axi_rvalid_UNCONNECTED,
      s_axi_wdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      s_axi_wid(0) => '0',
      s_axi_wlast => '0',
      s_axi_wready => NLW_U0_s_axi_wready_UNCONNECTED,
      s_axi_wstrb(7 downto 0) => B"00000000",
      s_axi_wuser(0) => '0',
      s_axi_wvalid => '0',
      s_axis_tdata(7 downto 0) => B"00000000",
      s_axis_tdest(0) => '0',
      s_axis_tid(0) => '0',
      s_axis_tkeep(0) => '0',
      s_axis_tlast => '0',
      s_axis_tready => NLW_U0_s_axis_tready_UNCONNECTED,
      s_axis_tstrb(0) => '0',
      s_axis_tuser(3 downto 0) => B"0000",
      s_axis_tvalid => '0',
      sbiterr => NLW_U0_sbiterr_UNCONNECTED,
      sleep => '0',
      srst => srst,
      underflow => NLW_U0_underflow_UNCONNECTED,
      valid => NLW_U0_valid_UNCONNECTED,
      wr_ack => NLW_U0_wr_ack_UNCONNECTED,
      wr_clk => '0',
      wr_data_count(8 downto 0) => NLW_U0_wr_data_count_UNCONNECTED(8 downto 0),
      wr_en => wr_en,
      wr_rst => '0',
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth is
  port (
    clk : in STD_LOGIC;
    empty : out STD_LOGIC;
    full : out STD_LOGIC;
    prog_full : out STD_LOGIC;
    rd_en : in STD_LOGIC;
    rd_rst_busy : out STD_LOGIC;
    srst : in STD_LOGIC;
    wr_en : in STD_LOGIC;
    wr_rst_busy : out STD_LOGIC;
    din : in STD_LOGIC_VECTOR ( 6 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 6 downto 0 )
  );
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth : entity is "fifo_generator_7b_fwft_512depth,fifo_generator_v13_2_2,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth : entity is "yes";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth : entity is "fifo_generator_v13_2_2,Vivado 2018.2.1";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth is
  signal NLW_U0_almost_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_almost_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_aw_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_b_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_r_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_w_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axis_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_dbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_arvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_awvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_bready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_rready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axi_wvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_m_axis_tvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_overflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_prog_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_arready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_awready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_bvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rlast_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_rvalid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axi_wready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_s_axis_tready_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_sbiterr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_underflow_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_valid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_wr_ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_axi_ar_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_ar_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_aw_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_b_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_axi_r_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_r_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axi_w_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_axis_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal NLW_U0_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal NLW_U0_m_axi_araddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_arburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_arcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_arlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_arprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_arqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_arsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_aruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awaddr_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_m_axi_awburst_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_m_axi_awcache_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awlen_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_awlock_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_awprot_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awqos_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awregion_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_m_axi_awsize_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_m_axi_awuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_m_axi_wid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axi_wstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axi_wuser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tdata_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_m_axis_tdest_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tkeep_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tstrb_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_m_axis_tuser_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_rd_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal NLW_U0_s_axi_bid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_bresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_buser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rdata_UNCONNECTED : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal NLW_U0_s_axi_rid_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_s_axi_rresp_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_s_axi_ruser_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_wr_data_count_UNCONNECTED : STD_LOGIC_VECTOR ( 8 downto 0 );
  attribute C_ADD_NGC_CONSTRAINT : integer;
  attribute C_ADD_NGC_CONSTRAINT of U0 : label is 0;
  attribute C_APPLICATION_TYPE_AXIS : integer;
  attribute C_APPLICATION_TYPE_AXIS of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RACH : integer;
  attribute C_APPLICATION_TYPE_RACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_RDCH : integer;
  attribute C_APPLICATION_TYPE_RDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WACH : integer;
  attribute C_APPLICATION_TYPE_WACH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WDCH : integer;
  attribute C_APPLICATION_TYPE_WDCH of U0 : label is 0;
  attribute C_APPLICATION_TYPE_WRCH : integer;
  attribute C_APPLICATION_TYPE_WRCH of U0 : label is 0;
  attribute C_AXIS_TDATA_WIDTH : integer;
  attribute C_AXIS_TDATA_WIDTH of U0 : label is 8;
  attribute C_AXIS_TDEST_WIDTH : integer;
  attribute C_AXIS_TDEST_WIDTH of U0 : label is 1;
  attribute C_AXIS_TID_WIDTH : integer;
  attribute C_AXIS_TID_WIDTH of U0 : label is 1;
  attribute C_AXIS_TKEEP_WIDTH : integer;
  attribute C_AXIS_TKEEP_WIDTH of U0 : label is 1;
  attribute C_AXIS_TSTRB_WIDTH : integer;
  attribute C_AXIS_TSTRB_WIDTH of U0 : label is 1;
  attribute C_AXIS_TUSER_WIDTH : integer;
  attribute C_AXIS_TUSER_WIDTH of U0 : label is 4;
  attribute C_AXIS_TYPE : integer;
  attribute C_AXIS_TYPE of U0 : label is 0;
  attribute C_AXI_ADDR_WIDTH : integer;
  attribute C_AXI_ADDR_WIDTH of U0 : label is 32;
  attribute C_AXI_ARUSER_WIDTH : integer;
  attribute C_AXI_ARUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_AWUSER_WIDTH : integer;
  attribute C_AXI_AWUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_BUSER_WIDTH : integer;
  attribute C_AXI_BUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_DATA_WIDTH : integer;
  attribute C_AXI_DATA_WIDTH of U0 : label is 64;
  attribute C_AXI_ID_WIDTH : integer;
  attribute C_AXI_ID_WIDTH of U0 : label is 1;
  attribute C_AXI_LEN_WIDTH : integer;
  attribute C_AXI_LEN_WIDTH of U0 : label is 8;
  attribute C_AXI_LOCK_WIDTH : integer;
  attribute C_AXI_LOCK_WIDTH of U0 : label is 1;
  attribute C_AXI_RUSER_WIDTH : integer;
  attribute C_AXI_RUSER_WIDTH of U0 : label is 1;
  attribute C_AXI_TYPE : integer;
  attribute C_AXI_TYPE of U0 : label is 1;
  attribute C_AXI_WUSER_WIDTH : integer;
  attribute C_AXI_WUSER_WIDTH of U0 : label is 1;
  attribute C_COMMON_CLOCK : integer;
  attribute C_COMMON_CLOCK of U0 : label is 1;
  attribute C_COUNT_TYPE : integer;
  attribute C_COUNT_TYPE of U0 : label is 0;
  attribute C_DATA_COUNT_WIDTH : integer;
  attribute C_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_DEFAULT_VALUE : string;
  attribute C_DEFAULT_VALUE of U0 : label is "BlankString";
  attribute C_DIN_WIDTH : integer;
  attribute C_DIN_WIDTH of U0 : label is 7;
  attribute C_DIN_WIDTH_AXIS : integer;
  attribute C_DIN_WIDTH_AXIS of U0 : label is 1;
  attribute C_DIN_WIDTH_RACH : integer;
  attribute C_DIN_WIDTH_RACH of U0 : label is 32;
  attribute C_DIN_WIDTH_RDCH : integer;
  attribute C_DIN_WIDTH_RDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WACH : integer;
  attribute C_DIN_WIDTH_WACH of U0 : label is 1;
  attribute C_DIN_WIDTH_WDCH : integer;
  attribute C_DIN_WIDTH_WDCH of U0 : label is 64;
  attribute C_DIN_WIDTH_WRCH : integer;
  attribute C_DIN_WIDTH_WRCH of U0 : label is 2;
  attribute C_DOUT_RST_VAL : string;
  attribute C_DOUT_RST_VAL of U0 : label is "0";
  attribute C_DOUT_WIDTH : integer;
  attribute C_DOUT_WIDTH of U0 : label is 7;
  attribute C_ENABLE_RLOCS : integer;
  attribute C_ENABLE_RLOCS of U0 : label is 0;
  attribute C_ENABLE_RST_SYNC : integer;
  attribute C_ENABLE_RST_SYNC of U0 : label is 1;
  attribute C_EN_SAFETY_CKT : integer;
  attribute C_EN_SAFETY_CKT of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE : integer;
  attribute C_ERROR_INJECTION_TYPE of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_AXIS : integer;
  attribute C_ERROR_INJECTION_TYPE_AXIS of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RACH : integer;
  attribute C_ERROR_INJECTION_TYPE_RACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_RDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_RDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WACH : integer;
  attribute C_ERROR_INJECTION_TYPE_WACH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WDCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WDCH of U0 : label is 0;
  attribute C_ERROR_INJECTION_TYPE_WRCH : integer;
  attribute C_ERROR_INJECTION_TYPE_WRCH of U0 : label is 0;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "zynquplus";
  attribute C_FULL_FLAGS_RST_VAL : integer;
  attribute C_FULL_FLAGS_RST_VAL of U0 : label is 0;
  attribute C_HAS_ALMOST_EMPTY : integer;
  attribute C_HAS_ALMOST_EMPTY of U0 : label is 0;
  attribute C_HAS_ALMOST_FULL : integer;
  attribute C_HAS_ALMOST_FULL of U0 : label is 0;
  attribute C_HAS_AXIS_TDATA : integer;
  attribute C_HAS_AXIS_TDATA of U0 : label is 1;
  attribute C_HAS_AXIS_TDEST : integer;
  attribute C_HAS_AXIS_TDEST of U0 : label is 0;
  attribute C_HAS_AXIS_TID : integer;
  attribute C_HAS_AXIS_TID of U0 : label is 0;
  attribute C_HAS_AXIS_TKEEP : integer;
  attribute C_HAS_AXIS_TKEEP of U0 : label is 0;
  attribute C_HAS_AXIS_TLAST : integer;
  attribute C_HAS_AXIS_TLAST of U0 : label is 0;
  attribute C_HAS_AXIS_TREADY : integer;
  attribute C_HAS_AXIS_TREADY of U0 : label is 1;
  attribute C_HAS_AXIS_TSTRB : integer;
  attribute C_HAS_AXIS_TSTRB of U0 : label is 0;
  attribute C_HAS_AXIS_TUSER : integer;
  attribute C_HAS_AXIS_TUSER of U0 : label is 1;
  attribute C_HAS_AXI_ARUSER : integer;
  attribute C_HAS_AXI_ARUSER of U0 : label is 0;
  attribute C_HAS_AXI_AWUSER : integer;
  attribute C_HAS_AXI_AWUSER of U0 : label is 0;
  attribute C_HAS_AXI_BUSER : integer;
  attribute C_HAS_AXI_BUSER of U0 : label is 0;
  attribute C_HAS_AXI_ID : integer;
  attribute C_HAS_AXI_ID of U0 : label is 0;
  attribute C_HAS_AXI_RD_CHANNEL : integer;
  attribute C_HAS_AXI_RD_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_RUSER : integer;
  attribute C_HAS_AXI_RUSER of U0 : label is 0;
  attribute C_HAS_AXI_WR_CHANNEL : integer;
  attribute C_HAS_AXI_WR_CHANNEL of U0 : label is 1;
  attribute C_HAS_AXI_WUSER : integer;
  attribute C_HAS_AXI_WUSER of U0 : label is 0;
  attribute C_HAS_BACKUP : integer;
  attribute C_HAS_BACKUP of U0 : label is 0;
  attribute C_HAS_DATA_COUNT : integer;
  attribute C_HAS_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_AXIS : integer;
  attribute C_HAS_DATA_COUNTS_AXIS of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RACH : integer;
  attribute C_HAS_DATA_COUNTS_RACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_RDCH : integer;
  attribute C_HAS_DATA_COUNTS_RDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WACH : integer;
  attribute C_HAS_DATA_COUNTS_WACH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WDCH : integer;
  attribute C_HAS_DATA_COUNTS_WDCH of U0 : label is 0;
  attribute C_HAS_DATA_COUNTS_WRCH : integer;
  attribute C_HAS_DATA_COUNTS_WRCH of U0 : label is 0;
  attribute C_HAS_INT_CLK : integer;
  attribute C_HAS_INT_CLK of U0 : label is 0;
  attribute C_HAS_MASTER_CE : integer;
  attribute C_HAS_MASTER_CE of U0 : label is 0;
  attribute C_HAS_MEMINIT_FILE : integer;
  attribute C_HAS_MEMINIT_FILE of U0 : label is 0;
  attribute C_HAS_OVERFLOW : integer;
  attribute C_HAS_OVERFLOW of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_AXIS : integer;
  attribute C_HAS_PROG_FLAGS_AXIS of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RACH : integer;
  attribute C_HAS_PROG_FLAGS_RACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_RDCH : integer;
  attribute C_HAS_PROG_FLAGS_RDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WACH : integer;
  attribute C_HAS_PROG_FLAGS_WACH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WDCH : integer;
  attribute C_HAS_PROG_FLAGS_WDCH of U0 : label is 0;
  attribute C_HAS_PROG_FLAGS_WRCH : integer;
  attribute C_HAS_PROG_FLAGS_WRCH of U0 : label is 0;
  attribute C_HAS_RD_DATA_COUNT : integer;
  attribute C_HAS_RD_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_RD_RST : integer;
  attribute C_HAS_RD_RST of U0 : label is 0;
  attribute C_HAS_RST : integer;
  attribute C_HAS_RST of U0 : label is 0;
  attribute C_HAS_SLAVE_CE : integer;
  attribute C_HAS_SLAVE_CE of U0 : label is 0;
  attribute C_HAS_SRST : integer;
  attribute C_HAS_SRST of U0 : label is 1;
  attribute C_HAS_UNDERFLOW : integer;
  attribute C_HAS_UNDERFLOW of U0 : label is 0;
  attribute C_HAS_VALID : integer;
  attribute C_HAS_VALID of U0 : label is 0;
  attribute C_HAS_WR_ACK : integer;
  attribute C_HAS_WR_ACK of U0 : label is 0;
  attribute C_HAS_WR_DATA_COUNT : integer;
  attribute C_HAS_WR_DATA_COUNT of U0 : label is 0;
  attribute C_HAS_WR_RST : integer;
  attribute C_HAS_WR_RST of U0 : label is 0;
  attribute C_IMPLEMENTATION_TYPE : integer;
  attribute C_IMPLEMENTATION_TYPE of U0 : label is 6;
  attribute C_IMPLEMENTATION_TYPE_AXIS : integer;
  attribute C_IMPLEMENTATION_TYPE_AXIS of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RACH : integer;
  attribute C_IMPLEMENTATION_TYPE_RACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_RDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_RDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WACH : integer;
  attribute C_IMPLEMENTATION_TYPE_WACH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WDCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WDCH of U0 : label is 1;
  attribute C_IMPLEMENTATION_TYPE_WRCH : integer;
  attribute C_IMPLEMENTATION_TYPE_WRCH of U0 : label is 1;
  attribute C_INIT_WR_PNTR_VAL : integer;
  attribute C_INIT_WR_PNTR_VAL of U0 : label is 0;
  attribute C_INTERFACE_TYPE : integer;
  attribute C_INTERFACE_TYPE of U0 : label is 0;
  attribute C_MEMORY_TYPE : integer;
  attribute C_MEMORY_TYPE of U0 : label is 4;
  attribute C_MIF_FILE_NAME : string;
  attribute C_MIF_FILE_NAME of U0 : label is "BlankString";
  attribute C_MSGON_VAL : integer;
  attribute C_MSGON_VAL of U0 : label is 1;
  attribute C_OPTIMIZATION_MODE : integer;
  attribute C_OPTIMIZATION_MODE of U0 : label is 0;
  attribute C_OVERFLOW_LOW : integer;
  attribute C_OVERFLOW_LOW of U0 : label is 0;
  attribute C_POWER_SAVING_MODE : integer;
  attribute C_POWER_SAVING_MODE of U0 : label is 0;
  attribute C_PRELOAD_LATENCY : integer;
  attribute C_PRELOAD_LATENCY of U0 : label is 0;
  attribute C_PRELOAD_REGS : integer;
  attribute C_PRELOAD_REGS of U0 : label is 1;
  attribute C_PRIM_FIFO_TYPE : string;
  attribute C_PRIM_FIFO_TYPE of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_AXIS : string;
  attribute C_PRIM_FIFO_TYPE_AXIS of U0 : label is "1kx18";
  attribute C_PRIM_FIFO_TYPE_RACH : string;
  attribute C_PRIM_FIFO_TYPE_RACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_RDCH : string;
  attribute C_PRIM_FIFO_TYPE_RDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WACH : string;
  attribute C_PRIM_FIFO_TYPE_WACH of U0 : label is "512x36";
  attribute C_PRIM_FIFO_TYPE_WDCH : string;
  attribute C_PRIM_FIFO_TYPE_WDCH of U0 : label is "512x72";
  attribute C_PRIM_FIFO_TYPE_WRCH : string;
  attribute C_PRIM_FIFO_TYPE_WRCH of U0 : label is "512x36";
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL of U0 : label is 4;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH of U0 : label is 1022;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_EMPTY_THRESH_NEGATE_VAL of U0 : label is 5;
  attribute C_PROG_EMPTY_TYPE : integer;
  attribute C_PROG_EMPTY_TYPE of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_AXIS : integer;
  attribute C_PROG_EMPTY_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RACH : integer;
  attribute C_PROG_EMPTY_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_RDCH : integer;
  attribute C_PROG_EMPTY_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WACH : integer;
  attribute C_PROG_EMPTY_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WDCH : integer;
  attribute C_PROG_EMPTY_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_EMPTY_TYPE_WRCH : integer;
  attribute C_PROG_EMPTY_TYPE_WRCH of U0 : label is 0;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL of U0 : label is 400;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_AXIS of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_RDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WACH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WDCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH : integer;
  attribute C_PROG_FULL_THRESH_ASSERT_VAL_WRCH of U0 : label is 1023;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL : integer;
  attribute C_PROG_FULL_THRESH_NEGATE_VAL of U0 : label is 399;
  attribute C_PROG_FULL_TYPE : integer;
  attribute C_PROG_FULL_TYPE of U0 : label is 1;
  attribute C_PROG_FULL_TYPE_AXIS : integer;
  attribute C_PROG_FULL_TYPE_AXIS of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RACH : integer;
  attribute C_PROG_FULL_TYPE_RACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_RDCH : integer;
  attribute C_PROG_FULL_TYPE_RDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WACH : integer;
  attribute C_PROG_FULL_TYPE_WACH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WDCH : integer;
  attribute C_PROG_FULL_TYPE_WDCH of U0 : label is 0;
  attribute C_PROG_FULL_TYPE_WRCH : integer;
  attribute C_PROG_FULL_TYPE_WRCH of U0 : label is 0;
  attribute C_RACH_TYPE : integer;
  attribute C_RACH_TYPE of U0 : label is 0;
  attribute C_RDCH_TYPE : integer;
  attribute C_RDCH_TYPE of U0 : label is 0;
  attribute C_RD_DATA_COUNT_WIDTH : integer;
  attribute C_RD_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_RD_DEPTH : integer;
  attribute C_RD_DEPTH of U0 : label is 512;
  attribute C_RD_FREQ : integer;
  attribute C_RD_FREQ of U0 : label is 1;
  attribute C_RD_PNTR_WIDTH : integer;
  attribute C_RD_PNTR_WIDTH of U0 : label is 9;
  attribute C_REG_SLICE_MODE_AXIS : integer;
  attribute C_REG_SLICE_MODE_AXIS of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RACH : integer;
  attribute C_REG_SLICE_MODE_RACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_RDCH : integer;
  attribute C_REG_SLICE_MODE_RDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WACH : integer;
  attribute C_REG_SLICE_MODE_WACH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WDCH : integer;
  attribute C_REG_SLICE_MODE_WDCH of U0 : label is 0;
  attribute C_REG_SLICE_MODE_WRCH : integer;
  attribute C_REG_SLICE_MODE_WRCH of U0 : label is 0;
  attribute C_SELECT_XPM : integer;
  attribute C_SELECT_XPM of U0 : label is 0;
  attribute C_SYNCHRONIZER_STAGE : integer;
  attribute C_SYNCHRONIZER_STAGE of U0 : label is 2;
  attribute C_UNDERFLOW_LOW : integer;
  attribute C_UNDERFLOW_LOW of U0 : label is 0;
  attribute C_USE_COMMON_OVERFLOW : integer;
  attribute C_USE_COMMON_OVERFLOW of U0 : label is 0;
  attribute C_USE_COMMON_UNDERFLOW : integer;
  attribute C_USE_COMMON_UNDERFLOW of U0 : label is 0;
  attribute C_USE_DEFAULT_SETTINGS : integer;
  attribute C_USE_DEFAULT_SETTINGS of U0 : label is 0;
  attribute C_USE_DOUT_RST : integer;
  attribute C_USE_DOUT_RST of U0 : label is 1;
  attribute C_USE_ECC : integer;
  attribute C_USE_ECC of U0 : label is 0;
  attribute C_USE_ECC_AXIS : integer;
  attribute C_USE_ECC_AXIS of U0 : label is 0;
  attribute C_USE_ECC_RACH : integer;
  attribute C_USE_ECC_RACH of U0 : label is 0;
  attribute C_USE_ECC_RDCH : integer;
  attribute C_USE_ECC_RDCH of U0 : label is 0;
  attribute C_USE_ECC_WACH : integer;
  attribute C_USE_ECC_WACH of U0 : label is 0;
  attribute C_USE_ECC_WDCH : integer;
  attribute C_USE_ECC_WDCH of U0 : label is 0;
  attribute C_USE_ECC_WRCH : integer;
  attribute C_USE_ECC_WRCH of U0 : label is 0;
  attribute C_USE_EMBEDDED_REG : integer;
  attribute C_USE_EMBEDDED_REG of U0 : label is 1;
  attribute C_USE_FIFO16_FLAGS : integer;
  attribute C_USE_FIFO16_FLAGS of U0 : label is 0;
  attribute C_USE_FWFT_DATA_COUNT : integer;
  attribute C_USE_FWFT_DATA_COUNT of U0 : label is 0;
  attribute C_USE_PIPELINE_REG : integer;
  attribute C_USE_PIPELINE_REG of U0 : label is 0;
  attribute C_VALID_LOW : integer;
  attribute C_VALID_LOW of U0 : label is 0;
  attribute C_WACH_TYPE : integer;
  attribute C_WACH_TYPE of U0 : label is 0;
  attribute C_WDCH_TYPE : integer;
  attribute C_WDCH_TYPE of U0 : label is 0;
  attribute C_WRCH_TYPE : integer;
  attribute C_WRCH_TYPE of U0 : label is 0;
  attribute C_WR_ACK_LOW : integer;
  attribute C_WR_ACK_LOW of U0 : label is 0;
  attribute C_WR_DATA_COUNT_WIDTH : integer;
  attribute C_WR_DATA_COUNT_WIDTH of U0 : label is 9;
  attribute C_WR_DEPTH : integer;
  attribute C_WR_DEPTH of U0 : label is 512;
  attribute C_WR_DEPTH_AXIS : integer;
  attribute C_WR_DEPTH_AXIS of U0 : label is 1024;
  attribute C_WR_DEPTH_RACH : integer;
  attribute C_WR_DEPTH_RACH of U0 : label is 16;
  attribute C_WR_DEPTH_RDCH : integer;
  attribute C_WR_DEPTH_RDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WACH : integer;
  attribute C_WR_DEPTH_WACH of U0 : label is 16;
  attribute C_WR_DEPTH_WDCH : integer;
  attribute C_WR_DEPTH_WDCH of U0 : label is 1024;
  attribute C_WR_DEPTH_WRCH : integer;
  attribute C_WR_DEPTH_WRCH of U0 : label is 16;
  attribute C_WR_FREQ : integer;
  attribute C_WR_FREQ of U0 : label is 1;
  attribute C_WR_PNTR_WIDTH : integer;
  attribute C_WR_PNTR_WIDTH of U0 : label is 9;
  attribute C_WR_PNTR_WIDTH_AXIS : integer;
  attribute C_WR_PNTR_WIDTH_AXIS of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_RACH : integer;
  attribute C_WR_PNTR_WIDTH_RACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_RDCH : integer;
  attribute C_WR_PNTR_WIDTH_RDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WACH : integer;
  attribute C_WR_PNTR_WIDTH_WACH of U0 : label is 4;
  attribute C_WR_PNTR_WIDTH_WDCH : integer;
  attribute C_WR_PNTR_WIDTH_WDCH of U0 : label is 10;
  attribute C_WR_PNTR_WIDTH_WRCH : integer;
  attribute C_WR_PNTR_WIDTH_WRCH of U0 : label is 4;
  attribute C_WR_RESPONSE_LATENCY : integer;
  attribute C_WR_RESPONSE_LATENCY of U0 : label is 1;
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of clk : signal is "xilinx.com:signal:clock:1.0 core_clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of clk : signal is "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000";
  attribute X_INTERFACE_INFO of empty : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY";
  attribute X_INTERFACE_INFO of full : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL";
  attribute X_INTERFACE_INFO of rd_en : signal is "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN";
  attribute X_INTERFACE_INFO of wr_en : signal is "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN";
begin
U0: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2
     port map (
      almost_empty => NLW_U0_almost_empty_UNCONNECTED,
      almost_full => NLW_U0_almost_full_UNCONNECTED,
      axi_ar_data_count(4 downto 0) => NLW_U0_axi_ar_data_count_UNCONNECTED(4 downto 0),
      axi_ar_dbiterr => NLW_U0_axi_ar_dbiterr_UNCONNECTED,
      axi_ar_injectdbiterr => '0',
      axi_ar_injectsbiterr => '0',
      axi_ar_overflow => NLW_U0_axi_ar_overflow_UNCONNECTED,
      axi_ar_prog_empty => NLW_U0_axi_ar_prog_empty_UNCONNECTED,
      axi_ar_prog_empty_thresh(3 downto 0) => B"0000",
      axi_ar_prog_full => NLW_U0_axi_ar_prog_full_UNCONNECTED,
      axi_ar_prog_full_thresh(3 downto 0) => B"0000",
      axi_ar_rd_data_count(4 downto 0) => NLW_U0_axi_ar_rd_data_count_UNCONNECTED(4 downto 0),
      axi_ar_sbiterr => NLW_U0_axi_ar_sbiterr_UNCONNECTED,
      axi_ar_underflow => NLW_U0_axi_ar_underflow_UNCONNECTED,
      axi_ar_wr_data_count(4 downto 0) => NLW_U0_axi_ar_wr_data_count_UNCONNECTED(4 downto 0),
      axi_aw_data_count(4 downto 0) => NLW_U0_axi_aw_data_count_UNCONNECTED(4 downto 0),
      axi_aw_dbiterr => NLW_U0_axi_aw_dbiterr_UNCONNECTED,
      axi_aw_injectdbiterr => '0',
      axi_aw_injectsbiterr => '0',
      axi_aw_overflow => NLW_U0_axi_aw_overflow_UNCONNECTED,
      axi_aw_prog_empty => NLW_U0_axi_aw_prog_empty_UNCONNECTED,
      axi_aw_prog_empty_thresh(3 downto 0) => B"0000",
      axi_aw_prog_full => NLW_U0_axi_aw_prog_full_UNCONNECTED,
      axi_aw_prog_full_thresh(3 downto 0) => B"0000",
      axi_aw_rd_data_count(4 downto 0) => NLW_U0_axi_aw_rd_data_count_UNCONNECTED(4 downto 0),
      axi_aw_sbiterr => NLW_U0_axi_aw_sbiterr_UNCONNECTED,
      axi_aw_underflow => NLW_U0_axi_aw_underflow_UNCONNECTED,
      axi_aw_wr_data_count(4 downto 0) => NLW_U0_axi_aw_wr_data_count_UNCONNECTED(4 downto 0),
      axi_b_data_count(4 downto 0) => NLW_U0_axi_b_data_count_UNCONNECTED(4 downto 0),
      axi_b_dbiterr => NLW_U0_axi_b_dbiterr_UNCONNECTED,
      axi_b_injectdbiterr => '0',
      axi_b_injectsbiterr => '0',
      axi_b_overflow => NLW_U0_axi_b_overflow_UNCONNECTED,
      axi_b_prog_empty => NLW_U0_axi_b_prog_empty_UNCONNECTED,
      axi_b_prog_empty_thresh(3 downto 0) => B"0000",
      axi_b_prog_full => NLW_U0_axi_b_prog_full_UNCONNECTED,
      axi_b_prog_full_thresh(3 downto 0) => B"0000",
      axi_b_rd_data_count(4 downto 0) => NLW_U0_axi_b_rd_data_count_UNCONNECTED(4 downto 0),
      axi_b_sbiterr => NLW_U0_axi_b_sbiterr_UNCONNECTED,
      axi_b_underflow => NLW_U0_axi_b_underflow_UNCONNECTED,
      axi_b_wr_data_count(4 downto 0) => NLW_U0_axi_b_wr_data_count_UNCONNECTED(4 downto 0),
      axi_r_data_count(10 downto 0) => NLW_U0_axi_r_data_count_UNCONNECTED(10 downto 0),
      axi_r_dbiterr => NLW_U0_axi_r_dbiterr_UNCONNECTED,
      axi_r_injectdbiterr => '0',
      axi_r_injectsbiterr => '0',
      axi_r_overflow => NLW_U0_axi_r_overflow_UNCONNECTED,
      axi_r_prog_empty => NLW_U0_axi_r_prog_empty_UNCONNECTED,
      axi_r_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_r_prog_full => NLW_U0_axi_r_prog_full_UNCONNECTED,
      axi_r_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_r_rd_data_count(10 downto 0) => NLW_U0_axi_r_rd_data_count_UNCONNECTED(10 downto 0),
      axi_r_sbiterr => NLW_U0_axi_r_sbiterr_UNCONNECTED,
      axi_r_underflow => NLW_U0_axi_r_underflow_UNCONNECTED,
      axi_r_wr_data_count(10 downto 0) => NLW_U0_axi_r_wr_data_count_UNCONNECTED(10 downto 0),
      axi_w_data_count(10 downto 0) => NLW_U0_axi_w_data_count_UNCONNECTED(10 downto 0),
      axi_w_dbiterr => NLW_U0_axi_w_dbiterr_UNCONNECTED,
      axi_w_injectdbiterr => '0',
      axi_w_injectsbiterr => '0',
      axi_w_overflow => NLW_U0_axi_w_overflow_UNCONNECTED,
      axi_w_prog_empty => NLW_U0_axi_w_prog_empty_UNCONNECTED,
      axi_w_prog_empty_thresh(9 downto 0) => B"0000000000",
      axi_w_prog_full => NLW_U0_axi_w_prog_full_UNCONNECTED,
      axi_w_prog_full_thresh(9 downto 0) => B"0000000000",
      axi_w_rd_data_count(10 downto 0) => NLW_U0_axi_w_rd_data_count_UNCONNECTED(10 downto 0),
      axi_w_sbiterr => NLW_U0_axi_w_sbiterr_UNCONNECTED,
      axi_w_underflow => NLW_U0_axi_w_underflow_UNCONNECTED,
      axi_w_wr_data_count(10 downto 0) => NLW_U0_axi_w_wr_data_count_UNCONNECTED(10 downto 0),
      axis_data_count(10 downto 0) => NLW_U0_axis_data_count_UNCONNECTED(10 downto 0),
      axis_dbiterr => NLW_U0_axis_dbiterr_UNCONNECTED,
      axis_injectdbiterr => '0',
      axis_injectsbiterr => '0',
      axis_overflow => NLW_U0_axis_overflow_UNCONNECTED,
      axis_prog_empty => NLW_U0_axis_prog_empty_UNCONNECTED,
      axis_prog_empty_thresh(9 downto 0) => B"0000000000",
      axis_prog_full => NLW_U0_axis_prog_full_UNCONNECTED,
      axis_prog_full_thresh(9 downto 0) => B"0000000000",
      axis_rd_data_count(10 downto 0) => NLW_U0_axis_rd_data_count_UNCONNECTED(10 downto 0),
      axis_sbiterr => NLW_U0_axis_sbiterr_UNCONNECTED,
      axis_underflow => NLW_U0_axis_underflow_UNCONNECTED,
      axis_wr_data_count(10 downto 0) => NLW_U0_axis_wr_data_count_UNCONNECTED(10 downto 0),
      backup => '0',
      backup_marker => '0',
      clk => clk,
      data_count(8 downto 0) => NLW_U0_data_count_UNCONNECTED(8 downto 0),
      dbiterr => NLW_U0_dbiterr_UNCONNECTED,
      din(6 downto 0) => din(6 downto 0),
      dout(6 downto 0) => dout(6 downto 0),
      empty => empty,
      full => full,
      injectdbiterr => '0',
      injectsbiterr => '0',
      int_clk => '0',
      m_aclk => '0',
      m_aclk_en => '0',
      m_axi_araddr(31 downto 0) => NLW_U0_m_axi_araddr_UNCONNECTED(31 downto 0),
      m_axi_arburst(1 downto 0) => NLW_U0_m_axi_arburst_UNCONNECTED(1 downto 0),
      m_axi_arcache(3 downto 0) => NLW_U0_m_axi_arcache_UNCONNECTED(3 downto 0),
      m_axi_arid(0) => NLW_U0_m_axi_arid_UNCONNECTED(0),
      m_axi_arlen(7 downto 0) => NLW_U0_m_axi_arlen_UNCONNECTED(7 downto 0),
      m_axi_arlock(0) => NLW_U0_m_axi_arlock_UNCONNECTED(0),
      m_axi_arprot(2 downto 0) => NLW_U0_m_axi_arprot_UNCONNECTED(2 downto 0),
      m_axi_arqos(3 downto 0) => NLW_U0_m_axi_arqos_UNCONNECTED(3 downto 0),
      m_axi_arready => '0',
      m_axi_arregion(3 downto 0) => NLW_U0_m_axi_arregion_UNCONNECTED(3 downto 0),
      m_axi_arsize(2 downto 0) => NLW_U0_m_axi_arsize_UNCONNECTED(2 downto 0),
      m_axi_aruser(0) => NLW_U0_m_axi_aruser_UNCONNECTED(0),
      m_axi_arvalid => NLW_U0_m_axi_arvalid_UNCONNECTED,
      m_axi_awaddr(31 downto 0) => NLW_U0_m_axi_awaddr_UNCONNECTED(31 downto 0),
      m_axi_awburst(1 downto 0) => NLW_U0_m_axi_awburst_UNCONNECTED(1 downto 0),
      m_axi_awcache(3 downto 0) => NLW_U0_m_axi_awcache_UNCONNECTED(3 downto 0),
      m_axi_awid(0) => NLW_U0_m_axi_awid_UNCONNECTED(0),
      m_axi_awlen(7 downto 0) => NLW_U0_m_axi_awlen_UNCONNECTED(7 downto 0),
      m_axi_awlock(0) => NLW_U0_m_axi_awlock_UNCONNECTED(0),
      m_axi_awprot(2 downto 0) => NLW_U0_m_axi_awprot_UNCONNECTED(2 downto 0),
      m_axi_awqos(3 downto 0) => NLW_U0_m_axi_awqos_UNCONNECTED(3 downto 0),
      m_axi_awready => '0',
      m_axi_awregion(3 downto 0) => NLW_U0_m_axi_awregion_UNCONNECTED(3 downto 0),
      m_axi_awsize(2 downto 0) => NLW_U0_m_axi_awsize_UNCONNECTED(2 downto 0),
      m_axi_awuser(0) => NLW_U0_m_axi_awuser_UNCONNECTED(0),
      m_axi_awvalid => NLW_U0_m_axi_awvalid_UNCONNECTED,
      m_axi_bid(0) => '0',
      m_axi_bready => NLW_U0_m_axi_bready_UNCONNECTED,
      m_axi_bresp(1 downto 0) => B"00",
      m_axi_buser(0) => '0',
      m_axi_bvalid => '0',
      m_axi_rdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      m_axi_rid(0) => '0',
      m_axi_rlast => '0',
      m_axi_rready => NLW_U0_m_axi_rready_UNCONNECTED,
      m_axi_rresp(1 downto 0) => B"00",
      m_axi_ruser(0) => '0',
      m_axi_rvalid => '0',
      m_axi_wdata(63 downto 0) => NLW_U0_m_axi_wdata_UNCONNECTED(63 downto 0),
      m_axi_wid(0) => NLW_U0_m_axi_wid_UNCONNECTED(0),
      m_axi_wlast => NLW_U0_m_axi_wlast_UNCONNECTED,
      m_axi_wready => '0',
      m_axi_wstrb(7 downto 0) => NLW_U0_m_axi_wstrb_UNCONNECTED(7 downto 0),
      m_axi_wuser(0) => NLW_U0_m_axi_wuser_UNCONNECTED(0),
      m_axi_wvalid => NLW_U0_m_axi_wvalid_UNCONNECTED,
      m_axis_tdata(7 downto 0) => NLW_U0_m_axis_tdata_UNCONNECTED(7 downto 0),
      m_axis_tdest(0) => NLW_U0_m_axis_tdest_UNCONNECTED(0),
      m_axis_tid(0) => NLW_U0_m_axis_tid_UNCONNECTED(0),
      m_axis_tkeep(0) => NLW_U0_m_axis_tkeep_UNCONNECTED(0),
      m_axis_tlast => NLW_U0_m_axis_tlast_UNCONNECTED,
      m_axis_tready => '0',
      m_axis_tstrb(0) => NLW_U0_m_axis_tstrb_UNCONNECTED(0),
      m_axis_tuser(3 downto 0) => NLW_U0_m_axis_tuser_UNCONNECTED(3 downto 0),
      m_axis_tvalid => NLW_U0_m_axis_tvalid_UNCONNECTED,
      overflow => NLW_U0_overflow_UNCONNECTED,
      prog_empty => NLW_U0_prog_empty_UNCONNECTED,
      prog_empty_thresh(8 downto 0) => B"000000000",
      prog_empty_thresh_assert(8 downto 0) => B"000000000",
      prog_empty_thresh_negate(8 downto 0) => B"000000000",
      prog_full => prog_full,
      prog_full_thresh(8 downto 0) => B"000000000",
      prog_full_thresh_assert(8 downto 0) => B"000000000",
      prog_full_thresh_negate(8 downto 0) => B"000000000",
      rd_clk => '0',
      rd_data_count(8 downto 0) => NLW_U0_rd_data_count_UNCONNECTED(8 downto 0),
      rd_en => rd_en,
      rd_rst => '0',
      rd_rst_busy => rd_rst_busy,
      rst => '0',
      s_aclk => '0',
      s_aclk_en => '0',
      s_aresetn => '0',
      s_axi_araddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_arburst(1 downto 0) => B"00",
      s_axi_arcache(3 downto 0) => B"0000",
      s_axi_arid(0) => '0',
      s_axi_arlen(7 downto 0) => B"00000000",
      s_axi_arlock(0) => '0',
      s_axi_arprot(2 downto 0) => B"000",
      s_axi_arqos(3 downto 0) => B"0000",
      s_axi_arready => NLW_U0_s_axi_arready_UNCONNECTED,
      s_axi_arregion(3 downto 0) => B"0000",
      s_axi_arsize(2 downto 0) => B"000",
      s_axi_aruser(0) => '0',
      s_axi_arvalid => '0',
      s_axi_awaddr(31 downto 0) => B"00000000000000000000000000000000",
      s_axi_awburst(1 downto 0) => B"00",
      s_axi_awcache(3 downto 0) => B"0000",
      s_axi_awid(0) => '0',
      s_axi_awlen(7 downto 0) => B"00000000",
      s_axi_awlock(0) => '0',
      s_axi_awprot(2 downto 0) => B"000",
      s_axi_awqos(3 downto 0) => B"0000",
      s_axi_awready => NLW_U0_s_axi_awready_UNCONNECTED,
      s_axi_awregion(3 downto 0) => B"0000",
      s_axi_awsize(2 downto 0) => B"000",
      s_axi_awuser(0) => '0',
      s_axi_awvalid => '0',
      s_axi_bid(0) => NLW_U0_s_axi_bid_UNCONNECTED(0),
      s_axi_bready => '0',
      s_axi_bresp(1 downto 0) => NLW_U0_s_axi_bresp_UNCONNECTED(1 downto 0),
      s_axi_buser(0) => NLW_U0_s_axi_buser_UNCONNECTED(0),
      s_axi_bvalid => NLW_U0_s_axi_bvalid_UNCONNECTED,
      s_axi_rdata(63 downto 0) => NLW_U0_s_axi_rdata_UNCONNECTED(63 downto 0),
      s_axi_rid(0) => NLW_U0_s_axi_rid_UNCONNECTED(0),
      s_axi_rlast => NLW_U0_s_axi_rlast_UNCONNECTED,
      s_axi_rready => '0',
      s_axi_rresp(1 downto 0) => NLW_U0_s_axi_rresp_UNCONNECTED(1 downto 0),
      s_axi_ruser(0) => NLW_U0_s_axi_ruser_UNCONNECTED(0),
      s_axi_rvalid => NLW_U0_s_axi_rvalid_UNCONNECTED,
      s_axi_wdata(63 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000",
      s_axi_wid(0) => '0',
      s_axi_wlast => '0',
      s_axi_wready => NLW_U0_s_axi_wready_UNCONNECTED,
      s_axi_wstrb(7 downto 0) => B"00000000",
      s_axi_wuser(0) => '0',
      s_axi_wvalid => '0',
      s_axis_tdata(7 downto 0) => B"00000000",
      s_axis_tdest(0) => '0',
      s_axis_tid(0) => '0',
      s_axis_tkeep(0) => '0',
      s_axis_tlast => '0',
      s_axis_tready => NLW_U0_s_axis_tready_UNCONNECTED,
      s_axis_tstrb(0) => '0',
      s_axis_tuser(3 downto 0) => B"0000",
      s_axis_tvalid => '0',
      sbiterr => NLW_U0_sbiterr_UNCONNECTED,
      sleep => '0',
      srst => srst,
      underflow => NLW_U0_underflow_UNCONNECTED,
      valid => NLW_U0_valid_UNCONNECTED,
      wr_ack => NLW_U0_wr_ack_UNCONNECTED,
      wr_clk => '0',
      wr_data_count(8 downto 0) => NLW_U0_wr_data_count_UNCONNECTED(8 downto 0),
      wr_en => wr_en,
      wr_rst => '0',
      wr_rst_busy => wr_rst_busy
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_AXI_Wrapper is
  port (
    O32 : in STD_LOGIC;
    clk : in STD_LOGIC;
    m_ddr_axi_ARREADY : in STD_LOGIC;
    m_ddr_axi_ARVALID : out STD_LOGIC;
    m_ddr_axi_AWREADY : in STD_LOGIC;
    m_ddr_axi_AWVALID : out STD_LOGIC;
    m_ddr_axi_RREADY : out STD_LOGIC;
    m_ddr_axi_RVALID : in STD_LOGIC;
    m_ddr_axi_WREADY : in STD_LOGIC;
    m_ddr_axi_WVALID : out STD_LOGIC;
    readDataLast : out STD_LOGIC;
    readDataValid : out STD_LOGIC;
    srst : in STD_LOGIC;
    toReadDataBusy : out STD_LOGIC;
    toReadDataValid : in STD_LOGIC;
    writeAbusy : out STD_LOGIC;
    writeAddress_reg : out STD_LOGIC_VECTOR ( 63 to 63 );
    writeAvalid : in STD_LOGIC;
    writeDbusy : out STD_LOGIC;
    writeDlast : in STD_LOGIC;
    writeDlast_reg : out STD_LOGIC;
    writeDvalid : in STD_LOGIC;
    writeDvalid0 : in STD_LOGIC;
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    \countAddrToBeSent_reg[38]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    din : in STD_LOGIC_VECTOR ( 128 downto 0 );
    dout : out STD_LOGIC_VECTOR ( 128 downto 0 );
    \m_ddr_axi_ARADDR[63]\ : out STD_LOGIC_VECTOR ( 71 downto 0 );
    m_ddr_axi_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    \m_ddr_axi_AWADDR[63]\ : out STD_LOGIC_VECTOR ( 71 downto 0 );
    m_ddr_axi_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    readData : out STD_LOGIC_VECTOR ( 127 downto 0 );
    toReadDataAddress : in STD_LOGIC_VECTOR ( 63 downto 0 );
    \toReadDataSize_reg[7]\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    writeAddress : in STD_LOGIC_VECTOR ( 63 downto 0 );
    \writeDdata_reg[127]\ : in STD_LOGIC_VECTOR ( 127 downto 0 )
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_AXI_Wrapper;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_AXI_Wrapper is
  signal axi_ARID0 : STD_LOGIC;
  signal \axi_ARID[0]_i_1_n_0\ : STD_LOGIC;
  signal \^m_ddr_axi_arid\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^m_ddr_axi_arvalid\ : STD_LOGIC;
  signal \^m_ddr_axi_awvalid\ : STD_LOGIC;
  signal \^m_ddr_axi_wvalid\ : STD_LOGIC;
  signal p_0_in : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of p_0_in : signal is std.standard.true;
  signal rd_en0 : STD_LOGIC;
  signal rd_en00_out : STD_LOGIC;
  signal rd_en01_out : STD_LOGIC;
  signal \^readdatavalid\ : STD_LOGIC;
  attribute DONT_TOUCH of readDataValid : signal is std.standard.true;
  signal read_data_fifo_prog_full : STD_LOGIC;
  signal \^toreaddatabusy\ : STD_LOGIC;
  attribute DONT_TOUCH of toReadDataBusy : signal is std.standard.true;
  signal \wr_en0__0\ : STD_LOGIC;
  signal \^writeabusy\ : STD_LOGIC;
  attribute DONT_TOUCH of writeAbusy : signal is std.standard.true;
  signal \^writedbusy\ : STD_LOGIC;
  attribute DONT_TOUCH of writeDbusy : signal is std.standard.true;
  signal NLW_read_commands_fifo_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_read_commands_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_read_commands_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_read_commands_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_write_commands_fifo_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_write_commands_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_write_commands_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_write_commands_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_write_data_fifo_empty_UNCONNECTED : STD_LOGIC;
  signal NLW_write_data_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_write_data_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_write_data_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \axi_ARID[0]_i_1\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of m_ddr_axi_RREADY_INST_0 : label is "soft_lutpair0";
  attribute x_core_info : string;
  attribute x_core_info of read_commands_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
  attribute SOFT_HLUTNM of read_commands_fifo_i_1 : label is "soft_lutpair1";
  attribute x_core_info of read_data_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
  attribute SOFT_HLUTNM of wr_en0 : label is "soft_lutpair0";
  attribute x_core_info of write_commands_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
  attribute x_core_info of write_data_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
begin
  m_ddr_axi_ARID(0) <= \^m_ddr_axi_arid\(0);
  m_ddr_axi_ARVALID <= \^m_ddr_axi_arvalid\;
  m_ddr_axi_AWVALID <= \^m_ddr_axi_awvalid\;
  m_ddr_axi_WVALID <= \^m_ddr_axi_wvalid\;
  readDataValid <= \^readdatavalid\;
  toReadDataBusy <= \^toreaddatabusy\;
  writeAbusy <= \^writeabusy\;
  writeDbusy <= \^writedbusy\;
\axi_ARID[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"78"
    )
        port map (
      I0 => m_ddr_axi_ARREADY,
      I1 => \^m_ddr_axi_arvalid\,
      I2 => \^m_ddr_axi_arid\(0),
      O => \axi_ARID[0]_i_1_n_0\
    );
\axi_ARID_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \axi_ARID[0]_i_1_n_0\,
      Q => \^m_ddr_axi_arid\(0),
      R => '0'
    );
m_ddr_axi_RREADY_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_data_fifo_prog_full,
      O => m_ddr_axi_RREADY
    );
nolabel_line179i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '1',
      O => p_0_in
    );
read_commands_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth
     port map (
      clk => clk,
      din(71 downto 8) => toReadDataAddress(63 downto 0),
      din(7 downto 0) => \toReadDataSize_reg[7]\(7 downto 0),
      dout(71 downto 0) => \m_ddr_axi_ARADDR[63]\(71 downto 0),
      empty => NLW_read_commands_fifo_empty_UNCONNECTED,
      full => NLW_read_commands_fifo_full_UNCONNECTED,
      prog_full => \^toreaddatabusy\,
      rd_en => axi_ARID0,
      rd_rst_busy => NLW_read_commands_fifo_rd_rst_busy_UNCONNECTED,
      srst => srst,
      valid => \^m_ddr_axi_arvalid\,
      wr_en => toReadDataValid,
      wr_rst_busy => NLW_read_commands_fifo_wr_rst_busy_UNCONNECTED
    );
read_commands_fifo_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^m_ddr_axi_arvalid\,
      I1 => m_ddr_axi_ARREADY,
      O => axi_ARID0
    );
read_data_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth
     port map (
      clk => clk,
      din(128 downto 0) => din(128 downto 0),
      dout(128 downto 1) => readData(127 downto 0),
      dout(0) => readDataLast,
      empty => NLW_read_data_fifo_empty_UNCONNECTED,
      full => NLW_read_data_fifo_full_UNCONNECTED,
      prog_full => read_data_fifo_prog_full,
      rd_en => rd_en0,
      rd_rst_busy => NLW_read_data_fifo_rd_rst_busy_UNCONNECTED,
      srst => srst,
      valid => \^readdatavalid\,
      wr_en => \wr_en0__0\,
      wr_rst_busy => NLW_read_data_fifo_wr_rst_busy_UNCONNECTED
    );
\read_data_fifo_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^readdatavalid\,
      I1 => p_0_in,
      O => rd_en0
    );
\toReadDataSize[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => CO(0),
      I1 => \^toreaddatabusy\,
      O => E(0)
    );
wr_en0: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => m_ddr_axi_RVALID,
      I1 => read_data_fifo_prog_full,
      I2 => m_ddr_axi_RRESP(0),
      I3 => m_ddr_axi_RRESP(1),
      O => \wr_en0__0\
    );
\writeAddress[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \countAddrToBeSent_reg[38]\(0),
      I1 => \^writeabusy\,
      O => writeAddress_reg(63)
    );
writeDlast_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FB08"
    )
        port map (
      I0 => O32,
      I1 => writeDvalid0,
      I2 => \^writedbusy\,
      I3 => writeDlast,
      O => writeDlast_reg
    );
write_commands_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth
     port map (
      clk => clk,
      din(71 downto 8) => writeAddress(63 downto 0),
      din(7 downto 0) => Q(7 downto 0),
      dout(71 downto 0) => \m_ddr_axi_AWADDR[63]\(71 downto 0),
      empty => NLW_write_commands_fifo_empty_UNCONNECTED,
      full => NLW_write_commands_fifo_full_UNCONNECTED,
      prog_full => \^writeabusy\,
      rd_en => rd_en01_out,
      rd_rst_busy => NLW_write_commands_fifo_rd_rst_busy_UNCONNECTED,
      srst => srst,
      valid => \^m_ddr_axi_awvalid\,
      wr_en => writeAvalid,
      wr_rst_busy => NLW_write_commands_fifo_wr_rst_busy_UNCONNECTED
    );
write_commands_fifo_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^m_ddr_axi_awvalid\,
      I1 => m_ddr_axi_AWREADY,
      O => rd_en01_out
    );
write_data_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth
     port map (
      clk => clk,
      din(128 downto 1) => \writeDdata_reg[127]\(127 downto 0),
      din(0) => writeDlast,
      dout(128 downto 0) => dout(128 downto 0),
      empty => NLW_write_data_fifo_empty_UNCONNECTED,
      full => NLW_write_data_fifo_full_UNCONNECTED,
      prog_full => \^writedbusy\,
      rd_en => rd_en00_out,
      rd_rst_busy => NLW_write_data_fifo_rd_rst_busy_UNCONNECTED,
      srst => srst,
      valid => \^m_ddr_axi_wvalid\,
      wr_en => writeDvalid,
      wr_rst_busy => NLW_write_data_fifo_wr_rst_busy_UNCONNECTED
    );
\write_data_fifo_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^m_ddr_axi_wvalid\,
      I1 => m_ddr_axi_WREADY,
      O => rd_en00_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_s_axi_control_to_native is
  port (
    \active_blocking__0\ : out STD_LOGIC;
    active_blocking_reg : in STD_LOGIC;
    active_blocking_reg_0 : in STD_LOGIC;
    active_blocking_reg_1 : in STD_LOGIC;
    active_blocking_reg_2 : in STD_LOGIC;
    active_blocking_reg_3 : in STD_LOGIC;
    active_blocking_reg_4 : in STD_LOGIC;
    \active_read__0\ : out STD_LOGIC;
    active_read_reg : in STD_LOGIC;
    active_runtime : in STD_LOGIC;
    \active_write__0\ : out STD_LOGIC;
    active_write_reg : in STD_LOGIC;
    axi_c_write_valid : out STD_LOGIC;
    clk : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    readDataLast : in STD_LOGIC;
    readDataValid : in STD_LOGIC;
    read_data_valid : in STD_LOGIC;
    reset_cmd_reg : out STD_LOGIC;
    rstn : in STD_LOGIC;
    s_axi_control_ARREADY : out STD_LOGIC;
    s_axi_control_ARVALID : in STD_LOGIC;
    s_axi_control_AWREADY : out STD_LOGIC;
    s_axi_control_AWVALID : in STD_LOGIC;
    s_axi_control_BREADY : in STD_LOGIC;
    s_axi_control_BVALID : out STD_LOGIC;
    s_axi_control_RREADY : in STD_LOGIC;
    s_axi_control_RVALID : out STD_LOGIC;
    s_axi_control_WREADY : out STD_LOGIC;
    s_axi_control_WVALID : in STD_LOGIC;
    writeAbusy : in STD_LOGIC;
    CO : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 63 downto 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    \axi_c_read_data_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \axi_c_read_data_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    axi_c_read_data_valid_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    countAddrSent0 : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \countAddrSent_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \countAddrSent_reg[31]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \countAddrSent_reg[31]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \countAddrToBeSent_reg[38]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    countDataReceived0 : in STD_LOGIC_VECTOR ( 30 downto 0 );
    \countDataReceived_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \current_cycles_with_no_data_read_reg[31]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \debug_axi_control_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \debug_axi_control_reg[31]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \debug_axi_r_control_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \debug_axi_r_control_reg[31]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \latency_reg[63]\ : in STD_LOGIC_VECTOR ( 63 downto 0 );
    \max_cycles_with_no_data_read_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \max_cycles_with_no_data_read_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \max_cycles_with_no_data_read_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_blocking_ratio_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_blocking_ratio_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_burst_size_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_burst_size_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_count_bursts_per_reset_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_count_bursts_per_reset_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_max_queue_size_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_max_queue_size_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_start_DDR_address_reg[63]\ : out STD_LOGIC_VECTOR ( 63 downto 0 );
    \read_start_DDR_address_reg[63]_0\ : in STD_LOGIC_VECTOR ( 63 downto 0 );
    \read_step_DDR_address_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_step_DDR_address_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_ticks_per_burst_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \read_ticks_per_burst_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    runtime0 : in STD_LOGIC_VECTOR ( 62 downto 0 );
    \runtime_reg[63]\ : in STD_LOGIC_VECTOR ( 63 downto 0 );
    s_axi_control_ARADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_AWADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_blocking_ratio_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_blocking_ratio_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_burst_size_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_burst_size_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_count_bursts_per_reset_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_count_bursts_per_reset_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    write_data : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_max_queue_size_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_max_queue_size_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_start_DDR_address_reg[63]\ : out STD_LOGIC_VECTOR ( 63 downto 0 );
    \write_start_DDR_address_reg[63]_0\ : in STD_LOGIC_VECTOR ( 63 downto 0 );
    \write_step_DDR_address_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_step_DDR_address_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_ticks_per_burst_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \write_ticks_per_burst_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_s_axi_control_to_native;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_s_axi_control_to_native is
  signal \^sr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal active_write_i_2_n_0 : STD_LOGIC;
  signal active_write_i_3_n_0 : STD_LOGIC;
  signal axi_c_read_addr : STD_LOGIC_VECTOR ( 6 downto 2 );
  signal \axi_c_read_data[0]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[0]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[0]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[0]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[0]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[0]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[0]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[10]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[10]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[10]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[10]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[10]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[10]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[10]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[11]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[11]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[11]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[11]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[11]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[11]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[11]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[12]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[12]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[12]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[12]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[12]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[12]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[12]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[13]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[13]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[13]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[13]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[13]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[13]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[13]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[14]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[14]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[14]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[14]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[14]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[14]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[14]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[15]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[15]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[15]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[15]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[15]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[15]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[15]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[16]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[16]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[16]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[16]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[16]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[16]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[16]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[17]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[17]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[17]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[17]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[17]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[17]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[17]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[18]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[18]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[18]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[18]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[18]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[18]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[18]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[19]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[19]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[19]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[19]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[19]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[19]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[19]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[1]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[1]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[1]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[1]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[1]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[1]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[1]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[20]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[20]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[20]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[20]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[20]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[20]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[20]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[21]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[21]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[21]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[21]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[21]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[21]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[21]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[22]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[22]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[22]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[22]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[22]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[22]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[22]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[23]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[23]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[23]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[23]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[23]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[23]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[23]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[24]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[24]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[24]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[24]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[24]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[24]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[24]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[25]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[25]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[25]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[25]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[25]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[25]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[25]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[26]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[26]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[26]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[26]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[26]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[26]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[26]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[27]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[27]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[27]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[27]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[27]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[27]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[27]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[28]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[28]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[28]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[28]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[28]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[28]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[28]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[29]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[29]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[29]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[29]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[29]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[29]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[29]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[2]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[2]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[2]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[2]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[2]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[2]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[2]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[30]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[30]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[30]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[30]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[30]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[30]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[30]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[31]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[31]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[31]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[31]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[31]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[31]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[31]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_12_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_13_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[3]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[4]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[5]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[5]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[5]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[5]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[5]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[5]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[5]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[6]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[6]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[6]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[6]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[6]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[6]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[6]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[7]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[7]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[7]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[7]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[7]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[7]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[7]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[8]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[8]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[8]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[8]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[8]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[8]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[8]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[9]_i_10_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[9]_i_11_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[9]_i_3_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[9]_i_4_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[9]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[9]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data[9]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[0]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[0]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[0]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[10]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[10]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[10]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[11]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[11]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[11]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[12]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[12]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[12]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[13]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[13]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[13]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[14]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[14]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[14]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[15]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[15]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[15]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[16]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[16]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[16]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[17]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[17]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[17]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[18]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[18]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[18]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[19]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[19]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[19]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[1]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[1]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[1]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[20]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[20]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[20]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[21]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[21]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[21]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[22]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[22]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[22]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[23]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[23]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[23]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[24]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[24]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[24]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[25]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[25]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[25]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[26]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[26]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[26]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[27]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[27]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[27]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[28]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[28]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[28]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[29]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[29]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[29]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[2]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[2]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[2]_i_7_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[30]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[30]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[30]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[31]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[31]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[31]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[3]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[3]_i_8_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[3]_i_9_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[4]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[4]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[5]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[5]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[5]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[6]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[6]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[6]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[7]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[7]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[7]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[8]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[8]_i_6_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[9]_i_2_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[9]_i_5_n_0\ : STD_LOGIC;
  signal \axi_c_read_data_reg[9]_i_6_n_0\ : STD_LOGIC;
  signal \^axi_c_read_data_valid_reg\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal axi_c_write_addr : STD_LOGIC_VECTOR ( 6 downto 2 );
  signal \^axi_c_write_valid\ : STD_LOGIC;
  signal \countAddrSent__0\ : STD_LOGIC_VECTOR ( 31 to 31 );
  signal \countDataReceived[31]_i_3_n_0\ : STD_LOGIC;
  signal \countDataReceived[31]_i_4_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read__0\ : STD_LOGIC;
  signal read_addr_fifo_empty : STD_LOGIC;
  signal read_addr_fifo_full : STD_LOGIC;
  signal read_addr_fifo_n_5 : STD_LOGIC;
  signal read_addr_fifo_n_6 : STD_LOGIC;
  signal read_data_fifo_empty : STD_LOGIC;
  signal \read_max_queue_size[31]_i_2_n_0\ : STD_LOGIC;
  signal \read_max_queue_size[31]_i_3_n_0\ : STD_LOGIC;
  signal \read_ticks_per_burst[31]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks_per_burst[31]_i_3_n_0\ : STD_LOGIC;
  signal reset_cmd_i_2_n_0 : STD_LOGIC;
  signal respond_count : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal \respond_count[7]_i_10_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_2_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_3_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_4_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_5_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_6_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_7_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_8_n_0\ : STD_LOGIC;
  signal \respond_count[7]_i_9_n_0\ : STD_LOGIC;
  signal \respond_count[8]_i_2_n_0\ : STD_LOGIC;
  signal \respond_count_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \respond_count_reg[7]_i_1_n_1\ : STD_LOGIC;
  signal \respond_count_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \respond_count_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \respond_count_reg[7]_i_1_n_5\ : STD_LOGIC;
  signal \respond_count_reg[7]_i_1_n_6\ : STD_LOGIC;
  signal \respond_count_reg[7]_i_1_n_7\ : STD_LOGIC;
  signal \respond_count_reg_n_0_\ : STD_LOGIC_VECTOR ( 8 downto 0 );
  signal \runtime[63]_i_6_n_0\ : STD_LOGIC;
  signal \runtime[63]_i_7_n_0\ : STD_LOGIC;
  signal \runtime__0\ : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal \^s_axi_control_bvalid\ : STD_LOGIC;
  signal s_axi_control_BVALID_i_1_n_0 : STD_LOGIC;
  signal s_axi_control_BVALID_i_2_n_0 : STD_LOGIC;
  signal s_axi_control_BVALID_i_3_n_0 : STD_LOGIC;
  signal \^s_axi_control_rvalid\ : STD_LOGIC;
  signal write_addr_fifo_empty : STD_LOGIC;
  signal write_addr_fifo_full : STD_LOGIC;
  signal write_addr_fifo_n_5 : STD_LOGIC;
  signal write_addr_fifo_n_6 : STD_LOGIC;
  signal \write_count_bursts_per_reset[15]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_bursts_per_reset[15]_i_3_n_0\ : STD_LOGIC;
  signal \write_count_bursts_per_reset[31]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_bursts_per_reset[31]_i_3_n_0\ : STD_LOGIC;
  signal \^write_data\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal write_data_fifo_empty : STD_LOGIC;
  signal write_data_fifo_full : STD_LOGIC;
  signal NLW_read_addr_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_read_addr_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_read_addr_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_prog_full_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_read_data_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  signal \NLW_respond_count_reg[7]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_respond_count_reg[8]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_respond_count_reg[8]_i_1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 1 );
  signal NLW_write_addr_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_write_addr_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_write_addr_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_write_data_fifo_full_UNCONNECTED : STD_LOGIC;
  signal NLW_write_data_fifo_rd_rst_busy_UNCONNECTED : STD_LOGIC;
  signal NLW_write_data_fifo_wr_rst_busy_UNCONNECTED : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \axi_c_read_data[15]_i_1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \axi_c_read_data[3]_i_4\ : label is "soft_lutpair2";
  attribute x_core_info : string;
  attribute x_core_info of read_addr_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
  attribute x_core_info of read_data_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
  attribute x_core_info of write_addr_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
  attribute x_core_info of write_data_fifo : label is "fifo_generator_v13_2_2,Vivado 2018.2.1";
begin
  SR(0) <= \^sr\(0);
  axi_c_read_data_valid_reg(0) <= \^axi_c_read_data_valid_reg\(0);
  axi_c_write_valid <= \^axi_c_write_valid\;
  s_axi_control_BVALID <= \^s_axi_control_bvalid\;
  s_axi_control_RVALID <= \^s_axi_control_rvalid\;
  write_data(31 downto 0) <= \^write_data\(31 downto 0);
active_blocking_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(3),
      I4 => axi_c_write_addr(6),
      I5 => active_blocking_reg_4,
      O => \active_blocking__0\
    );
active_read_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(0),
      I4 => axi_c_write_addr(6),
      I5 => active_read_reg,
      O => \active_read__0\
    );
active_write_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(1),
      I4 => axi_c_write_addr(6),
      I5 => active_write_reg,
      O => \active_write__0\
    );
active_write_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => axi_c_write_addr(3),
      I1 => axi_c_write_addr(4),
      O => active_write_i_2_n_0
    );
active_write_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(3),
      I2 => axi_c_write_addr(2),
      O => active_write_i_3_n_0
    );
\axi_c_read_data[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \axi_c_read_data_reg[0]_i_2_n_0\,
      I1 => \axi_c_read_data[0]_i_3_n_0\,
      I2 => \axi_c_read_data[3]_i_4_n_0\,
      I3 => \axi_c_read_data[0]_i_4_n_0\,
      I4 => \axi_c_read_data[3]_i_6_n_0\,
      I5 => \axi_c_read_data[0]_i_5_n_0\,
      O => \axi_c_read_data_reg[31]\(0)
    );
\axi_c_read_data[0]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(0),
      I1 => \read_step_DDR_address_reg[31]_0\(0),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(0),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(32),
      O => \axi_c_read_data[0]_i_10_n_0\
    );
\axi_c_read_data[0]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(0),
      I1 => \read_max_queue_size_reg[31]_0\(0),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(0),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(0),
      O => \axi_c_read_data[0]_i_11_n_0\
    );
\axi_c_read_data[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(0),
      I1 => \read_blocking_ratio_reg[31]_0\(0),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(0),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[0]_i_3_n_0\
    );
\axi_c_read_data[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(0),
      I1 => \latency_reg[63]\(32),
      I2 => axi_c_read_addr(3),
      I3 => Q(0),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(0),
      O => \axi_c_read_data[0]_i_4_n_0\
    );
\axi_c_read_data[0]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A0CFC0"
    )
        port map (
      I0 => \runtime_reg[63]\(0),
      I1 => \runtime_reg[63]\(32),
      I2 => axi_c_read_addr(3),
      I3 => active_read_reg,
      I4 => axi_c_read_addr(2),
      O => \axi_c_read_data[0]_i_5_n_0\
    );
\axi_c_read_data[0]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(0),
      I1 => \write_step_DDR_address_reg[31]_0\(0),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(0),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(32),
      O => \axi_c_read_data[0]_i_8_n_0\
    );
\axi_c_read_data[0]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(0),
      I1 => \write_max_queue_size_reg[31]_0\(0),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(0),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(0),
      O => \axi_c_read_data[0]_i_9_n_0\
    );
\axi_c_read_data[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[10]_i_2_n_0\,
      I1 => \axi_c_read_data[10]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[10]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(10)
    );
\axi_c_read_data[10]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(10),
      I1 => \read_step_DDR_address_reg[31]_0\(10),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(10),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(42),
      O => \axi_c_read_data[10]_i_10_n_0\
    );
\axi_c_read_data[10]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(10),
      I1 => \read_max_queue_size_reg[31]_0\(10),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(10),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(10),
      O => \axi_c_read_data[10]_i_11_n_0\
    );
\axi_c_read_data[10]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(10),
      I1 => \read_blocking_ratio_reg[31]_0\(10),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(10),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[10]_i_3_n_0\
    );
\axi_c_read_data[10]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[10]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(42),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(10),
      O => \axi_c_read_data[10]_i_4_n_0\
    );
\axi_c_read_data[10]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(10),
      I1 => \latency_reg[63]\(42),
      I2 => axi_c_read_addr(3),
      I3 => Q(10),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(10),
      O => \axi_c_read_data[10]_i_7_n_0\
    );
\axi_c_read_data[10]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(10),
      I1 => \write_step_DDR_address_reg[31]_0\(10),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(10),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(42),
      O => \axi_c_read_data[10]_i_8_n_0\
    );
\axi_c_read_data[10]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(10),
      I1 => \write_max_queue_size_reg[31]_0\(10),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(10),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(10),
      O => \axi_c_read_data[10]_i_9_n_0\
    );
\axi_c_read_data[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[11]_i_2_n_0\,
      I1 => \axi_c_read_data[11]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[11]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(11)
    );
\axi_c_read_data[11]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(11),
      I1 => \read_step_DDR_address_reg[31]_0\(11),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(11),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(43),
      O => \axi_c_read_data[11]_i_10_n_0\
    );
\axi_c_read_data[11]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(11),
      I1 => \read_max_queue_size_reg[31]_0\(11),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(11),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(11),
      O => \axi_c_read_data[11]_i_11_n_0\
    );
\axi_c_read_data[11]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(11),
      I1 => \read_blocking_ratio_reg[31]_0\(11),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(11),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[11]_i_3_n_0\
    );
\axi_c_read_data[11]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[11]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(43),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(11),
      O => \axi_c_read_data[11]_i_4_n_0\
    );
\axi_c_read_data[11]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(11),
      I1 => \latency_reg[63]\(43),
      I2 => axi_c_read_addr(3),
      I3 => Q(11),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(11),
      O => \axi_c_read_data[11]_i_7_n_0\
    );
\axi_c_read_data[11]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(11),
      I1 => \write_step_DDR_address_reg[31]_0\(11),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(11),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(43),
      O => \axi_c_read_data[11]_i_8_n_0\
    );
\axi_c_read_data[11]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(11),
      I1 => \write_max_queue_size_reg[31]_0\(11),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(11),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(11),
      O => \axi_c_read_data[11]_i_9_n_0\
    );
\axi_c_read_data[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[12]_i_2_n_0\,
      I1 => \axi_c_read_data[12]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[12]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(12)
    );
\axi_c_read_data[12]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(12),
      I1 => \read_step_DDR_address_reg[31]_0\(12),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(12),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(44),
      O => \axi_c_read_data[12]_i_10_n_0\
    );
\axi_c_read_data[12]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(12),
      I1 => \read_max_queue_size_reg[31]_0\(12),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(12),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(12),
      O => \axi_c_read_data[12]_i_11_n_0\
    );
\axi_c_read_data[12]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(12),
      I1 => \read_blocking_ratio_reg[31]_0\(12),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(12),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[12]_i_3_n_0\
    );
\axi_c_read_data[12]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[12]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(44),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(12),
      O => \axi_c_read_data[12]_i_4_n_0\
    );
\axi_c_read_data[12]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(12),
      I1 => \latency_reg[63]\(44),
      I2 => axi_c_read_addr(3),
      I3 => Q(12),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(12),
      O => \axi_c_read_data[12]_i_7_n_0\
    );
\axi_c_read_data[12]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(12),
      I1 => \write_step_DDR_address_reg[31]_0\(12),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(12),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(44),
      O => \axi_c_read_data[12]_i_8_n_0\
    );
\axi_c_read_data[12]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(12),
      I1 => \write_max_queue_size_reg[31]_0\(12),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(12),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(12),
      O => \axi_c_read_data[12]_i_9_n_0\
    );
\axi_c_read_data[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[13]_i_2_n_0\,
      I1 => \axi_c_read_data[13]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[13]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(13)
    );
\axi_c_read_data[13]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(13),
      I1 => \read_step_DDR_address_reg[31]_0\(13),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(13),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(45),
      O => \axi_c_read_data[13]_i_10_n_0\
    );
\axi_c_read_data[13]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(13),
      I1 => \read_max_queue_size_reg[31]_0\(13),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(13),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(13),
      O => \axi_c_read_data[13]_i_11_n_0\
    );
\axi_c_read_data[13]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(13),
      I1 => \read_blocking_ratio_reg[31]_0\(13),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(13),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[13]_i_3_n_0\
    );
\axi_c_read_data[13]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[13]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(45),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(13),
      O => \axi_c_read_data[13]_i_4_n_0\
    );
\axi_c_read_data[13]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(13),
      I1 => \latency_reg[63]\(45),
      I2 => axi_c_read_addr(3),
      I3 => Q(13),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(13),
      O => \axi_c_read_data[13]_i_7_n_0\
    );
\axi_c_read_data[13]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(13),
      I1 => \write_step_DDR_address_reg[31]_0\(13),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(13),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(45),
      O => \axi_c_read_data[13]_i_8_n_0\
    );
\axi_c_read_data[13]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(13),
      I1 => \write_max_queue_size_reg[31]_0\(13),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(13),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(13),
      O => \axi_c_read_data[13]_i_9_n_0\
    );
\axi_c_read_data[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[14]_i_2_n_0\,
      I1 => \axi_c_read_data[14]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[14]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(14)
    );
\axi_c_read_data[14]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(14),
      I1 => \read_step_DDR_address_reg[31]_0\(14),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(14),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(46),
      O => \axi_c_read_data[14]_i_10_n_0\
    );
\axi_c_read_data[14]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(14),
      I1 => \read_max_queue_size_reg[31]_0\(14),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(14),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(14),
      O => \axi_c_read_data[14]_i_11_n_0\
    );
\axi_c_read_data[14]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(14),
      I1 => \read_blocking_ratio_reg[31]_0\(14),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(14),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[14]_i_3_n_0\
    );
\axi_c_read_data[14]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[14]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(46),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(14),
      O => \axi_c_read_data[14]_i_4_n_0\
    );
\axi_c_read_data[14]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(14),
      I1 => \latency_reg[63]\(46),
      I2 => axi_c_read_addr(3),
      I3 => Q(14),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(14),
      O => \axi_c_read_data[14]_i_7_n_0\
    );
\axi_c_read_data[14]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(14),
      I1 => \write_step_DDR_address_reg[31]_0\(14),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(14),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(46),
      O => \axi_c_read_data[14]_i_8_n_0\
    );
\axi_c_read_data[14]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(14),
      I1 => \write_max_queue_size_reg[31]_0\(14),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(14),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(14),
      O => \axi_c_read_data[14]_i_9_n_0\
    );
\axi_c_read_data[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[15]_i_2_n_0\,
      I1 => \axi_c_read_data[15]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[15]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(15)
    );
\axi_c_read_data[15]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(15),
      I1 => \read_step_DDR_address_reg[31]_0\(15),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(15),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(47),
      O => \axi_c_read_data[15]_i_10_n_0\
    );
\axi_c_read_data[15]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(15),
      I1 => \read_max_queue_size_reg[31]_0\(15),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(15),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(15),
      O => \axi_c_read_data[15]_i_11_n_0\
    );
\axi_c_read_data[15]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(15),
      I1 => \read_blocking_ratio_reg[31]_0\(15),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(15),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[15]_i_3_n_0\
    );
\axi_c_read_data[15]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[15]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(47),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(15),
      O => \axi_c_read_data[15]_i_4_n_0\
    );
\axi_c_read_data[15]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(15),
      I1 => \latency_reg[63]\(47),
      I2 => axi_c_read_addr(3),
      I3 => Q(15),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(15),
      O => \axi_c_read_data[15]_i_7_n_0\
    );
\axi_c_read_data[15]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(15),
      I1 => \write_step_DDR_address_reg[31]_0\(15),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(15),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(47),
      O => \axi_c_read_data[15]_i_8_n_0\
    );
\axi_c_read_data[15]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(15),
      I1 => \write_max_queue_size_reg[31]_0\(15),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(15),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(15),
      O => \axi_c_read_data[15]_i_9_n_0\
    );
\axi_c_read_data[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[16]_i_2_n_0\,
      I1 => \axi_c_read_data[16]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[16]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(16)
    );
\axi_c_read_data[16]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(16),
      I1 => \read_step_DDR_address_reg[31]_0\(16),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(16),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(48),
      O => \axi_c_read_data[16]_i_10_n_0\
    );
\axi_c_read_data[16]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(16),
      I1 => \read_max_queue_size_reg[31]_0\(16),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(16),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(16),
      O => \axi_c_read_data[16]_i_11_n_0\
    );
\axi_c_read_data[16]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(16),
      I1 => \read_blocking_ratio_reg[31]_0\(16),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(16),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[16]_i_3_n_0\
    );
\axi_c_read_data[16]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[16]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(48),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(16),
      O => \axi_c_read_data[16]_i_4_n_0\
    );
\axi_c_read_data[16]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(16),
      I1 => \latency_reg[63]\(48),
      I2 => axi_c_read_addr(3),
      I3 => Q(16),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(16),
      O => \axi_c_read_data[16]_i_7_n_0\
    );
\axi_c_read_data[16]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(16),
      I1 => \write_step_DDR_address_reg[31]_0\(16),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(16),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(48),
      O => \axi_c_read_data[16]_i_8_n_0\
    );
\axi_c_read_data[16]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(16),
      I1 => \write_max_queue_size_reg[31]_0\(16),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(16),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(16),
      O => \axi_c_read_data[16]_i_9_n_0\
    );
\axi_c_read_data[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[17]_i_2_n_0\,
      I1 => \axi_c_read_data[17]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[17]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(17)
    );
\axi_c_read_data[17]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(17),
      I1 => \read_step_DDR_address_reg[31]_0\(17),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(17),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(49),
      O => \axi_c_read_data[17]_i_10_n_0\
    );
\axi_c_read_data[17]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(17),
      I1 => \read_max_queue_size_reg[31]_0\(17),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(17),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(17),
      O => \axi_c_read_data[17]_i_11_n_0\
    );
\axi_c_read_data[17]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(17),
      I1 => \read_blocking_ratio_reg[31]_0\(17),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(17),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[17]_i_3_n_0\
    );
\axi_c_read_data[17]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[17]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(49),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(17),
      O => \axi_c_read_data[17]_i_4_n_0\
    );
\axi_c_read_data[17]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(17),
      I1 => \latency_reg[63]\(49),
      I2 => axi_c_read_addr(3),
      I3 => Q(17),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(17),
      O => \axi_c_read_data[17]_i_7_n_0\
    );
\axi_c_read_data[17]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(17),
      I1 => \write_step_DDR_address_reg[31]_0\(17),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(17),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(49),
      O => \axi_c_read_data[17]_i_8_n_0\
    );
\axi_c_read_data[17]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(17),
      I1 => \write_max_queue_size_reg[31]_0\(17),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(17),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(17),
      O => \axi_c_read_data[17]_i_9_n_0\
    );
\axi_c_read_data[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[18]_i_2_n_0\,
      I1 => \axi_c_read_data[18]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[18]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(18)
    );
\axi_c_read_data[18]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(18),
      I1 => \read_step_DDR_address_reg[31]_0\(18),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(18),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(50),
      O => \axi_c_read_data[18]_i_10_n_0\
    );
\axi_c_read_data[18]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(18),
      I1 => \read_max_queue_size_reg[31]_0\(18),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(18),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(18),
      O => \axi_c_read_data[18]_i_11_n_0\
    );
\axi_c_read_data[18]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(18),
      I1 => \read_blocking_ratio_reg[31]_0\(18),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(18),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[18]_i_3_n_0\
    );
\axi_c_read_data[18]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[18]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(50),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(18),
      O => \axi_c_read_data[18]_i_4_n_0\
    );
\axi_c_read_data[18]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(18),
      I1 => \latency_reg[63]\(50),
      I2 => axi_c_read_addr(3),
      I3 => Q(18),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(18),
      O => \axi_c_read_data[18]_i_7_n_0\
    );
\axi_c_read_data[18]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(18),
      I1 => \write_step_DDR_address_reg[31]_0\(18),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(18),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(50),
      O => \axi_c_read_data[18]_i_8_n_0\
    );
\axi_c_read_data[18]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(18),
      I1 => \write_max_queue_size_reg[31]_0\(18),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(18),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(18),
      O => \axi_c_read_data[18]_i_9_n_0\
    );
\axi_c_read_data[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[19]_i_2_n_0\,
      I1 => \axi_c_read_data[19]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[19]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(19)
    );
\axi_c_read_data[19]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(19),
      I1 => \read_step_DDR_address_reg[31]_0\(19),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(19),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(51),
      O => \axi_c_read_data[19]_i_10_n_0\
    );
\axi_c_read_data[19]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(19),
      I1 => \read_max_queue_size_reg[31]_0\(19),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(19),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(19),
      O => \axi_c_read_data[19]_i_11_n_0\
    );
\axi_c_read_data[19]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(19),
      I1 => \read_blocking_ratio_reg[31]_0\(19),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(19),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[19]_i_3_n_0\
    );
\axi_c_read_data[19]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[19]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(51),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(19),
      O => \axi_c_read_data[19]_i_4_n_0\
    );
\axi_c_read_data[19]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(19),
      I1 => \latency_reg[63]\(51),
      I2 => axi_c_read_addr(3),
      I3 => Q(19),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(19),
      O => \axi_c_read_data[19]_i_7_n_0\
    );
\axi_c_read_data[19]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(19),
      I1 => \write_step_DDR_address_reg[31]_0\(19),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(19),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(51),
      O => \axi_c_read_data[19]_i_8_n_0\
    );
\axi_c_read_data[19]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(19),
      I1 => \write_max_queue_size_reg[31]_0\(19),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(19),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(19),
      O => \axi_c_read_data[19]_i_9_n_0\
    );
\axi_c_read_data[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \axi_c_read_data_reg[1]_i_2_n_0\,
      I1 => \axi_c_read_data[1]_i_3_n_0\,
      I2 => \axi_c_read_data[3]_i_4_n_0\,
      I3 => \axi_c_read_data[1]_i_4_n_0\,
      I4 => \axi_c_read_data[3]_i_6_n_0\,
      I5 => \axi_c_read_data[1]_i_5_n_0\,
      O => \axi_c_read_data_reg[31]\(1)
    );
\axi_c_read_data[1]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(1),
      I1 => \read_step_DDR_address_reg[31]_0\(1),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(1),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(33),
      O => \axi_c_read_data[1]_i_10_n_0\
    );
\axi_c_read_data[1]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(1),
      I1 => \read_max_queue_size_reg[31]_0\(1),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(1),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(1),
      O => \axi_c_read_data[1]_i_11_n_0\
    );
\axi_c_read_data[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(1),
      I1 => \read_blocking_ratio_reg[31]_0\(1),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(1),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[1]_i_3_n_0\
    );
\axi_c_read_data[1]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(1),
      I1 => \latency_reg[63]\(33),
      I2 => axi_c_read_addr(3),
      I3 => Q(1),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(1),
      O => \axi_c_read_data[1]_i_4_n_0\
    );
\axi_c_read_data[1]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A0CFC0"
    )
        port map (
      I0 => \runtime_reg[63]\(1),
      I1 => \runtime_reg[63]\(33),
      I2 => axi_c_read_addr(3),
      I3 => active_write_reg,
      I4 => axi_c_read_addr(2),
      O => \axi_c_read_data[1]_i_5_n_0\
    );
\axi_c_read_data[1]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(1),
      I1 => \write_step_DDR_address_reg[31]_0\(1),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(1),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(33),
      O => \axi_c_read_data[1]_i_8_n_0\
    );
\axi_c_read_data[1]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(1),
      I1 => \write_max_queue_size_reg[31]_0\(1),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(1),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(1),
      O => \axi_c_read_data[1]_i_9_n_0\
    );
\axi_c_read_data[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[20]_i_2_n_0\,
      I1 => \axi_c_read_data[20]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[20]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(20)
    );
\axi_c_read_data[20]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(20),
      I1 => \read_step_DDR_address_reg[31]_0\(20),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(20),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(52),
      O => \axi_c_read_data[20]_i_10_n_0\
    );
\axi_c_read_data[20]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(20),
      I1 => \read_max_queue_size_reg[31]_0\(20),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(20),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(20),
      O => \axi_c_read_data[20]_i_11_n_0\
    );
\axi_c_read_data[20]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(20),
      I1 => \read_blocking_ratio_reg[31]_0\(20),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(20),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[20]_i_3_n_0\
    );
\axi_c_read_data[20]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[20]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(52),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(20),
      O => \axi_c_read_data[20]_i_4_n_0\
    );
\axi_c_read_data[20]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(20),
      I1 => \latency_reg[63]\(52),
      I2 => axi_c_read_addr(3),
      I3 => Q(20),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(20),
      O => \axi_c_read_data[20]_i_7_n_0\
    );
\axi_c_read_data[20]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(20),
      I1 => \write_step_DDR_address_reg[31]_0\(20),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(20),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(52),
      O => \axi_c_read_data[20]_i_8_n_0\
    );
\axi_c_read_data[20]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(20),
      I1 => \write_max_queue_size_reg[31]_0\(20),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(20),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(20),
      O => \axi_c_read_data[20]_i_9_n_0\
    );
\axi_c_read_data[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[21]_i_2_n_0\,
      I1 => \axi_c_read_data[21]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[21]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(21)
    );
\axi_c_read_data[21]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(21),
      I1 => \read_step_DDR_address_reg[31]_0\(21),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(21),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(53),
      O => \axi_c_read_data[21]_i_10_n_0\
    );
\axi_c_read_data[21]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(21),
      I1 => \read_max_queue_size_reg[31]_0\(21),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(21),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(21),
      O => \axi_c_read_data[21]_i_11_n_0\
    );
\axi_c_read_data[21]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(21),
      I1 => \read_blocking_ratio_reg[31]_0\(21),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(21),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[21]_i_3_n_0\
    );
\axi_c_read_data[21]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[21]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(53),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(21),
      O => \axi_c_read_data[21]_i_4_n_0\
    );
\axi_c_read_data[21]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(21),
      I1 => \latency_reg[63]\(53),
      I2 => axi_c_read_addr(3),
      I3 => Q(21),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(21),
      O => \axi_c_read_data[21]_i_7_n_0\
    );
\axi_c_read_data[21]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(21),
      I1 => \write_step_DDR_address_reg[31]_0\(21),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(21),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(53),
      O => \axi_c_read_data[21]_i_8_n_0\
    );
\axi_c_read_data[21]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(21),
      I1 => \write_max_queue_size_reg[31]_0\(21),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(21),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(21),
      O => \axi_c_read_data[21]_i_9_n_0\
    );
\axi_c_read_data[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[22]_i_2_n_0\,
      I1 => \axi_c_read_data[22]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[22]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(22)
    );
\axi_c_read_data[22]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(22),
      I1 => \read_step_DDR_address_reg[31]_0\(22),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(22),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(54),
      O => \axi_c_read_data[22]_i_10_n_0\
    );
\axi_c_read_data[22]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(22),
      I1 => \read_max_queue_size_reg[31]_0\(22),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(22),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(22),
      O => \axi_c_read_data[22]_i_11_n_0\
    );
\axi_c_read_data[22]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(22),
      I1 => \read_blocking_ratio_reg[31]_0\(22),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(22),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[22]_i_3_n_0\
    );
\axi_c_read_data[22]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[22]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(54),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(22),
      O => \axi_c_read_data[22]_i_4_n_0\
    );
\axi_c_read_data[22]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(22),
      I1 => \latency_reg[63]\(54),
      I2 => axi_c_read_addr(3),
      I3 => Q(22),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(22),
      O => \axi_c_read_data[22]_i_7_n_0\
    );
\axi_c_read_data[22]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(22),
      I1 => \write_step_DDR_address_reg[31]_0\(22),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(22),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(54),
      O => \axi_c_read_data[22]_i_8_n_0\
    );
\axi_c_read_data[22]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(22),
      I1 => \write_max_queue_size_reg[31]_0\(22),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(22),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(22),
      O => \axi_c_read_data[22]_i_9_n_0\
    );
\axi_c_read_data[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[23]_i_2_n_0\,
      I1 => \axi_c_read_data[23]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[23]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(23)
    );
\axi_c_read_data[23]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(23),
      I1 => \read_step_DDR_address_reg[31]_0\(23),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(23),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(55),
      O => \axi_c_read_data[23]_i_10_n_0\
    );
\axi_c_read_data[23]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(23),
      I1 => \read_max_queue_size_reg[31]_0\(23),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(23),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(23),
      O => \axi_c_read_data[23]_i_11_n_0\
    );
\axi_c_read_data[23]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(23),
      I1 => \read_blocking_ratio_reg[31]_0\(23),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(23),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[23]_i_3_n_0\
    );
\axi_c_read_data[23]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[23]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(55),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(23),
      O => \axi_c_read_data[23]_i_4_n_0\
    );
\axi_c_read_data[23]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(23),
      I1 => \latency_reg[63]\(55),
      I2 => axi_c_read_addr(3),
      I3 => Q(23),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(23),
      O => \axi_c_read_data[23]_i_7_n_0\
    );
\axi_c_read_data[23]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(23),
      I1 => \write_step_DDR_address_reg[31]_0\(23),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(23),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(55),
      O => \axi_c_read_data[23]_i_8_n_0\
    );
\axi_c_read_data[23]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(23),
      I1 => \write_max_queue_size_reg[31]_0\(23),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(23),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(23),
      O => \axi_c_read_data[23]_i_9_n_0\
    );
\axi_c_read_data[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[24]_i_2_n_0\,
      I1 => \axi_c_read_data[24]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[24]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(24)
    );
\axi_c_read_data[24]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(24),
      I1 => \read_step_DDR_address_reg[31]_0\(24),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(24),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(56),
      O => \axi_c_read_data[24]_i_10_n_0\
    );
\axi_c_read_data[24]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(24),
      I1 => \read_max_queue_size_reg[31]_0\(24),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(24),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(24),
      O => \axi_c_read_data[24]_i_11_n_0\
    );
\axi_c_read_data[24]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(24),
      I1 => \read_blocking_ratio_reg[31]_0\(24),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(24),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[24]_i_3_n_0\
    );
\axi_c_read_data[24]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[24]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(56),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(24),
      O => \axi_c_read_data[24]_i_4_n_0\
    );
\axi_c_read_data[24]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(24),
      I1 => \latency_reg[63]\(56),
      I2 => axi_c_read_addr(3),
      I3 => Q(24),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(24),
      O => \axi_c_read_data[24]_i_7_n_0\
    );
\axi_c_read_data[24]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(24),
      I1 => \write_step_DDR_address_reg[31]_0\(24),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(24),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(56),
      O => \axi_c_read_data[24]_i_8_n_0\
    );
\axi_c_read_data[24]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(24),
      I1 => \write_max_queue_size_reg[31]_0\(24),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(24),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(24),
      O => \axi_c_read_data[24]_i_9_n_0\
    );
\axi_c_read_data[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[25]_i_2_n_0\,
      I1 => \axi_c_read_data[25]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[25]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(25)
    );
\axi_c_read_data[25]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(25),
      I1 => \read_step_DDR_address_reg[31]_0\(25),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(25),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(57),
      O => \axi_c_read_data[25]_i_10_n_0\
    );
\axi_c_read_data[25]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(25),
      I1 => \read_max_queue_size_reg[31]_0\(25),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(25),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(25),
      O => \axi_c_read_data[25]_i_11_n_0\
    );
\axi_c_read_data[25]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(25),
      I1 => \read_blocking_ratio_reg[31]_0\(25),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(25),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[25]_i_3_n_0\
    );
\axi_c_read_data[25]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[25]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(57),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(25),
      O => \axi_c_read_data[25]_i_4_n_0\
    );
\axi_c_read_data[25]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(25),
      I1 => \latency_reg[63]\(57),
      I2 => axi_c_read_addr(3),
      I3 => Q(25),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(25),
      O => \axi_c_read_data[25]_i_7_n_0\
    );
\axi_c_read_data[25]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(25),
      I1 => \write_step_DDR_address_reg[31]_0\(25),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(25),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(57),
      O => \axi_c_read_data[25]_i_8_n_0\
    );
\axi_c_read_data[25]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(25),
      I1 => \write_max_queue_size_reg[31]_0\(25),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(25),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(25),
      O => \axi_c_read_data[25]_i_9_n_0\
    );
\axi_c_read_data[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[26]_i_2_n_0\,
      I1 => \axi_c_read_data[26]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[26]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(26)
    );
\axi_c_read_data[26]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(26),
      I1 => \read_step_DDR_address_reg[31]_0\(26),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(26),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(58),
      O => \axi_c_read_data[26]_i_10_n_0\
    );
\axi_c_read_data[26]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(26),
      I1 => \read_max_queue_size_reg[31]_0\(26),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(26),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(26),
      O => \axi_c_read_data[26]_i_11_n_0\
    );
\axi_c_read_data[26]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(26),
      I1 => \read_blocking_ratio_reg[31]_0\(26),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(26),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[26]_i_3_n_0\
    );
\axi_c_read_data[26]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[26]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(58),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(26),
      O => \axi_c_read_data[26]_i_4_n_0\
    );
\axi_c_read_data[26]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(26),
      I1 => \latency_reg[63]\(58),
      I2 => axi_c_read_addr(3),
      I3 => Q(26),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(26),
      O => \axi_c_read_data[26]_i_7_n_0\
    );
\axi_c_read_data[26]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(26),
      I1 => \write_step_DDR_address_reg[31]_0\(26),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(26),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(58),
      O => \axi_c_read_data[26]_i_8_n_0\
    );
\axi_c_read_data[26]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(26),
      I1 => \write_max_queue_size_reg[31]_0\(26),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(26),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(26),
      O => \axi_c_read_data[26]_i_9_n_0\
    );
\axi_c_read_data[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[27]_i_2_n_0\,
      I1 => \axi_c_read_data[27]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[27]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(27)
    );
\axi_c_read_data[27]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(27),
      I1 => \read_step_DDR_address_reg[31]_0\(27),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(27),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(59),
      O => \axi_c_read_data[27]_i_10_n_0\
    );
\axi_c_read_data[27]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(27),
      I1 => \read_max_queue_size_reg[31]_0\(27),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(27),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(27),
      O => \axi_c_read_data[27]_i_11_n_0\
    );
\axi_c_read_data[27]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(27),
      I1 => \read_blocking_ratio_reg[31]_0\(27),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(27),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[27]_i_3_n_0\
    );
\axi_c_read_data[27]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[27]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(59),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(27),
      O => \axi_c_read_data[27]_i_4_n_0\
    );
\axi_c_read_data[27]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(27),
      I1 => \latency_reg[63]\(59),
      I2 => axi_c_read_addr(3),
      I3 => Q(27),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(27),
      O => \axi_c_read_data[27]_i_7_n_0\
    );
\axi_c_read_data[27]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(27),
      I1 => \write_step_DDR_address_reg[31]_0\(27),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(27),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(59),
      O => \axi_c_read_data[27]_i_8_n_0\
    );
\axi_c_read_data[27]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(27),
      I1 => \write_max_queue_size_reg[31]_0\(27),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(27),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(27),
      O => \axi_c_read_data[27]_i_9_n_0\
    );
\axi_c_read_data[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[28]_i_2_n_0\,
      I1 => \axi_c_read_data[28]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[28]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(28)
    );
\axi_c_read_data[28]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(28),
      I1 => \read_step_DDR_address_reg[31]_0\(28),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(28),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(60),
      O => \axi_c_read_data[28]_i_10_n_0\
    );
\axi_c_read_data[28]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(28),
      I1 => \read_max_queue_size_reg[31]_0\(28),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(28),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(28),
      O => \axi_c_read_data[28]_i_11_n_0\
    );
\axi_c_read_data[28]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(28),
      I1 => \read_blocking_ratio_reg[31]_0\(28),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(28),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[28]_i_3_n_0\
    );
\axi_c_read_data[28]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[28]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(60),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(28),
      O => \axi_c_read_data[28]_i_4_n_0\
    );
\axi_c_read_data[28]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(28),
      I1 => \latency_reg[63]\(60),
      I2 => axi_c_read_addr(3),
      I3 => Q(28),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(28),
      O => \axi_c_read_data[28]_i_7_n_0\
    );
\axi_c_read_data[28]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(28),
      I1 => \write_step_DDR_address_reg[31]_0\(28),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(28),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(60),
      O => \axi_c_read_data[28]_i_8_n_0\
    );
\axi_c_read_data[28]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(28),
      I1 => \write_max_queue_size_reg[31]_0\(28),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(28),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(28),
      O => \axi_c_read_data[28]_i_9_n_0\
    );
\axi_c_read_data[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[29]_i_2_n_0\,
      I1 => \axi_c_read_data[29]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[29]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(29)
    );
\axi_c_read_data[29]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(29),
      I1 => \read_step_DDR_address_reg[31]_0\(29),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(29),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(61),
      O => \axi_c_read_data[29]_i_10_n_0\
    );
\axi_c_read_data[29]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(29),
      I1 => \read_max_queue_size_reg[31]_0\(29),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(29),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(29),
      O => \axi_c_read_data[29]_i_11_n_0\
    );
\axi_c_read_data[29]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(29),
      I1 => \read_blocking_ratio_reg[31]_0\(29),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(29),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[29]_i_3_n_0\
    );
\axi_c_read_data[29]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[29]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(61),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(29),
      O => \axi_c_read_data[29]_i_4_n_0\
    );
\axi_c_read_data[29]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(29),
      I1 => \latency_reg[63]\(61),
      I2 => axi_c_read_addr(3),
      I3 => Q(29),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(29),
      O => \axi_c_read_data[29]_i_7_n_0\
    );
\axi_c_read_data[29]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(29),
      I1 => \write_step_DDR_address_reg[31]_0\(29),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(29),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(61),
      O => \axi_c_read_data[29]_i_8_n_0\
    );
\axi_c_read_data[29]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(29),
      I1 => \write_max_queue_size_reg[31]_0\(29),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(29),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(29),
      O => \axi_c_read_data[29]_i_9_n_0\
    );
\axi_c_read_data[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \axi_c_read_data_reg[2]_i_2_n_0\,
      I1 => \axi_c_read_data[2]_i_3_n_0\,
      I2 => \axi_c_read_data[3]_i_4_n_0\,
      I3 => \axi_c_read_data[2]_i_4_n_0\,
      I4 => \axi_c_read_data[3]_i_6_n_0\,
      I5 => \axi_c_read_data[2]_i_5_n_0\,
      O => \axi_c_read_data_reg[31]\(2)
    );
\axi_c_read_data[2]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(2),
      I1 => \read_step_DDR_address_reg[31]_0\(2),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(2),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(34),
      O => \axi_c_read_data[2]_i_10_n_0\
    );
\axi_c_read_data[2]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(2),
      I1 => \read_max_queue_size_reg[31]_0\(2),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(2),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(2),
      O => \axi_c_read_data[2]_i_11_n_0\
    );
\axi_c_read_data[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(2),
      I1 => \read_blocking_ratio_reg[31]_0\(2),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(2),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[2]_i_3_n_0\
    );
\axi_c_read_data[2]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(2),
      I1 => \latency_reg[63]\(34),
      I2 => axi_c_read_addr(3),
      I3 => Q(2),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(2),
      O => \axi_c_read_data[2]_i_4_n_0\
    );
\axi_c_read_data[2]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A0CFC0"
    )
        port map (
      I0 => \runtime_reg[63]\(2),
      I1 => \runtime_reg[63]\(34),
      I2 => axi_c_read_addr(3),
      I3 => \out\,
      I4 => axi_c_read_addr(2),
      O => \axi_c_read_data[2]_i_5_n_0\
    );
\axi_c_read_data[2]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(2),
      I1 => \write_step_DDR_address_reg[31]_0\(2),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(2),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(34),
      O => \axi_c_read_data[2]_i_8_n_0\
    );
\axi_c_read_data[2]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(2),
      I1 => \write_max_queue_size_reg[31]_0\(2),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(2),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(2),
      O => \axi_c_read_data[2]_i_9_n_0\
    );
\axi_c_read_data[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[30]_i_2_n_0\,
      I1 => \axi_c_read_data[30]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[30]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(30)
    );
\axi_c_read_data[30]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(30),
      I1 => \read_step_DDR_address_reg[31]_0\(30),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(30),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(62),
      O => \axi_c_read_data[30]_i_10_n_0\
    );
\axi_c_read_data[30]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(30),
      I1 => \read_max_queue_size_reg[31]_0\(30),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(30),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(30),
      O => \axi_c_read_data[30]_i_11_n_0\
    );
\axi_c_read_data[30]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(30),
      I1 => \read_blocking_ratio_reg[31]_0\(30),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(30),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[30]_i_3_n_0\
    );
\axi_c_read_data[30]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[30]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(62),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(30),
      O => \axi_c_read_data[30]_i_4_n_0\
    );
\axi_c_read_data[30]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(30),
      I1 => \latency_reg[63]\(62),
      I2 => axi_c_read_addr(3),
      I3 => Q(30),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(30),
      O => \axi_c_read_data[30]_i_7_n_0\
    );
\axi_c_read_data[30]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(30),
      I1 => \write_step_DDR_address_reg[31]_0\(30),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(30),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(62),
      O => \axi_c_read_data[30]_i_8_n_0\
    );
\axi_c_read_data[30]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(30),
      I1 => \write_max_queue_size_reg[31]_0\(30),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(30),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(30),
      O => \axi_c_read_data[30]_i_9_n_0\
    );
\axi_c_read_data[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[31]_i_2_n_0\,
      I1 => \axi_c_read_data[31]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[31]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(31)
    );
\axi_c_read_data[31]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(31),
      I1 => \read_step_DDR_address_reg[31]_0\(31),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(31),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(63),
      O => \axi_c_read_data[31]_i_10_n_0\
    );
\axi_c_read_data[31]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(31),
      I1 => \read_max_queue_size_reg[31]_0\(31),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(31),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(31),
      O => \axi_c_read_data[31]_i_11_n_0\
    );
\axi_c_read_data[31]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(31),
      I1 => \read_blocking_ratio_reg[31]_0\(31),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(31),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[31]_i_3_n_0\
    );
\axi_c_read_data[31]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[31]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(63),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(31),
      O => \axi_c_read_data[31]_i_4_n_0\
    );
\axi_c_read_data[31]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(31),
      I1 => \latency_reg[63]\(63),
      I2 => axi_c_read_addr(3),
      I3 => Q(31),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(31),
      O => \axi_c_read_data[31]_i_7_n_0\
    );
\axi_c_read_data[31]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(31),
      I1 => \write_step_DDR_address_reg[31]_0\(31),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(31),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(63),
      O => \axi_c_read_data[31]_i_8_n_0\
    );
\axi_c_read_data[31]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(31),
      I1 => \write_max_queue_size_reg[31]_0\(31),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(31),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(31),
      O => \axi_c_read_data[31]_i_9_n_0\
    );
\axi_c_read_data[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \axi_c_read_data_reg[3]_i_2_n_0\,
      I1 => \axi_c_read_data[3]_i_3_n_0\,
      I2 => \axi_c_read_data[3]_i_4_n_0\,
      I3 => \axi_c_read_data[3]_i_5_n_0\,
      I4 => \axi_c_read_data[3]_i_6_n_0\,
      I5 => \axi_c_read_data[3]_i_7_n_0\,
      O => \axi_c_read_data_reg[31]\(3)
    );
\axi_c_read_data[3]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(3),
      I1 => \write_step_DDR_address_reg[31]_0\(3),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(3),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(35),
      O => \axi_c_read_data[3]_i_10_n_0\
    );
\axi_c_read_data[3]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(3),
      I1 => \write_max_queue_size_reg[31]_0\(3),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(3),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(3),
      O => \axi_c_read_data[3]_i_11_n_0\
    );
\axi_c_read_data[3]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(3),
      I1 => \read_step_DDR_address_reg[31]_0\(3),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(3),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(35),
      O => \axi_c_read_data[3]_i_12_n_0\
    );
\axi_c_read_data[3]_i_13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(3),
      I1 => \read_max_queue_size_reg[31]_0\(3),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(3),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(3),
      O => \axi_c_read_data[3]_i_13_n_0\
    );
\axi_c_read_data[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(3),
      I1 => \read_blocking_ratio_reg[31]_0\(3),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(3),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[3]_i_3_n_0\
    );
\axi_c_read_data[3]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => axi_c_read_addr(5),
      I1 => axi_c_read_addr(6),
      O => \axi_c_read_data[3]_i_4_n_0\
    );
\axi_c_read_data[3]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(3),
      I1 => \latency_reg[63]\(35),
      I2 => axi_c_read_addr(3),
      I3 => Q(3),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(3),
      O => \axi_c_read_data[3]_i_5_n_0\
    );
\axi_c_read_data[3]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"5D"
    )
        port map (
      I0 => axi_c_read_addr(6),
      I1 => axi_c_read_addr(4),
      I2 => axi_c_read_addr(5),
      O => \axi_c_read_data[3]_i_6_n_0\
    );
\axi_c_read_data[3]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A0CFC0"
    )
        port map (
      I0 => \runtime_reg[63]\(3),
      I1 => \runtime_reg[63]\(35),
      I2 => axi_c_read_addr(3),
      I3 => active_blocking_reg_4,
      I4 => axi_c_read_addr(2),
      O => \axi_c_read_data[3]_i_7_n_0\
    );
\axi_c_read_data[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BA8ABABABA8A8A8A"
    )
        port map (
      I0 => \axi_c_read_data[4]_i_2_n_0\,
      I1 => axi_c_read_addr(5),
      I2 => axi_c_read_addr(6),
      I3 => \axi_c_read_data[4]_i_3_n_0\,
      I4 => axi_c_read_addr(4),
      I5 => \axi_c_read_data[4]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(4)
    );
\axi_c_read_data[4]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(4),
      I1 => \write_step_DDR_address_reg[31]_0\(4),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(4),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(36),
      O => \axi_c_read_data[4]_i_10_n_0\
    );
\axi_c_read_data[4]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(4),
      I1 => \write_max_queue_size_reg[31]_0\(4),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(4),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(4),
      O => \axi_c_read_data[4]_i_11_n_0\
    );
\axi_c_read_data[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAFACCFC0A0ACC0C"
    )
        port map (
      I0 => \axi_c_read_data_reg[4]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[4]_i_6_n_0\,
      I2 => axi_c_read_addr(6),
      I3 => axi_c_read_addr(4),
      I4 => axi_c_read_addr(5),
      I5 => \axi_c_read_data[4]_i_7_n_0\,
      O => \axi_c_read_data[4]_i_2_n_0\
    );
\axi_c_read_data[4]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(4),
      I1 => \latency_reg[63]\(36),
      I2 => axi_c_read_addr(3),
      I3 => Q(4),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(4),
      O => \axi_c_read_data[4]_i_3_n_0\
    );
\axi_c_read_data[4]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A0CFC0"
    )
        port map (
      I0 => \runtime_reg[63]\(4),
      I1 => \runtime_reg[63]\(36),
      I2 => axi_c_read_addr(3),
      I3 => active_runtime,
      I4 => axi_c_read_addr(2),
      O => \axi_c_read_data[4]_i_4_n_0\
    );
\axi_c_read_data[4]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(4),
      I1 => \read_blocking_ratio_reg[31]_0\(4),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(4),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[4]_i_7_n_0\
    );
\axi_c_read_data[4]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(4),
      I1 => \read_step_DDR_address_reg[31]_0\(4),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(4),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(36),
      O => \axi_c_read_data[4]_i_8_n_0\
    );
\axi_c_read_data[4]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(4),
      I1 => \read_max_queue_size_reg[31]_0\(4),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(4),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(4),
      O => \axi_c_read_data[4]_i_9_n_0\
    );
\axi_c_read_data[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[5]_i_2_n_0\,
      I1 => \axi_c_read_data[5]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[5]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(5)
    );
\axi_c_read_data[5]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(5),
      I1 => \read_step_DDR_address_reg[31]_0\(5),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(5),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(37),
      O => \axi_c_read_data[5]_i_10_n_0\
    );
\axi_c_read_data[5]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(5),
      I1 => \read_max_queue_size_reg[31]_0\(5),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(5),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(5),
      O => \axi_c_read_data[5]_i_11_n_0\
    );
\axi_c_read_data[5]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(5),
      I1 => \read_blocking_ratio_reg[31]_0\(5),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(5),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[5]_i_3_n_0\
    );
\axi_c_read_data[5]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[5]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(37),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(5),
      O => \axi_c_read_data[5]_i_4_n_0\
    );
\axi_c_read_data[5]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(5),
      I1 => \latency_reg[63]\(37),
      I2 => axi_c_read_addr(3),
      I3 => Q(5),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(5),
      O => \axi_c_read_data[5]_i_7_n_0\
    );
\axi_c_read_data[5]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(5),
      I1 => \write_step_DDR_address_reg[31]_0\(5),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(5),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(37),
      O => \axi_c_read_data[5]_i_8_n_0\
    );
\axi_c_read_data[5]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(5),
      I1 => \write_max_queue_size_reg[31]_0\(5),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(5),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(5),
      O => \axi_c_read_data[5]_i_9_n_0\
    );
\axi_c_read_data[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[6]_i_2_n_0\,
      I1 => \axi_c_read_data[6]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[6]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(6)
    );
\axi_c_read_data[6]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(6),
      I1 => \read_step_DDR_address_reg[31]_0\(6),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(6),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(38),
      O => \axi_c_read_data[6]_i_10_n_0\
    );
\axi_c_read_data[6]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(6),
      I1 => \read_max_queue_size_reg[31]_0\(6),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(6),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(6),
      O => \axi_c_read_data[6]_i_11_n_0\
    );
\axi_c_read_data[6]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(6),
      I1 => \read_blocking_ratio_reg[31]_0\(6),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(6),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[6]_i_3_n_0\
    );
\axi_c_read_data[6]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[6]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(38),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(6),
      O => \axi_c_read_data[6]_i_4_n_0\
    );
\axi_c_read_data[6]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(6),
      I1 => \latency_reg[63]\(38),
      I2 => axi_c_read_addr(3),
      I3 => Q(6),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(6),
      O => \axi_c_read_data[6]_i_7_n_0\
    );
\axi_c_read_data[6]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(6),
      I1 => \write_step_DDR_address_reg[31]_0\(6),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(6),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(38),
      O => \axi_c_read_data[6]_i_8_n_0\
    );
\axi_c_read_data[6]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(6),
      I1 => \write_max_queue_size_reg[31]_0\(6),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(6),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(6),
      O => \axi_c_read_data[6]_i_9_n_0\
    );
\axi_c_read_data[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[7]_i_2_n_0\,
      I1 => \axi_c_read_data[7]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[7]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(7)
    );
\axi_c_read_data[7]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(7),
      I1 => \read_step_DDR_address_reg[31]_0\(7),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(7),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(39),
      O => \axi_c_read_data[7]_i_10_n_0\
    );
\axi_c_read_data[7]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(7),
      I1 => \read_max_queue_size_reg[31]_0\(7),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(7),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(7),
      O => \axi_c_read_data[7]_i_11_n_0\
    );
\axi_c_read_data[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(7),
      I1 => \read_blocking_ratio_reg[31]_0\(7),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(7),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[7]_i_3_n_0\
    );
\axi_c_read_data[7]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[7]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(39),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(7),
      O => \axi_c_read_data[7]_i_4_n_0\
    );
\axi_c_read_data[7]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(7),
      I1 => \latency_reg[63]\(39),
      I2 => axi_c_read_addr(3),
      I3 => Q(7),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(7),
      O => \axi_c_read_data[7]_i_7_n_0\
    );
\axi_c_read_data[7]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(7),
      I1 => \write_step_DDR_address_reg[31]_0\(7),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(7),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(39),
      O => \axi_c_read_data[7]_i_8_n_0\
    );
\axi_c_read_data[7]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(7),
      I1 => \write_max_queue_size_reg[31]_0\(7),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(7),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(7),
      O => \axi_c_read_data[7]_i_9_n_0\
    );
\axi_c_read_data[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[8]_i_2_n_0\,
      I1 => \axi_c_read_data[8]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[8]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(8)
    );
\axi_c_read_data[8]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(8),
      I1 => \read_step_DDR_address_reg[31]_0\(8),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(8),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(40),
      O => \axi_c_read_data[8]_i_10_n_0\
    );
\axi_c_read_data[8]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(8),
      I1 => \read_max_queue_size_reg[31]_0\(8),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(8),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(8),
      O => \axi_c_read_data[8]_i_11_n_0\
    );
\axi_c_read_data[8]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(8),
      I1 => \read_blocking_ratio_reg[31]_0\(8),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(8),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[8]_i_3_n_0\
    );
\axi_c_read_data[8]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[8]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(40),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(8),
      O => \axi_c_read_data[8]_i_4_n_0\
    );
\axi_c_read_data[8]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(8),
      I1 => \latency_reg[63]\(40),
      I2 => axi_c_read_addr(3),
      I3 => Q(8),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(8),
      O => \axi_c_read_data[8]_i_7_n_0\
    );
\axi_c_read_data[8]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(8),
      I1 => \write_step_DDR_address_reg[31]_0\(8),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(8),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(40),
      O => \axi_c_read_data[8]_i_8_n_0\
    );
\axi_c_read_data[8]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(8),
      I1 => \write_max_queue_size_reg[31]_0\(8),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(8),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(8),
      O => \axi_c_read_data[8]_i_9_n_0\
    );
\axi_c_read_data[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CFAAC0AA"
    )
        port map (
      I0 => \axi_c_read_data_reg[9]_i_2_n_0\,
      I1 => \axi_c_read_data[9]_i_3_n_0\,
      I2 => axi_c_read_addr(5),
      I3 => axi_c_read_addr(6),
      I4 => \axi_c_read_data[9]_i_4_n_0\,
      O => \axi_c_read_data_reg[31]\(9)
    );
\axi_c_read_data[9]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \read_count_bursts_per_reset_reg[31]_0\(9),
      I1 => \read_step_DDR_address_reg[31]_0\(9),
      I2 => axi_c_read_addr(3),
      I3 => \read_start_DDR_address_reg[63]_0\(9),
      I4 => axi_c_read_addr(2),
      I5 => \read_start_DDR_address_reg[63]_0\(41),
      O => \axi_c_read_data[9]_i_10_n_0\
    );
\axi_c_read_data[9]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_r_control_reg[31]\(9),
      I1 => \read_max_queue_size_reg[31]_0\(9),
      I2 => axi_c_read_addr(3),
      I3 => \read_ticks_per_burst_reg[31]_0\(9),
      I4 => axi_c_read_addr(2),
      I5 => \read_burst_size_reg[31]_0\(9),
      O => \axi_c_read_data[9]_i_11_n_0\
    );
\axi_c_read_data[9]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C0A0C0A0000F0000"
    )
        port map (
      I0 => \write_blocking_ratio_reg[31]_0\(9),
      I1 => \read_blocking_ratio_reg[31]_0\(9),
      I2 => axi_c_read_addr(4),
      I3 => axi_c_read_addr(2),
      I4 => \max_cycles_with_no_data_read_reg[31]_0\(9),
      I5 => axi_c_read_addr(3),
      O => \axi_c_read_data[9]_i_3_n_0\
    );
\axi_c_read_data[9]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => \axi_c_read_data[9]_i_7_n_0\,
      I1 => \axi_c_read_data[3]_i_6_n_0\,
      I2 => axi_c_read_addr(3),
      I3 => \runtime_reg[63]\(41),
      I4 => axi_c_read_addr(2),
      I5 => \runtime_reg[63]\(9),
      O => \axi_c_read_data[9]_i_4_n_0\
    );
\axi_c_read_data[9]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \latency_reg[63]\(9),
      I1 => \latency_reg[63]\(41),
      I2 => axi_c_read_addr(3),
      I3 => Q(9),
      I4 => axi_c_read_addr(2),
      I5 => \countAddrSent_reg[31]_1\(9),
      O => \axi_c_read_data[9]_i_7_n_0\
    );
\axi_c_read_data[9]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \write_count_bursts_per_reset_reg[31]_0\(9),
      I1 => \write_step_DDR_address_reg[31]_0\(9),
      I2 => axi_c_read_addr(3),
      I3 => \write_start_DDR_address_reg[63]_0\(9),
      I4 => axi_c_read_addr(2),
      I5 => \write_start_DDR_address_reg[63]_0\(41),
      O => \axi_c_read_data[9]_i_8_n_0\
    );
\axi_c_read_data[9]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \debug_axi_control_reg[31]\(9),
      I1 => \write_max_queue_size_reg[31]_0\(9),
      I2 => axi_c_read_addr(3),
      I3 => \write_ticks_per_burst_reg[31]_0\(9),
      I4 => axi_c_read_addr(2),
      I5 => \write_burst_size_reg[31]_0\(9),
      O => \axi_c_read_data[9]_i_9_n_0\
    );
\axi_c_read_data_reg[0]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[0]_i_6_n_0\,
      I1 => \axi_c_read_data_reg[0]_i_7_n_0\,
      O => \axi_c_read_data_reg[0]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[0]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[0]_i_8_n_0\,
      I1 => \axi_c_read_data[0]_i_9_n_0\,
      O => \axi_c_read_data_reg[0]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[0]_i_7\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[0]_i_10_n_0\,
      I1 => \axi_c_read_data[0]_i_11_n_0\,
      O => \axi_c_read_data_reg[0]_i_7_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[10]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[10]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[10]_i_6_n_0\,
      O => \axi_c_read_data_reg[10]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[10]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[10]_i_8_n_0\,
      I1 => \axi_c_read_data[10]_i_9_n_0\,
      O => \axi_c_read_data_reg[10]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[10]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[10]_i_10_n_0\,
      I1 => \axi_c_read_data[10]_i_11_n_0\,
      O => \axi_c_read_data_reg[10]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[11]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[11]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[11]_i_6_n_0\,
      O => \axi_c_read_data_reg[11]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[11]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[11]_i_8_n_0\,
      I1 => \axi_c_read_data[11]_i_9_n_0\,
      O => \axi_c_read_data_reg[11]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[11]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[11]_i_10_n_0\,
      I1 => \axi_c_read_data[11]_i_11_n_0\,
      O => \axi_c_read_data_reg[11]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[12]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[12]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[12]_i_6_n_0\,
      O => \axi_c_read_data_reg[12]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[12]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[12]_i_8_n_0\,
      I1 => \axi_c_read_data[12]_i_9_n_0\,
      O => \axi_c_read_data_reg[12]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[12]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[12]_i_10_n_0\,
      I1 => \axi_c_read_data[12]_i_11_n_0\,
      O => \axi_c_read_data_reg[12]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[13]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[13]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[13]_i_6_n_0\,
      O => \axi_c_read_data_reg[13]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[13]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[13]_i_8_n_0\,
      I1 => \axi_c_read_data[13]_i_9_n_0\,
      O => \axi_c_read_data_reg[13]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[13]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[13]_i_10_n_0\,
      I1 => \axi_c_read_data[13]_i_11_n_0\,
      O => \axi_c_read_data_reg[13]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[14]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[14]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[14]_i_6_n_0\,
      O => \axi_c_read_data_reg[14]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[14]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[14]_i_8_n_0\,
      I1 => \axi_c_read_data[14]_i_9_n_0\,
      O => \axi_c_read_data_reg[14]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[14]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[14]_i_10_n_0\,
      I1 => \axi_c_read_data[14]_i_11_n_0\,
      O => \axi_c_read_data_reg[14]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[15]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[15]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[15]_i_6_n_0\,
      O => \axi_c_read_data_reg[15]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[15]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[15]_i_8_n_0\,
      I1 => \axi_c_read_data[15]_i_9_n_0\,
      O => \axi_c_read_data_reg[15]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[15]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[15]_i_10_n_0\,
      I1 => \axi_c_read_data[15]_i_11_n_0\,
      O => \axi_c_read_data_reg[15]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[16]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[16]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[16]_i_6_n_0\,
      O => \axi_c_read_data_reg[16]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[16]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[16]_i_8_n_0\,
      I1 => \axi_c_read_data[16]_i_9_n_0\,
      O => \axi_c_read_data_reg[16]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[16]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[16]_i_10_n_0\,
      I1 => \axi_c_read_data[16]_i_11_n_0\,
      O => \axi_c_read_data_reg[16]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[17]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[17]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[17]_i_6_n_0\,
      O => \axi_c_read_data_reg[17]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[17]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[17]_i_8_n_0\,
      I1 => \axi_c_read_data[17]_i_9_n_0\,
      O => \axi_c_read_data_reg[17]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[17]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[17]_i_10_n_0\,
      I1 => \axi_c_read_data[17]_i_11_n_0\,
      O => \axi_c_read_data_reg[17]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[18]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[18]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[18]_i_6_n_0\,
      O => \axi_c_read_data_reg[18]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[18]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[18]_i_8_n_0\,
      I1 => \axi_c_read_data[18]_i_9_n_0\,
      O => \axi_c_read_data_reg[18]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[18]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[18]_i_10_n_0\,
      I1 => \axi_c_read_data[18]_i_11_n_0\,
      O => \axi_c_read_data_reg[18]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[19]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[19]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[19]_i_6_n_0\,
      O => \axi_c_read_data_reg[19]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[19]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[19]_i_8_n_0\,
      I1 => \axi_c_read_data[19]_i_9_n_0\,
      O => \axi_c_read_data_reg[19]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[19]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[19]_i_10_n_0\,
      I1 => \axi_c_read_data[19]_i_11_n_0\,
      O => \axi_c_read_data_reg[19]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[1]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[1]_i_6_n_0\,
      I1 => \axi_c_read_data_reg[1]_i_7_n_0\,
      O => \axi_c_read_data_reg[1]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[1]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[1]_i_8_n_0\,
      I1 => \axi_c_read_data[1]_i_9_n_0\,
      O => \axi_c_read_data_reg[1]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[1]_i_7\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[1]_i_10_n_0\,
      I1 => \axi_c_read_data[1]_i_11_n_0\,
      O => \axi_c_read_data_reg[1]_i_7_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[20]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[20]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[20]_i_6_n_0\,
      O => \axi_c_read_data_reg[20]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[20]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[20]_i_8_n_0\,
      I1 => \axi_c_read_data[20]_i_9_n_0\,
      O => \axi_c_read_data_reg[20]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[20]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[20]_i_10_n_0\,
      I1 => \axi_c_read_data[20]_i_11_n_0\,
      O => \axi_c_read_data_reg[20]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[21]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[21]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[21]_i_6_n_0\,
      O => \axi_c_read_data_reg[21]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[21]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[21]_i_8_n_0\,
      I1 => \axi_c_read_data[21]_i_9_n_0\,
      O => \axi_c_read_data_reg[21]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[21]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[21]_i_10_n_0\,
      I1 => \axi_c_read_data[21]_i_11_n_0\,
      O => \axi_c_read_data_reg[21]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[22]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[22]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[22]_i_6_n_0\,
      O => \axi_c_read_data_reg[22]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[22]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[22]_i_8_n_0\,
      I1 => \axi_c_read_data[22]_i_9_n_0\,
      O => \axi_c_read_data_reg[22]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[22]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[22]_i_10_n_0\,
      I1 => \axi_c_read_data[22]_i_11_n_0\,
      O => \axi_c_read_data_reg[22]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[23]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[23]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[23]_i_6_n_0\,
      O => \axi_c_read_data_reg[23]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[23]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[23]_i_8_n_0\,
      I1 => \axi_c_read_data[23]_i_9_n_0\,
      O => \axi_c_read_data_reg[23]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[23]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[23]_i_10_n_0\,
      I1 => \axi_c_read_data[23]_i_11_n_0\,
      O => \axi_c_read_data_reg[23]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[24]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[24]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[24]_i_6_n_0\,
      O => \axi_c_read_data_reg[24]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[24]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[24]_i_8_n_0\,
      I1 => \axi_c_read_data[24]_i_9_n_0\,
      O => \axi_c_read_data_reg[24]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[24]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[24]_i_10_n_0\,
      I1 => \axi_c_read_data[24]_i_11_n_0\,
      O => \axi_c_read_data_reg[24]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[25]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[25]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[25]_i_6_n_0\,
      O => \axi_c_read_data_reg[25]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[25]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[25]_i_8_n_0\,
      I1 => \axi_c_read_data[25]_i_9_n_0\,
      O => \axi_c_read_data_reg[25]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[25]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[25]_i_10_n_0\,
      I1 => \axi_c_read_data[25]_i_11_n_0\,
      O => \axi_c_read_data_reg[25]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[26]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[26]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[26]_i_6_n_0\,
      O => \axi_c_read_data_reg[26]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[26]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[26]_i_8_n_0\,
      I1 => \axi_c_read_data[26]_i_9_n_0\,
      O => \axi_c_read_data_reg[26]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[26]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[26]_i_10_n_0\,
      I1 => \axi_c_read_data[26]_i_11_n_0\,
      O => \axi_c_read_data_reg[26]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[27]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[27]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[27]_i_6_n_0\,
      O => \axi_c_read_data_reg[27]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[27]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[27]_i_8_n_0\,
      I1 => \axi_c_read_data[27]_i_9_n_0\,
      O => \axi_c_read_data_reg[27]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[27]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[27]_i_10_n_0\,
      I1 => \axi_c_read_data[27]_i_11_n_0\,
      O => \axi_c_read_data_reg[27]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[28]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[28]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[28]_i_6_n_0\,
      O => \axi_c_read_data_reg[28]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[28]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[28]_i_8_n_0\,
      I1 => \axi_c_read_data[28]_i_9_n_0\,
      O => \axi_c_read_data_reg[28]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[28]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[28]_i_10_n_0\,
      I1 => \axi_c_read_data[28]_i_11_n_0\,
      O => \axi_c_read_data_reg[28]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[29]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[29]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[29]_i_6_n_0\,
      O => \axi_c_read_data_reg[29]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[29]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[29]_i_8_n_0\,
      I1 => \axi_c_read_data[29]_i_9_n_0\,
      O => \axi_c_read_data_reg[29]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[29]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[29]_i_10_n_0\,
      I1 => \axi_c_read_data[29]_i_11_n_0\,
      O => \axi_c_read_data_reg[29]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[2]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[2]_i_6_n_0\,
      I1 => \axi_c_read_data_reg[2]_i_7_n_0\,
      O => \axi_c_read_data_reg[2]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[2]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[2]_i_8_n_0\,
      I1 => \axi_c_read_data[2]_i_9_n_0\,
      O => \axi_c_read_data_reg[2]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[2]_i_7\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[2]_i_10_n_0\,
      I1 => \axi_c_read_data[2]_i_11_n_0\,
      O => \axi_c_read_data_reg[2]_i_7_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[30]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[30]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[30]_i_6_n_0\,
      O => \axi_c_read_data_reg[30]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[30]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[30]_i_8_n_0\,
      I1 => \axi_c_read_data[30]_i_9_n_0\,
      O => \axi_c_read_data_reg[30]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[30]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[30]_i_10_n_0\,
      I1 => \axi_c_read_data[30]_i_11_n_0\,
      O => \axi_c_read_data_reg[30]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[31]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[31]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[31]_i_6_n_0\,
      O => \axi_c_read_data_reg[31]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[31]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[31]_i_8_n_0\,
      I1 => \axi_c_read_data[31]_i_9_n_0\,
      O => \axi_c_read_data_reg[31]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[31]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[31]_i_10_n_0\,
      I1 => \axi_c_read_data[31]_i_11_n_0\,
      O => \axi_c_read_data_reg[31]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[3]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[3]_i_8_n_0\,
      I1 => \axi_c_read_data_reg[3]_i_9_n_0\,
      O => \axi_c_read_data_reg[3]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[3]_i_8\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[3]_i_10_n_0\,
      I1 => \axi_c_read_data[3]_i_11_n_0\,
      O => \axi_c_read_data_reg[3]_i_8_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[3]_i_9\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[3]_i_12_n_0\,
      I1 => \axi_c_read_data[3]_i_13_n_0\,
      O => \axi_c_read_data_reg[3]_i_9_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[4]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[4]_i_8_n_0\,
      I1 => \axi_c_read_data[4]_i_9_n_0\,
      O => \axi_c_read_data_reg[4]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[4]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[4]_i_10_n_0\,
      I1 => \axi_c_read_data[4]_i_11_n_0\,
      O => \axi_c_read_data_reg[4]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[5]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[5]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[5]_i_6_n_0\,
      O => \axi_c_read_data_reg[5]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[5]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[5]_i_8_n_0\,
      I1 => \axi_c_read_data[5]_i_9_n_0\,
      O => \axi_c_read_data_reg[5]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[5]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[5]_i_10_n_0\,
      I1 => \axi_c_read_data[5]_i_11_n_0\,
      O => \axi_c_read_data_reg[5]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[6]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[6]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[6]_i_6_n_0\,
      O => \axi_c_read_data_reg[6]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[6]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[6]_i_8_n_0\,
      I1 => \axi_c_read_data[6]_i_9_n_0\,
      O => \axi_c_read_data_reg[6]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[6]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[6]_i_10_n_0\,
      I1 => \axi_c_read_data[6]_i_11_n_0\,
      O => \axi_c_read_data_reg[6]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[7]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[7]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[7]_i_6_n_0\,
      O => \axi_c_read_data_reg[7]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[7]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[7]_i_8_n_0\,
      I1 => \axi_c_read_data[7]_i_9_n_0\,
      O => \axi_c_read_data_reg[7]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[7]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[7]_i_10_n_0\,
      I1 => \axi_c_read_data[7]_i_11_n_0\,
      O => \axi_c_read_data_reg[7]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[8]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[8]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[8]_i_6_n_0\,
      O => \axi_c_read_data_reg[8]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[8]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[8]_i_8_n_0\,
      I1 => \axi_c_read_data[8]_i_9_n_0\,
      O => \axi_c_read_data_reg[8]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[8]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[8]_i_10_n_0\,
      I1 => \axi_c_read_data[8]_i_11_n_0\,
      O => \axi_c_read_data_reg[8]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[9]_i_2\: unisim.vcomponents.MUXF8
     port map (
      I0 => \axi_c_read_data_reg[9]_i_5_n_0\,
      I1 => \axi_c_read_data_reg[9]_i_6_n_0\,
      O => \axi_c_read_data_reg[9]_i_2_n_0\,
      S => axi_c_read_addr(5)
    );
\axi_c_read_data_reg[9]_i_5\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[9]_i_8_n_0\,
      I1 => \axi_c_read_data[9]_i_9_n_0\,
      O => \axi_c_read_data_reg[9]_i_5_n_0\,
      S => axi_c_read_addr(4)
    );
\axi_c_read_data_reg[9]_i_6\: unisim.vcomponents.MUXF7
     port map (
      I0 => \axi_c_read_data[9]_i_10_n_0\,
      I1 => \axi_c_read_data[9]_i_11_n_0\,
      O => \axi_c_read_data_reg[9]_i_6_n_0\,
      S => axi_c_read_addr(4)
    );
\countAddrSent[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"888808A8CCCC0CFC"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(0),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => \countAddrSent_reg[31]_1\(0),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(0)
    );
\countAddrSent[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(10),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(9),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(10)
    );
\countAddrSent[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(11),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(10),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(11)
    );
\countAddrSent[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(12),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(11),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(12)
    );
\countAddrSent[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(13),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(12),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(13)
    );
\countAddrSent[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(14),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(13),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(14)
    );
\countAddrSent[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(15),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(14),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(15)
    );
\countAddrSent[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(16),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(15),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(16)
    );
\countAddrSent[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(17),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(16),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(17)
    );
\countAddrSent[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(18),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(17),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(18)
    );
\countAddrSent[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(19),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(18),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(19)
    );
\countAddrSent[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(1),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(0),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(1)
    );
\countAddrSent[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(20),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(19),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(20)
    );
\countAddrSent[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(21),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(20),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(21)
    );
\countAddrSent[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(22),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(21),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(22)
    );
\countAddrSent[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(23),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(22),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(23)
    );
\countAddrSent[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(24),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(23),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(24)
    );
\countAddrSent[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(25),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(24),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(25)
    );
\countAddrSent[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(26),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(25),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(26)
    );
\countAddrSent[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(27),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(26),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(27)
    );
\countAddrSent[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(28),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(27),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(28)
    );
\countAddrSent[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(29),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(28),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(29)
    );
\countAddrSent[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(2),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(1),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(2)
    );
\countAddrSent[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(30),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(29),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(30)
    );
\countAddrSent[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F4F4FFF4"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \out\,
      I2 => \countAddrSent__0\(31),
      I3 => \countAddrToBeSent_reg[38]\(0),
      I4 => writeAbusy,
      O => \countAddrSent_reg[31]\(0)
    );
\countAddrSent[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_2,
      I1 => \^write_data\(31),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(30),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(31)
    );
\countAddrSent[31]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000008"
    )
        port map (
      I0 => \^axi_c_write_valid\,
      I1 => axi_c_write_addr(6),
      I2 => axi_c_write_addr(5),
      I3 => axi_c_write_addr(2),
      I4 => \read_ticks_per_burst[31]_i_2_n_0\,
      O => \countAddrSent__0\(31)
    );
\countAddrSent[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(3),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(2),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(3)
    );
\countAddrSent[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(4),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(3),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(4)
    );
\countAddrSent[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(5),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(4),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(5)
    );
\countAddrSent[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(6),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(5),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(6)
    );
\countAddrSent[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(7),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(6),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(7)
    );
\countAddrSent[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(8),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(7),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(8)
    );
\countAddrSent[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888A808CCCCFC0C"
    )
        port map (
      I0 => active_blocking_reg_3,
      I1 => \^write_data\(9),
      I2 => \countAddrToBeSent_reg[38]\(0),
      I3 => countAddrSent0(8),
      I4 => writeAbusy,
      I5 => \out\,
      O => \countAddrSent_reg[31]_0\(9)
    );
\countDataReceived[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0888A8880CCCFCCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(0),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => Q(0),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(0)
    );
\countDataReceived[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(10),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(9),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(10)
    );
\countDataReceived[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(11),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(10),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(11)
    );
\countDataReceived[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(12),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(11),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(12)
    );
\countDataReceived[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(13),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(12),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(13)
    );
\countDataReceived[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(14),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(13),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(14)
    );
\countDataReceived[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(15),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(14),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(15)
    );
\countDataReceived[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(16),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(15),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(16)
    );
\countDataReceived[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(17),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(16),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(17)
    );
\countDataReceived[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(18),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(17),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(18)
    );
\countDataReceived[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(19),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(18),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(19)
    );
\countDataReceived[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(1),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(0),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(1)
    );
\countDataReceived[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(20),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(19),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(20)
    );
\countDataReceived[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(21),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(20),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(21)
    );
\countDataReceived[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(22),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(21),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(22)
    );
\countDataReceived[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(23),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(22),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(23)
    );
\countDataReceived[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(24),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(23),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(24)
    );
\countDataReceived[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(25),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(24),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(25)
    );
\countDataReceived[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(26),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(25),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(26)
    );
\countDataReceived[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(27),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(26),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(27)
    );
\countDataReceived[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(28),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(27),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(28)
    );
\countDataReceived[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(29),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(28),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(29)
    );
\countDataReceived[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(2),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(1),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(2)
    );
\countDataReceived[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(30),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(29),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(30)
    );
\countDataReceived[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F4"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \out\,
      I2 => \countDataReceived[31]_i_3_n_0\,
      O => E(0)
    );
\countDataReceived[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(31),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(30),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(31)
    );
\countDataReceived[31]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8F888888"
    )
        port map (
      I0 => readDataLast,
      I1 => readDataValid,
      I2 => \countDataReceived[31]_i_4_n_0\,
      I3 => \^axi_c_write_valid\,
      I4 => axi_c_write_addr(2),
      O => \countDataReceived[31]_i_3_n_0\
    );
\countDataReceived[31]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFF7"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(6),
      I2 => axi_c_write_addr(3),
      I3 => axi_c_write_addr(5),
      O => \countDataReceived[31]_i_4_n_0\
    );
\countDataReceived[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(3),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(2),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(3)
    );
\countDataReceived[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(4),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(3),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(4)
    );
\countDataReceived[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(5),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(4),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(5)
    );
\countDataReceived[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(6),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(5),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(6)
    );
\countDataReceived[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(7),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(6),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(7)
    );
\countDataReceived[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(8),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(7),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(8)
    );
\countDataReceived[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_0,
      I1 => \^write_data\(9),
      I2 => readDataLast,
      I3 => readDataValid,
      I4 => countDataReceived0(8),
      I5 => \out\,
      O => \countDataReceived_reg[31]\(9)
    );
\debug_axi_control[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000008000000"
    )
        port map (
      I0 => \^axi_c_write_valid\,
      I1 => axi_c_write_addr(4),
      I2 => axi_c_write_addr(6),
      I3 => axi_c_write_addr(2),
      I4 => axi_c_write_addr(3),
      I5 => axi_c_write_addr(5),
      O => \debug_axi_control_reg[0]\(0)
    );
\debug_axi_r_control[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000080000000"
    )
        port map (
      I0 => \^axi_c_write_valid\,
      I1 => axi_c_write_addr(4),
      I2 => axi_c_write_addr(5),
      I3 => axi_c_write_addr(2),
      I4 => axi_c_write_addr(3),
      I5 => axi_c_write_addr(6),
      O => \debug_axi_r_control_reg[0]\(0)
    );
\max_cycles_with_no_data_read[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(0),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(0),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(0)
    );
\max_cycles_with_no_data_read[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(10),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(10),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(10)
    );
\max_cycles_with_no_data_read[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(11),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(11),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(11)
    );
\max_cycles_with_no_data_read[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(12),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(12),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(12)
    );
\max_cycles_with_no_data_read[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(13),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(13),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(13)
    );
\max_cycles_with_no_data_read[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(14),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(14),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(14)
    );
\max_cycles_with_no_data_read[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(15),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(15),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(15)
    );
\max_cycles_with_no_data_read[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(16),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(16),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(16)
    );
\max_cycles_with_no_data_read[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(17),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(17),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(17)
    );
\max_cycles_with_no_data_read[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(18),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(18),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(18)
    );
\max_cycles_with_no_data_read[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(19),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(19),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(19)
    );
\max_cycles_with_no_data_read[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(1),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(1),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(1)
    );
\max_cycles_with_no_data_read[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(20),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(20),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(20)
    );
\max_cycles_with_no_data_read[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(21),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(21),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(21)
    );
\max_cycles_with_no_data_read[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(22),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(22),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(22)
    );
\max_cycles_with_no_data_read[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(23),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(23),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(23)
    );
\max_cycles_with_no_data_read[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(24),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(24),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(24)
    );
\max_cycles_with_no_data_read[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(25),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(25),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(25)
    );
\max_cycles_with_no_data_read[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(26),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(26),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(26)
    );
\max_cycles_with_no_data_read[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(27),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(27),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(27)
    );
\max_cycles_with_no_data_read[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(28),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(28),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(28)
    );
\max_cycles_with_no_data_read[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(29),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(29),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(29)
    );
\max_cycles_with_no_data_read[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(2),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(2),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(2)
    );
\max_cycles_with_no_data_read[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(30),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(30),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(30)
    );
\max_cycles_with_no_data_read[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFF4F4F4"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \out\,
      I2 => \max_cycles_with_no_data_read__0\,
      I3 => readDataValid,
      I4 => CO(0),
      O => \max_cycles_with_no_data_read_reg[0]\(0)
    );
\max_cycles_with_no_data_read[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(31),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(31),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(31)
    );
\max_cycles_with_no_data_read[31]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000020000000000"
    )
        port map (
      I0 => \^axi_c_write_valid\,
      I1 => axi_c_write_addr(2),
      I2 => axi_c_write_addr(3),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(4),
      I5 => axi_c_write_addr(6),
      O => \max_cycles_with_no_data_read__0\
    );
\max_cycles_with_no_data_read[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(3),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(3),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(3)
    );
\max_cycles_with_no_data_read[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(4),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(4),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(4)
    );
\max_cycles_with_no_data_read[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(5),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(5),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(5)
    );
\max_cycles_with_no_data_read[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(6),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(6),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(6)
    );
\max_cycles_with_no_data_read[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(7),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(7),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(7)
    );
\max_cycles_with_no_data_read[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(8),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(8),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(8)
    );
\max_cycles_with_no_data_read[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8880888FCCC0CCC"
    )
        port map (
      I0 => active_blocking_reg_1,
      I1 => \^write_data\(9),
      I2 => readDataValid,
      I3 => CO(0),
      I4 => \current_cycles_with_no_data_read_reg[31]\(9),
      I5 => \out\,
      O => \max_cycles_with_no_data_read_reg[31]\(9)
    );
read_addr_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth
     port map (
      clk => clk,
      din(6 downto 0) => s_axi_control_ARADDR(6 downto 0),
      dout(6 downto 2) => axi_c_read_addr(6 downto 2),
      dout(1) => read_addr_fifo_n_5,
      dout(0) => read_addr_fifo_n_6,
      empty => read_addr_fifo_empty,
      full => NLW_read_addr_fifo_full_UNCONNECTED,
      prog_full => read_addr_fifo_full,
      rd_en => \^axi_c_read_data_valid_reg\(0),
      rd_rst_busy => NLW_read_addr_fifo_rd_rst_busy_UNCONNECTED,
      srst => \^sr\(0),
      wr_en => s_axi_control_ARVALID,
      wr_rst_busy => NLW_read_addr_fifo_wr_rst_busy_UNCONNECTED
    );
read_addr_fifo_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_addr_fifo_empty,
      O => \^axi_c_read_data_valid_reg\(0)
    );
\read_blocking_ratio[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(0),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(0),
      O => \read_blocking_ratio_reg[31]\(0)
    );
\read_blocking_ratio[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(10),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(10),
      O => \read_blocking_ratio_reg[31]\(10)
    );
\read_blocking_ratio[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(11),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(11),
      O => \read_blocking_ratio_reg[31]\(11)
    );
\read_blocking_ratio[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(12),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(12),
      O => \read_blocking_ratio_reg[31]\(12)
    );
\read_blocking_ratio[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(13),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(13),
      O => \read_blocking_ratio_reg[31]\(13)
    );
\read_blocking_ratio[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(14),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(14),
      O => \read_blocking_ratio_reg[31]\(14)
    );
\read_blocking_ratio[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(15),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(15),
      O => \read_blocking_ratio_reg[31]\(15)
    );
\read_blocking_ratio[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(16),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(16),
      O => \read_blocking_ratio_reg[31]\(16)
    );
\read_blocking_ratio[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(17),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(17),
      O => \read_blocking_ratio_reg[31]\(17)
    );
\read_blocking_ratio[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(18),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(18),
      O => \read_blocking_ratio_reg[31]\(18)
    );
\read_blocking_ratio[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(19),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(19),
      O => \read_blocking_ratio_reg[31]\(19)
    );
\read_blocking_ratio[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(1),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(1),
      O => \read_blocking_ratio_reg[31]\(1)
    );
\read_blocking_ratio[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(20),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(20),
      O => \read_blocking_ratio_reg[31]\(20)
    );
\read_blocking_ratio[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(21),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(21),
      O => \read_blocking_ratio_reg[31]\(21)
    );
\read_blocking_ratio[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(22),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(22),
      O => \read_blocking_ratio_reg[31]\(22)
    );
\read_blocking_ratio[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(23),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(23),
      O => \read_blocking_ratio_reg[31]\(23)
    );
\read_blocking_ratio[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(24),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(24),
      O => \read_blocking_ratio_reg[31]\(24)
    );
\read_blocking_ratio[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(25),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(25),
      O => \read_blocking_ratio_reg[31]\(25)
    );
\read_blocking_ratio[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(26),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(26),
      O => \read_blocking_ratio_reg[31]\(26)
    );
\read_blocking_ratio[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(27),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(27),
      O => \read_blocking_ratio_reg[31]\(27)
    );
\read_blocking_ratio[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(28),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(28),
      O => \read_blocking_ratio_reg[31]\(28)
    );
\read_blocking_ratio[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(29),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(29),
      O => \read_blocking_ratio_reg[31]\(29)
    );
\read_blocking_ratio[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(2),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(2),
      O => \read_blocking_ratio_reg[31]\(2)
    );
\read_blocking_ratio[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(30),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(30),
      O => \read_blocking_ratio_reg[31]\(30)
    );
\read_blocking_ratio[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(31),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(31),
      O => \read_blocking_ratio_reg[31]\(31)
    );
\read_blocking_ratio[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(3),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(3),
      O => \read_blocking_ratio_reg[31]\(3)
    );
\read_blocking_ratio[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(4),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(4),
      O => \read_blocking_ratio_reg[31]\(4)
    );
\read_blocking_ratio[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(5),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(5),
      O => \read_blocking_ratio_reg[31]\(5)
    );
\read_blocking_ratio[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(6),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(6),
      O => \read_blocking_ratio_reg[31]\(6)
    );
\read_blocking_ratio[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(7),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(7),
      O => \read_blocking_ratio_reg[31]\(7)
    );
\read_blocking_ratio[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(8),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(8),
      O => \read_blocking_ratio_reg[31]\(8)
    );
\read_blocking_ratio[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFFFFFF40000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \^write_data\(9),
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \read_blocking_ratio_reg[31]_0\(9),
      O => \read_blocking_ratio_reg[31]\(9)
    );
\read_burst_size[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(0),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(0),
      O => \read_burst_size_reg[31]\(0)
    );
\read_burst_size[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(10),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(10),
      O => \read_burst_size_reg[31]\(10)
    );
\read_burst_size[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(11),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(11),
      O => \read_burst_size_reg[31]\(11)
    );
\read_burst_size[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(12),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(12),
      O => \read_burst_size_reg[31]\(12)
    );
\read_burst_size[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(13),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(13),
      O => \read_burst_size_reg[31]\(13)
    );
\read_burst_size[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(14),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(14),
      O => \read_burst_size_reg[31]\(14)
    );
\read_burst_size[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(15),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(15),
      O => \read_burst_size_reg[31]\(15)
    );
\read_burst_size[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(16),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(16),
      O => \read_burst_size_reg[31]\(16)
    );
\read_burst_size[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(17),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(17),
      O => \read_burst_size_reg[31]\(17)
    );
\read_burst_size[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(18),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(18),
      O => \read_burst_size_reg[31]\(18)
    );
\read_burst_size[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(19),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(19),
      O => \read_burst_size_reg[31]\(19)
    );
\read_burst_size[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(1),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(1),
      O => \read_burst_size_reg[31]\(1)
    );
\read_burst_size[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(20),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(20),
      O => \read_burst_size_reg[31]\(20)
    );
\read_burst_size[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(21),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(21),
      O => \read_burst_size_reg[31]\(21)
    );
\read_burst_size[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(22),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(22),
      O => \read_burst_size_reg[31]\(22)
    );
\read_burst_size[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(23),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(23),
      O => \read_burst_size_reg[31]\(23)
    );
\read_burst_size[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(24),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(24),
      O => \read_burst_size_reg[31]\(24)
    );
\read_burst_size[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(25),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(25),
      O => \read_burst_size_reg[31]\(25)
    );
\read_burst_size[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(26),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(26),
      O => \read_burst_size_reg[31]\(26)
    );
\read_burst_size[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(27),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(27),
      O => \read_burst_size_reg[31]\(27)
    );
\read_burst_size[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(28),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(28),
      O => \read_burst_size_reg[31]\(28)
    );
\read_burst_size[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(29),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(29),
      O => \read_burst_size_reg[31]\(29)
    );
\read_burst_size[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(2),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(2),
      O => \read_burst_size_reg[31]\(2)
    );
\read_burst_size[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(30),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(30),
      O => \read_burst_size_reg[31]\(30)
    );
\read_burst_size[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(31),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(31),
      O => \read_burst_size_reg[31]\(31)
    );
\read_burst_size[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(3),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(3),
      O => \read_burst_size_reg[31]\(3)
    );
\read_burst_size[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(4),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(4),
      O => \read_burst_size_reg[31]\(4)
    );
\read_burst_size[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(5),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(5),
      O => \read_burst_size_reg[31]\(5)
    );
\read_burst_size[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(6),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(6),
      O => \read_burst_size_reg[31]\(6)
    );
\read_burst_size[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(7),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(7),
      O => \read_burst_size_reg[31]\(7)
    );
\read_burst_size[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(8),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(8),
      O => \read_burst_size_reg[31]\(8)
    );
\read_burst_size[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \read_ticks_per_burst[31]_i_3_n_0\,
      I3 => \^write_data\(9),
      I4 => axi_c_write_addr(5),
      I5 => \read_burst_size_reg[31]_0\(9),
      O => \read_burst_size_reg[31]\(9)
    );
\read_count_bursts_per_reset[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(0),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(0),
      O => \read_count_bursts_per_reset_reg[31]\(0)
    );
\read_count_bursts_per_reset[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(10),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(10),
      O => \read_count_bursts_per_reset_reg[31]\(10)
    );
\read_count_bursts_per_reset[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(11),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(11),
      O => \read_count_bursts_per_reset_reg[31]\(11)
    );
\read_count_bursts_per_reset[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(12),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(12),
      O => \read_count_bursts_per_reset_reg[31]\(12)
    );
\read_count_bursts_per_reset[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(13),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(13),
      O => \read_count_bursts_per_reset_reg[31]\(13)
    );
\read_count_bursts_per_reset[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(14),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(14),
      O => \read_count_bursts_per_reset_reg[31]\(14)
    );
\read_count_bursts_per_reset[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(15),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(15),
      O => \read_count_bursts_per_reset_reg[31]\(15)
    );
\read_count_bursts_per_reset[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(16),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(16),
      O => \read_count_bursts_per_reset_reg[31]\(16)
    );
\read_count_bursts_per_reset[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(17),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(17),
      O => \read_count_bursts_per_reset_reg[31]\(17)
    );
\read_count_bursts_per_reset[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(18),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(18),
      O => \read_count_bursts_per_reset_reg[31]\(18)
    );
\read_count_bursts_per_reset[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(19),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(19),
      O => \read_count_bursts_per_reset_reg[31]\(19)
    );
\read_count_bursts_per_reset[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(1),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(1),
      O => \read_count_bursts_per_reset_reg[31]\(1)
    );
\read_count_bursts_per_reset[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(20),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(20),
      O => \read_count_bursts_per_reset_reg[31]\(20)
    );
\read_count_bursts_per_reset[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(21),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(21),
      O => \read_count_bursts_per_reset_reg[31]\(21)
    );
\read_count_bursts_per_reset[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(22),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(22),
      O => \read_count_bursts_per_reset_reg[31]\(22)
    );
\read_count_bursts_per_reset[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(23),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(23),
      O => \read_count_bursts_per_reset_reg[31]\(23)
    );
\read_count_bursts_per_reset[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(24),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(24),
      O => \read_count_bursts_per_reset_reg[31]\(24)
    );
\read_count_bursts_per_reset[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(25),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(25),
      O => \read_count_bursts_per_reset_reg[31]\(25)
    );
\read_count_bursts_per_reset[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(26),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(26),
      O => \read_count_bursts_per_reset_reg[31]\(26)
    );
\read_count_bursts_per_reset[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(27),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(27),
      O => \read_count_bursts_per_reset_reg[31]\(27)
    );
\read_count_bursts_per_reset[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(28),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(28),
      O => \read_count_bursts_per_reset_reg[31]\(28)
    );
\read_count_bursts_per_reset[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(29),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(29),
      O => \read_count_bursts_per_reset_reg[31]\(29)
    );
\read_count_bursts_per_reset[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(2),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(2),
      O => \read_count_bursts_per_reset_reg[31]\(2)
    );
\read_count_bursts_per_reset[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(30),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(30),
      O => \read_count_bursts_per_reset_reg[31]\(30)
    );
\read_count_bursts_per_reset[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \^write_data\(31),
      I3 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(31),
      O => \read_count_bursts_per_reset_reg[31]\(31)
    );
\read_count_bursts_per_reset[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(3),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(3),
      O => \read_count_bursts_per_reset_reg[31]\(3)
    );
\read_count_bursts_per_reset[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(4),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(4),
      O => \read_count_bursts_per_reset_reg[31]\(4)
    );
\read_count_bursts_per_reset[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(5),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(5),
      O => \read_count_bursts_per_reset_reg[31]\(5)
    );
\read_count_bursts_per_reset[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(6),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(6),
      O => \read_count_bursts_per_reset_reg[31]\(6)
    );
\read_count_bursts_per_reset[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(7),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(7),
      O => \read_count_bursts_per_reset_reg[31]\(7)
    );
\read_count_bursts_per_reset[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(8),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(8),
      O => \read_count_bursts_per_reset_reg[31]\(8)
    );
\read_count_bursts_per_reset[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \^write_data\(9),
      I3 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_count_bursts_per_reset_reg[31]_0\(9),
      O => \read_count_bursts_per_reset_reg[31]\(9)
    );
read_data_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth
     port map (
      clk => clk,
      din(31 downto 0) => \axi_c_read_data_reg[31]_0\(31 downto 0),
      dout(31 downto 0) => s_axi_control_RDATA(31 downto 0),
      empty => read_data_fifo_empty,
      full => NLW_read_data_fifo_full_UNCONNECTED,
      prog_full => NLW_read_data_fifo_prog_full_UNCONNECTED,
      rd_en => \^s_axi_control_rvalid\,
      rd_rst_busy => NLW_read_data_fifo_rd_rst_busy_UNCONNECTED,
      srst => \^sr\(0),
      wr_en => read_data_valid,
      wr_rst_busy => NLW_read_data_fifo_wr_rst_busy_UNCONNECTED
    );
read_data_fifo_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => rstn,
      O => \^sr\(0)
    );
\read_max_queue_size[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(0),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(0),
      O => \read_max_queue_size_reg[31]\(0)
    );
\read_max_queue_size[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(10),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(10),
      O => \read_max_queue_size_reg[31]\(10)
    );
\read_max_queue_size[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(11),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(11),
      O => \read_max_queue_size_reg[31]\(11)
    );
\read_max_queue_size[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(12),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(12),
      O => \read_max_queue_size_reg[31]\(12)
    );
\read_max_queue_size[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(13),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(13),
      O => \read_max_queue_size_reg[31]\(13)
    );
\read_max_queue_size[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(14),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(14),
      O => \read_max_queue_size_reg[31]\(14)
    );
\read_max_queue_size[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(15),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(15),
      O => \read_max_queue_size_reg[31]\(15)
    );
\read_max_queue_size[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(16),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(16),
      O => \read_max_queue_size_reg[31]\(16)
    );
\read_max_queue_size[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(17),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(17),
      O => \read_max_queue_size_reg[31]\(17)
    );
\read_max_queue_size[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(18),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(18),
      O => \read_max_queue_size_reg[31]\(18)
    );
\read_max_queue_size[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(19),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(19),
      O => \read_max_queue_size_reg[31]\(19)
    );
\read_max_queue_size[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(1),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(1),
      O => \read_max_queue_size_reg[31]\(1)
    );
\read_max_queue_size[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(20),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(20),
      O => \read_max_queue_size_reg[31]\(20)
    );
\read_max_queue_size[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(21),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(21),
      O => \read_max_queue_size_reg[31]\(21)
    );
\read_max_queue_size[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(22),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(22),
      O => \read_max_queue_size_reg[31]\(22)
    );
\read_max_queue_size[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(23),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(23),
      O => \read_max_queue_size_reg[31]\(23)
    );
\read_max_queue_size[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(24),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(24),
      O => \read_max_queue_size_reg[31]\(24)
    );
\read_max_queue_size[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(25),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(25),
      O => \read_max_queue_size_reg[31]\(25)
    );
\read_max_queue_size[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(26),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(26),
      O => \read_max_queue_size_reg[31]\(26)
    );
\read_max_queue_size[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(27),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(27),
      O => \read_max_queue_size_reg[31]\(27)
    );
\read_max_queue_size[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(28),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(28),
      O => \read_max_queue_size_reg[31]\(28)
    );
\read_max_queue_size[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(29),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(29),
      O => \read_max_queue_size_reg[31]\(29)
    );
\read_max_queue_size[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(2),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(2),
      O => \read_max_queue_size_reg[31]\(2)
    );
\read_max_queue_size[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(30),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(30),
      O => \read_max_queue_size_reg[31]\(30)
    );
\read_max_queue_size[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(31),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(31),
      O => \read_max_queue_size_reg[31]\(31)
    );
\read_max_queue_size[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => axi_c_write_addr(3),
      I1 => axi_c_write_addr(4),
      O => \read_max_queue_size[31]_i_2_n_0\
    );
\read_max_queue_size[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D5"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(3),
      I2 => axi_c_write_addr(2),
      O => \read_max_queue_size[31]_i_3_n_0\
    );
\read_max_queue_size[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(3),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(3),
      O => \read_max_queue_size_reg[31]\(3)
    );
\read_max_queue_size[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(4),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(4),
      O => \read_max_queue_size_reg[31]\(4)
    );
\read_max_queue_size[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(5),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(5),
      O => \read_max_queue_size_reg[31]\(5)
    );
\read_max_queue_size[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(6),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(6),
      O => \read_max_queue_size_reg[31]\(6)
    );
\read_max_queue_size[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(7),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(7),
      O => \read_max_queue_size_reg[31]\(7)
    );
\read_max_queue_size[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(8),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(8),
      O => \read_max_queue_size_reg[31]\(8)
    );
\read_max_queue_size[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_max_queue_size[31]_i_2_n_0\,
      I2 => \read_max_queue_size[31]_i_3_n_0\,
      I3 => \^write_data\(9),
      I4 => axi_c_write_addr(5),
      I5 => \read_max_queue_size_reg[31]_0\(9),
      O => \read_max_queue_size_reg[31]\(9)
    );
\read_start_DDR_address[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(0),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(0),
      O => \read_start_DDR_address_reg[63]\(0)
    );
\read_start_DDR_address[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(10),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(10),
      O => \read_start_DDR_address_reg[63]\(10)
    );
\read_start_DDR_address[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(11),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(11),
      O => \read_start_DDR_address_reg[63]\(11)
    );
\read_start_DDR_address[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(12),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(12),
      O => \read_start_DDR_address_reg[63]\(12)
    );
\read_start_DDR_address[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(13),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(13),
      O => \read_start_DDR_address_reg[63]\(13)
    );
\read_start_DDR_address[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(14),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(14),
      O => \read_start_DDR_address_reg[63]\(14)
    );
\read_start_DDR_address[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(15),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(15),
      O => \read_start_DDR_address_reg[63]\(15)
    );
\read_start_DDR_address[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(16),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(16),
      O => \read_start_DDR_address_reg[63]\(16)
    );
\read_start_DDR_address[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(17),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(17),
      O => \read_start_DDR_address_reg[63]\(17)
    );
\read_start_DDR_address[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(18),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(18),
      O => \read_start_DDR_address_reg[63]\(18)
    );
\read_start_DDR_address[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(19),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(19),
      O => \read_start_DDR_address_reg[63]\(19)
    );
\read_start_DDR_address[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(1),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(1),
      O => \read_start_DDR_address_reg[63]\(1)
    );
\read_start_DDR_address[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(20),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(20),
      O => \read_start_DDR_address_reg[63]\(20)
    );
\read_start_DDR_address[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(21),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(21),
      O => \read_start_DDR_address_reg[63]\(21)
    );
\read_start_DDR_address[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(22),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(22),
      O => \read_start_DDR_address_reg[63]\(22)
    );
\read_start_DDR_address[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(23),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(23),
      O => \read_start_DDR_address_reg[63]\(23)
    );
\read_start_DDR_address[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(24),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(24),
      O => \read_start_DDR_address_reg[63]\(24)
    );
\read_start_DDR_address[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(25),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(25),
      O => \read_start_DDR_address_reg[63]\(25)
    );
\read_start_DDR_address[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(26),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(26),
      O => \read_start_DDR_address_reg[63]\(26)
    );
\read_start_DDR_address[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(27),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(27),
      O => \read_start_DDR_address_reg[63]\(27)
    );
\read_start_DDR_address[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(28),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(28),
      O => \read_start_DDR_address_reg[63]\(28)
    );
\read_start_DDR_address[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(29),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(29),
      O => \read_start_DDR_address_reg[63]\(29)
    );
\read_start_DDR_address[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(2),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(2),
      O => \read_start_DDR_address_reg[63]\(2)
    );
\read_start_DDR_address[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(30),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(30),
      O => \read_start_DDR_address_reg[63]\(30)
    );
\read_start_DDR_address[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(31),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(31),
      O => \read_start_DDR_address_reg[63]\(31)
    );
\read_start_DDR_address[32]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(0),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(32),
      O => \read_start_DDR_address_reg[63]\(32)
    );
\read_start_DDR_address[33]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(1),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(33),
      O => \read_start_DDR_address_reg[63]\(33)
    );
\read_start_DDR_address[34]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(2),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(34),
      O => \read_start_DDR_address_reg[63]\(34)
    );
\read_start_DDR_address[35]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(3),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(35),
      O => \read_start_DDR_address_reg[63]\(35)
    );
\read_start_DDR_address[36]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(4),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(36),
      O => \read_start_DDR_address_reg[63]\(36)
    );
\read_start_DDR_address[37]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(5),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(37),
      O => \read_start_DDR_address_reg[63]\(37)
    );
\read_start_DDR_address[38]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(6),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(38),
      O => \read_start_DDR_address_reg[63]\(38)
    );
\read_start_DDR_address[39]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(7),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(39),
      O => \read_start_DDR_address_reg[63]\(39)
    );
\read_start_DDR_address[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(3),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(3),
      O => \read_start_DDR_address_reg[63]\(3)
    );
\read_start_DDR_address[40]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(8),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(40),
      O => \read_start_DDR_address_reg[63]\(40)
    );
\read_start_DDR_address[41]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(9),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(41),
      O => \read_start_DDR_address_reg[63]\(41)
    );
\read_start_DDR_address[42]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(10),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(42),
      O => \read_start_DDR_address_reg[63]\(42)
    );
\read_start_DDR_address[43]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(11),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(43),
      O => \read_start_DDR_address_reg[63]\(43)
    );
\read_start_DDR_address[44]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(12),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(44),
      O => \read_start_DDR_address_reg[63]\(44)
    );
\read_start_DDR_address[45]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(13),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(45),
      O => \read_start_DDR_address_reg[63]\(45)
    );
\read_start_DDR_address[46]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(14),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(46),
      O => \read_start_DDR_address_reg[63]\(46)
    );
\read_start_DDR_address[47]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(15),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(47),
      O => \read_start_DDR_address_reg[63]\(47)
    );
\read_start_DDR_address[48]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(16),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(48),
      O => \read_start_DDR_address_reg[63]\(48)
    );
\read_start_DDR_address[49]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(17),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(49),
      O => \read_start_DDR_address_reg[63]\(49)
    );
\read_start_DDR_address[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(4),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(4),
      O => \read_start_DDR_address_reg[63]\(4)
    );
\read_start_DDR_address[50]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(18),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(50),
      O => \read_start_DDR_address_reg[63]\(50)
    );
\read_start_DDR_address[51]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(19),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(51),
      O => \read_start_DDR_address_reg[63]\(51)
    );
\read_start_DDR_address[52]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(20),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(52),
      O => \read_start_DDR_address_reg[63]\(52)
    );
\read_start_DDR_address[53]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(21),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(53),
      O => \read_start_DDR_address_reg[63]\(53)
    );
\read_start_DDR_address[54]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(22),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(54),
      O => \read_start_DDR_address_reg[63]\(54)
    );
\read_start_DDR_address[55]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(23),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(55),
      O => \read_start_DDR_address_reg[63]\(55)
    );
\read_start_DDR_address[56]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(24),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(56),
      O => \read_start_DDR_address_reg[63]\(56)
    );
\read_start_DDR_address[57]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(25),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(57),
      O => \read_start_DDR_address_reg[63]\(57)
    );
\read_start_DDR_address[58]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(26),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(58),
      O => \read_start_DDR_address_reg[63]\(58)
    );
\read_start_DDR_address[59]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(27),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(59),
      O => \read_start_DDR_address_reg[63]\(59)
    );
\read_start_DDR_address[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(5),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(5),
      O => \read_start_DDR_address_reg[63]\(5)
    );
\read_start_DDR_address[60]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(28),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(60),
      O => \read_start_DDR_address_reg[63]\(60)
    );
\read_start_DDR_address[61]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(29),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(61),
      O => \read_start_DDR_address_reg[63]\(61)
    );
\read_start_DDR_address[62]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(30),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(62),
      O => \read_start_DDR_address_reg[63]\(62)
    );
\read_start_DDR_address[63]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(31),
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(63),
      O => \read_start_DDR_address_reg[63]\(63)
    );
\read_start_DDR_address[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(6),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(6),
      O => \read_start_DDR_address_reg[63]\(6)
    );
\read_start_DDR_address[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(7),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(7),
      O => \read_start_DDR_address_reg[63]\(7)
    );
\read_start_DDR_address[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(8),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(8),
      O => \read_start_DDR_address_reg[63]\(8)
    );
\read_start_DDR_address[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => active_write_i_2_n_0,
      I2 => \^write_data\(9),
      I3 => active_write_i_3_n_0,
      I4 => axi_c_write_addr(5),
      I5 => \read_start_DDR_address_reg[63]_0\(9),
      O => \read_start_DDR_address_reg[63]\(9)
    );
\read_step_DDR_address[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(0),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(0),
      O => \read_step_DDR_address_reg[31]\(0)
    );
\read_step_DDR_address[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(10),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(10),
      O => \read_step_DDR_address_reg[31]\(10)
    );
\read_step_DDR_address[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(11),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(11),
      O => \read_step_DDR_address_reg[31]\(11)
    );
\read_step_DDR_address[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(12),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(12),
      O => \read_step_DDR_address_reg[31]\(12)
    );
\read_step_DDR_address[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(13),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(13),
      O => \read_step_DDR_address_reg[31]\(13)
    );
\read_step_DDR_address[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(14),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(14),
      O => \read_step_DDR_address_reg[31]\(14)
    );
\read_step_DDR_address[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(15),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(15),
      O => \read_step_DDR_address_reg[31]\(15)
    );
\read_step_DDR_address[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(16),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(16),
      O => \read_step_DDR_address_reg[31]\(16)
    );
\read_step_DDR_address[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(17),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(17),
      O => \read_step_DDR_address_reg[31]\(17)
    );
\read_step_DDR_address[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(18),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(18),
      O => \read_step_DDR_address_reg[31]\(18)
    );
\read_step_DDR_address[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(19),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(19),
      O => \read_step_DDR_address_reg[31]\(19)
    );
\read_step_DDR_address[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(1),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(1),
      O => \read_step_DDR_address_reg[31]\(1)
    );
\read_step_DDR_address[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(20),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(20),
      O => \read_step_DDR_address_reg[31]\(20)
    );
\read_step_DDR_address[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(21),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(21),
      O => \read_step_DDR_address_reg[31]\(21)
    );
\read_step_DDR_address[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(22),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(22),
      O => \read_step_DDR_address_reg[31]\(22)
    );
\read_step_DDR_address[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(23),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(23),
      O => \read_step_DDR_address_reg[31]\(23)
    );
\read_step_DDR_address[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(24),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(24),
      O => \read_step_DDR_address_reg[31]\(24)
    );
\read_step_DDR_address[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(25),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(25),
      O => \read_step_DDR_address_reg[31]\(25)
    );
\read_step_DDR_address[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(26),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(26),
      O => \read_step_DDR_address_reg[31]\(26)
    );
\read_step_DDR_address[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(27),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(27),
      O => \read_step_DDR_address_reg[31]\(27)
    );
\read_step_DDR_address[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(28),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(28),
      O => \read_step_DDR_address_reg[31]\(28)
    );
\read_step_DDR_address[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(29),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(29),
      O => \read_step_DDR_address_reg[31]\(29)
    );
\read_step_DDR_address[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(2),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(2),
      O => \read_step_DDR_address_reg[31]\(2)
    );
\read_step_DDR_address[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(30),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(30),
      O => \read_step_DDR_address_reg[31]\(30)
    );
\read_step_DDR_address[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I3 => \^write_data\(31),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(31),
      O => \read_step_DDR_address_reg[31]\(31)
    );
\read_step_DDR_address[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(3),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(3),
      O => \read_step_DDR_address_reg[31]\(3)
    );
\read_step_DDR_address[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(4),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(4),
      O => \read_step_DDR_address_reg[31]\(4)
    );
\read_step_DDR_address[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(5),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(5),
      O => \read_step_DDR_address_reg[31]\(5)
    );
\read_step_DDR_address[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(6),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(6),
      O => \read_step_DDR_address_reg[31]\(6)
    );
\read_step_DDR_address[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(7),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(7),
      O => \read_step_DDR_address_reg[31]\(7)
    );
\read_step_DDR_address[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(8),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(8),
      O => \read_step_DDR_address_reg[31]\(8)
    );
\read_step_DDR_address[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I2 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I3 => \^write_data\(9),
      I4 => axi_c_write_addr(5),
      I5 => \read_step_DDR_address_reg[31]_0\(9),
      O => \read_step_DDR_address_reg[31]\(9)
    );
\read_ticks_per_burst[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(0),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(0),
      O => \read_ticks_per_burst_reg[31]\(0)
    );
\read_ticks_per_burst[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(10),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(10),
      O => \read_ticks_per_burst_reg[31]\(10)
    );
\read_ticks_per_burst[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(11),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(11),
      O => \read_ticks_per_burst_reg[31]\(11)
    );
\read_ticks_per_burst[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(12),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(12),
      O => \read_ticks_per_burst_reg[31]\(12)
    );
\read_ticks_per_burst[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(13),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(13),
      O => \read_ticks_per_burst_reg[31]\(13)
    );
\read_ticks_per_burst[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(14),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(14),
      O => \read_ticks_per_burst_reg[31]\(14)
    );
\read_ticks_per_burst[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(15),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(15),
      O => \read_ticks_per_burst_reg[31]\(15)
    );
\read_ticks_per_burst[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(16),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(16),
      O => \read_ticks_per_burst_reg[31]\(16)
    );
\read_ticks_per_burst[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(17),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(17),
      O => \read_ticks_per_burst_reg[31]\(17)
    );
\read_ticks_per_burst[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(18),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(18),
      O => \read_ticks_per_burst_reg[31]\(18)
    );
\read_ticks_per_burst[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(19),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(19),
      O => \read_ticks_per_burst_reg[31]\(19)
    );
\read_ticks_per_burst[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(1),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(1),
      O => \read_ticks_per_burst_reg[31]\(1)
    );
\read_ticks_per_burst[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(20),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(20),
      O => \read_ticks_per_burst_reg[31]\(20)
    );
\read_ticks_per_burst[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(21),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(21),
      O => \read_ticks_per_burst_reg[31]\(21)
    );
\read_ticks_per_burst[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(22),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(22),
      O => \read_ticks_per_burst_reg[31]\(22)
    );
\read_ticks_per_burst[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(23),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(23),
      O => \read_ticks_per_burst_reg[31]\(23)
    );
\read_ticks_per_burst[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(24),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(24),
      O => \read_ticks_per_burst_reg[31]\(24)
    );
\read_ticks_per_burst[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(25),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(25),
      O => \read_ticks_per_burst_reg[31]\(25)
    );
\read_ticks_per_burst[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(26),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(26),
      O => \read_ticks_per_burst_reg[31]\(26)
    );
\read_ticks_per_burst[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(27),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(27),
      O => \read_ticks_per_burst_reg[31]\(27)
    );
\read_ticks_per_burst[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(28),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(28),
      O => \read_ticks_per_burst_reg[31]\(28)
    );
\read_ticks_per_burst[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(29),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(29),
      O => \read_ticks_per_burst_reg[31]\(29)
    );
\read_ticks_per_burst[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(2),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(2),
      O => \read_ticks_per_burst_reg[31]\(2)
    );
\read_ticks_per_burst[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(30),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(30),
      O => \read_ticks_per_burst_reg[31]\(30)
    );
\read_ticks_per_burst[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(31),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(31),
      O => \read_ticks_per_burst_reg[31]\(31)
    );
\read_ticks_per_burst[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => axi_c_write_addr(3),
      I1 => axi_c_write_addr(4),
      O => \read_ticks_per_burst[31]_i_2_n_0\
    );
\read_ticks_per_burst[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => axi_c_write_addr(3),
      I1 => axi_c_write_addr(2),
      I2 => axi_c_write_addr(4),
      O => \read_ticks_per_burst[31]_i_3_n_0\
    );
\read_ticks_per_burst[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(3),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(3),
      O => \read_ticks_per_burst_reg[31]\(3)
    );
\read_ticks_per_burst[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(4),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(4),
      O => \read_ticks_per_burst_reg[31]\(4)
    );
\read_ticks_per_burst[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(5),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(5),
      O => \read_ticks_per_burst_reg[31]\(5)
    );
\read_ticks_per_burst[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(6),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(6),
      O => \read_ticks_per_burst_reg[31]\(6)
    );
\read_ticks_per_burst[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(7),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(7),
      O => \read_ticks_per_burst_reg[31]\(7)
    );
\read_ticks_per_burst[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(8),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(8),
      O => \read_ticks_per_burst_reg[31]\(8)
    );
\read_ticks_per_burst[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => \read_ticks_per_burst[31]_i_2_n_0\,
      I2 => \^write_data\(9),
      I3 => \read_ticks_per_burst[31]_i_3_n_0\,
      I4 => axi_c_write_addr(5),
      I5 => \read_ticks_per_burst_reg[31]_0\(9),
      O => \read_ticks_per_burst_reg[31]\(9)
    );
reset_cmd_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B808"
    )
        port map (
      I0 => reset_cmd_i_2_n_0,
      I1 => \^axi_c_write_valid\,
      I2 => \out\,
      I3 => active_runtime,
      O => reset_cmd_reg
    );
reset_cmd_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => active_write_i_2_n_0,
      I2 => active_write_i_3_n_0,
      I3 => \^write_data\(2),
      I4 => axi_c_write_addr(6),
      I5 => \out\,
      O => reset_cmd_i_2_n_0
    );
\respond_count[7]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"77878878"
    )
        port map (
      I0 => \^s_axi_control_bvalid\,
      I1 => s_axi_control_BREADY,
      I2 => s_axi_control_WVALID,
      I3 => write_data_fifo_full,
      I4 => \respond_count_reg_n_0_\(0),
      O => \respond_count[7]_i_10_n_0\
    );
\respond_count[7]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5DFF"
    )
        port map (
      I0 => \^s_axi_control_bvalid\,
      I1 => s_axi_control_WVALID,
      I2 => write_data_fifo_full,
      I3 => s_axi_control_BREADY,
      O => \respond_count[7]_i_2_n_0\
    );
\respond_count[7]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(6),
      I1 => \respond_count_reg_n_0_\(7),
      O => \respond_count[7]_i_3_n_0\
    );
\respond_count[7]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(5),
      I1 => \respond_count_reg_n_0_\(6),
      O => \respond_count[7]_i_4_n_0\
    );
\respond_count[7]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(4),
      I1 => \respond_count_reg_n_0_\(5),
      O => \respond_count[7]_i_5_n_0\
    );
\respond_count[7]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(3),
      I1 => \respond_count_reg_n_0_\(4),
      O => \respond_count[7]_i_6_n_0\
    );
\respond_count[7]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(2),
      I1 => \respond_count_reg_n_0_\(3),
      O => \respond_count[7]_i_7_n_0\
    );
\respond_count[7]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(1),
      I1 => \respond_count_reg_n_0_\(2),
      O => \respond_count[7]_i_8_n_0\
    );
\respond_count[7]_i_9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"75FF8A00"
    )
        port map (
      I0 => s_axi_control_BREADY,
      I1 => write_data_fifo_full,
      I2 => s_axi_control_WVALID,
      I3 => \^s_axi_control_bvalid\,
      I4 => \respond_count_reg_n_0_\(1),
      O => \respond_count[7]_i_9_n_0\
    );
\respond_count[8]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(7),
      I1 => \respond_count_reg_n_0_\(8),
      O => \respond_count[8]_i_2_n_0\
    );
\respond_count_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(0),
      Q => \respond_count_reg_n_0_\(0),
      R => \^sr\(0)
    );
\respond_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(1),
      Q => \respond_count_reg_n_0_\(1),
      R => \^sr\(0)
    );
\respond_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(2),
      Q => \respond_count_reg_n_0_\(2),
      R => \^sr\(0)
    );
\respond_count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(3),
      Q => \respond_count_reg_n_0_\(3),
      R => \^sr\(0)
    );
\respond_count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(4),
      Q => \respond_count_reg_n_0_\(4),
      R => \^sr\(0)
    );
\respond_count_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(5),
      Q => \respond_count_reg_n_0_\(5),
      R => \^sr\(0)
    );
\respond_count_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(6),
      Q => \respond_count_reg_n_0_\(6),
      R => \^sr\(0)
    );
\respond_count_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(7),
      Q => \respond_count_reg_n_0_\(7),
      R => \^sr\(0)
    );
\respond_count_reg[7]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \respond_count_reg[7]_i_1_n_0\,
      CO(6) => \respond_count_reg[7]_i_1_n_1\,
      CO(5) => \respond_count_reg[7]_i_1_n_2\,
      CO(4) => \respond_count_reg[7]_i_1_n_3\,
      CO(3) => \NLW_respond_count_reg[7]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \respond_count_reg[7]_i_1_n_5\,
      CO(1) => \respond_count_reg[7]_i_1_n_6\,
      CO(0) => \respond_count_reg[7]_i_1_n_7\,
      DI(7 downto 2) => \respond_count_reg_n_0_\(6 downto 1),
      DI(1) => \respond_count[7]_i_2_n_0\,
      DI(0) => \respond_count_reg_n_0_\(0),
      O(7 downto 0) => respond_count(7 downto 0),
      S(7) => \respond_count[7]_i_3_n_0\,
      S(6) => \respond_count[7]_i_4_n_0\,
      S(5) => \respond_count[7]_i_5_n_0\,
      S(4) => \respond_count[7]_i_6_n_0\,
      S(3) => \respond_count[7]_i_7_n_0\,
      S(2) => \respond_count[7]_i_8_n_0\,
      S(1) => \respond_count[7]_i_9_n_0\,
      S(0) => \respond_count[7]_i_10_n_0\
    );
\respond_count_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => rstn,
      D => respond_count(8),
      Q => \respond_count_reg_n_0_\(8),
      R => \^sr\(0)
    );
\respond_count_reg[8]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \respond_count_reg[7]_i_1_n_0\,
      CI_TOP => '0',
      CO(7 downto 0) => \NLW_respond_count_reg[8]_i_1_CO_UNCONNECTED\(7 downto 0),
      DI(7 downto 0) => B"00000000",
      O(7 downto 1) => \NLW_respond_count_reg[8]_i_1_O_UNCONNECTED\(7 downto 1),
      O(0) => respond_count(8),
      S(7 downto 1) => B"0000000",
      S(0) => \respond_count[8]_i_2_n_0\
    );
\runtime[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"45EA"
    )
        port map (
      I0 => active_blocking_reg,
      I1 => \runtime__0\(0),
      I2 => \^axi_c_write_valid\,
      I3 => \runtime_reg[63]\(0),
      O => D(0)
    );
\runtime[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(0),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(0),
      O => \runtime__0\(0)
    );
\runtime[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(9),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(10),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(10),
      O => D(10)
    );
\runtime[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(10),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(10),
      O => \runtime__0\(10)
    );
\runtime[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(10),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(11),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(11),
      O => D(11)
    );
\runtime[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(11),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(11),
      O => \runtime__0\(11)
    );
\runtime[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(11),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(12),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(12),
      O => D(12)
    );
\runtime[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(12),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(12),
      O => \runtime__0\(12)
    );
\runtime[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(12),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(13),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(13),
      O => D(13)
    );
\runtime[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(13),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(13),
      O => \runtime__0\(13)
    );
\runtime[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(13),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(14),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(14),
      O => D(14)
    );
\runtime[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(14),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(14),
      O => \runtime__0\(14)
    );
\runtime[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(14),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(15),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(15),
      O => D(15)
    );
\runtime[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(15),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(15),
      O => \runtime__0\(15)
    );
\runtime[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(15),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(16),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(16),
      O => D(16)
    );
\runtime[16]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(16),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(16),
      O => \runtime__0\(16)
    );
\runtime[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(16),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(17),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(17),
      O => D(17)
    );
\runtime[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(17),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(17),
      O => \runtime__0\(17)
    );
\runtime[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(17),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(18),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(18),
      O => D(18)
    );
\runtime[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(18),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(18),
      O => \runtime__0\(18)
    );
\runtime[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(18),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(19),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(19),
      O => D(19)
    );
\runtime[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(19),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(19),
      O => \runtime__0\(19)
    );
\runtime[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(0),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(1),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(1),
      O => D(1)
    );
\runtime[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(1),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(1),
      O => \runtime__0\(1)
    );
\runtime[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(19),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(20),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(20),
      O => D(20)
    );
\runtime[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(20),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(20),
      O => \runtime__0\(20)
    );
\runtime[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(20),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(21),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(21),
      O => D(21)
    );
\runtime[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(21),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(21),
      O => \runtime__0\(21)
    );
\runtime[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(21),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(22),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(22),
      O => D(22)
    );
\runtime[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(22),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(22),
      O => \runtime__0\(22)
    );
\runtime[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(22),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(23),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(23),
      O => D(23)
    );
\runtime[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(23),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(23),
      O => \runtime__0\(23)
    );
\runtime[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(23),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(24),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(24),
      O => D(24)
    );
\runtime[24]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(24),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(24),
      O => \runtime__0\(24)
    );
\runtime[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(24),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(25),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(25),
      O => D(25)
    );
\runtime[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(25),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(25),
      O => \runtime__0\(25)
    );
\runtime[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(25),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(26),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(26),
      O => D(26)
    );
\runtime[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(26),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(26),
      O => \runtime__0\(26)
    );
\runtime[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(26),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(27),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(27),
      O => D(27)
    );
\runtime[27]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(27),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(27),
      O => \runtime__0\(27)
    );
\runtime[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(27),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(28),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(28),
      O => D(28)
    );
\runtime[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(28),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(28),
      O => \runtime__0\(28)
    );
\runtime[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(28),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(29),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(29),
      O => D(29)
    );
\runtime[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(29),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(29),
      O => \runtime__0\(29)
    );
\runtime[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(1),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(2),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(2),
      O => D(2)
    );
\runtime[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(2),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(2),
      O => \runtime__0\(2)
    );
\runtime[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(29),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(30),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(30),
      O => D(30)
    );
\runtime[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(30),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(30),
      O => \runtime__0\(30)
    );
\runtime[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(30),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(31),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(31),
      O => D(31)
    );
\runtime[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(31),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(31),
      O => \runtime__0\(31)
    );
\runtime[32]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(31),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(32),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(32),
      O => D(32)
    );
\runtime[32]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(0),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(32),
      O => \runtime__0\(32)
    );
\runtime[33]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(32),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(33),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(33),
      O => D(33)
    );
\runtime[33]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(1),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(33),
      O => \runtime__0\(33)
    );
\runtime[34]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(33),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(34),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(34),
      O => D(34)
    );
\runtime[34]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(2),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(34),
      O => \runtime__0\(34)
    );
\runtime[35]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(34),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(35),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(35),
      O => D(35)
    );
\runtime[35]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(3),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(35),
      O => \runtime__0\(35)
    );
\runtime[36]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(35),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(36),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(36),
      O => D(36)
    );
\runtime[36]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(4),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(36),
      O => \runtime__0\(36)
    );
\runtime[37]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(36),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(37),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(37),
      O => D(37)
    );
\runtime[37]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(5),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(37),
      O => \runtime__0\(37)
    );
\runtime[38]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(37),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(38),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(38),
      O => D(38)
    );
\runtime[38]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(6),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(38),
      O => \runtime__0\(38)
    );
\runtime[39]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(38),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(39),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(39),
      O => D(39)
    );
\runtime[39]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(7),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(39),
      O => \runtime__0\(39)
    );
\runtime[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(2),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(3),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(3),
      O => D(3)
    );
\runtime[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(3),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(3),
      O => \runtime__0\(3)
    );
\runtime[40]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(39),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(40),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(40),
      O => D(40)
    );
\runtime[40]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(8),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(40),
      O => \runtime__0\(40)
    );
\runtime[41]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(40),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(41),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(41),
      O => D(41)
    );
\runtime[41]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(9),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(41),
      O => \runtime__0\(41)
    );
\runtime[42]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(41),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(42),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(42),
      O => D(42)
    );
\runtime[42]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(10),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(42),
      O => \runtime__0\(42)
    );
\runtime[43]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(42),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(43),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(43),
      O => D(43)
    );
\runtime[43]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(11),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(43),
      O => \runtime__0\(43)
    );
\runtime[44]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(43),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(44),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(44),
      O => D(44)
    );
\runtime[44]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(12),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(44),
      O => \runtime__0\(44)
    );
\runtime[45]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(44),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(45),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(45),
      O => D(45)
    );
\runtime[45]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(13),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(45),
      O => \runtime__0\(45)
    );
\runtime[46]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(45),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(46),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(46),
      O => D(46)
    );
\runtime[46]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(14),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(46),
      O => \runtime__0\(46)
    );
\runtime[47]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(46),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(47),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(47),
      O => D(47)
    );
\runtime[47]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(15),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(47),
      O => \runtime__0\(47)
    );
\runtime[48]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(47),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(48),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(48),
      O => D(48)
    );
\runtime[48]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(16),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(48),
      O => \runtime__0\(48)
    );
\runtime[49]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(48),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(49),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(49),
      O => D(49)
    );
\runtime[49]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(17),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(49),
      O => \runtime__0\(49)
    );
\runtime[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(3),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(4),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(4),
      O => D(4)
    );
\runtime[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(4),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(4),
      O => \runtime__0\(4)
    );
\runtime[50]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(49),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(50),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(50),
      O => D(50)
    );
\runtime[50]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(18),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(50),
      O => \runtime__0\(50)
    );
\runtime[51]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(50),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(51),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(51),
      O => D(51)
    );
\runtime[51]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(19),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(51),
      O => \runtime__0\(51)
    );
\runtime[52]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(51),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(52),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(52),
      O => D(52)
    );
\runtime[52]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(20),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(52),
      O => \runtime__0\(52)
    );
\runtime[53]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(52),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(53),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(53),
      O => D(53)
    );
\runtime[53]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(21),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(53),
      O => \runtime__0\(53)
    );
\runtime[54]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(53),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(54),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(54),
      O => D(54)
    );
\runtime[54]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(22),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(54),
      O => \runtime__0\(54)
    );
\runtime[55]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(54),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(55),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(55),
      O => D(55)
    );
\runtime[55]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(23),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(55),
      O => \runtime__0\(55)
    );
\runtime[56]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(55),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(56),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(56),
      O => D(56)
    );
\runtime[56]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(24),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(56),
      O => \runtime__0\(56)
    );
\runtime[57]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(56),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(57),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(57),
      O => D(57)
    );
\runtime[57]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(25),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(57),
      O => \runtime__0\(57)
    );
\runtime[58]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(57),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(58),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(58),
      O => D(58)
    );
\runtime[58]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(26),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(58),
      O => \runtime__0\(58)
    );
\runtime[59]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(58),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(59),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(59),
      O => D(59)
    );
\runtime[59]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(27),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(59),
      O => \runtime__0\(59)
    );
\runtime[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(4),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(5),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(5),
      O => D(5)
    );
\runtime[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(5),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(5),
      O => \runtime__0\(5)
    );
\runtime[60]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(59),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(60),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(60),
      O => D(60)
    );
\runtime[60]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(28),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(60),
      O => \runtime__0\(60)
    );
\runtime[61]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(60),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(61),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(61),
      O => D(61)
    );
\runtime[61]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(29),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(61),
      O => \runtime__0\(61)
    );
\runtime[62]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(61),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(62),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(62),
      O => D(62)
    );
\runtime[62]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(30),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(62),
      O => \runtime__0\(62)
    );
\runtime[63]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(62),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(63),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(63),
      O => D(63)
    );
\runtime[63]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \runtime[63]_i_7_n_0\,
      I3 => \^write_data\(31),
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(63),
      O => \runtime__0\(63)
    );
\runtime[63]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(3),
      O => \runtime[63]_i_6_n_0\
    );
\runtime[63]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(2),
      I2 => axi_c_write_addr(3),
      O => \runtime[63]_i_7_n_0\
    );
\runtime[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(5),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(6),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(6),
      O => D(6)
    );
\runtime[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(6),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(6),
      O => \runtime__0\(6)
    );
\runtime[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(6),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(7),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(7),
      O => D(7)
    );
\runtime[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(7),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(7),
      O => \runtime__0\(7)
    );
\runtime[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(7),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(8),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(8),
      O => D(8)
    );
\runtime[8]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(8),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(8),
      O => \runtime__0\(8)
    );
\runtime[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => runtime0(8),
      I1 => active_blocking_reg,
      I2 => \runtime__0\(9),
      I3 => \^axi_c_write_valid\,
      I4 => \runtime_reg[63]\(9),
      O => D(9)
    );
\runtime[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => axi_c_write_addr(5),
      I1 => \runtime[63]_i_6_n_0\,
      I2 => \^write_data\(9),
      I3 => \runtime[63]_i_7_n_0\,
      I4 => axi_c_write_addr(6),
      I5 => \runtime_reg[63]\(9),
      O => \runtime__0\(9)
    );
s_axi_control_ARREADY_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_addr_fifo_full,
      O => s_axi_control_ARREADY
    );
s_axi_control_AWREADY_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_addr_fifo_full,
      O => s_axi_control_AWREADY
    );
s_axi_control_BVALID_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DEEE0000"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(0),
      I1 => s_axi_control_BVALID_i_2_n_0,
      I2 => s_axi_control_BREADY,
      I3 => \^s_axi_control_bvalid\,
      I4 => rstn,
      O => s_axi_control_BVALID_i_1_n_0
    );
s_axi_control_BVALID_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(8),
      I1 => s_axi_control_BVALID_i_3_n_0,
      I2 => \respond_count_reg_n_0_\(7),
      O => s_axi_control_BVALID_i_2_n_0
    );
s_axi_control_BVALID_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \respond_count_reg_n_0_\(4),
      I1 => \respond_count_reg_n_0_\(1),
      I2 => \respond_count_reg_n_0_\(3),
      I3 => \respond_count_reg_n_0_\(2),
      I4 => \respond_count_reg_n_0_\(5),
      I5 => \respond_count_reg_n_0_\(6),
      O => s_axi_control_BVALID_i_3_n_0
    );
s_axi_control_BVALID_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => s_axi_control_BVALID_i_1_n_0,
      Q => \^s_axi_control_bvalid\,
      R => '0'
    );
s_axi_control_RVALID_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => s_axi_control_RREADY,
      I1 => read_data_fifo_empty,
      O => \^s_axi_control_rvalid\
    );
s_axi_control_WREADY_INST_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_data_fifo_full,
      O => s_axi_control_WREADY
    );
write_addr_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth
     port map (
      clk => clk,
      din(6 downto 0) => s_axi_control_AWADDR(6 downto 0),
      dout(6 downto 2) => axi_c_write_addr(6 downto 2),
      dout(1) => write_addr_fifo_n_5,
      dout(0) => write_addr_fifo_n_6,
      empty => write_addr_fifo_empty,
      full => NLW_write_addr_fifo_full_UNCONNECTED,
      prog_full => write_addr_fifo_full,
      rd_en => \^axi_c_write_valid\,
      rd_rst_busy => NLW_write_addr_fifo_rd_rst_busy_UNCONNECTED,
      srst => \^sr\(0),
      wr_en => s_axi_control_AWVALID,
      wr_rst_busy => NLW_write_addr_fifo_wr_rst_busy_UNCONNECTED
    );
\write_blocking_ratio[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(0),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(0),
      O => \write_blocking_ratio_reg[31]\(0)
    );
\write_blocking_ratio[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(10),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(10),
      O => \write_blocking_ratio_reg[31]\(10)
    );
\write_blocking_ratio[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(11),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(11),
      O => \write_blocking_ratio_reg[31]\(11)
    );
\write_blocking_ratio[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(12),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(12),
      O => \write_blocking_ratio_reg[31]\(12)
    );
\write_blocking_ratio[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(13),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(13),
      O => \write_blocking_ratio_reg[31]\(13)
    );
\write_blocking_ratio[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(14),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(14),
      O => \write_blocking_ratio_reg[31]\(14)
    );
\write_blocking_ratio[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(15),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(15),
      O => \write_blocking_ratio_reg[31]\(15)
    );
\write_blocking_ratio[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(16),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(16),
      O => \write_blocking_ratio_reg[31]\(16)
    );
\write_blocking_ratio[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(17),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(17),
      O => \write_blocking_ratio_reg[31]\(17)
    );
\write_blocking_ratio[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(18),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(18),
      O => \write_blocking_ratio_reg[31]\(18)
    );
\write_blocking_ratio[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(19),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(19),
      O => \write_blocking_ratio_reg[31]\(19)
    );
\write_blocking_ratio[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(1),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(1),
      O => \write_blocking_ratio_reg[31]\(1)
    );
\write_blocking_ratio[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(20),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(20),
      O => \write_blocking_ratio_reg[31]\(20)
    );
\write_blocking_ratio[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(21),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(21),
      O => \write_blocking_ratio_reg[31]\(21)
    );
\write_blocking_ratio[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(22),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(22),
      O => \write_blocking_ratio_reg[31]\(22)
    );
\write_blocking_ratio[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(23),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(23),
      O => \write_blocking_ratio_reg[31]\(23)
    );
\write_blocking_ratio[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(24),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(24),
      O => \write_blocking_ratio_reg[31]\(24)
    );
\write_blocking_ratio[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(25),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(25),
      O => \write_blocking_ratio_reg[31]\(25)
    );
\write_blocking_ratio[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(26),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(26),
      O => \write_blocking_ratio_reg[31]\(26)
    );
\write_blocking_ratio[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(27),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(27),
      O => \write_blocking_ratio_reg[31]\(27)
    );
\write_blocking_ratio[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(28),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(28),
      O => \write_blocking_ratio_reg[31]\(28)
    );
\write_blocking_ratio[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(29),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(29),
      O => \write_blocking_ratio_reg[31]\(29)
    );
\write_blocking_ratio[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(2),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(2),
      O => \write_blocking_ratio_reg[31]\(2)
    );
\write_blocking_ratio[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(30),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(30),
      O => \write_blocking_ratio_reg[31]\(30)
    );
\write_blocking_ratio[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(31),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(31),
      O => \write_blocking_ratio_reg[31]\(31)
    );
\write_blocking_ratio[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(3),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(3),
      O => \write_blocking_ratio_reg[31]\(3)
    );
\write_blocking_ratio[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(4),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(4),
      O => \write_blocking_ratio_reg[31]\(4)
    );
\write_blocking_ratio[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(5),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(5),
      O => \write_blocking_ratio_reg[31]\(5)
    );
\write_blocking_ratio[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(6),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(6),
      O => \write_blocking_ratio_reg[31]\(6)
    );
\write_blocking_ratio[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(7),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(7),
      O => \write_blocking_ratio_reg[31]\(7)
    );
\write_blocking_ratio[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(8),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(8),
      O => \write_blocking_ratio_reg[31]\(8)
    );
\write_blocking_ratio[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FEFFFFFF10000000"
    )
        port map (
      I0 => \read_max_queue_size[31]_i_2_n_0\,
      I1 => \read_max_queue_size[31]_i_3_n_0\,
      I2 => \^write_data\(9),
      I3 => axi_c_write_addr(5),
      I4 => axi_c_write_addr(6),
      I5 => \write_blocking_ratio_reg[31]_0\(9),
      O => \write_blocking_ratio_reg[31]\(9)
    );
\write_burst_size[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(0),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(0),
      O => \write_burst_size_reg[31]\(0)
    );
\write_burst_size[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(10),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(10),
      O => \write_burst_size_reg[31]\(10)
    );
\write_burst_size[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(11),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(11),
      O => \write_burst_size_reg[31]\(11)
    );
\write_burst_size[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(12),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(12),
      O => \write_burst_size_reg[31]\(12)
    );
\write_burst_size[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(13),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(13),
      O => \write_burst_size_reg[31]\(13)
    );
\write_burst_size[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(14),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(14),
      O => \write_burst_size_reg[31]\(14)
    );
\write_burst_size[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(15),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(15),
      O => \write_burst_size_reg[31]\(15)
    );
\write_burst_size[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(16),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(16),
      O => \write_burst_size_reg[31]\(16)
    );
\write_burst_size[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(17),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(17),
      O => \write_burst_size_reg[31]\(17)
    );
\write_burst_size[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(18),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(18),
      O => \write_burst_size_reg[31]\(18)
    );
\write_burst_size[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(19),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(19),
      O => \write_burst_size_reg[31]\(19)
    );
\write_burst_size[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(1),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(1),
      O => \write_burst_size_reg[31]\(1)
    );
\write_burst_size[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(20),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(20),
      O => \write_burst_size_reg[31]\(20)
    );
\write_burst_size[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(21),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(21),
      O => \write_burst_size_reg[31]\(21)
    );
\write_burst_size[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(22),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(22),
      O => \write_burst_size_reg[31]\(22)
    );
\write_burst_size[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(23),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(23),
      O => \write_burst_size_reg[31]\(23)
    );
\write_burst_size[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(24),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(24),
      O => \write_burst_size_reg[31]\(24)
    );
\write_burst_size[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(25),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(25),
      O => \write_burst_size_reg[31]\(25)
    );
\write_burst_size[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(26),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(26),
      O => \write_burst_size_reg[31]\(26)
    );
\write_burst_size[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(27),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(27),
      O => \write_burst_size_reg[31]\(27)
    );
\write_burst_size[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(28),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(28),
      O => \write_burst_size_reg[31]\(28)
    );
\write_burst_size[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(29),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(29),
      O => \write_burst_size_reg[31]\(29)
    );
\write_burst_size[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(2),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(2),
      O => \write_burst_size_reg[31]\(2)
    );
\write_burst_size[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(30),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(30),
      O => \write_burst_size_reg[31]\(30)
    );
\write_burst_size[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(31),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(31),
      O => \write_burst_size_reg[31]\(31)
    );
\write_burst_size[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(3),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(3),
      O => \write_burst_size_reg[31]\(3)
    );
\write_burst_size[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(4),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(4),
      O => \write_burst_size_reg[31]\(4)
    );
\write_burst_size[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(5),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(5),
      O => \write_burst_size_reg[31]\(5)
    );
\write_burst_size[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(6),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(6),
      O => \write_burst_size_reg[31]\(6)
    );
\write_burst_size[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(7),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(7),
      O => \write_burst_size_reg[31]\(7)
    );
\write_burst_size[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(8),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(8),
      O => \write_burst_size_reg[31]\(8)
    );
\write_burst_size[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \write_burst_size_reg[31]_0\(9),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \^write_data\(9),
      O => \write_burst_size_reg[31]\(9)
    );
\write_count_bursts_per_reset[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(0),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(0),
      O => \write_count_bursts_per_reset_reg[31]\(0)
    );
\write_count_bursts_per_reset[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(10),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(10),
      O => \write_count_bursts_per_reset_reg[31]\(10)
    );
\write_count_bursts_per_reset[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(11),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(11),
      O => \write_count_bursts_per_reset_reg[31]\(11)
    );
\write_count_bursts_per_reset[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(12),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(12),
      O => \write_count_bursts_per_reset_reg[31]\(12)
    );
\write_count_bursts_per_reset[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(13),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(13),
      O => \write_count_bursts_per_reset_reg[31]\(13)
    );
\write_count_bursts_per_reset[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(14),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(14),
      O => \write_count_bursts_per_reset_reg[31]\(14)
    );
\write_count_bursts_per_reset[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(15),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(15),
      O => \write_count_bursts_per_reset_reg[31]\(15)
    );
\write_count_bursts_per_reset[15]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(3),
      O => \write_count_bursts_per_reset[15]_i_2_n_0\
    );
\write_count_bursts_per_reset[15]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(2),
      I2 => axi_c_write_addr(3),
      O => \write_count_bursts_per_reset[15]_i_3_n_0\
    );
\write_count_bursts_per_reset[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(16),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(16),
      O => \write_count_bursts_per_reset_reg[31]\(16)
    );
\write_count_bursts_per_reset[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(17),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(17),
      O => \write_count_bursts_per_reset_reg[31]\(17)
    );
\write_count_bursts_per_reset[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(18),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(18),
      O => \write_count_bursts_per_reset_reg[31]\(18)
    );
\write_count_bursts_per_reset[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(19),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(19),
      O => \write_count_bursts_per_reset_reg[31]\(19)
    );
\write_count_bursts_per_reset[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(1),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(1),
      O => \write_count_bursts_per_reset_reg[31]\(1)
    );
\write_count_bursts_per_reset[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(20),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(20),
      O => \write_count_bursts_per_reset_reg[31]\(20)
    );
\write_count_bursts_per_reset[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(21),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(21),
      O => \write_count_bursts_per_reset_reg[31]\(21)
    );
\write_count_bursts_per_reset[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(22),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(22),
      O => \write_count_bursts_per_reset_reg[31]\(22)
    );
\write_count_bursts_per_reset[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(23),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(23),
      O => \write_count_bursts_per_reset_reg[31]\(23)
    );
\write_count_bursts_per_reset[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(24),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(24),
      O => \write_count_bursts_per_reset_reg[31]\(24)
    );
\write_count_bursts_per_reset[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(25),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(25),
      O => \write_count_bursts_per_reset_reg[31]\(25)
    );
\write_count_bursts_per_reset[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(26),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(26),
      O => \write_count_bursts_per_reset_reg[31]\(26)
    );
\write_count_bursts_per_reset[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(27),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(27),
      O => \write_count_bursts_per_reset_reg[31]\(27)
    );
\write_count_bursts_per_reset[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(28),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(28),
      O => \write_count_bursts_per_reset_reg[31]\(28)
    );
\write_count_bursts_per_reset[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(29),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(29),
      O => \write_count_bursts_per_reset_reg[31]\(29)
    );
\write_count_bursts_per_reset[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(2),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(2),
      O => \write_count_bursts_per_reset_reg[31]\(2)
    );
\write_count_bursts_per_reset[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(30),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(30),
      O => \write_count_bursts_per_reset_reg[31]\(30)
    );
\write_count_bursts_per_reset[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \^write_data\(31),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(31),
      O => \write_count_bursts_per_reset_reg[31]\(31)
    );
\write_count_bursts_per_reset[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(3),
      O => \write_count_bursts_per_reset[31]_i_2_n_0\
    );
\write_count_bursts_per_reset[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => axi_c_write_addr(4),
      I1 => axi_c_write_addr(2),
      I2 => axi_c_write_addr(3),
      O => \write_count_bursts_per_reset[31]_i_3_n_0\
    );
\write_count_bursts_per_reset[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(3),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(3),
      O => \write_count_bursts_per_reset_reg[31]\(3)
    );
\write_count_bursts_per_reset[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(4),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(4),
      O => \write_count_bursts_per_reset_reg[31]\(4)
    );
\write_count_bursts_per_reset[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(5),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(5),
      O => \write_count_bursts_per_reset_reg[31]\(5)
    );
\write_count_bursts_per_reset[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(6),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(6),
      O => \write_count_bursts_per_reset_reg[31]\(6)
    );
\write_count_bursts_per_reset[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(7),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(7),
      O => \write_count_bursts_per_reset_reg[31]\(7)
    );
\write_count_bursts_per_reset[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(8),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(8),
      O => \write_count_bursts_per_reset_reg[31]\(8)
    );
\write_count_bursts_per_reset[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \^write_data\(9),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \write_count_bursts_per_reset_reg[31]_0\(9),
      O => \write_count_bursts_per_reset_reg[31]\(9)
    );
write_data_fifo: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth
     port map (
      clk => clk,
      din(31 downto 0) => s_axi_control_WDATA(31 downto 0),
      dout(31 downto 0) => \^write_data\(31 downto 0),
      empty => write_data_fifo_empty,
      full => NLW_write_data_fifo_full_UNCONNECTED,
      prog_full => write_data_fifo_full,
      rd_en => \^axi_c_write_valid\,
      rd_rst_busy => NLW_write_data_fifo_rd_rst_busy_UNCONNECTED,
      srst => \^sr\(0),
      wr_en => s_axi_control_WVALID,
      wr_rst_busy => NLW_write_data_fifo_wr_rst_busy_UNCONNECTED
    );
write_data_fifo_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_data_fifo_empty,
      I1 => write_addr_fifo_empty,
      O => \^axi_c_write_valid\
    );
\write_max_queue_size[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(0),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(0),
      O => \write_max_queue_size_reg[31]\(0)
    );
\write_max_queue_size[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(10),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(10),
      O => \write_max_queue_size_reg[31]\(10)
    );
\write_max_queue_size[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(11),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(11),
      O => \write_max_queue_size_reg[31]\(11)
    );
\write_max_queue_size[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(12),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(12),
      O => \write_max_queue_size_reg[31]\(12)
    );
\write_max_queue_size[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(13),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(13),
      O => \write_max_queue_size_reg[31]\(13)
    );
\write_max_queue_size[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(14),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(14),
      O => \write_max_queue_size_reg[31]\(14)
    );
\write_max_queue_size[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(15),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(15),
      O => \write_max_queue_size_reg[31]\(15)
    );
\write_max_queue_size[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(16),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(16),
      O => \write_max_queue_size_reg[31]\(16)
    );
\write_max_queue_size[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(17),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(17),
      O => \write_max_queue_size_reg[31]\(17)
    );
\write_max_queue_size[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(18),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(18),
      O => \write_max_queue_size_reg[31]\(18)
    );
\write_max_queue_size[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(19),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(19),
      O => \write_max_queue_size_reg[31]\(19)
    );
\write_max_queue_size[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(1),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(1),
      O => \write_max_queue_size_reg[31]\(1)
    );
\write_max_queue_size[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(20),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(20),
      O => \write_max_queue_size_reg[31]\(20)
    );
\write_max_queue_size[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(21),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(21),
      O => \write_max_queue_size_reg[31]\(21)
    );
\write_max_queue_size[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(22),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(22),
      O => \write_max_queue_size_reg[31]\(22)
    );
\write_max_queue_size[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(23),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(23),
      O => \write_max_queue_size_reg[31]\(23)
    );
\write_max_queue_size[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(24),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(24),
      O => \write_max_queue_size_reg[31]\(24)
    );
\write_max_queue_size[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(25),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(25),
      O => \write_max_queue_size_reg[31]\(25)
    );
\write_max_queue_size[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(26),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(26),
      O => \write_max_queue_size_reg[31]\(26)
    );
\write_max_queue_size[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(27),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(27),
      O => \write_max_queue_size_reg[31]\(27)
    );
\write_max_queue_size[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(28),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(28),
      O => \write_max_queue_size_reg[31]\(28)
    );
\write_max_queue_size[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(29),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(29),
      O => \write_max_queue_size_reg[31]\(29)
    );
\write_max_queue_size[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(2),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(2),
      O => \write_max_queue_size_reg[31]\(2)
    );
\write_max_queue_size[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(30),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(30),
      O => \write_max_queue_size_reg[31]\(30)
    );
\write_max_queue_size[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(31),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(31),
      O => \write_max_queue_size_reg[31]\(31)
    );
\write_max_queue_size[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(3),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(3),
      O => \write_max_queue_size_reg[31]\(3)
    );
\write_max_queue_size[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(4),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(4),
      O => \write_max_queue_size_reg[31]\(4)
    );
\write_max_queue_size[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(5),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(5),
      O => \write_max_queue_size_reg[31]\(5)
    );
\write_max_queue_size[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(6),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(6),
      O => \write_max_queue_size_reg[31]\(6)
    );
\write_max_queue_size[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(7),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(7),
      O => \write_max_queue_size_reg[31]\(7)
    );
\write_max_queue_size[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(8),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(8),
      O => \write_max_queue_size_reg[31]\(8)
    );
\write_max_queue_size[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_max_queue_size[31]_i_2_n_0\,
      I3 => \write_max_queue_size_reg[31]_0\(9),
      I4 => \read_max_queue_size[31]_i_3_n_0\,
      I5 => \^write_data\(9),
      O => \write_max_queue_size_reg[31]\(9)
    );
\write_start_DDR_address[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(0),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(0),
      O => \write_start_DDR_address_reg[63]\(0)
    );
\write_start_DDR_address[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(10),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(10),
      O => \write_start_DDR_address_reg[63]\(10)
    );
\write_start_DDR_address[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(11),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(11),
      O => \write_start_DDR_address_reg[63]\(11)
    );
\write_start_DDR_address[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(12),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(12),
      O => \write_start_DDR_address_reg[63]\(12)
    );
\write_start_DDR_address[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(13),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(13),
      O => \write_start_DDR_address_reg[63]\(13)
    );
\write_start_DDR_address[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(14),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(14),
      O => \write_start_DDR_address_reg[63]\(14)
    );
\write_start_DDR_address[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(15),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(15),
      O => \write_start_DDR_address_reg[63]\(15)
    );
\write_start_DDR_address[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(16),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(16),
      O => \write_start_DDR_address_reg[63]\(16)
    );
\write_start_DDR_address[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(17),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(17),
      O => \write_start_DDR_address_reg[63]\(17)
    );
\write_start_DDR_address[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(18),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(18),
      O => \write_start_DDR_address_reg[63]\(18)
    );
\write_start_DDR_address[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(19),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(19),
      O => \write_start_DDR_address_reg[63]\(19)
    );
\write_start_DDR_address[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(1),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(1),
      O => \write_start_DDR_address_reg[63]\(1)
    );
\write_start_DDR_address[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(20),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(20),
      O => \write_start_DDR_address_reg[63]\(20)
    );
\write_start_DDR_address[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(21),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(21),
      O => \write_start_DDR_address_reg[63]\(21)
    );
\write_start_DDR_address[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(22),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(22),
      O => \write_start_DDR_address_reg[63]\(22)
    );
\write_start_DDR_address[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(23),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(23),
      O => \write_start_DDR_address_reg[63]\(23)
    );
\write_start_DDR_address[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(24),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(24),
      O => \write_start_DDR_address_reg[63]\(24)
    );
\write_start_DDR_address[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(25),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(25),
      O => \write_start_DDR_address_reg[63]\(25)
    );
\write_start_DDR_address[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(26),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(26),
      O => \write_start_DDR_address_reg[63]\(26)
    );
\write_start_DDR_address[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(27),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(27),
      O => \write_start_DDR_address_reg[63]\(27)
    );
\write_start_DDR_address[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(28),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(28),
      O => \write_start_DDR_address_reg[63]\(28)
    );
\write_start_DDR_address[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(29),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(29),
      O => \write_start_DDR_address_reg[63]\(29)
    );
\write_start_DDR_address[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(2),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(2),
      O => \write_start_DDR_address_reg[63]\(2)
    );
\write_start_DDR_address[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(30),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(30),
      O => \write_start_DDR_address_reg[63]\(30)
    );
\write_start_DDR_address[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(31),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(31),
      O => \write_start_DDR_address_reg[63]\(31)
    );
\write_start_DDR_address[32]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(32),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(0),
      O => \write_start_DDR_address_reg[63]\(32)
    );
\write_start_DDR_address[33]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(33),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(1),
      O => \write_start_DDR_address_reg[63]\(33)
    );
\write_start_DDR_address[34]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(34),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(2),
      O => \write_start_DDR_address_reg[63]\(34)
    );
\write_start_DDR_address[35]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(35),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(3),
      O => \write_start_DDR_address_reg[63]\(35)
    );
\write_start_DDR_address[36]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(36),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(4),
      O => \write_start_DDR_address_reg[63]\(36)
    );
\write_start_DDR_address[37]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(37),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(5),
      O => \write_start_DDR_address_reg[63]\(37)
    );
\write_start_DDR_address[38]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(38),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(6),
      O => \write_start_DDR_address_reg[63]\(38)
    );
\write_start_DDR_address[39]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(39),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(7),
      O => \write_start_DDR_address_reg[63]\(39)
    );
\write_start_DDR_address[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(3),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(3),
      O => \write_start_DDR_address_reg[63]\(3)
    );
\write_start_DDR_address[40]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(40),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(8),
      O => \write_start_DDR_address_reg[63]\(40)
    );
\write_start_DDR_address[41]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(41),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(9),
      O => \write_start_DDR_address_reg[63]\(41)
    );
\write_start_DDR_address[42]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(42),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(10),
      O => \write_start_DDR_address_reg[63]\(42)
    );
\write_start_DDR_address[43]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(43),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(11),
      O => \write_start_DDR_address_reg[63]\(43)
    );
\write_start_DDR_address[44]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(44),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(12),
      O => \write_start_DDR_address_reg[63]\(44)
    );
\write_start_DDR_address[45]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(45),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(13),
      O => \write_start_DDR_address_reg[63]\(45)
    );
\write_start_DDR_address[46]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(46),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(14),
      O => \write_start_DDR_address_reg[63]\(46)
    );
\write_start_DDR_address[47]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(47),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(15),
      O => \write_start_DDR_address_reg[63]\(47)
    );
\write_start_DDR_address[48]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(48),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(16),
      O => \write_start_DDR_address_reg[63]\(48)
    );
\write_start_DDR_address[49]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(49),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(17),
      O => \write_start_DDR_address_reg[63]\(49)
    );
\write_start_DDR_address[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(4),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(4),
      O => \write_start_DDR_address_reg[63]\(4)
    );
\write_start_DDR_address[50]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(50),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(18),
      O => \write_start_DDR_address_reg[63]\(50)
    );
\write_start_DDR_address[51]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(51),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(19),
      O => \write_start_DDR_address_reg[63]\(51)
    );
\write_start_DDR_address[52]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(52),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(20),
      O => \write_start_DDR_address_reg[63]\(52)
    );
\write_start_DDR_address[53]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(53),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(21),
      O => \write_start_DDR_address_reg[63]\(53)
    );
\write_start_DDR_address[54]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(54),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(22),
      O => \write_start_DDR_address_reg[63]\(54)
    );
\write_start_DDR_address[55]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(55),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(23),
      O => \write_start_DDR_address_reg[63]\(55)
    );
\write_start_DDR_address[56]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(56),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(24),
      O => \write_start_DDR_address_reg[63]\(56)
    );
\write_start_DDR_address[57]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(57),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(25),
      O => \write_start_DDR_address_reg[63]\(57)
    );
\write_start_DDR_address[58]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(58),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(26),
      O => \write_start_DDR_address_reg[63]\(58)
    );
\write_start_DDR_address[59]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(59),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(27),
      O => \write_start_DDR_address_reg[63]\(59)
    );
\write_start_DDR_address[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(5),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(5),
      O => \write_start_DDR_address_reg[63]\(5)
    );
\write_start_DDR_address[60]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(60),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(28),
      O => \write_start_DDR_address_reg[63]\(60)
    );
\write_start_DDR_address[61]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(61),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(29),
      O => \write_start_DDR_address_reg[63]\(61)
    );
\write_start_DDR_address[62]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(62),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(30),
      O => \write_start_DDR_address_reg[63]\(62)
    );
\write_start_DDR_address[63]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \write_start_DDR_address_reg[63]_0\(63),
      I4 => active_write_i_3_n_0,
      I5 => \^write_data\(31),
      O => \write_start_DDR_address_reg[63]\(63)
    );
\write_start_DDR_address[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(6),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(6),
      O => \write_start_DDR_address_reg[63]\(6)
    );
\write_start_DDR_address[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(7),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(7),
      O => \write_start_DDR_address_reg[63]\(7)
    );
\write_start_DDR_address[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(8),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(8),
      O => \write_start_DDR_address_reg[63]\(8)
    );
\write_start_DDR_address[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => active_write_i_2_n_0,
      I3 => \^write_data\(9),
      I4 => active_write_i_3_n_0,
      I5 => \write_start_DDR_address_reg[63]_0\(9),
      O => \write_start_DDR_address_reg[63]\(9)
    );
\write_step_DDR_address[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(0),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(0),
      O => \write_step_DDR_address_reg[31]\(0)
    );
\write_step_DDR_address[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(10),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(10),
      O => \write_step_DDR_address_reg[31]\(10)
    );
\write_step_DDR_address[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(11),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(11),
      O => \write_step_DDR_address_reg[31]\(11)
    );
\write_step_DDR_address[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(12),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(12),
      O => \write_step_DDR_address_reg[31]\(12)
    );
\write_step_DDR_address[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(13),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(13),
      O => \write_step_DDR_address_reg[31]\(13)
    );
\write_step_DDR_address[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(14),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(14),
      O => \write_step_DDR_address_reg[31]\(14)
    );
\write_step_DDR_address[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(15),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(15),
      O => \write_step_DDR_address_reg[31]\(15)
    );
\write_step_DDR_address[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(16),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(16),
      O => \write_step_DDR_address_reg[31]\(16)
    );
\write_step_DDR_address[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(17),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(17),
      O => \write_step_DDR_address_reg[31]\(17)
    );
\write_step_DDR_address[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(18),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(18),
      O => \write_step_DDR_address_reg[31]\(18)
    );
\write_step_DDR_address[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(19),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(19),
      O => \write_step_DDR_address_reg[31]\(19)
    );
\write_step_DDR_address[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(1),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(1),
      O => \write_step_DDR_address_reg[31]\(1)
    );
\write_step_DDR_address[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(20),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(20),
      O => \write_step_DDR_address_reg[31]\(20)
    );
\write_step_DDR_address[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(21),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(21),
      O => \write_step_DDR_address_reg[31]\(21)
    );
\write_step_DDR_address[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(22),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(22),
      O => \write_step_DDR_address_reg[31]\(22)
    );
\write_step_DDR_address[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(23),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(23),
      O => \write_step_DDR_address_reg[31]\(23)
    );
\write_step_DDR_address[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(24),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(24),
      O => \write_step_DDR_address_reg[31]\(24)
    );
\write_step_DDR_address[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(25),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(25),
      O => \write_step_DDR_address_reg[31]\(25)
    );
\write_step_DDR_address[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(26),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(26),
      O => \write_step_DDR_address_reg[31]\(26)
    );
\write_step_DDR_address[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(27),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(27),
      O => \write_step_DDR_address_reg[31]\(27)
    );
\write_step_DDR_address[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(28),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(28),
      O => \write_step_DDR_address_reg[31]\(28)
    );
\write_step_DDR_address[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(29),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(29),
      O => \write_step_DDR_address_reg[31]\(29)
    );
\write_step_DDR_address[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(2),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(2),
      O => \write_step_DDR_address_reg[31]\(2)
    );
\write_step_DDR_address[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(30),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(30),
      O => \write_step_DDR_address_reg[31]\(30)
    );
\write_step_DDR_address[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[31]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(31),
      I4 => \write_count_bursts_per_reset[31]_i_3_n_0\,
      I5 => \^write_data\(31),
      O => \write_step_DDR_address_reg[31]\(31)
    );
\write_step_DDR_address[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(3),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(3),
      O => \write_step_DDR_address_reg[31]\(3)
    );
\write_step_DDR_address[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(4),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(4),
      O => \write_step_DDR_address_reg[31]\(4)
    );
\write_step_DDR_address[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(5),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(5),
      O => \write_step_DDR_address_reg[31]\(5)
    );
\write_step_DDR_address[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(6),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(6),
      O => \write_step_DDR_address_reg[31]\(6)
    );
\write_step_DDR_address[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(7),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(7),
      O => \write_step_DDR_address_reg[31]\(7)
    );
\write_step_DDR_address[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(8),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(8),
      O => \write_step_DDR_address_reg[31]\(8)
    );
\write_step_DDR_address[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF01FF00FE00"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \write_count_bursts_per_reset[15]_i_2_n_0\,
      I3 => \write_step_DDR_address_reg[31]_0\(9),
      I4 => \write_count_bursts_per_reset[15]_i_3_n_0\,
      I5 => \^write_data\(9),
      O => \write_step_DDR_address_reg[31]\(9)
    );
\write_ticks_per_burst[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(0),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(0),
      O => \write_ticks_per_burst_reg[31]\(0)
    );
\write_ticks_per_burst[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(10),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(10),
      O => \write_ticks_per_burst_reg[31]\(10)
    );
\write_ticks_per_burst[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(11),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(11),
      O => \write_ticks_per_burst_reg[31]\(11)
    );
\write_ticks_per_burst[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(12),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(12),
      O => \write_ticks_per_burst_reg[31]\(12)
    );
\write_ticks_per_burst[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(13),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(13),
      O => \write_ticks_per_burst_reg[31]\(13)
    );
\write_ticks_per_burst[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(14),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(14),
      O => \write_ticks_per_burst_reg[31]\(14)
    );
\write_ticks_per_burst[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(15),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(15),
      O => \write_ticks_per_burst_reg[31]\(15)
    );
\write_ticks_per_burst[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(16),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(16),
      O => \write_ticks_per_burst_reg[31]\(16)
    );
\write_ticks_per_burst[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(17),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(17),
      O => \write_ticks_per_burst_reg[31]\(17)
    );
\write_ticks_per_burst[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(18),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(18),
      O => \write_ticks_per_burst_reg[31]\(18)
    );
\write_ticks_per_burst[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(19),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(19),
      O => \write_ticks_per_burst_reg[31]\(19)
    );
\write_ticks_per_burst[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(1),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(1),
      O => \write_ticks_per_burst_reg[31]\(1)
    );
\write_ticks_per_burst[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(20),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(20),
      O => \write_ticks_per_burst_reg[31]\(20)
    );
\write_ticks_per_burst[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(21),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(21),
      O => \write_ticks_per_burst_reg[31]\(21)
    );
\write_ticks_per_burst[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(22),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(22),
      O => \write_ticks_per_burst_reg[31]\(22)
    );
\write_ticks_per_burst[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(23),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(23),
      O => \write_ticks_per_burst_reg[31]\(23)
    );
\write_ticks_per_burst[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(24),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(24),
      O => \write_ticks_per_burst_reg[31]\(24)
    );
\write_ticks_per_burst[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(25),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(25),
      O => \write_ticks_per_burst_reg[31]\(25)
    );
\write_ticks_per_burst[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(26),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(26),
      O => \write_ticks_per_burst_reg[31]\(26)
    );
\write_ticks_per_burst[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(27),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(27),
      O => \write_ticks_per_burst_reg[31]\(27)
    );
\write_ticks_per_burst[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(28),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(28),
      O => \write_ticks_per_burst_reg[31]\(28)
    );
\write_ticks_per_burst[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(29),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(29),
      O => \write_ticks_per_burst_reg[31]\(29)
    );
\write_ticks_per_burst[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(2),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(2),
      O => \write_ticks_per_burst_reg[31]\(2)
    );
\write_ticks_per_burst[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(30),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(30),
      O => \write_ticks_per_burst_reg[31]\(30)
    );
\write_ticks_per_burst[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(31),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(31),
      O => \write_ticks_per_burst_reg[31]\(31)
    );
\write_ticks_per_burst[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(3),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(3),
      O => \write_ticks_per_burst_reg[31]\(3)
    );
\write_ticks_per_burst[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(4),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(4),
      O => \write_ticks_per_burst_reg[31]\(4)
    );
\write_ticks_per_burst[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(5),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(5),
      O => \write_ticks_per_burst_reg[31]\(5)
    );
\write_ticks_per_burst[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(6),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(6),
      O => \write_ticks_per_burst_reg[31]\(6)
    );
\write_ticks_per_burst[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(7),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(7),
      O => \write_ticks_per_burst_reg[31]\(7)
    );
\write_ticks_per_burst[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(8),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(8),
      O => \write_ticks_per_burst_reg[31]\(8)
    );
\write_ticks_per_burst[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFF01000000"
    )
        port map (
      I0 => axi_c_write_addr(6),
      I1 => axi_c_write_addr(5),
      I2 => \read_ticks_per_burst[31]_i_2_n_0\,
      I3 => \^write_data\(9),
      I4 => \read_ticks_per_burst[31]_i_3_n_0\,
      I5 => \write_ticks_per_burst_reg[31]_0\(9),
      O => \write_ticks_per_burst_reg[31]\(9)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_TestPatternGenerator is
  port (
    O32 : out STD_LOGIC;
    clk : in STD_LOGIC;
    \countAddrToBeSent_reg[38]_0\ : in STD_LOGIC;
    readDataLast : in STD_LOGIC;
    readDataValid : in STD_LOGIC;
    rstn : in STD_LOGIC;
    s_axi_control_ARREADY : out STD_LOGIC;
    s_axi_control_ARVALID : in STD_LOGIC;
    s_axi_control_AWREADY : out STD_LOGIC;
    s_axi_control_AWVALID : in STD_LOGIC;
    s_axi_control_BREADY : in STD_LOGIC;
    s_axi_control_BVALID : out STD_LOGIC;
    s_axi_control_RREADY : in STD_LOGIC;
    s_axi_control_RVALID : out STD_LOGIC;
    s_axi_control_WREADY : out STD_LOGIC;
    s_axi_control_WVALID : in STD_LOGIC;
    srst : out STD_LOGIC;
    toReadDataBusy : in STD_LOGIC;
    toReadDataValid : out STD_LOGIC;
    writeAbusy : in STD_LOGIC;
    writeAvalid : out STD_LOGIC;
    writeDbusy : in STD_LOGIC;
    writeDlast : out STD_LOGIC;
    writeDlast_reg_0 : in STD_LOGIC;
    writeDvalid : out STD_LOGIC;
    writeDvalid0 : out STD_LOGIC;
    CO : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 127 downto 0 );
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : out STD_LOGIC_VECTOR ( 21 downto 0 );
    \axi_ARID_reg[0]\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \countAddrSent_reg[1]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \m_ddr_axi_ARSIZE[2]\ : out STD_LOGIC_VECTOR ( 21 downto 0 );
    s_axi_control_ARADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_AWADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    toReadDataAddress : out STD_LOGIC_VECTOR ( 63 downto 0 );
    writeAddress : out STD_LOGIC_VECTOR ( 63 downto 0 );
    \writeAddress_reg[63]_0\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    writeDvalid_reg_0 : out STD_LOGIC_VECTOR ( 127 downto 0 )
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_TestPatternGenerator;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_TestPatternGenerator is
  signal \^co\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^o32\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 21 downto 0 );
  signal active_blocking : STD_LOGIC;
  attribute DONT_TOUCH : boolean;
  attribute DONT_TOUCH of active_blocking : signal is std.standard.true;
  signal \active_blocking__0\ : STD_LOGIC;
  signal active_read : STD_LOGIC;
  attribute DONT_TOUCH of active_read : signal is std.standard.true;
  signal \active_read__0\ : STD_LOGIC;
  signal active_runtime : STD_LOGIC;
  signal active_runtime0 : STD_LOGIC;
  signal active_runtime1 : STD_LOGIC;
  signal active_runtime2 : STD_LOGIC;
  signal active_runtime3 : STD_LOGIC;
  signal active_write : STD_LOGIC;
  attribute DONT_TOUCH of active_write : signal is std.standard.true;
  signal \active_write__0\ : STD_LOGIC;
  signal axi_c_read_data : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \axi_c_read_data_reg_n_0_\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal axi_c_read_data_valid : STD_LOGIC;
  signal axi_c_read_valid : STD_LOGIC;
  signal axi_c_write_data : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal axi_c_write_valid : STD_LOGIC;
  signal countAddrSent : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal countAddrSent0 : STD_LOGIC_VECTOR ( 39 downto 1 );
  signal countAddrSentRatioFix : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_12_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_13_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_14_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_15_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_16_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_17_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[15]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_12_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_13_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_14_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_15_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_16_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_17_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[23]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_12_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_13_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_14_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_15_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_16_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_17_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[31]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[39]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_12_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_13_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_14_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_15_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_16_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix[7]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_1\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_10\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_11\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_12\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_13\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_14\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_15\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_2\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_3\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_5\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_6\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_7\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_8\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[15]_i_1_n_9\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_1\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_10\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_11\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_12\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_13\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_14\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_15\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_2\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_3\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_5\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_6\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_7\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_8\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[23]_i_1_n_9\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_1\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_10\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_11\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_12\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_13\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_14\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_15\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_2\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_3\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_5\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_6\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_7\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_8\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[31]_i_1_n_9\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_1\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_10\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_11\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_12\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_13\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_14\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_15\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_2\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_3\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_5\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_6\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_7\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_8\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[39]_i_2_n_9\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_1\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_10\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_11\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_12\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_13\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_14\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_15\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_5\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_6\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_7\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_8\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg[7]_i_1_n_9\ : STD_LOGIC;
  signal \countAddrSentRatioFix_reg_n_0_\ : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countAddrSent[31]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrSent[32]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[33]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[34]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[35]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[36]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[37]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[38]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_12_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_13_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_14_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_15_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_17_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_18_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_19_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_20_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_21_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_22_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_23_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_24_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_25_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_26_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_27_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_28_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_29_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_30_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_31_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_32_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_33_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_34_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_35_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_36_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_37_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_38_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_39_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_40_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_41_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_42_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_43_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_44_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_45_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_46_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_47_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_48_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrSent[39]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrSent_reg[16]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSent_reg[16]_i_2_n_1\ : STD_LOGIC;
  signal \countAddrSent_reg[16]_i_2_n_2\ : STD_LOGIC;
  signal \countAddrSent_reg[16]_i_2_n_3\ : STD_LOGIC;
  signal \countAddrSent_reg[16]_i_2_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[16]_i_2_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[16]_i_2_n_7\ : STD_LOGIC;
  signal \^countaddrsent_reg[1]_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \countAddrSent_reg[24]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSent_reg[24]_i_2_n_1\ : STD_LOGIC;
  signal \countAddrSent_reg[24]_i_2_n_2\ : STD_LOGIC;
  signal \countAddrSent_reg[24]_i_2_n_3\ : STD_LOGIC;
  signal \countAddrSent_reg[24]_i_2_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[24]_i_2_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[24]_i_2_n_7\ : STD_LOGIC;
  signal \countAddrSent_reg[32]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSent_reg[32]_i_2_n_1\ : STD_LOGIC;
  signal \countAddrSent_reg[32]_i_2_n_2\ : STD_LOGIC;
  signal \countAddrSent_reg[32]_i_2_n_3\ : STD_LOGIC;
  signal \countAddrSent_reg[32]_i_2_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[32]_i_2_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[32]_i_2_n_7\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_16_n_0\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_16_n_1\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_16_n_2\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_16_n_3\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_16_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_16_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_16_n_7\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_4_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_4_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_4_n_7\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_6_n_2\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_6_n_3\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_6_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_6_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_6_n_7\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_7_n_1\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_7_n_2\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_7_n_3\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_7_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_7_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[39]_i_7_n_7\ : STD_LOGIC;
  signal \countAddrSent_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrSent_reg[8]_i_2_n_1\ : STD_LOGIC;
  signal \countAddrSent_reg[8]_i_2_n_2\ : STD_LOGIC;
  signal \countAddrSent_reg[8]_i_2_n_3\ : STD_LOGIC;
  signal \countAddrSent_reg[8]_i_2_n_5\ : STD_LOGIC;
  signal \countAddrSent_reg[8]_i_2_n_6\ : STD_LOGIC;
  signal \countAddrSent_reg[8]_i_2_n_7\ : STD_LOGIC;
  signal countAddrToBeSent : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal countAddrToBeSent0 : STD_LOGIC_VECTOR ( 39 downto 1 );
  signal countAddrToBeSent00_in : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countAddrToBeSent[0]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[0]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[10]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[10]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[11]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[11]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[12]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[12]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[13]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[13]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[14]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[14]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[15]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[16]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[16]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[17]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[17]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[18]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[18]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[19]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[19]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[1]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[1]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[20]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[20]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[21]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[21]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[22]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[22]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[23]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[24]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[24]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[25]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[25]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[26]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[26]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[27]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[27]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[28]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[28]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[29]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[29]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[2]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[2]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[30]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[30]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[31]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[32]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[32]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[33]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[33]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[34]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[34]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[35]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[35]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[36]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[36]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[37]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[37]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[38]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[38]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_100_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_101_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_102_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_105_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_106_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_107_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_108_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_109_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_110_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_111_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_112_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_113_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_114_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_115_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_116_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_117_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_118_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_119_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_120_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_124_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_125_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_126_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_127_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_128_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_129_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_12_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_130_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_131_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_132_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_133_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_134_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_135_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_136_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_137_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_138_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_139_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_142_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_143_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_144_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_145_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_146_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_147_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_148_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_149_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_150_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_151_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_152_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_153_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_154_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_155_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_156_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_157_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_159_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_160_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_161_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_162_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_163_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_164_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_165_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_166_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_167_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_168_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_169_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_170_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_171_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_172_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_173_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_174_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_175_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_176_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_177_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_178_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_179_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_17_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_180_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_181_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_182_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_185_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_186_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_187_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_188_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_189_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_18_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_190_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_191_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_192_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_193_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_194_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_195_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_196_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_197_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_198_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_199_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_19_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_200_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_202_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_203_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_204_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_205_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_206_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_207_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_208_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_209_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_20_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_211_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_212_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_213_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_214_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_215_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_216_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_217_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_218_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_219_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_21_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_220_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_221_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_222_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_223_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_224_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_225_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_226_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_228_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_229_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_22_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_230_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_231_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_232_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_233_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_234_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_235_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_236_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_237_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_238_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_239_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_23_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_240_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_241_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_242_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_243_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_245_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_246_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_247_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_248_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_249_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_24_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_250_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_251_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_252_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_253_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_254_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_255_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_256_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_257_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_258_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_259_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_25_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_260_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_26_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_27_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_28_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_29_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_30_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_31_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_32_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_34_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_35_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_36_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_37_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_38_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_39_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_40_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_41_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_42_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_43_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_44_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_45_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_46_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_47_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_48_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_49_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_53_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_54_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_55_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_56_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_57_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_58_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_59_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_60_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_61_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_62_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_63_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_64_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_65_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_66_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_67_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_68_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_69_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_70_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_71_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_72_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_73_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_74_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_75_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_76_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_77_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_78_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_79_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_80_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_81_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_82_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_83_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_84_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_85_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_86_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_87_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_88_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_89_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_90_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_91_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_92_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_95_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_96_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_97_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_98_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_99_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[39]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[3]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[3]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[4]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[4]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[5]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[5]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[6]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[6]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_10_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_11_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_4_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_5_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_6_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[7]_i_9_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[8]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[8]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[9]_i_1_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent[9]_i_2_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent__0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[15]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[15]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[15]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[15]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[15]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[15]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[15]_i_3_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[16]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[16]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[16]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[16]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[16]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[16]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[16]_i_3_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[23]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[23]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[23]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[23]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[23]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[23]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[23]_i_3_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[24]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[24]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[24]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[24]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[24]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[24]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[24]_i_3_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[31]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[31]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[31]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[31]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[31]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[31]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[31]_i_3_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[32]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[32]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[32]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[32]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[32]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[32]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[32]_i_3_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_103_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_103_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_103_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_103_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_103_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_103_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_103_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_104_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_104_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_104_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_104_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_104_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_104_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_104_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_10\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_11\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_12\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_13\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_14\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_15\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_8\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_121_n_9\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_122_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_122_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_122_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_122_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_122_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_122_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_122_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_123_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_123_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_123_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_123_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_123_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_123_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_123_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_13_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_13_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_13_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_13_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_13_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_13_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_13_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_140_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_140_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_140_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_140_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_140_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_140_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_140_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_141_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_141_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_141_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_141_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_141_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_141_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_141_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_14_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_14_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_14_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_14_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_14_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_14_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_10\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_11\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_12\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_13\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_14\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_15\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_8\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_158_n_9\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_15_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_15_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_15_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_15_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_15_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_16_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_16_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_16_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_16_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_16_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_16_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_16_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_183_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_183_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_183_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_183_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_183_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_183_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_183_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_184_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_184_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_184_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_184_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_184_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_184_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_184_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_10\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_11\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_12\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_13\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_14\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_15\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_8\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_201_n_9\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_210_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_210_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_210_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_210_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_210_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_210_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_210_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_10\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_11\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_12\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_13\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_14\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_15\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_8\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_227_n_9\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_10\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_11\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_12\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_13\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_14\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_15\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_8\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_244_n_9\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_33_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_33_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_33_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_33_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_33_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_33_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_33_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_4_n_4\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_4_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_4_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_4_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_50_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_50_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_50_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_50_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_50_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_50_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_51_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_51_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_51_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_51_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_51_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_51_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_51_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_52_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_52_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_52_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_52_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_52_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_52_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_7_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_7_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_7_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_7_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_7_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_7_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_7_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_8_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_8_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_8_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_8_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_8_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_8_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_8_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_93_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_93_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_93_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_93_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_93_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_93_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_93_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_94_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_94_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_94_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_94_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_94_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_94_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[39]_i_94_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[7]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[7]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[7]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[7]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[7]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[7]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[7]_i_3_n_7\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[8]_i_3_n_0\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[8]_i_3_n_1\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[8]_i_3_n_2\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[8]_i_3_n_3\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[8]_i_3_n_5\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[8]_i_3_n_6\ : STD_LOGIC;
  signal \countAddrToBeSent_reg[8]_i_3_n_7\ : STD_LOGIC;
  signal countDataReceived : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal countDataReceived0 : STD_LOGIC_VECTOR ( 39 downto 1 );
  signal countDataReceivedRatioFix : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_10_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_11_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_12_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_13_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_14_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_15_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_16_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_17_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_3_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_4_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_5_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_6_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_7_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_8_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[15]_i_9_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_10_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_11_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_12_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_13_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_14_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_15_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_16_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_17_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_3_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_4_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_5_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_6_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_7_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_8_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[23]_i_9_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_10_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_11_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_12_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_13_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_14_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_15_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_16_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_17_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_3_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_4_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_5_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_6_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_7_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_8_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[31]_i_9_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_10_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_11_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_12_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_14_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_15_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_16_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_17_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_18_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_19_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_20_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_21_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_22_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_23_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_24_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_25_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_26_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_27_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_28_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_29_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_30_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_31_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_32_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_33_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_34_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_35_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_36_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_37_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_38_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_39_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_40_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_41_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_42_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_43_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_44_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_45_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_4_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_5_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_6_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_7_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_8_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[39]_i_9_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_10_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_11_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_12_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_13_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_14_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_15_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_16_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_17_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_3_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_4_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_5_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_6_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_7_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_8_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix[7]_i_9_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_1\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_10\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_11\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_12\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_13\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_14\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_15\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_2\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_3\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_5\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_6\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_7\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_8\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[15]_i_1_n_9\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_1\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_10\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_11\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_12\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_13\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_14\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_15\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_2\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_3\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_5\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_6\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_7\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_8\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[23]_i_1_n_9\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_1\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_10\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_11\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_12\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_13\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_14\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_15\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_2\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_3\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_5\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_6\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_7\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_8\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[31]_i_1_n_9\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_13_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_13_n_1\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_13_n_2\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_13_n_3\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_13_n_5\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_13_n_6\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_13_n_7\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_1\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_10\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_11\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_12\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_13\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_14\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_15\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_2\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_3\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_5\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_6\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_7\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_8\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_2_n_9\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_3_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_3_n_1\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_3_n_2\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_3_n_3\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_3_n_5\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_3_n_6\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[39]_i_3_n_7\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_1\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_10\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_11\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_12\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_13\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_14\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_15\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_5\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_6\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_7\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_8\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg[7]_i_1_n_9\ : STD_LOGIC;
  signal \countDataReceivedRatioFix_reg_n_0_\ : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countDataReceived[39]_i_11_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_12_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_13_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_14_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_15_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_16_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_18_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_19_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_1_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_20_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_21_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_22_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_23_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_25_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_26_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_27_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_28_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_29_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_30_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_32_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_33_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_34_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_35_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_36_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_37_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_38_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_39_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_3_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_40_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_41_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_42_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_43_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_44_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_45_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_46_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_47_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_48_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_49_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_50_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_51_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_52_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_53_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_54_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_55_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_56_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_57_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_58_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_59_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_60_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_61_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_62_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_63_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_64_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_65_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_66_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_67_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_68_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_69_n_0\ : STD_LOGIC;
  signal \countDataReceived[39]_i_7_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[16]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[16]_i_2_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[16]_i_2_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[16]_i_2_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[16]_i_2_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[16]_i_2_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[16]_i_2_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[24]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[24]_i_2_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[24]_i_2_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[24]_i_2_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[24]_i_2_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[24]_i_2_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[24]_i_2_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[32]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[32]_i_2_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[32]_i_2_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[32]_i_2_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[32]_i_2_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[32]_i_2_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[32]_i_2_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_10_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_10_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_10_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_10_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_10_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_10_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_10_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_17_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_17_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_17_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_17_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_17_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_17_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_17_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_24_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_24_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_24_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_24_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_24_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_24_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_24_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_31_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_31_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_31_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_31_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_31_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_31_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_31_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_4_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_4_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_4_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_4_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_4_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_5_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_5_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_5_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_5_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_6_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_6_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_6_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_6_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_8_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_8_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_8_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_8_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_9_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_9_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_9_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[39]_i_9_n_7\ : STD_LOGIC;
  signal \countDataReceived_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \countDataReceived_reg[8]_i_2_n_1\ : STD_LOGIC;
  signal \countDataReceived_reg[8]_i_2_n_2\ : STD_LOGIC;
  signal \countDataReceived_reg[8]_i_2_n_3\ : STD_LOGIC;
  signal \countDataReceived_reg[8]_i_2_n_5\ : STD_LOGIC;
  signal \countDataReceived_reg[8]_i_2_n_6\ : STD_LOGIC;
  signal \countDataReceived_reg[8]_i_2_n_7\ : STD_LOGIC;
  signal countDataSent0 : STD_LOGIC_VECTOR ( 39 downto 1 );
  signal \countDataSent[0]_i_10_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_2_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_3_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_4_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_5_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_6_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_7_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_8_n_0\ : STD_LOGIC;
  signal \countDataSent[0]_i_9_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_2_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_3_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_4_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_5_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_6_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_7_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_8_n_0\ : STD_LOGIC;
  signal \countDataSent[16]_i_9_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_2_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_3_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_4_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_5_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_6_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_7_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_8_n_0\ : STD_LOGIC;
  signal \countDataSent[24]_i_9_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_2_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_3_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_4_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_5_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_6_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_7_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_8_n_0\ : STD_LOGIC;
  signal \countDataSent[32]_i_9_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_2_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_3_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_4_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_5_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_6_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_7_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_8_n_0\ : STD_LOGIC;
  signal \countDataSent[8]_i_9_n_0\ : STD_LOGIC;
  signal countDataSent_reg : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countDataSent_reg[0]_i_11_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_11_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_11_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_11_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_11_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_11_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_11_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_10\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_11\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_12\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_13\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_14\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_15\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_8\ : STD_LOGIC;
  signal \countDataSent_reg[0]_i_1_n_9\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_10_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_10_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_10_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_10_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_10_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_10_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_10_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_10\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_11\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_12\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_13\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_14\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_15\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_8\ : STD_LOGIC;
  signal \countDataSent_reg[16]_i_1_n_9\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_10_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_10_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_10_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_10_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_10_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_10_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_10_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_10\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_11\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_12\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_13\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_14\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_15\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_8\ : STD_LOGIC;
  signal \countDataSent_reg[24]_i_1_n_9\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_10_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_10_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_10_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_10_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_10_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_10\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_11\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_12\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_13\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_14\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_15\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_8\ : STD_LOGIC;
  signal \countDataSent_reg[32]_i_1_n_9\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_10_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_10_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_10_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_10_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_10_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_10_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_10_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_10\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_11\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_12\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_13\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_14\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_15\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_8\ : STD_LOGIC;
  signal \countDataSent_reg[8]_i_1_n_9\ : STD_LOGIC;
  signal countDataToBeReceived0 : STD_LOGIC_VECTOR ( 39 downto 1 );
  signal \countDataToBeReceived[0]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[0]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[16]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[24]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[32]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived[8]_i_9_n_0\ : STD_LOGIC;
  signal countDataToBeReceived_reg : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countDataToBeReceived_reg[0]_i_11_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_11_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_11_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_11_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_11_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_11_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_11_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[0]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_10_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_10_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_10_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_10_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_10_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_10_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[16]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_10_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_10_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_10_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_10_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_10_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_10_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[24]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_10_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_10_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_10_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_10_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_10_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[32]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_10_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_10_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_10_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_10_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_10_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_10_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeReceived_reg[8]_i_1_n_9\ : STD_LOGIC;
  signal countDataToBeSent0 : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countDataToBeSent[0]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_11_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_12_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_13_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_14_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_15_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_16_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_17_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_19_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_20_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_21_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_22_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_23_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_24_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_25_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_26_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[0]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_11_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_12_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_13_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_14_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_15_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_16_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_17_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_19_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_20_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_21_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_22_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_23_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_24_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_25_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_26_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[16]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_11_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_12_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_13_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_14_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_15_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_16_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_17_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_19_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_20_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_21_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_22_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_23_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_24_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_25_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_26_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[24]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[32]_i_9_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_10_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_11_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_12_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_13_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_14_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_15_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_16_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_17_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_19_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_20_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_21_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_22_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_23_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_24_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_25_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_26_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_2_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_3_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_4_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_5_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_6_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_7_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_8_n_0\ : STD_LOGIC;
  signal \countDataToBeSent[8]_i_9_n_0\ : STD_LOGIC;
  signal countDataToBeSent_reg : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countDataToBeSent_reg[0]_i_18_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_18_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_18_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_18_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_18_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_18_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_18_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeSent_reg[0]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_18_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_18_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_18_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_18_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_18_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_18_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_18_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeSent_reg[16]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_18_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_18_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_18_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_18_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_18_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_18_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_18_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeSent_reg[24]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_10_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_10_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_10_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_10_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_10_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_10_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeSent_reg[32]_i_1_n_9\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_18_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_18_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_18_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_18_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_18_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_18_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_18_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_10\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_11\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_12\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_13\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_14\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_15\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_8\ : STD_LOGIC;
  signal \countDataToBeSent_reg[8]_i_1_n_9\ : STD_LOGIC;
  signal countReadReqSent0 : STD_LOGIC_VECTOR ( 39 downto 1 );
  signal \countReadReqSent[0]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqSent[0]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqSent[16]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqSent[24]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqSent[32]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqSent[8]_i_9_n_0\ : STD_LOGIC;
  signal countReadReqSent_reg : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countReadReqSent_reg[0]_i_11_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_11_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_11_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_11_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_11_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_11_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_11_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_10\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_11\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_12\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_13\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_14\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_15\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_8\ : STD_LOGIC;
  signal \countReadReqSent_reg[0]_i_1_n_9\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_10_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_10_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_10_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_10_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_10_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_10_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_10\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_11\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_12\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_13\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_14\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_15\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_8\ : STD_LOGIC;
  signal \countReadReqSent_reg[16]_i_1_n_9\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_10_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_10_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_10_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_10_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_10_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_10_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_10\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_11\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_12\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_13\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_14\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_15\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_8\ : STD_LOGIC;
  signal \countReadReqSent_reg[24]_i_1_n_9\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_10_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_10_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_10_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_10_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_10_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_10\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_11\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_12\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_13\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_14\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_15\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_8\ : STD_LOGIC;
  signal \countReadReqSent_reg[32]_i_1_n_9\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_10_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_10_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_10_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_10_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_10_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_10_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_10\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_11\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_12\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_13\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_14\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_15\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_8\ : STD_LOGIC;
  signal \countReadReqSent_reg[8]_i_1_n_9\ : STD_LOGIC;
  signal countReadReqToBeSent : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal countReadReqToBeSent0 : STD_LOGIC_VECTOR ( 39 downto 1 );
  signal countReadReqToBeSent01_in : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \countReadReqToBeSent[0]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[0]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[10]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[10]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[11]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[11]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[12]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[12]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[13]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[13]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[14]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[14]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_11_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[15]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[16]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[16]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[17]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[17]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[18]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[18]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[19]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[19]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[1]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[1]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[20]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[20]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[21]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[21]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[22]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[22]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_11_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[23]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[24]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[24]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[25]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[25]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[26]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[26]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[27]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[27]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[28]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[28]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[29]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[29]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[2]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[2]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[30]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[30]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_11_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[31]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[32]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[32]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[33]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[33]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[34]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[34]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[35]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[35]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[36]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[36]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[37]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[37]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[38]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[38]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[39]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[39]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[39]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[3]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[3]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[4]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[4]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[5]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[5]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[6]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[6]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_10_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_11_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_4_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_5_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_6_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_7_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_8_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[7]_i_9_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[8]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[8]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[9]_i_1_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent[9]_i_2_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[15]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[15]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[15]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[15]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[15]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[15]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[15]_i_3_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[16]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[16]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[16]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[16]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[16]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[16]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[16]_i_3_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[23]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[23]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[23]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[23]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[23]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[23]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[23]_i_3_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[24]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[24]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[24]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[24]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[24]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[24]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[24]_i_3_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[31]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[31]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[31]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[31]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[31]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[31]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[31]_i_3_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[32]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[32]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[32]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[32]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[32]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[32]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[32]_i_3_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_4_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_4_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_4_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_4_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_4_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_4_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_5_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_5_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_5_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_5_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[39]_i_5_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[7]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[7]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[7]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[7]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[7]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[7]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[7]_i_3_n_7\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[8]_i_3_n_0\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[8]_i_3_n_1\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[8]_i_3_n_2\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[8]_i_3_n_3\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[8]_i_3_n_5\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[8]_i_3_n_6\ : STD_LOGIC;
  signal \countReadReqToBeSent_reg[8]_i_3_n_7\ : STD_LOGIC;
  signal current_cycles_with_no_data_read : STD_LOGIC_VECTOR ( 63 downto 0 );
  attribute DONT_TOUCH of current_cycles_with_no_data_read : signal is std.standard.true;
  signal \current_cycles_with_no_data_read[0]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[10]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[11]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[12]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[13]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[14]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[15]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[16]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[17]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[18]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[19]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[1]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[20]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[21]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[22]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[23]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[24]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[25]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[26]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[27]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[28]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[29]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[2]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[30]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[31]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[32]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[33]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[34]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[35]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[36]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[37]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[38]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[39]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[3]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[40]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[41]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[42]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[43]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[44]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[45]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[46]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[47]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[48]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[49]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[4]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[50]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[51]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[52]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[53]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[54]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[55]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[56]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[57]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[58]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[59]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[5]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[60]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[61]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[62]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[63]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[6]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[7]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[7]_i_3_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[8]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read[9]_i_1_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[15]_i_2_n_9\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[23]_i_2_n_9\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[31]_i_2_n_9\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[39]_i_2_n_9\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[47]_i_2_n_9\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[55]_i_2_n_9\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[63]_i_2_n_9\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_0\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_1\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_10\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_11\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_12\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_13\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_14\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_15\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_2\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_3\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_5\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_6\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_7\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_8\ : STD_LOGIC;
  signal \current_cycles_with_no_data_read_reg[7]_i_2_n_9\ : STD_LOGIC;
  signal dataBuffer_S1 : STD_LOGIC_VECTOR ( 127 downto 0 );
  signal dataBuffer_S2 : STD_LOGIC_VECTOR ( 127 downto 0 );
  signal \dataBuffer_S2[0]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[100]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[101]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[102]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[103]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[104]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[105]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[106]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[107]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[108]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[109]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[10]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[110]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[111]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[112]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[113]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[114]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[115]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[116]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[117]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[118]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[119]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[11]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[120]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[121]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[122]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[123]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[124]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[125]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[126]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[127]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[12]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[13]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[14]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[15]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[16]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[17]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[18]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[19]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[1]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[20]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[21]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[22]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[23]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[24]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[25]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[26]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[27]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[28]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[29]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[2]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[30]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[31]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[32]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[33]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[34]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[35]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[36]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[37]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[38]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[39]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[3]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[40]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[41]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[42]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[43]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[44]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[45]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[46]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[47]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[48]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[49]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[4]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[50]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[51]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[52]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[53]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[54]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[55]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[56]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[57]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[58]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[59]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[5]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[60]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[61]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[62]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[63]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[64]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[65]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[66]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[67]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[68]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[69]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[6]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[70]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[71]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[72]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[73]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[74]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[75]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[76]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[77]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[78]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[79]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[7]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[80]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[81]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[82]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[83]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[84]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[85]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[86]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[87]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[88]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[89]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[8]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[90]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[91]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[92]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[93]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[94]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[95]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[96]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[97]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[98]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[99]_i_1_n_0\ : STD_LOGIC;
  signal \dataBuffer_S2[9]_i_1_n_0\ : STD_LOGIC;
  signal data_read_in_this_test : STD_LOGIC;
  attribute DONT_TOUCH of data_read_in_this_test : signal is std.standard.true;
  signal data_read_in_this_test_i_1_n_0 : STD_LOGIC;
  signal data_read_in_this_test_i_2_n_0 : STD_LOGIC;
  signal \debug_axi_control_reg_n_0_\ : STD_LOGIC_VECTOR ( 31 downto 22 );
  signal \debug_axi_r_control_reg_n_0_\ : STD_LOGIC_VECTOR ( 31 downto 22 );
  signal latency : STD_LOGIC_VECTOR ( 63 downto 0 );
  attribute DONT_TOUCH of latency : signal is std.standard.true;
  signal \latency[15]_i_10_n_0\ : STD_LOGIC;
  signal \latency[15]_i_11_n_0\ : STD_LOGIC;
  signal \latency[15]_i_12_n_0\ : STD_LOGIC;
  signal \latency[15]_i_13_n_0\ : STD_LOGIC;
  signal \latency[15]_i_14_n_0\ : STD_LOGIC;
  signal \latency[15]_i_15_n_0\ : STD_LOGIC;
  signal \latency[15]_i_16_n_0\ : STD_LOGIC;
  signal \latency[15]_i_17_n_0\ : STD_LOGIC;
  signal \latency[15]_i_2_n_0\ : STD_LOGIC;
  signal \latency[15]_i_3_n_0\ : STD_LOGIC;
  signal \latency[15]_i_4_n_0\ : STD_LOGIC;
  signal \latency[15]_i_5_n_0\ : STD_LOGIC;
  signal \latency[15]_i_6_n_0\ : STD_LOGIC;
  signal \latency[15]_i_7_n_0\ : STD_LOGIC;
  signal \latency[15]_i_8_n_0\ : STD_LOGIC;
  signal \latency[15]_i_9_n_0\ : STD_LOGIC;
  signal \latency[23]_i_10_n_0\ : STD_LOGIC;
  signal \latency[23]_i_11_n_0\ : STD_LOGIC;
  signal \latency[23]_i_12_n_0\ : STD_LOGIC;
  signal \latency[23]_i_13_n_0\ : STD_LOGIC;
  signal \latency[23]_i_14_n_0\ : STD_LOGIC;
  signal \latency[23]_i_15_n_0\ : STD_LOGIC;
  signal \latency[23]_i_16_n_0\ : STD_LOGIC;
  signal \latency[23]_i_17_n_0\ : STD_LOGIC;
  signal \latency[23]_i_2_n_0\ : STD_LOGIC;
  signal \latency[23]_i_3_n_0\ : STD_LOGIC;
  signal \latency[23]_i_4_n_0\ : STD_LOGIC;
  signal \latency[23]_i_5_n_0\ : STD_LOGIC;
  signal \latency[23]_i_6_n_0\ : STD_LOGIC;
  signal \latency[23]_i_7_n_0\ : STD_LOGIC;
  signal \latency[23]_i_8_n_0\ : STD_LOGIC;
  signal \latency[23]_i_9_n_0\ : STD_LOGIC;
  signal \latency[31]_i_10_n_0\ : STD_LOGIC;
  signal \latency[31]_i_11_n_0\ : STD_LOGIC;
  signal \latency[31]_i_12_n_0\ : STD_LOGIC;
  signal \latency[31]_i_13_n_0\ : STD_LOGIC;
  signal \latency[31]_i_14_n_0\ : STD_LOGIC;
  signal \latency[31]_i_15_n_0\ : STD_LOGIC;
  signal \latency[31]_i_16_n_0\ : STD_LOGIC;
  signal \latency[31]_i_17_n_0\ : STD_LOGIC;
  signal \latency[31]_i_2_n_0\ : STD_LOGIC;
  signal \latency[31]_i_3_n_0\ : STD_LOGIC;
  signal \latency[31]_i_4_n_0\ : STD_LOGIC;
  signal \latency[31]_i_5_n_0\ : STD_LOGIC;
  signal \latency[31]_i_6_n_0\ : STD_LOGIC;
  signal \latency[31]_i_7_n_0\ : STD_LOGIC;
  signal \latency[31]_i_8_n_0\ : STD_LOGIC;
  signal \latency[31]_i_9_n_0\ : STD_LOGIC;
  signal \latency[39]_i_10_n_0\ : STD_LOGIC;
  signal \latency[39]_i_11_n_0\ : STD_LOGIC;
  signal \latency[39]_i_12_n_0\ : STD_LOGIC;
  signal \latency[39]_i_13_n_0\ : STD_LOGIC;
  signal \latency[39]_i_14_n_0\ : STD_LOGIC;
  signal \latency[39]_i_15_n_0\ : STD_LOGIC;
  signal \latency[39]_i_16_n_0\ : STD_LOGIC;
  signal \latency[39]_i_17_n_0\ : STD_LOGIC;
  signal \latency[39]_i_2_n_0\ : STD_LOGIC;
  signal \latency[39]_i_3_n_0\ : STD_LOGIC;
  signal \latency[39]_i_4_n_0\ : STD_LOGIC;
  signal \latency[39]_i_5_n_0\ : STD_LOGIC;
  signal \latency[39]_i_6_n_0\ : STD_LOGIC;
  signal \latency[39]_i_7_n_0\ : STD_LOGIC;
  signal \latency[39]_i_8_n_0\ : STD_LOGIC;
  signal \latency[39]_i_9_n_0\ : STD_LOGIC;
  signal \latency[47]_i_10_n_0\ : STD_LOGIC;
  signal \latency[47]_i_2_n_0\ : STD_LOGIC;
  signal \latency[47]_i_3_n_0\ : STD_LOGIC;
  signal \latency[47]_i_4_n_0\ : STD_LOGIC;
  signal \latency[47]_i_5_n_0\ : STD_LOGIC;
  signal \latency[47]_i_6_n_0\ : STD_LOGIC;
  signal \latency[47]_i_7_n_0\ : STD_LOGIC;
  signal \latency[47]_i_8_n_0\ : STD_LOGIC;
  signal \latency[47]_i_9_n_0\ : STD_LOGIC;
  signal \latency[55]_i_2_n_0\ : STD_LOGIC;
  signal \latency[55]_i_3_n_0\ : STD_LOGIC;
  signal \latency[55]_i_4_n_0\ : STD_LOGIC;
  signal \latency[55]_i_5_n_0\ : STD_LOGIC;
  signal \latency[55]_i_6_n_0\ : STD_LOGIC;
  signal \latency[55]_i_7_n_0\ : STD_LOGIC;
  signal \latency[55]_i_8_n_0\ : STD_LOGIC;
  signal \latency[55]_i_9_n_0\ : STD_LOGIC;
  signal \latency[63]_i_2_n_0\ : STD_LOGIC;
  signal \latency[63]_i_3_n_0\ : STD_LOGIC;
  signal \latency[63]_i_4_n_0\ : STD_LOGIC;
  signal \latency[63]_i_5_n_0\ : STD_LOGIC;
  signal \latency[63]_i_6_n_0\ : STD_LOGIC;
  signal \latency[63]_i_7_n_0\ : STD_LOGIC;
  signal \latency[63]_i_8_n_0\ : STD_LOGIC;
  signal \latency[63]_i_9_n_0\ : STD_LOGIC;
  signal \latency[7]_i_10_n_0\ : STD_LOGIC;
  signal \latency[7]_i_11_n_0\ : STD_LOGIC;
  signal \latency[7]_i_12_n_0\ : STD_LOGIC;
  signal \latency[7]_i_13_n_0\ : STD_LOGIC;
  signal \latency[7]_i_14_n_0\ : STD_LOGIC;
  signal \latency[7]_i_15_n_0\ : STD_LOGIC;
  signal \latency[7]_i_16_n_0\ : STD_LOGIC;
  signal \latency[7]_i_2_n_0\ : STD_LOGIC;
  signal \latency[7]_i_3_n_0\ : STD_LOGIC;
  signal \latency[7]_i_4_n_0\ : STD_LOGIC;
  signal \latency[7]_i_5_n_0\ : STD_LOGIC;
  signal \latency[7]_i_6_n_0\ : STD_LOGIC;
  signal \latency[7]_i_7_n_0\ : STD_LOGIC;
  signal \latency[7]_i_8_n_0\ : STD_LOGIC;
  signal \latency[7]_i_9_n_0\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_0\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[15]_i_1_n_9\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_0\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[23]_i_1_n_9\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_0\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[31]_i_1_n_9\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_0\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[39]_i_1_n_9\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_0\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[47]_i_1_n_9\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_0\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[55]_i_1_n_9\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[63]_i_1_n_9\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_0\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_1\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_10\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_11\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_12\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_13\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_14\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_15\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_2\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_3\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_5\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_6\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_7\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_8\ : STD_LOGIC;
  signal \latency_reg[7]_i_1_n_9\ : STD_LOGIC;
  signal \^m_ddr_axi_arsize[2]\ : STD_LOGIC_VECTOR ( 21 downto 0 );
  signal max_cycles_with_no_data_read : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \max_cycles_with_no_data_read[31]_i_10_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_11_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_12_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_13_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_14_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_15_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_16_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_17_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_18_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_19_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_20_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_21_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_23_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_24_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_25_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_26_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_27_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_28_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_29_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_30_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_31_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_32_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_33_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_34_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_35_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_36_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_37_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_38_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_40_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_41_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_42_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_43_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_44_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_45_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_46_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_47_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_48_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_49_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_50_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_51_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_52_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_53_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_54_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_55_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_56_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_57_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_58_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_59_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_60_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_61_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_62_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_63_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_64_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_65_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_66_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_67_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_68_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_69_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_6_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_70_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_71_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_7_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_8_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read[31]_i_9_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_22_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_22_n_1\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_22_n_2\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_22_n_3\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_22_n_5\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_22_n_6\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_22_n_7\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_39_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_39_n_1\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_39_n_2\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_39_n_3\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_39_n_5\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_39_n_6\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_39_n_7\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_4_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_4_n_1\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_4_n_2\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_4_n_3\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_4_n_5\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_4_n_6\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_4_n_7\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_5_n_0\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_5_n_1\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_5_n_2\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_5_n_3\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_5_n_5\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_5_n_6\ : STD_LOGIC;
  signal \max_cycles_with_no_data_read_reg[31]_i_5_n_7\ : STD_LOGIC;
  signal \p_1_in__0\ : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal read_blocking_ratio : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of read_blocking_ratio : signal is std.standard.true;
  signal \read_blocking_ratio__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal read_burst_size : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of read_burst_size : signal is std.standard.true;
  signal \read_burst_size__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal read_count : STD_LOGIC;
  signal \read_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[10]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[11]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[12]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[13]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[14]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[15]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[16]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[17]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[18]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[19]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[1]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[20]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[21]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[22]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[23]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[24]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[25]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[26]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[27]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[28]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[29]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[2]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[30]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_10_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_11_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_12_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_13_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_14_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_16_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_17_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_18_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_19_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_20_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_21_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_22_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_23_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_24_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_25_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_26_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_27_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_28_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_29_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_2_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_30_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_31_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_33_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_34_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_35_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_36_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_37_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_38_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_39_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_40_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_41_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_42_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_43_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_44_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_45_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_46_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_47_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_48_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_49_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_50_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_51_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_52_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_53_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_54_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_55_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_56_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_57_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_58_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_59_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_60_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_61_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_62_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_63_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_64_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_65_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_66_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_67_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_68_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_69_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_70_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_71_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_72_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_73_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_74_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_75_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_76_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_77_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_78_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_79_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_7_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_80_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_8_n_0\ : STD_LOGIC;
  signal \read_count[31]_i_9_n_0\ : STD_LOGIC;
  signal \read_count[3]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[4]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[5]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[6]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[7]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[8]_i_1_n_0\ : STD_LOGIC;
  signal \read_count[9]_i_1_n_0\ : STD_LOGIC;
  signal read_count_bursts_per_reset : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of read_count_bursts_per_reset : signal is std.standard.true;
  signal \read_count_bursts_per_reset__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \read_count_reg[16]_i_2_n_0\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_1\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_10\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_11\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_12\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_13\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_14\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_15\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_2\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_3\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_5\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_6\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_7\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_8\ : STD_LOGIC;
  signal \read_count_reg[16]_i_2_n_9\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_0\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_1\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_10\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_11\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_12\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_13\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_14\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_15\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_2\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_3\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_5\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_6\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_7\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_8\ : STD_LOGIC;
  signal \read_count_reg[24]_i_2_n_9\ : STD_LOGIC;
  signal \read_count_reg[31]_i_15_n_0\ : STD_LOGIC;
  signal \read_count_reg[31]_i_15_n_1\ : STD_LOGIC;
  signal \read_count_reg[31]_i_15_n_2\ : STD_LOGIC;
  signal \read_count_reg[31]_i_15_n_3\ : STD_LOGIC;
  signal \read_count_reg[31]_i_15_n_5\ : STD_LOGIC;
  signal \read_count_reg[31]_i_15_n_6\ : STD_LOGIC;
  signal \read_count_reg[31]_i_15_n_7\ : STD_LOGIC;
  signal \read_count_reg[31]_i_32_n_0\ : STD_LOGIC;
  signal \read_count_reg[31]_i_32_n_1\ : STD_LOGIC;
  signal \read_count_reg[31]_i_32_n_2\ : STD_LOGIC;
  signal \read_count_reg[31]_i_32_n_3\ : STD_LOGIC;
  signal \read_count_reg[31]_i_32_n_5\ : STD_LOGIC;
  signal \read_count_reg[31]_i_32_n_6\ : STD_LOGIC;
  signal \read_count_reg[31]_i_32_n_7\ : STD_LOGIC;
  signal \read_count_reg[31]_i_3_n_5\ : STD_LOGIC;
  signal \read_count_reg[31]_i_3_n_6\ : STD_LOGIC;
  signal \read_count_reg[31]_i_3_n_7\ : STD_LOGIC;
  signal \read_count_reg[31]_i_4_n_0\ : STD_LOGIC;
  signal \read_count_reg[31]_i_4_n_1\ : STD_LOGIC;
  signal \read_count_reg[31]_i_4_n_2\ : STD_LOGIC;
  signal \read_count_reg[31]_i_4_n_3\ : STD_LOGIC;
  signal \read_count_reg[31]_i_4_n_5\ : STD_LOGIC;
  signal \read_count_reg[31]_i_4_n_6\ : STD_LOGIC;
  signal \read_count_reg[31]_i_4_n_7\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_10\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_11\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_12\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_13\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_14\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_15\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_2\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_3\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_5\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_6\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_7\ : STD_LOGIC;
  signal \read_count_reg[31]_i_5_n_9\ : STD_LOGIC;
  signal \read_count_reg[31]_i_6_n_0\ : STD_LOGIC;
  signal \read_count_reg[31]_i_6_n_1\ : STD_LOGIC;
  signal \read_count_reg[31]_i_6_n_2\ : STD_LOGIC;
  signal \read_count_reg[31]_i_6_n_3\ : STD_LOGIC;
  signal \read_count_reg[31]_i_6_n_5\ : STD_LOGIC;
  signal \read_count_reg[31]_i_6_n_6\ : STD_LOGIC;
  signal \read_count_reg[31]_i_6_n_7\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_1\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_10\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_11\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_12\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_13\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_14\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_15\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_2\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_3\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_5\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_6\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_7\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_8\ : STD_LOGIC;
  signal \read_count_reg[8]_i_2_n_9\ : STD_LOGIC;
  signal \read_count_reg_n_0_\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal read_max_queue_size : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of read_max_queue_size : signal is std.standard.true;
  signal \read_max_queue_size__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal read_start_DDR_address : STD_LOGIC_VECTOR ( 63 downto 0 );
  attribute DONT_TOUCH of read_start_DDR_address : signal is std.standard.true;
  signal \read_start_DDR_address__0\ : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal read_step_DDR_address : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of read_step_DDR_address : signal is std.standard.true;
  signal \read_step_DDR_address__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal read_ticks : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal read_ticks2 : STD_LOGIC_VECTOR ( 31 downto 1 );
  signal read_ticks20_out : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \read_ticks[0]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[0]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[10]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[10]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[11]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[11]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[12]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[12]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[13]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[13]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[14]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[14]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[15]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[15]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[16]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[16]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[17]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[17]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[18]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[18]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[19]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[19]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[1]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[1]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[20]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[20]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[21]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[21]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[22]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[22]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[23]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[23]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[24]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[24]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[25]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[25]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[26]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[26]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[27]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[27]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[28]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[28]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[29]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[29]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[2]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[2]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[30]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[30]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_100_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_101_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_102_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_103_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_104_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_105_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_106_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_107_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_108_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_109_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_10_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_110_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_111_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_112_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_113_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_114_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_115_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_116_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_117_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_118_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_119_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_120_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_121_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_12_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_13_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_14_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_15_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_16_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_17_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_18_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_19_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_20_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_21_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_22_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_23_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_24_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_25_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_26_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_27_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_29_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_30_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_31_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_32_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_33_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_34_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_35_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_36_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_37_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_38_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_39_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_40_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_41_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_42_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_43_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_44_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_46_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_47_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_48_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_49_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_50_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_51_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_52_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_53_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_54_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_55_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_56_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_57_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_58_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_59_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_60_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_61_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_62_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_63_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_64_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_65_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_66_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_67_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_68_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_69_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_70_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_71_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_72_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_73_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_74_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_75_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_76_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_77_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_7_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_80_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_81_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_82_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_83_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_84_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_85_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_86_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_87_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_8_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_90_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_91_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_92_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_93_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_94_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_95_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_96_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_97_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_98_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_99_n_0\ : STD_LOGIC;
  signal \read_ticks[31]_i_9_n_0\ : STD_LOGIC;
  signal \read_ticks[3]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[3]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[4]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[4]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[5]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[5]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[6]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[6]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[7]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[7]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[8]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[8]_i_2_n_0\ : STD_LOGIC;
  signal \read_ticks[9]_i_1_n_0\ : STD_LOGIC;
  signal \read_ticks[9]_i_2_n_0\ : STD_LOGIC;
  signal read_ticks_per_burst : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of read_ticks_per_burst : signal is std.standard.true;
  signal \read_ticks_per_burst__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \read_ticks_reg[16]_i_3_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[16]_i_3_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[16]_i_3_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[16]_i_3_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[16]_i_3_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[16]_i_3_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[16]_i_3_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[24]_i_3_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[24]_i_3_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[24]_i_3_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[24]_i_3_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[24]_i_3_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[24]_i_3_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[24]_i_3_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_11_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_11_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_11_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_11_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_11_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_11_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_11_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_28_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_28_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_28_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_28_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_28_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_28_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_28_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_3_n_4\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_3_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_3_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_3_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_45_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_45_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_45_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_45_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_45_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_45_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_4_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_4_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_4_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_4_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_4_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_4_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_4_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_5_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_5_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_5_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_5_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_5_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_6_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_6_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_6_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_6_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_6_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_6_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_6_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_78_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_78_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_78_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_78_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_78_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_78_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_78_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_79_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_79_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_79_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_79_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_79_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_79_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_79_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_88_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_88_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_88_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_88_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_88_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_88_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_88_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_89_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_89_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_89_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_89_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_89_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_89_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[31]_i_89_n_7\ : STD_LOGIC;
  signal \read_ticks_reg[8]_i_3_n_0\ : STD_LOGIC;
  signal \read_ticks_reg[8]_i_3_n_1\ : STD_LOGIC;
  signal \read_ticks_reg[8]_i_3_n_2\ : STD_LOGIC;
  signal \read_ticks_reg[8]_i_3_n_3\ : STD_LOGIC;
  signal \read_ticks_reg[8]_i_3_n_5\ : STD_LOGIC;
  signal \read_ticks_reg[8]_i_3_n_6\ : STD_LOGIC;
  signal \read_ticks_reg[8]_i_3_n_7\ : STD_LOGIC;
  signal reset_cmd : STD_LOGIC;
  attribute DONT_TOUCH of reset_cmd : signal is std.standard.true;
  signal runtime : STD_LOGIC_VECTOR ( 63 downto 0 );
  attribute DONT_TOUCH of runtime : signal is std.standard.true;
  signal runtime0 : STD_LOGIC_VECTOR ( 63 downto 1 );
  signal \runtime[63]_i_1_n_0\ : STD_LOGIC;
  signal \runtime[63]_i_3_n_0\ : STD_LOGIC;
  signal \runtime_reg[16]_i_2_n_0\ : STD_LOGIC;
  signal \runtime_reg[16]_i_2_n_1\ : STD_LOGIC;
  signal \runtime_reg[16]_i_2_n_2\ : STD_LOGIC;
  signal \runtime_reg[16]_i_2_n_3\ : STD_LOGIC;
  signal \runtime_reg[16]_i_2_n_5\ : STD_LOGIC;
  signal \runtime_reg[16]_i_2_n_6\ : STD_LOGIC;
  signal \runtime_reg[16]_i_2_n_7\ : STD_LOGIC;
  signal \runtime_reg[24]_i_2_n_0\ : STD_LOGIC;
  signal \runtime_reg[24]_i_2_n_1\ : STD_LOGIC;
  signal \runtime_reg[24]_i_2_n_2\ : STD_LOGIC;
  signal \runtime_reg[24]_i_2_n_3\ : STD_LOGIC;
  signal \runtime_reg[24]_i_2_n_5\ : STD_LOGIC;
  signal \runtime_reg[24]_i_2_n_6\ : STD_LOGIC;
  signal \runtime_reg[24]_i_2_n_7\ : STD_LOGIC;
  signal \runtime_reg[32]_i_2_n_0\ : STD_LOGIC;
  signal \runtime_reg[32]_i_2_n_1\ : STD_LOGIC;
  signal \runtime_reg[32]_i_2_n_2\ : STD_LOGIC;
  signal \runtime_reg[32]_i_2_n_3\ : STD_LOGIC;
  signal \runtime_reg[32]_i_2_n_5\ : STD_LOGIC;
  signal \runtime_reg[32]_i_2_n_6\ : STD_LOGIC;
  signal \runtime_reg[32]_i_2_n_7\ : STD_LOGIC;
  signal \runtime_reg[40]_i_2_n_0\ : STD_LOGIC;
  signal \runtime_reg[40]_i_2_n_1\ : STD_LOGIC;
  signal \runtime_reg[40]_i_2_n_2\ : STD_LOGIC;
  signal \runtime_reg[40]_i_2_n_3\ : STD_LOGIC;
  signal \runtime_reg[40]_i_2_n_5\ : STD_LOGIC;
  signal \runtime_reg[40]_i_2_n_6\ : STD_LOGIC;
  signal \runtime_reg[40]_i_2_n_7\ : STD_LOGIC;
  signal \runtime_reg[48]_i_2_n_0\ : STD_LOGIC;
  signal \runtime_reg[48]_i_2_n_1\ : STD_LOGIC;
  signal \runtime_reg[48]_i_2_n_2\ : STD_LOGIC;
  signal \runtime_reg[48]_i_2_n_3\ : STD_LOGIC;
  signal \runtime_reg[48]_i_2_n_5\ : STD_LOGIC;
  signal \runtime_reg[48]_i_2_n_6\ : STD_LOGIC;
  signal \runtime_reg[48]_i_2_n_7\ : STD_LOGIC;
  signal \runtime_reg[56]_i_2_n_0\ : STD_LOGIC;
  signal \runtime_reg[56]_i_2_n_1\ : STD_LOGIC;
  signal \runtime_reg[56]_i_2_n_2\ : STD_LOGIC;
  signal \runtime_reg[56]_i_2_n_3\ : STD_LOGIC;
  signal \runtime_reg[56]_i_2_n_5\ : STD_LOGIC;
  signal \runtime_reg[56]_i_2_n_6\ : STD_LOGIC;
  signal \runtime_reg[56]_i_2_n_7\ : STD_LOGIC;
  signal \runtime_reg[63]_i_4_n_2\ : STD_LOGIC;
  signal \runtime_reg[63]_i_4_n_3\ : STD_LOGIC;
  signal \runtime_reg[63]_i_4_n_5\ : STD_LOGIC;
  signal \runtime_reg[63]_i_4_n_6\ : STD_LOGIC;
  signal \runtime_reg[63]_i_4_n_7\ : STD_LOGIC;
  signal \runtime_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \runtime_reg[8]_i_2_n_1\ : STD_LOGIC;
  signal \runtime_reg[8]_i_2_n_2\ : STD_LOGIC;
  signal \runtime_reg[8]_i_2_n_3\ : STD_LOGIC;
  signal \runtime_reg[8]_i_2_n_5\ : STD_LOGIC;
  signal \runtime_reg[8]_i_2_n_6\ : STD_LOGIC;
  signal \runtime_reg[8]_i_2_n_7\ : STD_LOGIC;
  signal sactn_n_1 : STD_LOGIC;
  signal sactn_n_10 : STD_LOGIC;
  signal sactn_n_11 : STD_LOGIC;
  signal sactn_n_12 : STD_LOGIC;
  signal sactn_n_13 : STD_LOGIC;
  signal sactn_n_14 : STD_LOGIC;
  signal sactn_n_15 : STD_LOGIC;
  signal sactn_n_16 : STD_LOGIC;
  signal sactn_n_17 : STD_LOGIC;
  signal sactn_n_18 : STD_LOGIC;
  signal sactn_n_19 : STD_LOGIC;
  signal sactn_n_20 : STD_LOGIC;
  signal sactn_n_21 : STD_LOGIC;
  signal sactn_n_22 : STD_LOGIC;
  signal sactn_n_23 : STD_LOGIC;
  signal sactn_n_24 : STD_LOGIC;
  signal sactn_n_25 : STD_LOGIC;
  signal sactn_n_26 : STD_LOGIC;
  signal sactn_n_264 : STD_LOGIC;
  signal sactn_n_265 : STD_LOGIC;
  signal sactn_n_266 : STD_LOGIC;
  signal sactn_n_267 : STD_LOGIC;
  signal sactn_n_268 : STD_LOGIC;
  signal sactn_n_269 : STD_LOGIC;
  signal sactn_n_27 : STD_LOGIC;
  signal sactn_n_270 : STD_LOGIC;
  signal sactn_n_271 : STD_LOGIC;
  signal sactn_n_272 : STD_LOGIC;
  signal sactn_n_273 : STD_LOGIC;
  signal sactn_n_274 : STD_LOGIC;
  signal sactn_n_275 : STD_LOGIC;
  signal sactn_n_276 : STD_LOGIC;
  signal sactn_n_277 : STD_LOGIC;
  signal sactn_n_278 : STD_LOGIC;
  signal sactn_n_279 : STD_LOGIC;
  signal sactn_n_28 : STD_LOGIC;
  signal sactn_n_280 : STD_LOGIC;
  signal sactn_n_281 : STD_LOGIC;
  signal sactn_n_282 : STD_LOGIC;
  signal sactn_n_283 : STD_LOGIC;
  signal sactn_n_284 : STD_LOGIC;
  signal sactn_n_285 : STD_LOGIC;
  signal sactn_n_286 : STD_LOGIC;
  signal sactn_n_287 : STD_LOGIC;
  signal sactn_n_288 : STD_LOGIC;
  signal sactn_n_289 : STD_LOGIC;
  signal sactn_n_29 : STD_LOGIC;
  signal sactn_n_290 : STD_LOGIC;
  signal sactn_n_291 : STD_LOGIC;
  signal sactn_n_292 : STD_LOGIC;
  signal sactn_n_293 : STD_LOGIC;
  signal sactn_n_294 : STD_LOGIC;
  signal sactn_n_295 : STD_LOGIC;
  signal sactn_n_3 : STD_LOGIC;
  signal sactn_n_30 : STD_LOGIC;
  signal sactn_n_31 : STD_LOGIC;
  signal sactn_n_32 : STD_LOGIC;
  signal sactn_n_33 : STD_LOGIC;
  signal sactn_n_34 : STD_LOGIC;
  signal sactn_n_35 : STD_LOGIC;
  signal sactn_n_36 : STD_LOGIC;
  signal sactn_n_37 : STD_LOGIC;
  signal sactn_n_38 : STD_LOGIC;
  signal sactn_n_39 : STD_LOGIC;
  signal sactn_n_4 : STD_LOGIC;
  signal sactn_n_40 : STD_LOGIC;
  signal sactn_n_41 : STD_LOGIC;
  signal sactn_n_42 : STD_LOGIC;
  signal sactn_n_43 : STD_LOGIC;
  signal sactn_n_44 : STD_LOGIC;
  signal sactn_n_45 : STD_LOGIC;
  signal sactn_n_46 : STD_LOGIC;
  signal sactn_n_47 : STD_LOGIC;
  signal sactn_n_48 : STD_LOGIC;
  signal sactn_n_49 : STD_LOGIC;
  signal sactn_n_5 : STD_LOGIC;
  signal sactn_n_50 : STD_LOGIC;
  signal sactn_n_51 : STD_LOGIC;
  signal sactn_n_52 : STD_LOGIC;
  signal sactn_n_53 : STD_LOGIC;
  signal sactn_n_54 : STD_LOGIC;
  signal sactn_n_55 : STD_LOGIC;
  signal sactn_n_56 : STD_LOGIC;
  signal sactn_n_57 : STD_LOGIC;
  signal sactn_n_58 : STD_LOGIC;
  signal sactn_n_587 : STD_LOGIC;
  signal sactn_n_588 : STD_LOGIC;
  signal sactn_n_589 : STD_LOGIC;
  signal sactn_n_59 : STD_LOGIC;
  signal sactn_n_590 : STD_LOGIC;
  signal sactn_n_591 : STD_LOGIC;
  signal sactn_n_592 : STD_LOGIC;
  signal sactn_n_593 : STD_LOGIC;
  signal sactn_n_594 : STD_LOGIC;
  signal sactn_n_595 : STD_LOGIC;
  signal sactn_n_596 : STD_LOGIC;
  signal sactn_n_597 : STD_LOGIC;
  signal sactn_n_598 : STD_LOGIC;
  signal sactn_n_599 : STD_LOGIC;
  signal sactn_n_6 : STD_LOGIC;
  signal sactn_n_60 : STD_LOGIC;
  signal sactn_n_600 : STD_LOGIC;
  signal sactn_n_601 : STD_LOGIC;
  signal sactn_n_602 : STD_LOGIC;
  signal sactn_n_603 : STD_LOGIC;
  signal sactn_n_604 : STD_LOGIC;
  signal sactn_n_605 : STD_LOGIC;
  signal sactn_n_606 : STD_LOGIC;
  signal sactn_n_607 : STD_LOGIC;
  signal sactn_n_608 : STD_LOGIC;
  signal sactn_n_609 : STD_LOGIC;
  signal sactn_n_61 : STD_LOGIC;
  signal sactn_n_610 : STD_LOGIC;
  signal sactn_n_611 : STD_LOGIC;
  signal sactn_n_612 : STD_LOGIC;
  signal sactn_n_613 : STD_LOGIC;
  signal sactn_n_614 : STD_LOGIC;
  signal sactn_n_615 : STD_LOGIC;
  signal sactn_n_616 : STD_LOGIC;
  signal sactn_n_617 : STD_LOGIC;
  signal sactn_n_618 : STD_LOGIC;
  signal sactn_n_62 : STD_LOGIC;
  signal sactn_n_63 : STD_LOGIC;
  signal sactn_n_64 : STD_LOGIC;
  signal sactn_n_65 : STD_LOGIC;
  signal sactn_n_66 : STD_LOGIC;
  signal sactn_n_67 : STD_LOGIC;
  signal sactn_n_68 : STD_LOGIC;
  signal sactn_n_69 : STD_LOGIC;
  signal sactn_n_7 : STD_LOGIC;
  signal sactn_n_70 : STD_LOGIC;
  signal sactn_n_71 : STD_LOGIC;
  signal sactn_n_8 : STD_LOGIC;
  signal sactn_n_9 : STD_LOGIC;
  signal \^toreaddataaddress\ : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal \toReadDataAddress[0]_i_10_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_11_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_12_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_13_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_14_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_15_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_16_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_17_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[0]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_10_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_11_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_12_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_13_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_14_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_15_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_16_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_17_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[16]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_10_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_11_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_12_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_13_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_14_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_15_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_16_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_17_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[24]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[32]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[40]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[48]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[56]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_10_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_11_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_12_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_13_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_14_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_15_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_16_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_17_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_3_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_4_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_5_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_6_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_7_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_8_n_0\ : STD_LOGIC;
  signal \toReadDataAddress[8]_i_9_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[0]_i_1_n_9\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[16]_i_1_n_9\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[24]_i_1_n_9\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[32]_i_1_n_9\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[40]_i_1_n_9\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[48]_i_1_n_9\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[56]_i_1_n_9\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_10\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_11\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_12\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_13\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_14\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_15\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_8\ : STD_LOGIC;
  signal \toReadDataAddress_reg[8]_i_1_n_9\ : STD_LOGIC;
  signal toReadDataSize0 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \toReadDataSize[1]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataSize[2]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataSize[3]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataSize[4]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataSize[5]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataSize[6]_i_1_n_0\ : STD_LOGIC;
  signal \toReadDataSize[7]_i_2_n_0\ : STD_LOGIC;
  signal \toReadDataSize[7]_i_3_n_0\ : STD_LOGIC;
  signal \^writeaddress\ : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal \writeAddress[0]_i_10_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_11_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_12_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_13_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_14_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_15_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_16_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_17_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_18_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[0]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_10_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_11_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_12_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_13_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_14_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_15_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_16_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_17_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[16]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_10_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_11_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_12_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_13_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_14_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_15_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_16_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_17_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[24]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[32]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[40]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[48]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[56]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_10_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_11_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_12_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_13_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_14_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_15_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_16_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_17_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_3_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_4_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_5_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_6_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_7_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_8_n_0\ : STD_LOGIC;
  signal \writeAddress[8]_i_9_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[0]_i_2_n_9\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[16]_i_1_n_9\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[24]_i_1_n_9\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[32]_i_1_n_9\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[40]_i_1_n_9\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[48]_i_1_n_9\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[56]_i_1_n_9\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_0\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_1\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_10\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_11\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_12\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_13\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_14\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_15\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_2\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_3\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_5\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_6\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_7\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_8\ : STD_LOGIC;
  signal \writeAddress_reg[8]_i_1_n_9\ : STD_LOGIC;
  signal writeAsize0 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \writeAsize[1]_i_1_n_0\ : STD_LOGIC;
  signal \writeAsize[2]_i_1_n_0\ : STD_LOGIC;
  signal \writeAsize[3]_i_1_n_0\ : STD_LOGIC;
  signal \writeAsize[4]_i_1_n_0\ : STD_LOGIC;
  signal \writeAsize[5]_i_1_n_0\ : STD_LOGIC;
  signal \writeAsize[6]_i_1_n_0\ : STD_LOGIC;
  signal \writeAsize[7]_i_1_n_0\ : STD_LOGIC;
  signal \writeAsize[7]_i_2_n_0\ : STD_LOGIC;
  signal \^writedvalid0\ : STD_LOGIC;
  signal writeDvalid_i_10_n_0 : STD_LOGIC;
  signal writeDvalid_i_12_n_0 : STD_LOGIC;
  signal writeDvalid_i_13_n_0 : STD_LOGIC;
  signal writeDvalid_i_14_n_0 : STD_LOGIC;
  signal writeDvalid_i_15_n_0 : STD_LOGIC;
  signal writeDvalid_i_16_n_0 : STD_LOGIC;
  signal writeDvalid_i_17_n_0 : STD_LOGIC;
  signal writeDvalid_i_18_n_0 : STD_LOGIC;
  signal writeDvalid_i_19_n_0 : STD_LOGIC;
  signal writeDvalid_i_20_n_0 : STD_LOGIC;
  signal writeDvalid_i_21_n_0 : STD_LOGIC;
  signal writeDvalid_i_22_n_0 : STD_LOGIC;
  signal writeDvalid_i_23_n_0 : STD_LOGIC;
  signal writeDvalid_i_24_n_0 : STD_LOGIC;
  signal writeDvalid_i_25_n_0 : STD_LOGIC;
  signal writeDvalid_i_26_n_0 : STD_LOGIC;
  signal writeDvalid_i_27_n_0 : STD_LOGIC;
  signal writeDvalid_i_28_n_0 : STD_LOGIC;
  signal writeDvalid_i_29_n_0 : STD_LOGIC;
  signal writeDvalid_i_30_n_0 : STD_LOGIC;
  signal writeDvalid_i_31_n_0 : STD_LOGIC;
  signal writeDvalid_i_32_n_0 : STD_LOGIC;
  signal writeDvalid_i_33_n_0 : STD_LOGIC;
  signal writeDvalid_i_34_n_0 : STD_LOGIC;
  signal writeDvalid_i_35_n_0 : STD_LOGIC;
  signal writeDvalid_i_36_n_0 : STD_LOGIC;
  signal writeDvalid_i_37_n_0 : STD_LOGIC;
  signal writeDvalid_i_38_n_0 : STD_LOGIC;
  signal writeDvalid_i_39_n_0 : STD_LOGIC;
  signal writeDvalid_i_3_n_0 : STD_LOGIC;
  signal writeDvalid_i_40_n_0 : STD_LOGIC;
  signal writeDvalid_i_41_n_0 : STD_LOGIC;
  signal writeDvalid_i_42_n_0 : STD_LOGIC;
  signal writeDvalid_i_43_n_0 : STD_LOGIC;
  signal writeDvalid_i_4_n_0 : STD_LOGIC;
  signal writeDvalid_i_5_n_0 : STD_LOGIC;
  signal writeDvalid_i_6_n_0 : STD_LOGIC;
  signal writeDvalid_i_7_n_0 : STD_LOGIC;
  signal writeDvalid_i_8_n_0 : STD_LOGIC;
  signal writeDvalid_i_9_n_0 : STD_LOGIC;
  signal writeDvalid_reg_i_11_n_0 : STD_LOGIC;
  signal writeDvalid_reg_i_11_n_1 : STD_LOGIC;
  signal writeDvalid_reg_i_11_n_2 : STD_LOGIC;
  signal writeDvalid_reg_i_11_n_3 : STD_LOGIC;
  signal writeDvalid_reg_i_11_n_5 : STD_LOGIC;
  signal writeDvalid_reg_i_11_n_6 : STD_LOGIC;
  signal writeDvalid_reg_i_11_n_7 : STD_LOGIC;
  signal writeDvalid_reg_i_1_n_5 : STD_LOGIC;
  signal writeDvalid_reg_i_1_n_6 : STD_LOGIC;
  signal writeDvalid_reg_i_1_n_7 : STD_LOGIC;
  signal writeDvalid_reg_i_2_n_0 : STD_LOGIC;
  signal writeDvalid_reg_i_2_n_1 : STD_LOGIC;
  signal writeDvalid_reg_i_2_n_2 : STD_LOGIC;
  signal writeDvalid_reg_i_2_n_3 : STD_LOGIC;
  signal writeDvalid_reg_i_2_n_5 : STD_LOGIC;
  signal writeDvalid_reg_i_2_n_6 : STD_LOGIC;
  signal writeDvalid_reg_i_2_n_7 : STD_LOGIC;
  signal write_blocking_ratio : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of write_blocking_ratio : signal is std.standard.true;
  signal \write_blocking_ratio__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal write_burst_size : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of write_burst_size : signal is std.standard.true;
  signal \write_burst_size__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \write_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[10]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[11]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[12]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[13]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[14]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[15]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[16]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[17]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[18]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[19]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[1]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[20]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[21]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[22]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[23]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[24]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[25]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[26]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[27]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[28]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[29]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[2]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[30]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_10_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_11_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_12_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_13_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_14_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_15_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_16_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_17_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_18_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_19_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_20_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_21_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_22_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_23_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_24_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_25_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_26_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_27_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_28_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_29_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_30_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_31_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_32_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_33_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_34_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_35_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_36_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_5_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_6_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_7_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_8_n_0\ : STD_LOGIC;
  signal \write_count[31]_i_9_n_0\ : STD_LOGIC;
  signal \write_count[3]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[4]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[5]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[6]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[7]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[8]_i_1_n_0\ : STD_LOGIC;
  signal \write_count[9]_i_1_n_0\ : STD_LOGIC;
  signal write_count_bursts_per_reset : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of write_count_bursts_per_reset : signal is std.standard.true;
  signal \write_count_bursts_per_reset__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal write_count_for_last : STD_LOGIC;
  signal \write_count_for_last[0]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[10]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[11]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[12]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[13]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[14]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[15]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[16]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[17]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[18]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[19]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[1]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[20]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[21]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[22]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[23]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[24]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[25]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[26]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[27]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[28]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[29]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[2]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[30]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_10_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_11_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_12_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_13_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_14_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_15_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_16_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_6_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_7_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_8_n_0\ : STD_LOGIC;
  signal \write_count_for_last[31]_i_9_n_0\ : STD_LOGIC;
  signal \write_count_for_last[3]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[4]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[5]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[6]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[7]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[8]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last[9]_i_1_n_0\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_1\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_10\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_11\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_12\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_13\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_14\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_15\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_2\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_3\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_5\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_6\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_7\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_8\ : STD_LOGIC;
  signal \write_count_for_last_reg[16]_i_2_n_9\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_1\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_10\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_11\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_12\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_13\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_14\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_15\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_2\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_3\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_5\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_6\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_7\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_8\ : STD_LOGIC;
  signal \write_count_for_last_reg[24]_i_2_n_9\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_3_n_6\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_3_n_7\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_10\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_11\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_12\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_13\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_14\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_15\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_2\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_3\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_5\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_6\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_7\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_4_n_9\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_5_n_0\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_5_n_1\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_5_n_2\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_5_n_3\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_5_n_5\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_5_n_6\ : STD_LOGIC;
  signal \write_count_for_last_reg[31]_i_5_n_7\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_1\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_10\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_11\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_12\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_13\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_14\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_15\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_2\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_3\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_5\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_6\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_7\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_8\ : STD_LOGIC;
  signal \write_count_for_last_reg[8]_i_2_n_9\ : STD_LOGIC;
  signal \write_count_for_last_reg_n_0_\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \write_count_reg[16]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_1\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_10\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_11\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_12\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_13\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_14\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_15\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_2\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_3\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_5\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_6\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_7\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_8\ : STD_LOGIC;
  signal \write_count_reg[16]_i_2_n_9\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_1\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_10\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_11\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_12\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_13\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_14\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_15\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_2\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_3\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_5\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_6\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_7\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_8\ : STD_LOGIC;
  signal \write_count_reg[24]_i_2_n_9\ : STD_LOGIC;
  signal \write_count_reg[31]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_reg[31]_i_2_n_1\ : STD_LOGIC;
  signal \write_count_reg[31]_i_2_n_2\ : STD_LOGIC;
  signal \write_count_reg[31]_i_2_n_3\ : STD_LOGIC;
  signal \write_count_reg[31]_i_2_n_5\ : STD_LOGIC;
  signal \write_count_reg[31]_i_2_n_6\ : STD_LOGIC;
  signal \write_count_reg[31]_i_2_n_7\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_10\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_11\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_12\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_13\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_14\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_15\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_2\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_3\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_5\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_6\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_7\ : STD_LOGIC;
  signal \write_count_reg[31]_i_3_n_9\ : STD_LOGIC;
  signal \write_count_reg[31]_i_4_n_0\ : STD_LOGIC;
  signal \write_count_reg[31]_i_4_n_1\ : STD_LOGIC;
  signal \write_count_reg[31]_i_4_n_2\ : STD_LOGIC;
  signal \write_count_reg[31]_i_4_n_3\ : STD_LOGIC;
  signal \write_count_reg[31]_i_4_n_5\ : STD_LOGIC;
  signal \write_count_reg[31]_i_4_n_6\ : STD_LOGIC;
  signal \write_count_reg[31]_i_4_n_7\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_0\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_1\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_10\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_11\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_12\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_13\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_14\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_15\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_2\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_3\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_5\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_6\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_7\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_8\ : STD_LOGIC;
  signal \write_count_reg[8]_i_2_n_9\ : STD_LOGIC;
  signal \write_count_reg_n_0_\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal write_max_queue_size : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of write_max_queue_size : signal is std.standard.true;
  signal \write_max_queue_size__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal write_start_DDR_address : STD_LOGIC_VECTOR ( 63 downto 0 );
  attribute DONT_TOUCH of write_start_DDR_address : signal is std.standard.true;
  signal \write_start_DDR_address__0\ : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal write_step_DDR_address : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of write_step_DDR_address : signal is std.standard.true;
  signal \write_step_DDR_address__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal write_ticks : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal write_ticks1 : STD_LOGIC;
  signal write_ticks2 : STD_LOGIC_VECTOR ( 31 downto 1 );
  signal write_ticks21_out : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal write_ticks22_out : STD_LOGIC_VECTOR ( 39 downto 0 );
  signal \write_ticks[0]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[0]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[10]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[10]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[11]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[11]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[12]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[12]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[13]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[13]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[14]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[14]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[15]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[15]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[16]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[16]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[17]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[17]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[18]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[18]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[19]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[19]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[1]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[1]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[20]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[20]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[21]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[21]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[22]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[22]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[23]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[23]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[24]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[24]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[25]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[25]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[26]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[26]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[27]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[27]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[28]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[28]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[29]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[29]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[2]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[2]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[30]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[30]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[31]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[31]_i_3_n_0\ : STD_LOGIC;
  signal \write_ticks[3]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[3]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[4]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[4]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[5]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[5]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[6]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[6]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[7]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[7]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[8]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[8]_i_2_n_0\ : STD_LOGIC;
  signal \write_ticks[9]_i_1_n_0\ : STD_LOGIC;
  signal \write_ticks[9]_i_2_n_0\ : STD_LOGIC;
  signal write_ticks_per_burst : STD_LOGIC_VECTOR ( 31 downto 0 );
  attribute DONT_TOUCH of write_ticks_per_burst : signal is std.standard.true;
  signal \write_ticks_per_burst__0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \write_ticks_reg[16]_i_3_n_0\ : STD_LOGIC;
  signal \write_ticks_reg[16]_i_3_n_1\ : STD_LOGIC;
  signal \write_ticks_reg[16]_i_3_n_2\ : STD_LOGIC;
  signal \write_ticks_reg[16]_i_3_n_3\ : STD_LOGIC;
  signal \write_ticks_reg[16]_i_3_n_5\ : STD_LOGIC;
  signal \write_ticks_reg[16]_i_3_n_6\ : STD_LOGIC;
  signal \write_ticks_reg[16]_i_3_n_7\ : STD_LOGIC;
  signal \write_ticks_reg[24]_i_3_n_0\ : STD_LOGIC;
  signal \write_ticks_reg[24]_i_3_n_1\ : STD_LOGIC;
  signal \write_ticks_reg[24]_i_3_n_2\ : STD_LOGIC;
  signal \write_ticks_reg[24]_i_3_n_3\ : STD_LOGIC;
  signal \write_ticks_reg[24]_i_3_n_5\ : STD_LOGIC;
  signal \write_ticks_reg[24]_i_3_n_6\ : STD_LOGIC;
  signal \write_ticks_reg[24]_i_3_n_7\ : STD_LOGIC;
  signal \write_ticks_reg[31]_i_4_n_2\ : STD_LOGIC;
  signal \write_ticks_reg[31]_i_4_n_3\ : STD_LOGIC;
  signal \write_ticks_reg[31]_i_4_n_5\ : STD_LOGIC;
  signal \write_ticks_reg[31]_i_4_n_6\ : STD_LOGIC;
  signal \write_ticks_reg[31]_i_4_n_7\ : STD_LOGIC;
  signal \write_ticks_reg[8]_i_3_n_0\ : STD_LOGIC;
  signal \write_ticks_reg[8]_i_3_n_1\ : STD_LOGIC;
  signal \write_ticks_reg[8]_i_3_n_2\ : STD_LOGIC;
  signal \write_ticks_reg[8]_i_3_n_3\ : STD_LOGIC;
  signal \write_ticks_reg[8]_i_3_n_5\ : STD_LOGIC;
  signal \write_ticks_reg[8]_i_3_n_6\ : STD_LOGIC;
  signal \write_ticks_reg[8]_i_3_n_7\ : STD_LOGIC;
  signal \NLW_countAddrSentRatioFix_reg[15]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSentRatioFix_reg[23]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSentRatioFix_reg[31]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSentRatioFix_reg[39]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countAddrSentRatioFix_reg[7]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSent_reg[16]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSent_reg[24]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSent_reg[32]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSent_reg[39]_i_16_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSent_reg[39]_i_16_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrSent_reg[39]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 4 );
  signal \NLW_countAddrSent_reg[39]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrSent_reg[39]_i_6_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countAddrSent_reg[39]_i_6_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_countAddrSent_reg[39]_i_7_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrSent_reg[39]_i_7_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrSent_reg[8]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[15]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[16]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[23]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[24]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[31]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[32]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_103_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_103_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_104_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_121_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_122_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_123_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_13_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_13_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_14_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_140_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_140_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_141_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_15_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_15_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_countAddrToBeSent_reg[39]_i_158_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_16_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_16_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_183_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_183_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_184_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_201_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_210_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_227_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_244_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_33_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_33_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 4 );
  signal \NLW_countAddrToBeSent_reg[39]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_5_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_5_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 1 );
  signal \NLW_countAddrToBeSent_reg[39]_i_50_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_51_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_51_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_52_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_7_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_7_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_8_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_8_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countAddrToBeSent_reg[39]_i_93_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[39]_i_94_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[7]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countAddrToBeSent_reg[8]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceivedRatioFix_reg[15]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceivedRatioFix_reg[23]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceivedRatioFix_reg[31]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceivedRatioFix_reg[39]_i_13_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceivedRatioFix_reg[39]_i_13_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceivedRatioFix_reg[39]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataReceivedRatioFix_reg[39]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceivedRatioFix_reg[39]_i_3_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceivedRatioFix_reg[7]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[16]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[24]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[32]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[39]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[39]_i_10_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[39]_i_17_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[39]_i_17_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[39]_i_24_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[39]_i_24_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[39]_i_31_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataReceived_reg[39]_i_31_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[39]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataReceived_reg[39]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_countDataReceived_reg[39]_i_5_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataReceived_reg[39]_i_5_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[39]_i_6_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataReceived_reg[39]_i_6_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[39]_i_8_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataReceived_reg[39]_i_8_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[39]_i_9_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataReceived_reg[39]_i_9_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_countDataReceived_reg[8]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[0]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[0]_i_11_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[16]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[16]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[24]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[24]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[32]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataSent_reg[32]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataSent_reg[32]_i_10_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_countDataSent_reg[8]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataSent_reg[8]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[0]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[0]_i_11_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[16]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[16]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[24]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[24]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[32]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataToBeReceived_reg[32]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataToBeReceived_reg[32]_i_10_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_countDataToBeReceived_reg[8]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeReceived_reg[8]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[0]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[0]_i_18_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[16]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[16]_i_18_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[24]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[24]_i_18_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[32]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataToBeSent_reg[32]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countDataToBeSent_reg[8]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countDataToBeSent_reg[8]_i_18_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[0]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[0]_i_11_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[16]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[16]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[24]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[24]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[32]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countReadReqSent_reg[32]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countReadReqSent_reg[32]_i_10_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_countReadReqSent_reg[8]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqSent_reg[8]_i_10_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[15]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[16]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[23]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[24]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[31]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[32]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[39]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countReadReqToBeSent_reg[39]_i_5_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_countReadReqToBeSent_reg[39]_i_5_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_countReadReqToBeSent_reg[7]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_countReadReqToBeSent_reg[8]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[15]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[23]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[31]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[39]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[47]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[55]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[63]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_current_cycles_with_no_data_read_reg[7]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_latency_reg[15]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_latency_reg[23]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_latency_reg[31]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_latency_reg[39]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_latency_reg[47]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_latency_reg[55]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_latency_reg[63]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_latency_reg[7]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_22_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_22_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_39_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_39_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_5_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_max_cycles_with_no_data_read_reg[31]_i_5_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_count_reg[16]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_count_reg[24]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_count_reg[31]_i_15_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_count_reg[31]_i_15_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_count_reg[31]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 4 );
  signal \NLW_read_count_reg[31]_i_3_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_count_reg[31]_i_32_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_count_reg[31]_i_32_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_count_reg[31]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_count_reg[31]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_count_reg[31]_i_5_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_read_count_reg[31]_i_5_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_read_count_reg[31]_i_6_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_count_reg[31]_i_6_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_count_reg[8]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[16]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[24]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_11_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_11_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_ticks_reg[31]_i_28_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_28_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_ticks_reg[31]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 4 );
  signal \NLW_read_ticks_reg[31]_i_3_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_ticks_reg[31]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_ticks_reg[31]_i_45_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_read_ticks_reg[31]_i_5_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_read_ticks_reg[31]_i_5_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_read_ticks_reg[31]_i_6_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_6_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_read_ticks_reg[31]_i_78_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_79_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_88_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[31]_i_89_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_read_ticks_reg[8]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_runtime_reg[16]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_runtime_reg[24]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_runtime_reg[32]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_runtime_reg[40]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_runtime_reg[48]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_runtime_reg[56]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_runtime_reg[63]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_runtime_reg[63]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_runtime_reg[8]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_toReadDataAddress_reg[0]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_toReadDataAddress_reg[16]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_toReadDataAddress_reg[24]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_toReadDataAddress_reg[32]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_toReadDataAddress_reg[40]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_toReadDataAddress_reg[48]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_toReadDataAddress_reg[56]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_toReadDataAddress_reg[8]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_writeAddress_reg[0]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_writeAddress_reg[16]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_writeAddress_reg[24]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_writeAddress_reg[32]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_writeAddress_reg[40]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_writeAddress_reg[48]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_writeAddress_reg[56]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_writeAddress_reg[8]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal NLW_writeDvalid_reg_i_1_CO_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 4 );
  signal NLW_writeDvalid_reg_i_1_O_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_writeDvalid_reg_i_11_CO_UNCONNECTED : STD_LOGIC_VECTOR ( 3 to 3 );
  signal NLW_writeDvalid_reg_i_11_O_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_writeDvalid_reg_i_2_CO_UNCONNECTED : STD_LOGIC_VECTOR ( 3 to 3 );
  signal NLW_writeDvalid_reg_i_2_O_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_write_count_for_last_reg[16]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_for_last_reg[24]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_for_last_reg[31]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_write_count_for_last_reg[31]_i_3_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_write_count_for_last_reg[31]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_write_count_for_last_reg[31]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_write_count_for_last_reg[31]_i_5_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_for_last_reg[31]_i_5_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_write_count_for_last_reg[8]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_reg[16]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_reg[24]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_reg[31]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_reg[31]_i_2_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_write_count_reg[31]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_write_count_reg[31]_i_3_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_write_count_reg[31]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_count_reg[31]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal \NLW_write_count_reg[8]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_ticks_reg[16]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_ticks_reg[24]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_write_ticks_reg[31]_i_4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 downto 3 );
  signal \NLW_write_ticks_reg[31]_i_4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 7 to 7 );
  signal \NLW_write_ticks_reg[8]_i_3_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute DONT_TOUCH of active_blocking_reg : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of active_blocking_reg : label is "yes";
  attribute DONT_TOUCH of active_read_reg : label is std.standard.true;
  attribute KEEP of active_read_reg : label is "yes";
  attribute DONT_TOUCH of active_write_reg : label is std.standard.true;
  attribute KEEP of active_write_reg : label is "yes";
  attribute HLUTNM : string;
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_10\ : label is "lutpair44";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_11\ : label is "lutpair43";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_12\ : label is "lutpair42";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_13\ : label is "lutpair41";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_14\ : label is "lutpair40";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_15\ : label is "lutpair39";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_16\ : label is "lutpair38";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_17\ : label is "lutpair37";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_2\ : label is "lutpair43";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_3\ : label is "lutpair42";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_4\ : label is "lutpair41";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_5\ : label is "lutpair40";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_6\ : label is "lutpair39";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_7\ : label is "lutpair38";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_8\ : label is "lutpair37";
  attribute HLUTNM of \countAddrSentRatioFix[15]_i_9\ : label is "lutpair36";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_10\ : label is "lutpair52";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_11\ : label is "lutpair51";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_12\ : label is "lutpair50";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_13\ : label is "lutpair49";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_14\ : label is "lutpair48";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_15\ : label is "lutpair47";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_16\ : label is "lutpair46";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_17\ : label is "lutpair45";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_2\ : label is "lutpair51";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_3\ : label is "lutpair50";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_4\ : label is "lutpair49";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_5\ : label is "lutpair48";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_6\ : label is "lutpair47";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_7\ : label is "lutpair46";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_8\ : label is "lutpair45";
  attribute HLUTNM of \countAddrSentRatioFix[23]_i_9\ : label is "lutpair44";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_11\ : label is "lutpair59";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_12\ : label is "lutpair58";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_13\ : label is "lutpair57";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_14\ : label is "lutpair56";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_15\ : label is "lutpair55";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_16\ : label is "lutpair54";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_17\ : label is "lutpair53";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_2\ : label is "lutpair59";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_3\ : label is "lutpair58";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_4\ : label is "lutpair57";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_5\ : label is "lutpair56";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_6\ : label is "lutpair55";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_7\ : label is "lutpair54";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_8\ : label is "lutpair53";
  attribute HLUTNM of \countAddrSentRatioFix[31]_i_9\ : label is "lutpair52";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_10\ : label is "lutpair35";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_11\ : label is "lutpair34";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_12\ : label is "lutpair33";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_13\ : label is "lutpair32";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_14\ : label is "lutpair31";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_15\ : label is "lutpair30";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_16\ : label is "lutpair99";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_2\ : label is "lutpair35";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_3\ : label is "lutpair34";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_4\ : label is "lutpair33";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_5\ : label is "lutpair32";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_6\ : label is "lutpair31";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_7\ : label is "lutpair30";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_8\ : label is "lutpair99";
  attribute HLUTNM of \countAddrSentRatioFix[7]_i_9\ : label is "lutpair36";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \countAddrSent[32]_i_1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \countAddrSent[33]_i_1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \countAddrSent[34]_i_1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \countAddrSent[35]_i_1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \countAddrSent[36]_i_1\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \countAddrSent[37]_i_1\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \countAddrSent[38]_i_1\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \countAddrSent[39]_i_2\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \countAddrToBeSent[0]_i_1\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \countAddrToBeSent[10]_i_1\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \countAddrToBeSent[11]_i_1\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \countAddrToBeSent[12]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \countAddrToBeSent[13]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \countAddrToBeSent[14]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \countAddrToBeSent[15]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \countAddrToBeSent[16]_i_1\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \countAddrToBeSent[17]_i_1\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \countAddrToBeSent[18]_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \countAddrToBeSent[19]_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \countAddrToBeSent[1]_i_1\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \countAddrToBeSent[20]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \countAddrToBeSent[21]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \countAddrToBeSent[22]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \countAddrToBeSent[23]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \countAddrToBeSent[24]_i_1\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \countAddrToBeSent[25]_i_1\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \countAddrToBeSent[26]_i_1\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \countAddrToBeSent[27]_i_1\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \countAddrToBeSent[28]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \countAddrToBeSent[29]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \countAddrToBeSent[2]_i_1\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \countAddrToBeSent[30]_i_1\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \countAddrToBeSent[31]_i_1\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \countAddrToBeSent[32]_i_1\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \countAddrToBeSent[33]_i_1\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \countAddrToBeSent[34]_i_1\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \countAddrToBeSent[35]_i_1\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \countAddrToBeSent[36]_i_1\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \countAddrToBeSent[37]_i_1\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \countAddrToBeSent[38]_i_1\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \countAddrToBeSent[39]_i_2\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \countAddrToBeSent[3]_i_1\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \countAddrToBeSent[4]_i_1\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \countAddrToBeSent[5]_i_1\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \countAddrToBeSent[6]_i_1\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \countAddrToBeSent[7]_i_1\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \countAddrToBeSent[8]_i_1\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \countAddrToBeSent[9]_i_1\ : label is "soft_lutpair46";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_10\ : label is "lutpair14";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_11\ : label is "lutpair13";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_12\ : label is "lutpair12";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_13\ : label is "lutpair11";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_14\ : label is "lutpair10";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_15\ : label is "lutpair9";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_16\ : label is "lutpair8";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_17\ : label is "lutpair7";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_2\ : label is "lutpair13";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_3\ : label is "lutpair12";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_4\ : label is "lutpair11";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_5\ : label is "lutpair10";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_6\ : label is "lutpair9";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_7\ : label is "lutpair8";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_8\ : label is "lutpair7";
  attribute HLUTNM of \countDataReceivedRatioFix[15]_i_9\ : label is "lutpair6";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_10\ : label is "lutpair22";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_11\ : label is "lutpair21";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_12\ : label is "lutpair20";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_13\ : label is "lutpair19";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_14\ : label is "lutpair18";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_15\ : label is "lutpair17";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_16\ : label is "lutpair16";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_17\ : label is "lutpair15";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_2\ : label is "lutpair21";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_3\ : label is "lutpair20";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_4\ : label is "lutpair19";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_5\ : label is "lutpair18";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_6\ : label is "lutpair17";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_7\ : label is "lutpair16";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_8\ : label is "lutpair15";
  attribute HLUTNM of \countDataReceivedRatioFix[23]_i_9\ : label is "lutpair14";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_11\ : label is "lutpair29";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_12\ : label is "lutpair28";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_13\ : label is "lutpair27";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_14\ : label is "lutpair26";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_15\ : label is "lutpair25";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_16\ : label is "lutpair24";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_17\ : label is "lutpair23";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_2\ : label is "lutpair29";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_3\ : label is "lutpair28";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_4\ : label is "lutpair27";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_5\ : label is "lutpair26";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_6\ : label is "lutpair25";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_7\ : label is "lutpair24";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_8\ : label is "lutpair23";
  attribute HLUTNM of \countDataReceivedRatioFix[31]_i_9\ : label is "lutpair22";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_10\ : label is "lutpair6";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_11\ : label is "lutpair5";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_12\ : label is "lutpair4";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_13\ : label is "lutpair3";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_14\ : label is "lutpair2";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_15\ : label is "lutpair1";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_16\ : label is "lutpair0";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_17\ : label is "lutpair98";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_2\ : label is "lutpair5";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_3\ : label is "lutpair4";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_4\ : label is "lutpair3";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_5\ : label is "lutpair2";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_6\ : label is "lutpair1";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_7\ : label is "lutpair0";
  attribute HLUTNM of \countDataReceivedRatioFix[7]_i_8\ : label is "lutpair98";
  attribute SOFT_HLUTNM of \countDataReceived[32]_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \countDataReceived[33]_i_1\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \countDataReceived[34]_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \countDataReceived[35]_i_1\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \countDataReceived[36]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \countDataReceived[37]_i_1\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \countDataReceived[38]_i_1\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \countDataReceived[39]_i_2\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[0]_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[10]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[11]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[12]_i_1\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[13]_i_1\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[14]_i_1\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[15]_i_1\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[16]_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[17]_i_1\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[18]_i_1\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[19]_i_1\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[1]_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[20]_i_1\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[21]_i_1\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[22]_i_1\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[23]_i_1\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[24]_i_1\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[25]_i_1\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[26]_i_1\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[27]_i_1\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[28]_i_1\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[29]_i_1\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[2]_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[30]_i_1\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[31]_i_1\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[32]_i_1\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[33]_i_1\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[34]_i_1\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[35]_i_1\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[36]_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[37]_i_1\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[38]_i_1\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[39]_i_2\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[3]_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[4]_i_1\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[5]_i_1\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[6]_i_1\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[7]_i_1\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[8]_i_1\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \countReadReqToBeSent[9]_i_1\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[0]_i_1\ : label is "soft_lutpair202";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[10]_i_1\ : label is "soft_lutpair197";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[11]_i_1\ : label is "soft_lutpair197";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[12]_i_1\ : label is "soft_lutpair196";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[13]_i_1\ : label is "soft_lutpair196";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[14]_i_1\ : label is "soft_lutpair195";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[15]_i_1\ : label is "soft_lutpair195";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[16]_i_1\ : label is "soft_lutpair194";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[17]_i_1\ : label is "soft_lutpair194";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[18]_i_1\ : label is "soft_lutpair193";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[19]_i_1\ : label is "soft_lutpair193";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[1]_i_1\ : label is "soft_lutpair202";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[20]_i_1\ : label is "soft_lutpair192";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[21]_i_1\ : label is "soft_lutpair192";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[22]_i_1\ : label is "soft_lutpair191";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[23]_i_1\ : label is "soft_lutpair191";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[24]_i_1\ : label is "soft_lutpair190";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[25]_i_1\ : label is "soft_lutpair190";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[26]_i_1\ : label is "soft_lutpair189";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[27]_i_1\ : label is "soft_lutpair189";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[28]_i_1\ : label is "soft_lutpair188";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[29]_i_1\ : label is "soft_lutpair188";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[2]_i_1\ : label is "soft_lutpair201";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[30]_i_1\ : label is "soft_lutpair187";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[31]_i_1\ : label is "soft_lutpair187";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[32]_i_1\ : label is "soft_lutpair186";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[33]_i_1\ : label is "soft_lutpair186";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[34]_i_1\ : label is "soft_lutpair185";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[35]_i_1\ : label is "soft_lutpair185";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[36]_i_1\ : label is "soft_lutpair184";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[37]_i_1\ : label is "soft_lutpair184";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[38]_i_1\ : label is "soft_lutpair183";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[39]_i_1\ : label is "soft_lutpair183";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[3]_i_1\ : label is "soft_lutpair201";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[40]_i_1\ : label is "soft_lutpair182";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[41]_i_1\ : label is "soft_lutpair182";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[42]_i_1\ : label is "soft_lutpair181";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[43]_i_1\ : label is "soft_lutpair181";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[44]_i_1\ : label is "soft_lutpair180";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[45]_i_1\ : label is "soft_lutpair180";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[46]_i_1\ : label is "soft_lutpair179";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[47]_i_1\ : label is "soft_lutpair179";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[48]_i_1\ : label is "soft_lutpair178";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[49]_i_1\ : label is "soft_lutpair178";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[4]_i_1\ : label is "soft_lutpair200";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[50]_i_1\ : label is "soft_lutpair177";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[51]_i_1\ : label is "soft_lutpair177";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[52]_i_1\ : label is "soft_lutpair176";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[53]_i_1\ : label is "soft_lutpair176";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[54]_i_1\ : label is "soft_lutpair175";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[55]_i_1\ : label is "soft_lutpair175";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[56]_i_1\ : label is "soft_lutpair174";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[57]_i_1\ : label is "soft_lutpair174";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[58]_i_1\ : label is "soft_lutpair173";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[59]_i_1\ : label is "soft_lutpair173";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[5]_i_1\ : label is "soft_lutpair200";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[60]_i_1\ : label is "soft_lutpair172";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[61]_i_1\ : label is "soft_lutpair172";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[62]_i_1\ : label is "soft_lutpair171";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[63]_i_1\ : label is "soft_lutpair171";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[6]_i_1\ : label is "soft_lutpair199";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[7]_i_1\ : label is "soft_lutpair199";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[8]_i_1\ : label is "soft_lutpair198";
  attribute SOFT_HLUTNM of \current_cycles_with_no_data_read[9]_i_1\ : label is "soft_lutpair198";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[0]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[10]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[11]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[12]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[13]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[14]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[15]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[16]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[17]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[18]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[19]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[1]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[20]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[21]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[22]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[23]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[24]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[25]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[26]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[27]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[28]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[29]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[2]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[30]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[31]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[32]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[32]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[33]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[33]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[34]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[34]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[35]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[35]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[36]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[36]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[37]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[37]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[38]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[38]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[39]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[39]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[3]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[40]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[40]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[41]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[41]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[42]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[42]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[43]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[43]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[44]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[44]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[45]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[45]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[46]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[46]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[47]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[47]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[48]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[48]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[49]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[49]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[4]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[50]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[50]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[51]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[51]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[52]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[52]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[53]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[53]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[54]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[54]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[55]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[55]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[56]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[56]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[57]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[57]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[58]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[58]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[59]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[59]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[5]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[60]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[60]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[61]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[61]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[62]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[62]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[63]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[63]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[6]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[7]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[8]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \current_cycles_with_no_data_read_reg[9]\ : label is std.standard.true;
  attribute KEEP of \current_cycles_with_no_data_read_reg[9]\ : label is "yes";
  attribute SOFT_HLUTNM of \dataBuffer_S2[0]_i_1\ : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of \dataBuffer_S2[100]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \dataBuffer_S2[101]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \dataBuffer_S2[102]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \dataBuffer_S2[103]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \dataBuffer_S2[104]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \dataBuffer_S2[105]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \dataBuffer_S2[106]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \dataBuffer_S2[107]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \dataBuffer_S2[108]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \dataBuffer_S2[109]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \dataBuffer_S2[10]_i_1\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \dataBuffer_S2[110]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \dataBuffer_S2[111]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \dataBuffer_S2[112]_i_1\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \dataBuffer_S2[113]_i_1\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \dataBuffer_S2[114]_i_1\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \dataBuffer_S2[115]_i_1\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \dataBuffer_S2[116]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \dataBuffer_S2[117]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \dataBuffer_S2[118]_i_1\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \dataBuffer_S2[119]_i_1\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \dataBuffer_S2[11]_i_1\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \dataBuffer_S2[120]_i_1\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \dataBuffer_S2[121]_i_1\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \dataBuffer_S2[122]_i_1\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \dataBuffer_S2[123]_i_1\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \dataBuffer_S2[124]_i_1\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \dataBuffer_S2[125]_i_1\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \dataBuffer_S2[126]_i_1\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \dataBuffer_S2[127]_i_1\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \dataBuffer_S2[12]_i_1\ : label is "soft_lutpair128";
  attribute SOFT_HLUTNM of \dataBuffer_S2[13]_i_1\ : label is "soft_lutpair128";
  attribute SOFT_HLUTNM of \dataBuffer_S2[14]_i_1\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \dataBuffer_S2[15]_i_1\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \dataBuffer_S2[16]_i_1\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \dataBuffer_S2[17]_i_1\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \dataBuffer_S2[18]_i_1\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \dataBuffer_S2[19]_i_1\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \dataBuffer_S2[1]_i_1\ : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of \dataBuffer_S2[20]_i_1\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \dataBuffer_S2[21]_i_1\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \dataBuffer_S2[22]_i_1\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \dataBuffer_S2[23]_i_1\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \dataBuffer_S2[24]_i_1\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \dataBuffer_S2[25]_i_1\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \dataBuffer_S2[26]_i_1\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \dataBuffer_S2[27]_i_1\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \dataBuffer_S2[28]_i_1\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \dataBuffer_S2[29]_i_1\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \dataBuffer_S2[2]_i_1\ : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \dataBuffer_S2[30]_i_1\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \dataBuffer_S2[31]_i_1\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \dataBuffer_S2[32]_i_1\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \dataBuffer_S2[33]_i_1\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \dataBuffer_S2[34]_i_1\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \dataBuffer_S2[35]_i_1\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \dataBuffer_S2[36]_i_1\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \dataBuffer_S2[37]_i_1\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \dataBuffer_S2[38]_i_1\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \dataBuffer_S2[39]_i_1\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \dataBuffer_S2[3]_i_1\ : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of \dataBuffer_S2[40]_i_1\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \dataBuffer_S2[41]_i_1\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \dataBuffer_S2[42]_i_1\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \dataBuffer_S2[43]_i_1\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \dataBuffer_S2[44]_i_1\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \dataBuffer_S2[45]_i_1\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \dataBuffer_S2[46]_i_1\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \dataBuffer_S2[47]_i_1\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \dataBuffer_S2[48]_i_1\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \dataBuffer_S2[49]_i_1\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \dataBuffer_S2[4]_i_1\ : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of \dataBuffer_S2[50]_i_1\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \dataBuffer_S2[51]_i_1\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \dataBuffer_S2[52]_i_1\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \dataBuffer_S2[53]_i_1\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \dataBuffer_S2[54]_i_1\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \dataBuffer_S2[55]_i_1\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \dataBuffer_S2[56]_i_1\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \dataBuffer_S2[57]_i_1\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \dataBuffer_S2[58]_i_1\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of \dataBuffer_S2[59]_i_1\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of \dataBuffer_S2[5]_i_1\ : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of \dataBuffer_S2[60]_i_1\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \dataBuffer_S2[61]_i_1\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \dataBuffer_S2[62]_i_1\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \dataBuffer_S2[63]_i_1\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \dataBuffer_S2[64]_i_1\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \dataBuffer_S2[65]_i_1\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \dataBuffer_S2[66]_i_1\ : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \dataBuffer_S2[67]_i_1\ : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \dataBuffer_S2[68]_i_1\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \dataBuffer_S2[69]_i_1\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \dataBuffer_S2[6]_i_1\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \dataBuffer_S2[70]_i_1\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \dataBuffer_S2[71]_i_1\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \dataBuffer_S2[72]_i_1\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \dataBuffer_S2[73]_i_1\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \dataBuffer_S2[74]_i_1\ : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \dataBuffer_S2[75]_i_1\ : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \dataBuffer_S2[76]_i_1\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of \dataBuffer_S2[77]_i_1\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of \dataBuffer_S2[78]_i_1\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \dataBuffer_S2[79]_i_1\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \dataBuffer_S2[7]_i_1\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \dataBuffer_S2[80]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \dataBuffer_S2[81]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \dataBuffer_S2[82]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \dataBuffer_S2[83]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \dataBuffer_S2[84]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \dataBuffer_S2[85]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \dataBuffer_S2[86]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \dataBuffer_S2[87]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \dataBuffer_S2[88]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \dataBuffer_S2[89]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \dataBuffer_S2[8]_i_1\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \dataBuffer_S2[90]_i_1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \dataBuffer_S2[91]_i_1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \dataBuffer_S2[92]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \dataBuffer_S2[93]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \dataBuffer_S2[94]_i_1\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \dataBuffer_S2[95]_i_1\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \dataBuffer_S2[96]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \dataBuffer_S2[97]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \dataBuffer_S2[98]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \dataBuffer_S2[99]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \dataBuffer_S2[9]_i_1\ : label is "soft_lutpair130";
  attribute DONT_TOUCH of data_read_in_this_test_reg : label is std.standard.true;
  attribute KEEP of data_read_in_this_test_reg : label is "yes";
  attribute HLUTNM of \latency[15]_i_10\ : label is "lutpair74";
  attribute HLUTNM of \latency[15]_i_11\ : label is "lutpair73";
  attribute HLUTNM of \latency[15]_i_12\ : label is "lutpair72";
  attribute HLUTNM of \latency[15]_i_13\ : label is "lutpair71";
  attribute HLUTNM of \latency[15]_i_14\ : label is "lutpair70";
  attribute HLUTNM of \latency[15]_i_15\ : label is "lutpair69";
  attribute HLUTNM of \latency[15]_i_16\ : label is "lutpair68";
  attribute HLUTNM of \latency[15]_i_17\ : label is "lutpair67";
  attribute HLUTNM of \latency[15]_i_2\ : label is "lutpair73";
  attribute HLUTNM of \latency[15]_i_3\ : label is "lutpair72";
  attribute HLUTNM of \latency[15]_i_4\ : label is "lutpair71";
  attribute HLUTNM of \latency[15]_i_5\ : label is "lutpair70";
  attribute HLUTNM of \latency[15]_i_6\ : label is "lutpair69";
  attribute HLUTNM of \latency[15]_i_7\ : label is "lutpair68";
  attribute HLUTNM of \latency[15]_i_8\ : label is "lutpair67";
  attribute HLUTNM of \latency[15]_i_9\ : label is "lutpair66";
  attribute HLUTNM of \latency[23]_i_10\ : label is "lutpair82";
  attribute HLUTNM of \latency[23]_i_11\ : label is "lutpair81";
  attribute HLUTNM of \latency[23]_i_12\ : label is "lutpair80";
  attribute HLUTNM of \latency[23]_i_13\ : label is "lutpair79";
  attribute HLUTNM of \latency[23]_i_14\ : label is "lutpair78";
  attribute HLUTNM of \latency[23]_i_15\ : label is "lutpair77";
  attribute HLUTNM of \latency[23]_i_16\ : label is "lutpair76";
  attribute HLUTNM of \latency[23]_i_17\ : label is "lutpair75";
  attribute HLUTNM of \latency[23]_i_2\ : label is "lutpair81";
  attribute HLUTNM of \latency[23]_i_3\ : label is "lutpair80";
  attribute HLUTNM of \latency[23]_i_4\ : label is "lutpair79";
  attribute HLUTNM of \latency[23]_i_5\ : label is "lutpair78";
  attribute HLUTNM of \latency[23]_i_6\ : label is "lutpair77";
  attribute HLUTNM of \latency[23]_i_7\ : label is "lutpair76";
  attribute HLUTNM of \latency[23]_i_8\ : label is "lutpair75";
  attribute HLUTNM of \latency[23]_i_9\ : label is "lutpair74";
  attribute HLUTNM of \latency[31]_i_10\ : label is "lutpair90";
  attribute HLUTNM of \latency[31]_i_11\ : label is "lutpair89";
  attribute HLUTNM of \latency[31]_i_12\ : label is "lutpair88";
  attribute HLUTNM of \latency[31]_i_13\ : label is "lutpair87";
  attribute HLUTNM of \latency[31]_i_14\ : label is "lutpair86";
  attribute HLUTNM of \latency[31]_i_15\ : label is "lutpair85";
  attribute HLUTNM of \latency[31]_i_16\ : label is "lutpair84";
  attribute HLUTNM of \latency[31]_i_17\ : label is "lutpair83";
  attribute HLUTNM of \latency[31]_i_2\ : label is "lutpair89";
  attribute HLUTNM of \latency[31]_i_3\ : label is "lutpair88";
  attribute HLUTNM of \latency[31]_i_4\ : label is "lutpair87";
  attribute HLUTNM of \latency[31]_i_5\ : label is "lutpair86";
  attribute HLUTNM of \latency[31]_i_6\ : label is "lutpair85";
  attribute HLUTNM of \latency[31]_i_7\ : label is "lutpair84";
  attribute HLUTNM of \latency[31]_i_8\ : label is "lutpair83";
  attribute HLUTNM of \latency[31]_i_9\ : label is "lutpair82";
  attribute HLUTNM of \latency[39]_i_11\ : label is "lutpair97";
  attribute HLUTNM of \latency[39]_i_12\ : label is "lutpair96";
  attribute HLUTNM of \latency[39]_i_13\ : label is "lutpair95";
  attribute HLUTNM of \latency[39]_i_14\ : label is "lutpair94";
  attribute HLUTNM of \latency[39]_i_15\ : label is "lutpair93";
  attribute HLUTNM of \latency[39]_i_16\ : label is "lutpair92";
  attribute HLUTNM of \latency[39]_i_17\ : label is "lutpair91";
  attribute HLUTNM of \latency[39]_i_2\ : label is "lutpair97";
  attribute HLUTNM of \latency[39]_i_3\ : label is "lutpair96";
  attribute HLUTNM of \latency[39]_i_4\ : label is "lutpair95";
  attribute HLUTNM of \latency[39]_i_5\ : label is "lutpair94";
  attribute HLUTNM of \latency[39]_i_6\ : label is "lutpair93";
  attribute HLUTNM of \latency[39]_i_7\ : label is "lutpair92";
  attribute HLUTNM of \latency[39]_i_8\ : label is "lutpair91";
  attribute HLUTNM of \latency[39]_i_9\ : label is "lutpair90";
  attribute HLUTNM of \latency[7]_i_10\ : label is "lutpair65";
  attribute HLUTNM of \latency[7]_i_11\ : label is "lutpair64";
  attribute HLUTNM of \latency[7]_i_12\ : label is "lutpair63";
  attribute HLUTNM of \latency[7]_i_13\ : label is "lutpair62";
  attribute HLUTNM of \latency[7]_i_14\ : label is "lutpair61";
  attribute HLUTNM of \latency[7]_i_15\ : label is "lutpair60";
  attribute HLUTNM of \latency[7]_i_16\ : label is "lutpair100";
  attribute HLUTNM of \latency[7]_i_2\ : label is "lutpair65";
  attribute HLUTNM of \latency[7]_i_3\ : label is "lutpair64";
  attribute HLUTNM of \latency[7]_i_4\ : label is "lutpair63";
  attribute HLUTNM of \latency[7]_i_5\ : label is "lutpair62";
  attribute HLUTNM of \latency[7]_i_6\ : label is "lutpair61";
  attribute HLUTNM of \latency[7]_i_7\ : label is "lutpair60";
  attribute HLUTNM of \latency[7]_i_8\ : label is "lutpair100";
  attribute HLUTNM of \latency[7]_i_9\ : label is "lutpair66";
  attribute DONT_TOUCH of \latency_reg[0]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[10]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[11]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[12]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[13]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[14]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[15]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[16]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[17]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[18]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[19]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[1]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[20]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[21]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[22]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[23]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[24]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[25]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[26]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[27]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[28]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[29]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[2]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[30]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[31]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[32]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[32]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[33]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[33]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[34]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[34]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[35]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[35]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[36]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[36]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[37]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[37]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[38]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[38]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[39]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[39]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[3]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[40]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[40]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[41]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[41]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[42]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[42]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[43]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[43]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[44]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[44]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[45]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[45]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[46]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[46]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[47]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[47]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[48]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[48]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[49]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[49]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[4]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[50]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[50]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[51]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[51]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[52]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[52]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[53]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[53]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[54]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[54]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[55]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[55]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[56]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[56]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[57]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[57]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[58]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[58]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[59]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[59]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[5]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[60]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[60]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[61]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[61]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[62]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[62]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[63]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[63]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[6]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[7]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[8]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \latency_reg[9]\ : label is std.standard.true;
  attribute KEEP of \latency_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[0]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[10]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[11]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[12]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[13]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[14]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[15]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[16]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[17]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[18]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[19]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[1]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[20]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[21]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[22]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[23]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[24]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[25]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[26]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[27]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[28]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[29]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[2]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[30]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[31]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[3]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[4]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[5]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[6]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[7]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[8]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \read_blocking_ratio_reg[9]\ : label is std.standard.true;
  attribute KEEP of \read_blocking_ratio_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[0]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[10]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[11]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[12]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[13]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[14]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[15]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[16]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[17]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[18]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[19]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[1]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[20]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[21]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[22]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[23]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[24]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[25]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[26]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[27]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[28]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[29]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[2]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[30]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[31]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[3]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[4]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[5]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[6]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[7]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[8]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \read_burst_size_reg[9]\ : label is std.standard.true;
  attribute KEEP of \read_burst_size_reg[9]\ : label is "yes";
  attribute SOFT_HLUTNM of \read_count[0]_i_1\ : label is "soft_lutpair166";
  attribute SOFT_HLUTNM of \read_count[10]_i_1\ : label is "soft_lutpair161";
  attribute SOFT_HLUTNM of \read_count[11]_i_1\ : label is "soft_lutpair161";
  attribute SOFT_HLUTNM of \read_count[12]_i_1\ : label is "soft_lutpair160";
  attribute SOFT_HLUTNM of \read_count[13]_i_1\ : label is "soft_lutpair160";
  attribute SOFT_HLUTNM of \read_count[14]_i_1\ : label is "soft_lutpair159";
  attribute SOFT_HLUTNM of \read_count[15]_i_1\ : label is "soft_lutpair159";
  attribute SOFT_HLUTNM of \read_count[16]_i_1\ : label is "soft_lutpair158";
  attribute SOFT_HLUTNM of \read_count[17]_i_1\ : label is "soft_lutpair158";
  attribute SOFT_HLUTNM of \read_count[18]_i_1\ : label is "soft_lutpair157";
  attribute SOFT_HLUTNM of \read_count[19]_i_1\ : label is "soft_lutpair157";
  attribute SOFT_HLUTNM of \read_count[1]_i_1\ : label is "soft_lutpair166";
  attribute SOFT_HLUTNM of \read_count[20]_i_1\ : label is "soft_lutpair156";
  attribute SOFT_HLUTNM of \read_count[21]_i_1\ : label is "soft_lutpair156";
  attribute SOFT_HLUTNM of \read_count[22]_i_1\ : label is "soft_lutpair155";
  attribute SOFT_HLUTNM of \read_count[23]_i_1\ : label is "soft_lutpair155";
  attribute SOFT_HLUTNM of \read_count[24]_i_1\ : label is "soft_lutpair154";
  attribute SOFT_HLUTNM of \read_count[25]_i_1\ : label is "soft_lutpair154";
  attribute SOFT_HLUTNM of \read_count[26]_i_1\ : label is "soft_lutpair153";
  attribute SOFT_HLUTNM of \read_count[27]_i_1\ : label is "soft_lutpair153";
  attribute SOFT_HLUTNM of \read_count[28]_i_1\ : label is "soft_lutpair152";
  attribute SOFT_HLUTNM of \read_count[29]_i_1\ : label is "soft_lutpair152";
  attribute SOFT_HLUTNM of \read_count[2]_i_1\ : label is "soft_lutpair165";
  attribute SOFT_HLUTNM of \read_count[30]_i_1\ : label is "soft_lutpair151";
  attribute SOFT_HLUTNM of \read_count[31]_i_2\ : label is "soft_lutpair151";
  attribute SOFT_HLUTNM of \read_count[3]_i_1\ : label is "soft_lutpair165";
  attribute SOFT_HLUTNM of \read_count[4]_i_1\ : label is "soft_lutpair164";
  attribute SOFT_HLUTNM of \read_count[5]_i_1\ : label is "soft_lutpair164";
  attribute SOFT_HLUTNM of \read_count[6]_i_1\ : label is "soft_lutpair163";
  attribute SOFT_HLUTNM of \read_count[7]_i_1\ : label is "soft_lutpair163";
  attribute SOFT_HLUTNM of \read_count[8]_i_1\ : label is "soft_lutpair162";
  attribute SOFT_HLUTNM of \read_count[9]_i_1\ : label is "soft_lutpair162";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[0]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[10]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[11]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[12]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[13]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[14]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[15]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[16]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[17]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[18]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[19]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[1]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[20]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[21]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[22]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[23]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[24]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[25]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[26]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[27]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[28]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[29]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[2]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[30]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[31]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[3]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[4]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[5]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[6]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[7]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[8]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \read_count_bursts_per_reset_reg[9]\ : label is std.standard.true;
  attribute KEEP of \read_count_bursts_per_reset_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[0]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[10]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[11]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[12]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[13]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[14]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[15]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[16]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[17]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[18]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[19]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[1]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[20]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[21]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[22]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[23]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[24]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[25]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[26]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[27]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[28]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[29]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[2]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[30]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[31]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[3]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[4]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[5]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[6]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[7]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[8]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \read_max_queue_size_reg[9]\ : label is std.standard.true;
  attribute KEEP of \read_max_queue_size_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[0]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[10]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[11]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[12]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[13]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[14]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[15]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[16]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[17]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[18]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[19]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[1]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[20]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[21]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[22]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[23]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[24]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[25]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[26]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[27]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[28]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[29]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[2]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[30]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[31]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[32]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[32]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[33]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[33]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[34]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[34]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[35]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[35]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[36]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[36]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[37]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[37]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[38]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[38]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[39]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[39]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[3]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[40]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[40]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[41]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[41]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[42]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[42]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[43]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[43]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[44]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[44]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[45]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[45]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[46]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[46]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[47]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[47]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[48]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[48]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[49]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[49]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[4]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[50]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[50]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[51]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[51]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[52]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[52]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[53]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[53]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[54]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[54]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[55]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[55]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[56]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[56]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[57]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[57]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[58]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[58]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[59]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[59]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[5]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[60]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[60]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[61]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[61]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[62]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[62]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[63]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[63]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[6]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[7]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[8]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \read_start_DDR_address_reg[9]\ : label is std.standard.true;
  attribute KEEP of \read_start_DDR_address_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[0]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[10]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[11]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[12]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[13]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[14]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[15]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[16]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[17]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[18]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[19]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[1]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[20]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[21]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[22]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[23]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[24]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[25]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[26]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[27]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[28]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[29]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[2]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[30]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[31]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[3]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[4]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[5]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[6]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[7]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[8]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \read_step_DDR_address_reg[9]\ : label is std.standard.true;
  attribute KEEP of \read_step_DDR_address_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[0]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[10]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[11]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[12]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[13]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[14]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[15]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[16]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[17]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[18]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[19]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[1]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[20]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[21]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[22]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[23]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[24]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[25]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[26]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[27]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[28]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[29]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[2]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[30]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[31]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[3]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[4]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[5]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[6]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[7]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[8]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \read_ticks_per_burst_reg[9]\ : label is std.standard.true;
  attribute KEEP of \read_ticks_per_burst_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of reset_cmd_reg : label is std.standard.true;
  attribute KEEP of reset_cmd_reg : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[0]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[10]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[11]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[12]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[13]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[14]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[15]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[16]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[17]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[18]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[19]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[1]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[20]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[21]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[22]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[23]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[24]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[25]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[26]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[27]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[28]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[29]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[2]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[30]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[31]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[32]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[32]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[33]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[33]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[34]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[34]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[35]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[35]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[36]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[36]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[37]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[37]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[38]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[38]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[39]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[39]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[3]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[40]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[40]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[41]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[41]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[42]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[42]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[43]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[43]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[44]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[44]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[45]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[45]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[46]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[46]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[47]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[47]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[48]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[48]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[49]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[49]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[4]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[50]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[50]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[51]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[51]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[52]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[52]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[53]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[53]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[54]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[54]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[55]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[55]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[56]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[56]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[57]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[57]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[58]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[58]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[59]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[59]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[5]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[60]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[60]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[61]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[61]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[62]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[62]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[63]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[63]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[6]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[7]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[8]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \runtime_reg[9]\ : label is std.standard.true;
  attribute KEEP of \runtime_reg[9]\ : label is "yes";
  attribute SOFT_HLUTNM of \toReadDataSize[0]_i_1\ : label is "soft_lutpair170";
  attribute SOFT_HLUTNM of \toReadDataSize[1]_i_1\ : label is "soft_lutpair170";
  attribute SOFT_HLUTNM of \toReadDataSize[2]_i_1\ : label is "soft_lutpair169";
  attribute SOFT_HLUTNM of \toReadDataSize[3]_i_1\ : label is "soft_lutpair169";
  attribute SOFT_HLUTNM of \toReadDataSize[4]_i_1\ : label is "soft_lutpair168";
  attribute SOFT_HLUTNM of \toReadDataSize[5]_i_1\ : label is "soft_lutpair168";
  attribute SOFT_HLUTNM of \toReadDataSize[6]_i_1\ : label is "soft_lutpair167";
  attribute SOFT_HLUTNM of \toReadDataSize[7]_i_2\ : label is "soft_lutpair167";
  attribute SOFT_HLUTNM of \writeAsize[0]_i_1\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \writeAsize[1]_i_1\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \writeAsize[2]_i_1\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \writeAsize[3]_i_1\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \writeAsize[4]_i_1\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \writeAsize[5]_i_1\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \writeAsize[6]_i_1\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \writeAsize[7]_i_1\ : label is "soft_lutpair67";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[0]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[10]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[11]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[12]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[13]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[14]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[15]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[16]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[17]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[18]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[19]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[1]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[20]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[21]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[22]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[23]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[24]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[25]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[26]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[27]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[28]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[29]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[2]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[30]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[31]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[3]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[4]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[5]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[6]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[7]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[8]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \write_blocking_ratio_reg[9]\ : label is std.standard.true;
  attribute KEEP of \write_blocking_ratio_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[0]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[10]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[11]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[12]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[13]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[14]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[15]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[16]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[17]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[18]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[19]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[1]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[20]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[21]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[22]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[23]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[24]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[25]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[26]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[27]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[28]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[29]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[2]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[30]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[31]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[3]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[4]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[5]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[6]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[7]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[8]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \write_burst_size_reg[9]\ : label is std.standard.true;
  attribute KEEP of \write_burst_size_reg[9]\ : label is "yes";
  attribute SOFT_HLUTNM of \write_count[0]_i_1\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \write_count[10]_i_1\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \write_count[11]_i_1\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \write_count[12]_i_1\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \write_count[13]_i_1\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \write_count[14]_i_1\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \write_count[15]_i_1\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \write_count[16]_i_1\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \write_count[17]_i_1\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \write_count[18]_i_1\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \write_count[19]_i_1\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \write_count[1]_i_1\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \write_count[20]_i_1\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \write_count[21]_i_1\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \write_count[22]_i_1\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \write_count[23]_i_1\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \write_count[24]_i_1\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \write_count[25]_i_1\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \write_count[26]_i_1\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \write_count[27]_i_1\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \write_count[28]_i_1\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \write_count[29]_i_1\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \write_count[2]_i_1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \write_count[30]_i_1\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \write_count[31]_i_1\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \write_count[3]_i_1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \write_count[4]_i_1\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \write_count[5]_i_1\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \write_count[6]_i_1\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \write_count[7]_i_1\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \write_count[8]_i_1\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \write_count[9]_i_1\ : label is "soft_lutpair62";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[0]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[10]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[11]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[12]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[13]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[14]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[15]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[16]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[17]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[18]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[19]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[1]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[20]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[21]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[22]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[23]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[24]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[25]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[26]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[27]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[28]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[29]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[2]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[30]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[31]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[3]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[4]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[5]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[6]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[7]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[8]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \write_count_bursts_per_reset_reg[9]\ : label is std.standard.true;
  attribute KEEP of \write_count_bursts_per_reset_reg[9]\ : label is "yes";
  attribute SOFT_HLUTNM of \write_count_for_last[0]_i_1\ : label is "soft_lutpair150";
  attribute SOFT_HLUTNM of \write_count_for_last[10]_i_1\ : label is "soft_lutpair145";
  attribute SOFT_HLUTNM of \write_count_for_last[11]_i_1\ : label is "soft_lutpair145";
  attribute SOFT_HLUTNM of \write_count_for_last[12]_i_1\ : label is "soft_lutpair144";
  attribute SOFT_HLUTNM of \write_count_for_last[13]_i_1\ : label is "soft_lutpair144";
  attribute SOFT_HLUTNM of \write_count_for_last[14]_i_1\ : label is "soft_lutpair143";
  attribute SOFT_HLUTNM of \write_count_for_last[15]_i_1\ : label is "soft_lutpair143";
  attribute SOFT_HLUTNM of \write_count_for_last[16]_i_1\ : label is "soft_lutpair142";
  attribute SOFT_HLUTNM of \write_count_for_last[17]_i_1\ : label is "soft_lutpair142";
  attribute SOFT_HLUTNM of \write_count_for_last[18]_i_1\ : label is "soft_lutpair141";
  attribute SOFT_HLUTNM of \write_count_for_last[19]_i_1\ : label is "soft_lutpair141";
  attribute SOFT_HLUTNM of \write_count_for_last[1]_i_1\ : label is "soft_lutpair150";
  attribute SOFT_HLUTNM of \write_count_for_last[20]_i_1\ : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of \write_count_for_last[21]_i_1\ : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of \write_count_for_last[22]_i_1\ : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of \write_count_for_last[23]_i_1\ : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of \write_count_for_last[24]_i_1\ : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of \write_count_for_last[25]_i_1\ : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of \write_count_for_last[26]_i_1\ : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of \write_count_for_last[27]_i_1\ : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of \write_count_for_last[28]_i_1\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \write_count_for_last[29]_i_1\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \write_count_for_last[2]_i_1\ : label is "soft_lutpair149";
  attribute SOFT_HLUTNM of \write_count_for_last[30]_i_1\ : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of \write_count_for_last[31]_i_2\ : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of \write_count_for_last[3]_i_1\ : label is "soft_lutpair149";
  attribute SOFT_HLUTNM of \write_count_for_last[4]_i_1\ : label is "soft_lutpair148";
  attribute SOFT_HLUTNM of \write_count_for_last[5]_i_1\ : label is "soft_lutpair148";
  attribute SOFT_HLUTNM of \write_count_for_last[6]_i_1\ : label is "soft_lutpair147";
  attribute SOFT_HLUTNM of \write_count_for_last[7]_i_1\ : label is "soft_lutpair147";
  attribute SOFT_HLUTNM of \write_count_for_last[8]_i_1\ : label is "soft_lutpair146";
  attribute SOFT_HLUTNM of \write_count_for_last[9]_i_1\ : label is "soft_lutpair146";
  attribute DONT_TOUCH of \write_max_queue_size_reg[0]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[10]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[11]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[12]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[13]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[14]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[15]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[16]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[17]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[18]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[19]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[1]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[20]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[21]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[22]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[23]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[24]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[25]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[26]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[27]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[28]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[29]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[2]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[30]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[31]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[3]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[4]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[5]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[6]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[7]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[8]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \write_max_queue_size_reg[9]\ : label is std.standard.true;
  attribute KEEP of \write_max_queue_size_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[0]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[10]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[11]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[12]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[13]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[14]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[15]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[16]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[17]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[18]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[19]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[1]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[20]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[21]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[22]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[23]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[24]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[25]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[26]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[27]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[28]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[29]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[2]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[30]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[31]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[32]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[32]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[33]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[33]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[34]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[34]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[35]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[35]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[36]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[36]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[37]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[37]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[38]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[38]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[39]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[39]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[3]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[40]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[40]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[41]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[41]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[42]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[42]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[43]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[43]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[44]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[44]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[45]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[45]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[46]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[46]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[47]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[47]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[48]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[48]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[49]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[49]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[4]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[50]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[50]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[51]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[51]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[52]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[52]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[53]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[53]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[54]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[54]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[55]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[55]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[56]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[56]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[57]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[57]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[58]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[58]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[59]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[59]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[5]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[60]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[60]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[61]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[61]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[62]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[62]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[63]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[63]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[6]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[7]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[8]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \write_start_DDR_address_reg[9]\ : label is std.standard.true;
  attribute KEEP of \write_start_DDR_address_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[0]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[10]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[11]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[12]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[13]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[14]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[15]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[16]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[17]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[18]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[19]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[1]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[20]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[21]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[22]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[23]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[24]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[25]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[26]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[27]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[28]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[29]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[2]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[30]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[31]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[3]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[4]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[5]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[6]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[7]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[8]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \write_step_DDR_address_reg[9]\ : label is std.standard.true;
  attribute KEEP of \write_step_DDR_address_reg[9]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[0]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[0]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[10]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[10]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[11]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[11]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[12]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[12]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[13]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[13]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[14]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[14]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[15]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[15]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[16]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[16]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[17]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[17]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[18]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[18]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[19]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[19]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[1]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[1]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[20]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[20]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[21]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[21]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[22]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[22]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[23]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[23]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[24]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[24]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[25]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[25]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[26]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[26]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[27]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[27]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[28]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[28]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[29]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[29]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[2]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[2]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[30]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[30]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[31]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[31]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[3]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[3]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[4]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[4]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[5]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[5]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[6]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[6]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[7]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[7]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[8]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[8]\ : label is "yes";
  attribute DONT_TOUCH of \write_ticks_per_burst_reg[9]\ : label is std.standard.true;
  attribute KEEP of \write_ticks_per_burst_reg[9]\ : label is "yes";
begin
  CO(0) <= \^co\(0);
  O32 <= \^o32\;
  Q(21 downto 0) <= \^q\(21 downto 0);
  \countAddrSent_reg[1]_0\(0) <= \^countaddrsent_reg[1]_0\(0);
  \m_ddr_axi_ARSIZE[2]\(21 downto 0) <= \^m_ddr_axi_arsize[2]\(21 downto 0);
  toReadDataAddress(63 downto 0) <= \^toreaddataaddress\(63 downto 0);
  writeAddress(63 downto 0) <= \^writeaddress\(63 downto 0);
  writeDvalid0 <= \^writedvalid0\;
active_blocking_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \active_blocking__0\,
      Q => active_blocking,
      R => '0'
    );
active_read_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \active_read__0\,
      Q => active_read,
      R => '0'
    );
active_write_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \active_write__0\,
      Q => active_write,
      R => '0'
    );
\axi_c_read_data_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(0),
      Q => \axi_c_read_data_reg_n_0_\(0),
      R => '0'
    );
\axi_c_read_data_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(10),
      Q => \axi_c_read_data_reg_n_0_\(10),
      R => '0'
    );
\axi_c_read_data_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(11),
      Q => \axi_c_read_data_reg_n_0_\(11),
      R => '0'
    );
\axi_c_read_data_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(12),
      Q => \axi_c_read_data_reg_n_0_\(12),
      R => '0'
    );
\axi_c_read_data_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(13),
      Q => \axi_c_read_data_reg_n_0_\(13),
      R => '0'
    );
\axi_c_read_data_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(14),
      Q => \axi_c_read_data_reg_n_0_\(14),
      R => '0'
    );
\axi_c_read_data_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(15),
      Q => \axi_c_read_data_reg_n_0_\(15),
      R => '0'
    );
\axi_c_read_data_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(16),
      Q => \axi_c_read_data_reg_n_0_\(16),
      R => '0'
    );
\axi_c_read_data_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(17),
      Q => \axi_c_read_data_reg_n_0_\(17),
      R => '0'
    );
\axi_c_read_data_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(18),
      Q => \axi_c_read_data_reg_n_0_\(18),
      R => '0'
    );
\axi_c_read_data_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(19),
      Q => \axi_c_read_data_reg_n_0_\(19),
      R => '0'
    );
\axi_c_read_data_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(1),
      Q => \axi_c_read_data_reg_n_0_\(1),
      R => '0'
    );
\axi_c_read_data_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(20),
      Q => \axi_c_read_data_reg_n_0_\(20),
      R => '0'
    );
\axi_c_read_data_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(21),
      Q => \axi_c_read_data_reg_n_0_\(21),
      R => '0'
    );
\axi_c_read_data_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(22),
      Q => \axi_c_read_data_reg_n_0_\(22),
      R => '0'
    );
\axi_c_read_data_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(23),
      Q => \axi_c_read_data_reg_n_0_\(23),
      R => '0'
    );
\axi_c_read_data_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(24),
      Q => \axi_c_read_data_reg_n_0_\(24),
      R => '0'
    );
\axi_c_read_data_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(25),
      Q => \axi_c_read_data_reg_n_0_\(25),
      R => '0'
    );
\axi_c_read_data_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(26),
      Q => \axi_c_read_data_reg_n_0_\(26),
      R => '0'
    );
\axi_c_read_data_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(27),
      Q => \axi_c_read_data_reg_n_0_\(27),
      R => '0'
    );
\axi_c_read_data_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(28),
      Q => \axi_c_read_data_reg_n_0_\(28),
      R => '0'
    );
\axi_c_read_data_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(29),
      Q => \axi_c_read_data_reg_n_0_\(29),
      R => '0'
    );
\axi_c_read_data_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(2),
      Q => \axi_c_read_data_reg_n_0_\(2),
      R => '0'
    );
\axi_c_read_data_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(30),
      Q => \axi_c_read_data_reg_n_0_\(30),
      R => '0'
    );
\axi_c_read_data_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(31),
      Q => \axi_c_read_data_reg_n_0_\(31),
      R => '0'
    );
\axi_c_read_data_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(3),
      Q => \axi_c_read_data_reg_n_0_\(3),
      R => '0'
    );
\axi_c_read_data_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(4),
      Q => \axi_c_read_data_reg_n_0_\(4),
      R => '0'
    );
\axi_c_read_data_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(5),
      Q => \axi_c_read_data_reg_n_0_\(5),
      R => '0'
    );
\axi_c_read_data_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(6),
      Q => \axi_c_read_data_reg_n_0_\(6),
      R => '0'
    );
\axi_c_read_data_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(7),
      Q => \axi_c_read_data_reg_n_0_\(7),
      R => '0'
    );
\axi_c_read_data_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(8),
      Q => \axi_c_read_data_reg_n_0_\(8),
      R => '0'
    );
\axi_c_read_data_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_read_valid,
      D => axi_c_read_data(9),
      Q => \axi_c_read_data_reg_n_0_\(9),
      R => '0'
    );
axi_c_read_data_valid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => axi_c_read_valid,
      Q => axi_c_read_data_valid,
      R => '0'
    );
\countAddrSentRatioFix[15]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(15),
      I1 => \countAddrSentRatioFix_reg_n_0_\(15),
      I2 => read_blocking_ratio(15),
      I3 => \countAddrSentRatioFix[15]_i_2_n_0\,
      O => \countAddrSentRatioFix[15]_i_10_n_0\
    );
\countAddrSentRatioFix[15]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(14),
      I1 => \countAddrSentRatioFix_reg_n_0_\(14),
      I2 => read_blocking_ratio(14),
      I3 => \countAddrSentRatioFix[15]_i_3_n_0\,
      O => \countAddrSentRatioFix[15]_i_11_n_0\
    );
\countAddrSentRatioFix[15]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(13),
      I1 => \countAddrSentRatioFix_reg_n_0_\(13),
      I2 => read_blocking_ratio(13),
      I3 => \countAddrSentRatioFix[15]_i_4_n_0\,
      O => \countAddrSentRatioFix[15]_i_12_n_0\
    );
\countAddrSentRatioFix[15]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(12),
      I1 => \countAddrSentRatioFix_reg_n_0_\(12),
      I2 => read_blocking_ratio(12),
      I3 => \countAddrSentRatioFix[15]_i_5_n_0\,
      O => \countAddrSentRatioFix[15]_i_13_n_0\
    );
\countAddrSentRatioFix[15]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(11),
      I1 => \countAddrSentRatioFix_reg_n_0_\(11),
      I2 => read_blocking_ratio(11),
      I3 => \countAddrSentRatioFix[15]_i_6_n_0\,
      O => \countAddrSentRatioFix[15]_i_14_n_0\
    );
\countAddrSentRatioFix[15]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(10),
      I1 => \countAddrSentRatioFix_reg_n_0_\(10),
      I2 => read_blocking_ratio(10),
      I3 => \countAddrSentRatioFix[15]_i_7_n_0\,
      O => \countAddrSentRatioFix[15]_i_15_n_0\
    );
\countAddrSentRatioFix[15]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(9),
      I1 => \countAddrSentRatioFix_reg_n_0_\(9),
      I2 => read_blocking_ratio(9),
      I3 => \countAddrSentRatioFix[15]_i_8_n_0\,
      O => \countAddrSentRatioFix[15]_i_16_n_0\
    );
\countAddrSentRatioFix[15]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(8),
      I1 => \countAddrSentRatioFix_reg_n_0_\(8),
      I2 => read_blocking_ratio(8),
      I3 => \countAddrSentRatioFix[15]_i_9_n_0\,
      O => \countAddrSentRatioFix[15]_i_17_n_0\
    );
\countAddrSentRatioFix[15]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(14),
      I1 => \countAddrSentRatioFix_reg_n_0_\(14),
      I2 => read_blocking_ratio(14),
      O => \countAddrSentRatioFix[15]_i_2_n_0\
    );
\countAddrSentRatioFix[15]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(13),
      I1 => \countAddrSentRatioFix_reg_n_0_\(13),
      I2 => read_blocking_ratio(13),
      O => \countAddrSentRatioFix[15]_i_3_n_0\
    );
\countAddrSentRatioFix[15]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(12),
      I1 => \countAddrSentRatioFix_reg_n_0_\(12),
      I2 => read_blocking_ratio(12),
      O => \countAddrSentRatioFix[15]_i_4_n_0\
    );
\countAddrSentRatioFix[15]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(11),
      I1 => \countAddrSentRatioFix_reg_n_0_\(11),
      I2 => read_blocking_ratio(11),
      O => \countAddrSentRatioFix[15]_i_5_n_0\
    );
\countAddrSentRatioFix[15]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(10),
      I1 => \countAddrSentRatioFix_reg_n_0_\(10),
      I2 => read_blocking_ratio(10),
      O => \countAddrSentRatioFix[15]_i_6_n_0\
    );
\countAddrSentRatioFix[15]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(9),
      I1 => \countAddrSentRatioFix_reg_n_0_\(9),
      I2 => read_blocking_ratio(9),
      O => \countAddrSentRatioFix[15]_i_7_n_0\
    );
\countAddrSentRatioFix[15]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(8),
      I1 => \countAddrSentRatioFix_reg_n_0_\(8),
      I2 => read_blocking_ratio(8),
      O => \countAddrSentRatioFix[15]_i_8_n_0\
    );
\countAddrSentRatioFix[15]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(7),
      I1 => \countAddrSentRatioFix_reg_n_0_\(7),
      I2 => read_blocking_ratio(7),
      O => \countAddrSentRatioFix[15]_i_9_n_0\
    );
\countAddrSentRatioFix[23]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(23),
      I1 => \countAddrSentRatioFix_reg_n_0_\(23),
      I2 => read_blocking_ratio(23),
      I3 => \countAddrSentRatioFix[23]_i_2_n_0\,
      O => \countAddrSentRatioFix[23]_i_10_n_0\
    );
\countAddrSentRatioFix[23]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(22),
      I1 => \countAddrSentRatioFix_reg_n_0_\(22),
      I2 => read_blocking_ratio(22),
      I3 => \countAddrSentRatioFix[23]_i_3_n_0\,
      O => \countAddrSentRatioFix[23]_i_11_n_0\
    );
\countAddrSentRatioFix[23]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(21),
      I1 => \countAddrSentRatioFix_reg_n_0_\(21),
      I2 => read_blocking_ratio(21),
      I3 => \countAddrSentRatioFix[23]_i_4_n_0\,
      O => \countAddrSentRatioFix[23]_i_12_n_0\
    );
\countAddrSentRatioFix[23]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(20),
      I1 => \countAddrSentRatioFix_reg_n_0_\(20),
      I2 => read_blocking_ratio(20),
      I3 => \countAddrSentRatioFix[23]_i_5_n_0\,
      O => \countAddrSentRatioFix[23]_i_13_n_0\
    );
\countAddrSentRatioFix[23]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(19),
      I1 => \countAddrSentRatioFix_reg_n_0_\(19),
      I2 => read_blocking_ratio(19),
      I3 => \countAddrSentRatioFix[23]_i_6_n_0\,
      O => \countAddrSentRatioFix[23]_i_14_n_0\
    );
\countAddrSentRatioFix[23]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(18),
      I1 => \countAddrSentRatioFix_reg_n_0_\(18),
      I2 => read_blocking_ratio(18),
      I3 => \countAddrSentRatioFix[23]_i_7_n_0\,
      O => \countAddrSentRatioFix[23]_i_15_n_0\
    );
\countAddrSentRatioFix[23]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(17),
      I1 => \countAddrSentRatioFix_reg_n_0_\(17),
      I2 => read_blocking_ratio(17),
      I3 => \countAddrSentRatioFix[23]_i_8_n_0\,
      O => \countAddrSentRatioFix[23]_i_16_n_0\
    );
\countAddrSentRatioFix[23]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(16),
      I1 => \countAddrSentRatioFix_reg_n_0_\(16),
      I2 => read_blocking_ratio(16),
      I3 => \countAddrSentRatioFix[23]_i_9_n_0\,
      O => \countAddrSentRatioFix[23]_i_17_n_0\
    );
\countAddrSentRatioFix[23]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(22),
      I1 => \countAddrSentRatioFix_reg_n_0_\(22),
      I2 => read_blocking_ratio(22),
      O => \countAddrSentRatioFix[23]_i_2_n_0\
    );
\countAddrSentRatioFix[23]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(21),
      I1 => \countAddrSentRatioFix_reg_n_0_\(21),
      I2 => read_blocking_ratio(21),
      O => \countAddrSentRatioFix[23]_i_3_n_0\
    );
\countAddrSentRatioFix[23]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(20),
      I1 => \countAddrSentRatioFix_reg_n_0_\(20),
      I2 => read_blocking_ratio(20),
      O => \countAddrSentRatioFix[23]_i_4_n_0\
    );
\countAddrSentRatioFix[23]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(19),
      I1 => \countAddrSentRatioFix_reg_n_0_\(19),
      I2 => read_blocking_ratio(19),
      O => \countAddrSentRatioFix[23]_i_5_n_0\
    );
\countAddrSentRatioFix[23]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(18),
      I1 => \countAddrSentRatioFix_reg_n_0_\(18),
      I2 => read_blocking_ratio(18),
      O => \countAddrSentRatioFix[23]_i_6_n_0\
    );
\countAddrSentRatioFix[23]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(17),
      I1 => \countAddrSentRatioFix_reg_n_0_\(17),
      I2 => read_blocking_ratio(17),
      O => \countAddrSentRatioFix[23]_i_7_n_0\
    );
\countAddrSentRatioFix[23]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(16),
      I1 => \countAddrSentRatioFix_reg_n_0_\(16),
      I2 => read_blocking_ratio(16),
      O => \countAddrSentRatioFix[23]_i_8_n_0\
    );
\countAddrSentRatioFix[23]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(15),
      I1 => \countAddrSentRatioFix_reg_n_0_\(15),
      I2 => read_blocking_ratio(15),
      O => \countAddrSentRatioFix[23]_i_9_n_0\
    );
\countAddrSentRatioFix[31]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countAddrSentRatioFix[31]_i_2_n_0\,
      I1 => write_blocking_ratio(31),
      I2 => \countAddrSentRatioFix_reg_n_0_\(31),
      I3 => read_blocking_ratio(31),
      O => \countAddrSentRatioFix[31]_i_10_n_0\
    );
\countAddrSentRatioFix[31]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(30),
      I1 => \countAddrSentRatioFix_reg_n_0_\(30),
      I2 => read_blocking_ratio(30),
      I3 => \countAddrSentRatioFix[31]_i_3_n_0\,
      O => \countAddrSentRatioFix[31]_i_11_n_0\
    );
\countAddrSentRatioFix[31]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(29),
      I1 => \countAddrSentRatioFix_reg_n_0_\(29),
      I2 => read_blocking_ratio(29),
      I3 => \countAddrSentRatioFix[31]_i_4_n_0\,
      O => \countAddrSentRatioFix[31]_i_12_n_0\
    );
\countAddrSentRatioFix[31]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(28),
      I1 => \countAddrSentRatioFix_reg_n_0_\(28),
      I2 => read_blocking_ratio(28),
      I3 => \countAddrSentRatioFix[31]_i_5_n_0\,
      O => \countAddrSentRatioFix[31]_i_13_n_0\
    );
\countAddrSentRatioFix[31]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(27),
      I1 => \countAddrSentRatioFix_reg_n_0_\(27),
      I2 => read_blocking_ratio(27),
      I3 => \countAddrSentRatioFix[31]_i_6_n_0\,
      O => \countAddrSentRatioFix[31]_i_14_n_0\
    );
\countAddrSentRatioFix[31]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(26),
      I1 => \countAddrSentRatioFix_reg_n_0_\(26),
      I2 => read_blocking_ratio(26),
      I3 => \countAddrSentRatioFix[31]_i_7_n_0\,
      O => \countAddrSentRatioFix[31]_i_15_n_0\
    );
\countAddrSentRatioFix[31]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(25),
      I1 => \countAddrSentRatioFix_reg_n_0_\(25),
      I2 => read_blocking_ratio(25),
      I3 => \countAddrSentRatioFix[31]_i_8_n_0\,
      O => \countAddrSentRatioFix[31]_i_16_n_0\
    );
\countAddrSentRatioFix[31]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(24),
      I1 => \countAddrSentRatioFix_reg_n_0_\(24),
      I2 => read_blocking_ratio(24),
      I3 => \countAddrSentRatioFix[31]_i_9_n_0\,
      O => \countAddrSentRatioFix[31]_i_17_n_0\
    );
\countAddrSentRatioFix[31]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(30),
      I1 => \countAddrSentRatioFix_reg_n_0_\(30),
      I2 => read_blocking_ratio(30),
      O => \countAddrSentRatioFix[31]_i_2_n_0\
    );
\countAddrSentRatioFix[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(29),
      I1 => \countAddrSentRatioFix_reg_n_0_\(29),
      I2 => read_blocking_ratio(29),
      O => \countAddrSentRatioFix[31]_i_3_n_0\
    );
\countAddrSentRatioFix[31]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(28),
      I1 => \countAddrSentRatioFix_reg_n_0_\(28),
      I2 => read_blocking_ratio(28),
      O => \countAddrSentRatioFix[31]_i_4_n_0\
    );
\countAddrSentRatioFix[31]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(27),
      I1 => \countAddrSentRatioFix_reg_n_0_\(27),
      I2 => read_blocking_ratio(27),
      O => \countAddrSentRatioFix[31]_i_5_n_0\
    );
\countAddrSentRatioFix[31]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(26),
      I1 => \countAddrSentRatioFix_reg_n_0_\(26),
      I2 => read_blocking_ratio(26),
      O => \countAddrSentRatioFix[31]_i_6_n_0\
    );
\countAddrSentRatioFix[31]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(25),
      I1 => \countAddrSentRatioFix_reg_n_0_\(25),
      I2 => read_blocking_ratio(25),
      O => \countAddrSentRatioFix[31]_i_7_n_0\
    );
\countAddrSentRatioFix[31]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(24),
      I1 => \countAddrSentRatioFix_reg_n_0_\(24),
      I2 => read_blocking_ratio(24),
      O => \countAddrSentRatioFix[31]_i_8_n_0\
    );
\countAddrSentRatioFix[31]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(23),
      I1 => \countAddrSentRatioFix_reg_n_0_\(23),
      I2 => read_blocking_ratio(23),
      O => \countAddrSentRatioFix[31]_i_9_n_0\
    );
\countAddrSentRatioFix[39]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_3_n_4\,
      I1 => active_blocking,
      I2 => \read_ticks_reg[31]_i_4_n_0\,
      I3 => \countDataReceivedRatioFix_reg[39]_i_3_n_0\,
      O => countAddrSentRatioFix
    );
\countAddrSentRatioFix[39]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(32),
      I1 => \countAddrSentRatioFix_reg_n_0_\(33),
      O => \countAddrSentRatioFix[39]_i_10_n_0\
    );
\countAddrSentRatioFix[39]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E71"
    )
        port map (
      I0 => read_blocking_ratio(31),
      I1 => \countAddrSentRatioFix_reg_n_0_\(31),
      I2 => write_blocking_ratio(31),
      I3 => \countAddrSentRatioFix_reg_n_0_\(32),
      O => \countAddrSentRatioFix[39]_i_11_n_0\
    );
\countAddrSentRatioFix[39]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(31),
      I1 => \countAddrSentRatioFix_reg_n_0_\(31),
      I2 => read_blocking_ratio(31),
      O => \countAddrSentRatioFix[39]_i_3_n_0\
    );
\countAddrSentRatioFix[39]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(38),
      I1 => \countAddrSentRatioFix_reg_n_0_\(39),
      O => \countAddrSentRatioFix[39]_i_4_n_0\
    );
\countAddrSentRatioFix[39]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(37),
      I1 => \countAddrSentRatioFix_reg_n_0_\(38),
      O => \countAddrSentRatioFix[39]_i_5_n_0\
    );
\countAddrSentRatioFix[39]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(36),
      I1 => \countAddrSentRatioFix_reg_n_0_\(37),
      O => \countAddrSentRatioFix[39]_i_6_n_0\
    );
\countAddrSentRatioFix[39]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(35),
      I1 => \countAddrSentRatioFix_reg_n_0_\(36),
      O => \countAddrSentRatioFix[39]_i_7_n_0\
    );
\countAddrSentRatioFix[39]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(34),
      I1 => \countAddrSentRatioFix_reg_n_0_\(35),
      O => \countAddrSentRatioFix[39]_i_8_n_0\
    );
\countAddrSentRatioFix[39]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(33),
      I1 => \countAddrSentRatioFix_reg_n_0_\(34),
      O => \countAddrSentRatioFix[39]_i_9_n_0\
    );
\countAddrSentRatioFix[7]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(6),
      I1 => \countAddrSentRatioFix_reg_n_0_\(6),
      I2 => read_blocking_ratio(6),
      I3 => \countAddrSentRatioFix[7]_i_3_n_0\,
      O => \countAddrSentRatioFix[7]_i_10_n_0\
    );
\countAddrSentRatioFix[7]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(5),
      I1 => \countAddrSentRatioFix_reg_n_0_\(5),
      I2 => read_blocking_ratio(5),
      I3 => \countAddrSentRatioFix[7]_i_4_n_0\,
      O => \countAddrSentRatioFix[7]_i_11_n_0\
    );
\countAddrSentRatioFix[7]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(4),
      I1 => \countAddrSentRatioFix_reg_n_0_\(4),
      I2 => read_blocking_ratio(4),
      I3 => \countAddrSentRatioFix[7]_i_5_n_0\,
      O => \countAddrSentRatioFix[7]_i_12_n_0\
    );
\countAddrSentRatioFix[7]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(3),
      I1 => \countAddrSentRatioFix_reg_n_0_\(3),
      I2 => read_blocking_ratio(3),
      I3 => \countAddrSentRatioFix[7]_i_6_n_0\,
      O => \countAddrSentRatioFix[7]_i_13_n_0\
    );
\countAddrSentRatioFix[7]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(2),
      I1 => \countAddrSentRatioFix_reg_n_0_\(2),
      I2 => read_blocking_ratio(2),
      I3 => \countAddrSentRatioFix[7]_i_7_n_0\,
      O => \countAddrSentRatioFix[7]_i_14_n_0\
    );
\countAddrSentRatioFix[7]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(1),
      I1 => \countAddrSentRatioFix_reg_n_0_\(1),
      I2 => read_blocking_ratio(1),
      I3 => \countAddrSentRatioFix[7]_i_8_n_0\,
      O => \countAddrSentRatioFix[7]_i_15_n_0\
    );
\countAddrSentRatioFix[7]_i_16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(0),
      I1 => write_blocking_ratio(0),
      I2 => read_blocking_ratio(0),
      O => \countAddrSentRatioFix[7]_i_16_n_0\
    );
\countAddrSentRatioFix[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(6),
      I1 => \countAddrSentRatioFix_reg_n_0_\(6),
      I2 => read_blocking_ratio(6),
      O => \countAddrSentRatioFix[7]_i_2_n_0\
    );
\countAddrSentRatioFix[7]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(5),
      I1 => \countAddrSentRatioFix_reg_n_0_\(5),
      I2 => read_blocking_ratio(5),
      O => \countAddrSentRatioFix[7]_i_3_n_0\
    );
\countAddrSentRatioFix[7]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(4),
      I1 => \countAddrSentRatioFix_reg_n_0_\(4),
      I2 => read_blocking_ratio(4),
      O => \countAddrSentRatioFix[7]_i_4_n_0\
    );
\countAddrSentRatioFix[7]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(3),
      I1 => \countAddrSentRatioFix_reg_n_0_\(3),
      I2 => read_blocking_ratio(3),
      O => \countAddrSentRatioFix[7]_i_5_n_0\
    );
\countAddrSentRatioFix[7]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(2),
      I1 => \countAddrSentRatioFix_reg_n_0_\(2),
      I2 => read_blocking_ratio(2),
      O => \countAddrSentRatioFix[7]_i_6_n_0\
    );
\countAddrSentRatioFix[7]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => write_blocking_ratio(1),
      I1 => \countAddrSentRatioFix_reg_n_0_\(1),
      I2 => read_blocking_ratio(1),
      O => \countAddrSentRatioFix[7]_i_7_n_0\
    );
\countAddrSentRatioFix[7]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \countAddrSentRatioFix_reg_n_0_\(0),
      I1 => write_blocking_ratio(0),
      O => \countAddrSentRatioFix[7]_i_8_n_0\
    );
\countAddrSentRatioFix[7]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => write_blocking_ratio(7),
      I1 => \countAddrSentRatioFix_reg_n_0_\(7),
      I2 => read_blocking_ratio(7),
      I3 => \countAddrSentRatioFix[7]_i_2_n_0\,
      O => \countAddrSentRatioFix[7]_i_9_n_0\
    );
\countAddrSentRatioFix_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_15\,
      Q => \countAddrSentRatioFix_reg_n_0_\(0),
      R => '0'
    );
\countAddrSentRatioFix_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_13\,
      Q => \countAddrSentRatioFix_reg_n_0_\(10),
      R => '0'
    );
\countAddrSentRatioFix_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_12\,
      Q => \countAddrSentRatioFix_reg_n_0_\(11),
      R => '0'
    );
\countAddrSentRatioFix_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_11\,
      Q => \countAddrSentRatioFix_reg_n_0_\(12),
      R => '0'
    );
\countAddrSentRatioFix_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_10\,
      Q => \countAddrSentRatioFix_reg_n_0_\(13),
      R => '0'
    );
\countAddrSentRatioFix_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_9\,
      Q => \countAddrSentRatioFix_reg_n_0_\(14),
      R => '0'
    );
\countAddrSentRatioFix_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_8\,
      Q => \countAddrSentRatioFix_reg_n_0_\(15),
      R => '0'
    );
\countAddrSentRatioFix_reg[15]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSentRatioFix_reg[7]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrSentRatioFix_reg[15]_i_1_n_0\,
      CO(6) => \countAddrSentRatioFix_reg[15]_i_1_n_1\,
      CO(5) => \countAddrSentRatioFix_reg[15]_i_1_n_2\,
      CO(4) => \countAddrSentRatioFix_reg[15]_i_1_n_3\,
      CO(3) => \NLW_countAddrSentRatioFix_reg[15]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSentRatioFix_reg[15]_i_1_n_5\,
      CO(1) => \countAddrSentRatioFix_reg[15]_i_1_n_6\,
      CO(0) => \countAddrSentRatioFix_reg[15]_i_1_n_7\,
      DI(7) => \countAddrSentRatioFix[15]_i_2_n_0\,
      DI(6) => \countAddrSentRatioFix[15]_i_3_n_0\,
      DI(5) => \countAddrSentRatioFix[15]_i_4_n_0\,
      DI(4) => \countAddrSentRatioFix[15]_i_5_n_0\,
      DI(3) => \countAddrSentRatioFix[15]_i_6_n_0\,
      DI(2) => \countAddrSentRatioFix[15]_i_7_n_0\,
      DI(1) => \countAddrSentRatioFix[15]_i_8_n_0\,
      DI(0) => \countAddrSentRatioFix[15]_i_9_n_0\,
      O(7) => \countAddrSentRatioFix_reg[15]_i_1_n_8\,
      O(6) => \countAddrSentRatioFix_reg[15]_i_1_n_9\,
      O(5) => \countAddrSentRatioFix_reg[15]_i_1_n_10\,
      O(4) => \countAddrSentRatioFix_reg[15]_i_1_n_11\,
      O(3) => \countAddrSentRatioFix_reg[15]_i_1_n_12\,
      O(2) => \countAddrSentRatioFix_reg[15]_i_1_n_13\,
      O(1) => \countAddrSentRatioFix_reg[15]_i_1_n_14\,
      O(0) => \countAddrSentRatioFix_reg[15]_i_1_n_15\,
      S(7) => \countAddrSentRatioFix[15]_i_10_n_0\,
      S(6) => \countAddrSentRatioFix[15]_i_11_n_0\,
      S(5) => \countAddrSentRatioFix[15]_i_12_n_0\,
      S(4) => \countAddrSentRatioFix[15]_i_13_n_0\,
      S(3) => \countAddrSentRatioFix[15]_i_14_n_0\,
      S(2) => \countAddrSentRatioFix[15]_i_15_n_0\,
      S(1) => \countAddrSentRatioFix[15]_i_16_n_0\,
      S(0) => \countAddrSentRatioFix[15]_i_17_n_0\
    );
\countAddrSentRatioFix_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_15\,
      Q => \countAddrSentRatioFix_reg_n_0_\(16),
      R => '0'
    );
\countAddrSentRatioFix_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_14\,
      Q => \countAddrSentRatioFix_reg_n_0_\(17),
      R => '0'
    );
\countAddrSentRatioFix_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_13\,
      Q => \countAddrSentRatioFix_reg_n_0_\(18),
      R => '0'
    );
\countAddrSentRatioFix_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_12\,
      Q => \countAddrSentRatioFix_reg_n_0_\(19),
      R => '0'
    );
\countAddrSentRatioFix_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_14\,
      Q => \countAddrSentRatioFix_reg_n_0_\(1),
      R => '0'
    );
\countAddrSentRatioFix_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_11\,
      Q => \countAddrSentRatioFix_reg_n_0_\(20),
      R => '0'
    );
\countAddrSentRatioFix_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_10\,
      Q => \countAddrSentRatioFix_reg_n_0_\(21),
      R => '0'
    );
\countAddrSentRatioFix_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_9\,
      Q => \countAddrSentRatioFix_reg_n_0_\(22),
      R => '0'
    );
\countAddrSentRatioFix_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[23]_i_1_n_8\,
      Q => \countAddrSentRatioFix_reg_n_0_\(23),
      R => '0'
    );
\countAddrSentRatioFix_reg[23]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSentRatioFix_reg[15]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrSentRatioFix_reg[23]_i_1_n_0\,
      CO(6) => \countAddrSentRatioFix_reg[23]_i_1_n_1\,
      CO(5) => \countAddrSentRatioFix_reg[23]_i_1_n_2\,
      CO(4) => \countAddrSentRatioFix_reg[23]_i_1_n_3\,
      CO(3) => \NLW_countAddrSentRatioFix_reg[23]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSentRatioFix_reg[23]_i_1_n_5\,
      CO(1) => \countAddrSentRatioFix_reg[23]_i_1_n_6\,
      CO(0) => \countAddrSentRatioFix_reg[23]_i_1_n_7\,
      DI(7) => \countAddrSentRatioFix[23]_i_2_n_0\,
      DI(6) => \countAddrSentRatioFix[23]_i_3_n_0\,
      DI(5) => \countAddrSentRatioFix[23]_i_4_n_0\,
      DI(4) => \countAddrSentRatioFix[23]_i_5_n_0\,
      DI(3) => \countAddrSentRatioFix[23]_i_6_n_0\,
      DI(2) => \countAddrSentRatioFix[23]_i_7_n_0\,
      DI(1) => \countAddrSentRatioFix[23]_i_8_n_0\,
      DI(0) => \countAddrSentRatioFix[23]_i_9_n_0\,
      O(7) => \countAddrSentRatioFix_reg[23]_i_1_n_8\,
      O(6) => \countAddrSentRatioFix_reg[23]_i_1_n_9\,
      O(5) => \countAddrSentRatioFix_reg[23]_i_1_n_10\,
      O(4) => \countAddrSentRatioFix_reg[23]_i_1_n_11\,
      O(3) => \countAddrSentRatioFix_reg[23]_i_1_n_12\,
      O(2) => \countAddrSentRatioFix_reg[23]_i_1_n_13\,
      O(1) => \countAddrSentRatioFix_reg[23]_i_1_n_14\,
      O(0) => \countAddrSentRatioFix_reg[23]_i_1_n_15\,
      S(7) => \countAddrSentRatioFix[23]_i_10_n_0\,
      S(6) => \countAddrSentRatioFix[23]_i_11_n_0\,
      S(5) => \countAddrSentRatioFix[23]_i_12_n_0\,
      S(4) => \countAddrSentRatioFix[23]_i_13_n_0\,
      S(3) => \countAddrSentRatioFix[23]_i_14_n_0\,
      S(2) => \countAddrSentRatioFix[23]_i_15_n_0\,
      S(1) => \countAddrSentRatioFix[23]_i_16_n_0\,
      S(0) => \countAddrSentRatioFix[23]_i_17_n_0\
    );
\countAddrSentRatioFix_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_15\,
      Q => \countAddrSentRatioFix_reg_n_0_\(24),
      R => '0'
    );
\countAddrSentRatioFix_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_14\,
      Q => \countAddrSentRatioFix_reg_n_0_\(25),
      R => '0'
    );
\countAddrSentRatioFix_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_13\,
      Q => \countAddrSentRatioFix_reg_n_0_\(26),
      R => '0'
    );
\countAddrSentRatioFix_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_12\,
      Q => \countAddrSentRatioFix_reg_n_0_\(27),
      R => '0'
    );
\countAddrSentRatioFix_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_11\,
      Q => \countAddrSentRatioFix_reg_n_0_\(28),
      R => '0'
    );
\countAddrSentRatioFix_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_10\,
      Q => \countAddrSentRatioFix_reg_n_0_\(29),
      R => '0'
    );
\countAddrSentRatioFix_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_13\,
      Q => \countAddrSentRatioFix_reg_n_0_\(2),
      R => '0'
    );
\countAddrSentRatioFix_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_9\,
      Q => \countAddrSentRatioFix_reg_n_0_\(30),
      R => '0'
    );
\countAddrSentRatioFix_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[31]_i_1_n_8\,
      Q => \countAddrSentRatioFix_reg_n_0_\(31),
      R => '0'
    );
\countAddrSentRatioFix_reg[31]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSentRatioFix_reg[23]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrSentRatioFix_reg[31]_i_1_n_0\,
      CO(6) => \countAddrSentRatioFix_reg[31]_i_1_n_1\,
      CO(5) => \countAddrSentRatioFix_reg[31]_i_1_n_2\,
      CO(4) => \countAddrSentRatioFix_reg[31]_i_1_n_3\,
      CO(3) => \NLW_countAddrSentRatioFix_reg[31]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSentRatioFix_reg[31]_i_1_n_5\,
      CO(1) => \countAddrSentRatioFix_reg[31]_i_1_n_6\,
      CO(0) => \countAddrSentRatioFix_reg[31]_i_1_n_7\,
      DI(7) => \countAddrSentRatioFix[31]_i_2_n_0\,
      DI(6) => \countAddrSentRatioFix[31]_i_3_n_0\,
      DI(5) => \countAddrSentRatioFix[31]_i_4_n_0\,
      DI(4) => \countAddrSentRatioFix[31]_i_5_n_0\,
      DI(3) => \countAddrSentRatioFix[31]_i_6_n_0\,
      DI(2) => \countAddrSentRatioFix[31]_i_7_n_0\,
      DI(1) => \countAddrSentRatioFix[31]_i_8_n_0\,
      DI(0) => \countAddrSentRatioFix[31]_i_9_n_0\,
      O(7) => \countAddrSentRatioFix_reg[31]_i_1_n_8\,
      O(6) => \countAddrSentRatioFix_reg[31]_i_1_n_9\,
      O(5) => \countAddrSentRatioFix_reg[31]_i_1_n_10\,
      O(4) => \countAddrSentRatioFix_reg[31]_i_1_n_11\,
      O(3) => \countAddrSentRatioFix_reg[31]_i_1_n_12\,
      O(2) => \countAddrSentRatioFix_reg[31]_i_1_n_13\,
      O(1) => \countAddrSentRatioFix_reg[31]_i_1_n_14\,
      O(0) => \countAddrSentRatioFix_reg[31]_i_1_n_15\,
      S(7) => \countAddrSentRatioFix[31]_i_10_n_0\,
      S(6) => \countAddrSentRatioFix[31]_i_11_n_0\,
      S(5) => \countAddrSentRatioFix[31]_i_12_n_0\,
      S(4) => \countAddrSentRatioFix[31]_i_13_n_0\,
      S(3) => \countAddrSentRatioFix[31]_i_14_n_0\,
      S(2) => \countAddrSentRatioFix[31]_i_15_n_0\,
      S(1) => \countAddrSentRatioFix[31]_i_16_n_0\,
      S(0) => \countAddrSentRatioFix[31]_i_17_n_0\
    );
\countAddrSentRatioFix_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_15\,
      Q => \countAddrSentRatioFix_reg_n_0_\(32),
      R => '0'
    );
\countAddrSentRatioFix_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_14\,
      Q => \countAddrSentRatioFix_reg_n_0_\(33),
      R => '0'
    );
\countAddrSentRatioFix_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_13\,
      Q => \countAddrSentRatioFix_reg_n_0_\(34),
      R => '0'
    );
\countAddrSentRatioFix_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_12\,
      Q => \countAddrSentRatioFix_reg_n_0_\(35),
      R => '0'
    );
\countAddrSentRatioFix_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_11\,
      Q => \countAddrSentRatioFix_reg_n_0_\(36),
      R => '0'
    );
\countAddrSentRatioFix_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_10\,
      Q => \countAddrSentRatioFix_reg_n_0_\(37),
      R => '0'
    );
\countAddrSentRatioFix_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_9\,
      Q => \countAddrSentRatioFix_reg_n_0_\(38),
      R => '0'
    );
\countAddrSentRatioFix_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[39]_i_2_n_8\,
      Q => \countAddrSentRatioFix_reg_n_0_\(39),
      R => '0'
    );
\countAddrSentRatioFix_reg[39]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSentRatioFix_reg[31]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countAddrSentRatioFix_reg[39]_i_2_CO_UNCONNECTED\(7),
      CO(6) => \countAddrSentRatioFix_reg[39]_i_2_n_1\,
      CO(5) => \countAddrSentRatioFix_reg[39]_i_2_n_2\,
      CO(4) => \countAddrSentRatioFix_reg[39]_i_2_n_3\,
      CO(3) => \NLW_countAddrSentRatioFix_reg[39]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSentRatioFix_reg[39]_i_2_n_5\,
      CO(1) => \countAddrSentRatioFix_reg[39]_i_2_n_6\,
      CO(0) => \countAddrSentRatioFix_reg[39]_i_2_n_7\,
      DI(7) => '0',
      DI(6 downto 1) => \countAddrSentRatioFix_reg_n_0_\(37 downto 32),
      DI(0) => \countAddrSentRatioFix[39]_i_3_n_0\,
      O(7) => \countAddrSentRatioFix_reg[39]_i_2_n_8\,
      O(6) => \countAddrSentRatioFix_reg[39]_i_2_n_9\,
      O(5) => \countAddrSentRatioFix_reg[39]_i_2_n_10\,
      O(4) => \countAddrSentRatioFix_reg[39]_i_2_n_11\,
      O(3) => \countAddrSentRatioFix_reg[39]_i_2_n_12\,
      O(2) => \countAddrSentRatioFix_reg[39]_i_2_n_13\,
      O(1) => \countAddrSentRatioFix_reg[39]_i_2_n_14\,
      O(0) => \countAddrSentRatioFix_reg[39]_i_2_n_15\,
      S(7) => \countAddrSentRatioFix[39]_i_4_n_0\,
      S(6) => \countAddrSentRatioFix[39]_i_5_n_0\,
      S(5) => \countAddrSentRatioFix[39]_i_6_n_0\,
      S(4) => \countAddrSentRatioFix[39]_i_7_n_0\,
      S(3) => \countAddrSentRatioFix[39]_i_8_n_0\,
      S(2) => \countAddrSentRatioFix[39]_i_9_n_0\,
      S(1) => \countAddrSentRatioFix[39]_i_10_n_0\,
      S(0) => \countAddrSentRatioFix[39]_i_11_n_0\
    );
\countAddrSentRatioFix_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_12\,
      Q => \countAddrSentRatioFix_reg_n_0_\(3),
      R => '0'
    );
\countAddrSentRatioFix_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_11\,
      Q => \countAddrSentRatioFix_reg_n_0_\(4),
      R => '0'
    );
\countAddrSentRatioFix_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_10\,
      Q => \countAddrSentRatioFix_reg_n_0_\(5),
      R => '0'
    );
\countAddrSentRatioFix_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_9\,
      Q => \countAddrSentRatioFix_reg_n_0_\(6),
      R => '0'
    );
\countAddrSentRatioFix_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[7]_i_1_n_8\,
      Q => \countAddrSentRatioFix_reg_n_0_\(7),
      R => '0'
    );
\countAddrSentRatioFix_reg[7]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countAddrSentRatioFix_reg[7]_i_1_n_0\,
      CO(6) => \countAddrSentRatioFix_reg[7]_i_1_n_1\,
      CO(5) => \countAddrSentRatioFix_reg[7]_i_1_n_2\,
      CO(4) => \countAddrSentRatioFix_reg[7]_i_1_n_3\,
      CO(3) => \NLW_countAddrSentRatioFix_reg[7]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSentRatioFix_reg[7]_i_1_n_5\,
      CO(1) => \countAddrSentRatioFix_reg[7]_i_1_n_6\,
      CO(0) => \countAddrSentRatioFix_reg[7]_i_1_n_7\,
      DI(7) => \countAddrSentRatioFix[7]_i_2_n_0\,
      DI(6) => \countAddrSentRatioFix[7]_i_3_n_0\,
      DI(5) => \countAddrSentRatioFix[7]_i_4_n_0\,
      DI(4) => \countAddrSentRatioFix[7]_i_5_n_0\,
      DI(3) => \countAddrSentRatioFix[7]_i_6_n_0\,
      DI(2) => \countAddrSentRatioFix[7]_i_7_n_0\,
      DI(1) => \countAddrSentRatioFix[7]_i_8_n_0\,
      DI(0) => read_blocking_ratio(0),
      O(7) => \countAddrSentRatioFix_reg[7]_i_1_n_8\,
      O(6) => \countAddrSentRatioFix_reg[7]_i_1_n_9\,
      O(5) => \countAddrSentRatioFix_reg[7]_i_1_n_10\,
      O(4) => \countAddrSentRatioFix_reg[7]_i_1_n_11\,
      O(3) => \countAddrSentRatioFix_reg[7]_i_1_n_12\,
      O(2) => \countAddrSentRatioFix_reg[7]_i_1_n_13\,
      O(1) => \countAddrSentRatioFix_reg[7]_i_1_n_14\,
      O(0) => \countAddrSentRatioFix_reg[7]_i_1_n_15\,
      S(7) => \countAddrSentRatioFix[7]_i_9_n_0\,
      S(6) => \countAddrSentRatioFix[7]_i_10_n_0\,
      S(5) => \countAddrSentRatioFix[7]_i_11_n_0\,
      S(4) => \countAddrSentRatioFix[7]_i_12_n_0\,
      S(3) => \countAddrSentRatioFix[7]_i_13_n_0\,
      S(2) => \countAddrSentRatioFix[7]_i_14_n_0\,
      S(1) => \countAddrSentRatioFix[7]_i_15_n_0\,
      S(0) => \countAddrSentRatioFix[7]_i_16_n_0\
    );
\countAddrSentRatioFix_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_15\,
      Q => \countAddrSentRatioFix_reg_n_0_\(8),
      R => '0'
    );
\countAddrSentRatioFix_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countAddrSentRatioFix,
      D => \countAddrSentRatioFix_reg[15]_i_1_n_14\,
      Q => \countAddrSentRatioFix_reg_n_0_\(9),
      R => '0'
    );
\countAddrSent[31]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => active_runtime0,
      I1 => active_runtime1,
      I2 => active_blocking,
      I3 => \countDataReceived[39]_i_7_n_0\,
      I4 => active_runtime2,
      I5 => active_runtime3,
      O => \countAddrSent[31]_i_3_n_0\
    );
\countAddrSent[32]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(32),
      I2 => reset_cmd,
      O => \countAddrSent[32]_i_1_n_0\
    );
\countAddrSent[33]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(33),
      I2 => reset_cmd,
      O => \countAddrSent[33]_i_1_n_0\
    );
\countAddrSent[34]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(34),
      I2 => reset_cmd,
      O => \countAddrSent[34]_i_1_n_0\
    );
\countAddrSent[35]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(35),
      I2 => reset_cmd,
      O => \countAddrSent[35]_i_1_n_0\
    );
\countAddrSent[36]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(36),
      I2 => reset_cmd,
      O => \countAddrSent[36]_i_1_n_0\
    );
\countAddrSent[37]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(37),
      I2 => reset_cmd,
      O => \countAddrSent[37]_i_1_n_0\
    );
\countAddrSent[38]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(38),
      I2 => reset_cmd,
      O => \countAddrSent[38]_i_1_n_0\
    );
\countAddrSent[39]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => writeAbusy,
      I3 => \^countaddrsent_reg[1]_0\(0),
      O => \countAddrSent[39]_i_1_n_0\
    );
\countAddrSent[39]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(34),
      I1 => countAddrSent(34),
      I2 => countAddrSent(35),
      I3 => countAddrToBeSent(35),
      O => \countAddrSent[39]_i_10_n_0\
    );
\countAddrSent[39]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(32),
      I1 => countAddrSent(32),
      I2 => countAddrSent(33),
      I3 => countAddrToBeSent(33),
      O => \countAddrSent[39]_i_11_n_0\
    );
\countAddrSent[39]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(38),
      I1 => countAddrSent(38),
      I2 => countAddrToBeSent(39),
      I3 => countAddrSent(39),
      O => \countAddrSent[39]_i_12_n_0\
    );
\countAddrSent[39]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(36),
      I1 => countAddrSent(36),
      I2 => countAddrToBeSent(37),
      I3 => countAddrSent(37),
      O => \countAddrSent[39]_i_13_n_0\
    );
\countAddrSent[39]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(34),
      I1 => countAddrSent(34),
      I2 => countAddrToBeSent(35),
      I3 => countAddrSent(35),
      O => \countAddrSent[39]_i_14_n_0\
    );
\countAddrSent[39]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(32),
      I1 => countAddrSent(32),
      I2 => countAddrToBeSent(33),
      I3 => countAddrSent(33),
      O => \countAddrSent[39]_i_15_n_0\
    );
\countAddrSent[39]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(30),
      I1 => countAddrSent(30),
      I2 => countAddrSent(31),
      I3 => countAddrToBeSent(31),
      O => \countAddrSent[39]_i_17_n_0\
    );
\countAddrSent[39]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(28),
      I1 => countAddrSent(28),
      I2 => countAddrSent(29),
      I3 => countAddrToBeSent(29),
      O => \countAddrSent[39]_i_18_n_0\
    );
\countAddrSent[39]_i_19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(26),
      I1 => countAddrSent(26),
      I2 => countAddrSent(27),
      I3 => countAddrToBeSent(27),
      O => \countAddrSent[39]_i_19_n_0\
    );
\countAddrSent[39]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countAddrSent0(39),
      I2 => reset_cmd,
      O => \countAddrSent[39]_i_2_n_0\
    );
\countAddrSent[39]_i_20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(24),
      I1 => countAddrSent(24),
      I2 => countAddrSent(25),
      I3 => countAddrToBeSent(25),
      O => \countAddrSent[39]_i_20_n_0\
    );
\countAddrSent[39]_i_21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(22),
      I1 => countAddrSent(22),
      I2 => countAddrSent(23),
      I3 => countAddrToBeSent(23),
      O => \countAddrSent[39]_i_21_n_0\
    );
\countAddrSent[39]_i_22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(20),
      I1 => countAddrSent(20),
      I2 => countAddrSent(21),
      I3 => countAddrToBeSent(21),
      O => \countAddrSent[39]_i_22_n_0\
    );
\countAddrSent[39]_i_23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(18),
      I1 => countAddrSent(18),
      I2 => countAddrSent(19),
      I3 => countAddrToBeSent(19),
      O => \countAddrSent[39]_i_23_n_0\
    );
\countAddrSent[39]_i_24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(16),
      I1 => countAddrSent(16),
      I2 => countAddrSent(17),
      I3 => countAddrToBeSent(17),
      O => \countAddrSent[39]_i_24_n_0\
    );
\countAddrSent[39]_i_25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(30),
      I1 => countAddrSent(30),
      I2 => countAddrToBeSent(31),
      I3 => countAddrSent(31),
      O => \countAddrSent[39]_i_25_n_0\
    );
\countAddrSent[39]_i_26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(28),
      I1 => countAddrSent(28),
      I2 => countAddrToBeSent(29),
      I3 => countAddrSent(29),
      O => \countAddrSent[39]_i_26_n_0\
    );
\countAddrSent[39]_i_27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(26),
      I1 => countAddrSent(26),
      I2 => countAddrToBeSent(27),
      I3 => countAddrSent(27),
      O => \countAddrSent[39]_i_27_n_0\
    );
\countAddrSent[39]_i_28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(24),
      I1 => countAddrSent(24),
      I2 => countAddrToBeSent(25),
      I3 => countAddrSent(25),
      O => \countAddrSent[39]_i_28_n_0\
    );
\countAddrSent[39]_i_29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(22),
      I1 => countAddrSent(22),
      I2 => countAddrToBeSent(23),
      I3 => countAddrSent(23),
      O => \countAddrSent[39]_i_29_n_0\
    );
\countAddrSent[39]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => active_runtime0,
      I1 => active_runtime1,
      I2 => active_blocking,
      I3 => \countDataReceived[39]_i_7_n_0\,
      I4 => active_runtime2,
      I5 => active_runtime3,
      O => \countAddrSent[39]_i_3_n_0\
    );
\countAddrSent[39]_i_30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(20),
      I1 => countAddrSent(20),
      I2 => countAddrToBeSent(21),
      I3 => countAddrSent(21),
      O => \countAddrSent[39]_i_30_n_0\
    );
\countAddrSent[39]_i_31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(18),
      I1 => countAddrSent(18),
      I2 => countAddrToBeSent(19),
      I3 => countAddrSent(19),
      O => \countAddrSent[39]_i_31_n_0\
    );
\countAddrSent[39]_i_32\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(16),
      I1 => countAddrSent(16),
      I2 => countAddrToBeSent(17),
      I3 => countAddrSent(17),
      O => \countAddrSent[39]_i_32_n_0\
    );
\countAddrSent[39]_i_33\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(14),
      I1 => countAddrSent(14),
      I2 => countAddrSent(15),
      I3 => countAddrToBeSent(15),
      O => \countAddrSent[39]_i_33_n_0\
    );
\countAddrSent[39]_i_34\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(12),
      I1 => countAddrSent(12),
      I2 => countAddrSent(13),
      I3 => countAddrToBeSent(13),
      O => \countAddrSent[39]_i_34_n_0\
    );
\countAddrSent[39]_i_35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(10),
      I1 => countAddrSent(10),
      I2 => countAddrSent(11),
      I3 => countAddrToBeSent(11),
      O => \countAddrSent[39]_i_35_n_0\
    );
\countAddrSent[39]_i_36\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(8),
      I1 => countAddrSent(8),
      I2 => countAddrSent(9),
      I3 => countAddrToBeSent(9),
      O => \countAddrSent[39]_i_36_n_0\
    );
\countAddrSent[39]_i_37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(6),
      I1 => countAddrSent(6),
      I2 => countAddrSent(7),
      I3 => countAddrToBeSent(7),
      O => \countAddrSent[39]_i_37_n_0\
    );
\countAddrSent[39]_i_38\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(4),
      I1 => countAddrSent(4),
      I2 => countAddrSent(5),
      I3 => countAddrToBeSent(5),
      O => \countAddrSent[39]_i_38_n_0\
    );
\countAddrSent[39]_i_39\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(2),
      I1 => countAddrSent(2),
      I2 => countAddrSent(3),
      I3 => countAddrToBeSent(3),
      O => \countAddrSent[39]_i_39_n_0\
    );
\countAddrSent[39]_i_40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(0),
      I1 => countAddrSent(0),
      I2 => countAddrSent(1),
      I3 => countAddrToBeSent(1),
      O => \countAddrSent[39]_i_40_n_0\
    );
\countAddrSent[39]_i_41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(14),
      I1 => countAddrSent(14),
      I2 => countAddrToBeSent(15),
      I3 => countAddrSent(15),
      O => \countAddrSent[39]_i_41_n_0\
    );
\countAddrSent[39]_i_42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(12),
      I1 => countAddrSent(12),
      I2 => countAddrToBeSent(13),
      I3 => countAddrSent(13),
      O => \countAddrSent[39]_i_42_n_0\
    );
\countAddrSent[39]_i_43\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(10),
      I1 => countAddrSent(10),
      I2 => countAddrToBeSent(11),
      I3 => countAddrSent(11),
      O => \countAddrSent[39]_i_43_n_0\
    );
\countAddrSent[39]_i_44\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(8),
      I1 => countAddrSent(8),
      I2 => countAddrToBeSent(9),
      I3 => countAddrSent(9),
      O => \countAddrSent[39]_i_44_n_0\
    );
\countAddrSent[39]_i_45\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(6),
      I1 => countAddrSent(6),
      I2 => countAddrToBeSent(7),
      I3 => countAddrSent(7),
      O => \countAddrSent[39]_i_45_n_0\
    );
\countAddrSent[39]_i_46\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(4),
      I1 => countAddrSent(4),
      I2 => countAddrToBeSent(5),
      I3 => countAddrSent(5),
      O => \countAddrSent[39]_i_46_n_0\
    );
\countAddrSent[39]_i_47\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(2),
      I1 => countAddrSent(2),
      I2 => countAddrToBeSent(3),
      I3 => countAddrSent(3),
      O => \countAddrSent[39]_i_47_n_0\
    );
\countAddrSent[39]_i_48\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countAddrToBeSent(0),
      I1 => countAddrSent(0),
      I2 => countAddrToBeSent(1),
      I3 => countAddrSent(1),
      O => \countAddrSent[39]_i_48_n_0\
    );
\countAddrSent[39]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => active_runtime0,
      I1 => active_runtime1,
      I2 => active_blocking,
      I3 => \countDataReceived[39]_i_7_n_0\,
      I4 => active_runtime2,
      I5 => active_runtime3,
      O => \countAddrSent[39]_i_5_n_0\
    );
\countAddrSent[39]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(38),
      I1 => countAddrSent(38),
      I2 => countAddrSent(39),
      I3 => countAddrToBeSent(39),
      O => \countAddrSent[39]_i_8_n_0\
    );
\countAddrSent[39]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countAddrToBeSent(36),
      I1 => countAddrSent(36),
      I2 => countAddrSent(37),
      I3 => countAddrToBeSent(37),
      O => \countAddrSent[39]_i_9_n_0\
    );
\countAddrSent_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_295,
      Q => countAddrSent(0),
      R => '0'
    );
\countAddrSent_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_285,
      Q => countAddrSent(10),
      R => '0'
    );
\countAddrSent_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_284,
      Q => countAddrSent(11),
      R => '0'
    );
\countAddrSent_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_283,
      Q => countAddrSent(12),
      R => '0'
    );
\countAddrSent_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_282,
      Q => countAddrSent(13),
      R => '0'
    );
\countAddrSent_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_281,
      Q => countAddrSent(14),
      R => '0'
    );
\countAddrSent_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_280,
      Q => countAddrSent(15),
      R => '0'
    );
\countAddrSent_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_279,
      Q => countAddrSent(16),
      R => '0'
    );
\countAddrSent_reg[16]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSent_reg[8]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrSent_reg[16]_i_2_n_0\,
      CO(6) => \countAddrSent_reg[16]_i_2_n_1\,
      CO(5) => \countAddrSent_reg[16]_i_2_n_2\,
      CO(4) => \countAddrSent_reg[16]_i_2_n_3\,
      CO(3) => \NLW_countAddrSent_reg[16]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSent_reg[16]_i_2_n_5\,
      CO(1) => \countAddrSent_reg[16]_i_2_n_6\,
      CO(0) => \countAddrSent_reg[16]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrSent0(16 downto 9),
      S(7 downto 0) => countAddrSent(16 downto 9)
    );
\countAddrSent_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_278,
      Q => countAddrSent(17),
      R => '0'
    );
\countAddrSent_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_277,
      Q => countAddrSent(18),
      R => '0'
    );
\countAddrSent_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_276,
      Q => countAddrSent(19),
      R => '0'
    );
\countAddrSent_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_294,
      Q => countAddrSent(1),
      R => '0'
    );
\countAddrSent_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_275,
      Q => countAddrSent(20),
      R => '0'
    );
\countAddrSent_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_274,
      Q => countAddrSent(21),
      R => '0'
    );
\countAddrSent_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_273,
      Q => countAddrSent(22),
      R => '0'
    );
\countAddrSent_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_272,
      Q => countAddrSent(23),
      R => '0'
    );
\countAddrSent_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_271,
      Q => countAddrSent(24),
      R => '0'
    );
\countAddrSent_reg[24]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSent_reg[16]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrSent_reg[24]_i_2_n_0\,
      CO(6) => \countAddrSent_reg[24]_i_2_n_1\,
      CO(5) => \countAddrSent_reg[24]_i_2_n_2\,
      CO(4) => \countAddrSent_reg[24]_i_2_n_3\,
      CO(3) => \NLW_countAddrSent_reg[24]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSent_reg[24]_i_2_n_5\,
      CO(1) => \countAddrSent_reg[24]_i_2_n_6\,
      CO(0) => \countAddrSent_reg[24]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrSent0(24 downto 17),
      S(7 downto 0) => countAddrSent(24 downto 17)
    );
\countAddrSent_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_270,
      Q => countAddrSent(25),
      R => '0'
    );
\countAddrSent_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_269,
      Q => countAddrSent(26),
      R => '0'
    );
\countAddrSent_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_268,
      Q => countAddrSent(27),
      R => '0'
    );
\countAddrSent_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_267,
      Q => countAddrSent(28),
      R => '0'
    );
\countAddrSent_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_266,
      Q => countAddrSent(29),
      R => '0'
    );
\countAddrSent_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_293,
      Q => countAddrSent(2),
      R => '0'
    );
\countAddrSent_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_265,
      Q => countAddrSent(30),
      R => '0'
    );
\countAddrSent_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_264,
      Q => countAddrSent(31),
      R => '0'
    );
\countAddrSent_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[32]_i_1_n_0\,
      Q => countAddrSent(32),
      R => '0'
    );
\countAddrSent_reg[32]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSent_reg[24]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrSent_reg[32]_i_2_n_0\,
      CO(6) => \countAddrSent_reg[32]_i_2_n_1\,
      CO(5) => \countAddrSent_reg[32]_i_2_n_2\,
      CO(4) => \countAddrSent_reg[32]_i_2_n_3\,
      CO(3) => \NLW_countAddrSent_reg[32]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSent_reg[32]_i_2_n_5\,
      CO(1) => \countAddrSent_reg[32]_i_2_n_6\,
      CO(0) => \countAddrSent_reg[32]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrSent0(32 downto 25),
      S(7 downto 0) => countAddrSent(32 downto 25)
    );
\countAddrSent_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[33]_i_1_n_0\,
      Q => countAddrSent(33),
      R => '0'
    );
\countAddrSent_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[34]_i_1_n_0\,
      Q => countAddrSent(34),
      R => '0'
    );
\countAddrSent_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[35]_i_1_n_0\,
      Q => countAddrSent(35),
      R => '0'
    );
\countAddrSent_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[36]_i_1_n_0\,
      Q => countAddrSent(36),
      R => '0'
    );
\countAddrSent_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[37]_i_1_n_0\,
      Q => countAddrSent(37),
      R => '0'
    );
\countAddrSent_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[38]_i_1_n_0\,
      Q => countAddrSent(38),
      R => '0'
    );
\countAddrSent_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countAddrSent[39]_i_2_n_0\,
      Q => countAddrSent(39),
      R => '0'
    );
\countAddrSent_reg[39]_i_16\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countAddrSent_reg[39]_i_16_n_0\,
      CO(6) => \countAddrSent_reg[39]_i_16_n_1\,
      CO(5) => \countAddrSent_reg[39]_i_16_n_2\,
      CO(4) => \countAddrSent_reg[39]_i_16_n_3\,
      CO(3) => \NLW_countAddrSent_reg[39]_i_16_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSent_reg[39]_i_16_n_5\,
      CO(1) => \countAddrSent_reg[39]_i_16_n_6\,
      CO(0) => \countAddrSent_reg[39]_i_16_n_7\,
      DI(7) => \countAddrSent[39]_i_33_n_0\,
      DI(6) => \countAddrSent[39]_i_34_n_0\,
      DI(5) => \countAddrSent[39]_i_35_n_0\,
      DI(4) => \countAddrSent[39]_i_36_n_0\,
      DI(3) => \countAddrSent[39]_i_37_n_0\,
      DI(2) => \countAddrSent[39]_i_38_n_0\,
      DI(1) => \countAddrSent[39]_i_39_n_0\,
      DI(0) => \countAddrSent[39]_i_40_n_0\,
      O(7 downto 0) => \NLW_countAddrSent_reg[39]_i_16_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrSent[39]_i_41_n_0\,
      S(6) => \countAddrSent[39]_i_42_n_0\,
      S(5) => \countAddrSent[39]_i_43_n_0\,
      S(4) => \countAddrSent[39]_i_44_n_0\,
      S(3) => \countAddrSent[39]_i_45_n_0\,
      S(2) => \countAddrSent[39]_i_46_n_0\,
      S(1) => \countAddrSent[39]_i_47_n_0\,
      S(0) => \countAddrSent[39]_i_48_n_0\
    );
\countAddrSent_reg[39]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSent_reg[39]_i_7_n_0\,
      CI_TOP => '0',
      CO(7 downto 4) => \NLW_countAddrSent_reg[39]_i_4_CO_UNCONNECTED\(7 downto 4),
      CO(3) => \^countaddrsent_reg[1]_0\(0),
      CO(2) => \countAddrSent_reg[39]_i_4_n_5\,
      CO(1) => \countAddrSent_reg[39]_i_4_n_6\,
      CO(0) => \countAddrSent_reg[39]_i_4_n_7\,
      DI(7 downto 4) => B"0000",
      DI(3) => \countAddrSent[39]_i_8_n_0\,
      DI(2) => \countAddrSent[39]_i_9_n_0\,
      DI(1) => \countAddrSent[39]_i_10_n_0\,
      DI(0) => \countAddrSent[39]_i_11_n_0\,
      O(7 downto 0) => \NLW_countAddrSent_reg[39]_i_4_O_UNCONNECTED\(7 downto 0),
      S(7 downto 4) => B"0000",
      S(3) => \countAddrSent[39]_i_12_n_0\,
      S(2) => \countAddrSent[39]_i_13_n_0\,
      S(1) => \countAddrSent[39]_i_14_n_0\,
      S(0) => \countAddrSent[39]_i_15_n_0\
    );
\countAddrSent_reg[39]_i_6\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSent_reg[32]_i_2_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countAddrSent_reg[39]_i_6_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \countAddrSent_reg[39]_i_6_n_2\,
      CO(4) => \countAddrSent_reg[39]_i_6_n_3\,
      CO(3) => \NLW_countAddrSent_reg[39]_i_6_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSent_reg[39]_i_6_n_5\,
      CO(1) => \countAddrSent_reg[39]_i_6_n_6\,
      CO(0) => \countAddrSent_reg[39]_i_6_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_countAddrSent_reg[39]_i_6_O_UNCONNECTED\(7),
      O(6 downto 0) => countAddrSent0(39 downto 33),
      S(7) => '0',
      S(6 downto 0) => countAddrSent(39 downto 33)
    );
\countAddrSent_reg[39]_i_7\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrSent_reg[39]_i_16_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrSent_reg[39]_i_7_n_0\,
      CO(6) => \countAddrSent_reg[39]_i_7_n_1\,
      CO(5) => \countAddrSent_reg[39]_i_7_n_2\,
      CO(4) => \countAddrSent_reg[39]_i_7_n_3\,
      CO(3) => \NLW_countAddrSent_reg[39]_i_7_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSent_reg[39]_i_7_n_5\,
      CO(1) => \countAddrSent_reg[39]_i_7_n_6\,
      CO(0) => \countAddrSent_reg[39]_i_7_n_7\,
      DI(7) => \countAddrSent[39]_i_17_n_0\,
      DI(6) => \countAddrSent[39]_i_18_n_0\,
      DI(5) => \countAddrSent[39]_i_19_n_0\,
      DI(4) => \countAddrSent[39]_i_20_n_0\,
      DI(3) => \countAddrSent[39]_i_21_n_0\,
      DI(2) => \countAddrSent[39]_i_22_n_0\,
      DI(1) => \countAddrSent[39]_i_23_n_0\,
      DI(0) => \countAddrSent[39]_i_24_n_0\,
      O(7 downto 0) => \NLW_countAddrSent_reg[39]_i_7_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrSent[39]_i_25_n_0\,
      S(6) => \countAddrSent[39]_i_26_n_0\,
      S(5) => \countAddrSent[39]_i_27_n_0\,
      S(4) => \countAddrSent[39]_i_28_n_0\,
      S(3) => \countAddrSent[39]_i_29_n_0\,
      S(2) => \countAddrSent[39]_i_30_n_0\,
      S(1) => \countAddrSent[39]_i_31_n_0\,
      S(0) => \countAddrSent[39]_i_32_n_0\
    );
\countAddrSent_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_292,
      Q => countAddrSent(3),
      R => '0'
    );
\countAddrSent_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_291,
      Q => countAddrSent(4),
      R => '0'
    );
\countAddrSent_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_290,
      Q => countAddrSent(5),
      R => '0'
    );
\countAddrSent_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_289,
      Q => countAddrSent(6),
      R => '0'
    );
\countAddrSent_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_288,
      Q => countAddrSent(7),
      R => '0'
    );
\countAddrSent_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_287,
      Q => countAddrSent(8),
      R => '0'
    );
\countAddrSent_reg[8]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => countAddrSent(0),
      CI_TOP => '0',
      CO(7) => \countAddrSent_reg[8]_i_2_n_0\,
      CO(6) => \countAddrSent_reg[8]_i_2_n_1\,
      CO(5) => \countAddrSent_reg[8]_i_2_n_2\,
      CO(4) => \countAddrSent_reg[8]_i_2_n_3\,
      CO(3) => \NLW_countAddrSent_reg[8]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countAddrSent_reg[8]_i_2_n_5\,
      CO(1) => \countAddrSent_reg[8]_i_2_n_6\,
      CO(0) => \countAddrSent_reg[8]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrSent0(8 downto 1),
      S(7 downto 0) => countAddrSent(8 downto 1)
    );
\countAddrSent_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_71,
      D => sactn_n_286,
      Q => countAddrSent(9),
      R => '0'
    );
\countAddrToBeSent[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[0]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[0]_i_1_n_0\
    );
\countAddrToBeSent[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8000BFFF"
    )
        port map (
      I0 => countAddrToBeSent00_in(0),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent(0),
      O => \countAddrToBeSent[0]_i_2_n_0\
    );
\countAddrToBeSent[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[10]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[10]_i_1_n_0\
    );
\countAddrToBeSent[10]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(10),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(10),
      O => \countAddrToBeSent[10]_i_2_n_0\
    );
\countAddrToBeSent[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[11]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[11]_i_1_n_0\
    );
\countAddrToBeSent[11]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(11),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(11),
      O => \countAddrToBeSent[11]_i_2_n_0\
    );
\countAddrToBeSent[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[12]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[12]_i_1_n_0\
    );
\countAddrToBeSent[12]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(12),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(12),
      O => \countAddrToBeSent[12]_i_2_n_0\
    );
\countAddrToBeSent[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[13]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[13]_i_1_n_0\
    );
\countAddrToBeSent[13]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(13),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(13),
      O => \countAddrToBeSent[13]_i_2_n_0\
    );
\countAddrToBeSent[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[14]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[14]_i_1_n_0\
    );
\countAddrToBeSent[14]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(14),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(14),
      O => \countAddrToBeSent[14]_i_2_n_0\
    );
\countAddrToBeSent[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[15]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[15]_i_1_n_0\
    );
\countAddrToBeSent[15]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(9),
      I1 => write_blocking_ratio(9),
      O => \countAddrToBeSent[15]_i_10_n_0\
    );
\countAddrToBeSent[15]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(8),
      I1 => write_blocking_ratio(8),
      O => \countAddrToBeSent[15]_i_11_n_0\
    );
\countAddrToBeSent[15]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(15),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(15),
      O => \countAddrToBeSent[15]_i_2_n_0\
    );
\countAddrToBeSent[15]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(15),
      I1 => write_blocking_ratio(15),
      O => \countAddrToBeSent[15]_i_4_n_0\
    );
\countAddrToBeSent[15]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(14),
      I1 => write_blocking_ratio(14),
      O => \countAddrToBeSent[15]_i_5_n_0\
    );
\countAddrToBeSent[15]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(13),
      I1 => write_blocking_ratio(13),
      O => \countAddrToBeSent[15]_i_6_n_0\
    );
\countAddrToBeSent[15]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(12),
      I1 => write_blocking_ratio(12),
      O => \countAddrToBeSent[15]_i_7_n_0\
    );
\countAddrToBeSent[15]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(11),
      I1 => write_blocking_ratio(11),
      O => \countAddrToBeSent[15]_i_8_n_0\
    );
\countAddrToBeSent[15]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(10),
      I1 => write_blocking_ratio(10),
      O => \countAddrToBeSent[15]_i_9_n_0\
    );
\countAddrToBeSent[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[16]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[16]_i_1_n_0\
    );
\countAddrToBeSent[16]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(16),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(16),
      O => \countAddrToBeSent[16]_i_2_n_0\
    );
\countAddrToBeSent[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[17]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[17]_i_1_n_0\
    );
\countAddrToBeSent[17]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(17),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(17),
      O => \countAddrToBeSent[17]_i_2_n_0\
    );
\countAddrToBeSent[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[18]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[18]_i_1_n_0\
    );
\countAddrToBeSent[18]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(18),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(18),
      O => \countAddrToBeSent[18]_i_2_n_0\
    );
\countAddrToBeSent[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[19]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[19]_i_1_n_0\
    );
\countAddrToBeSent[19]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(19),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(19),
      O => \countAddrToBeSent[19]_i_2_n_0\
    );
\countAddrToBeSent[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[1]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[1]_i_1_n_0\
    );
\countAddrToBeSent[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(1),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(1),
      O => \countAddrToBeSent[1]_i_2_n_0\
    );
\countAddrToBeSent[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[20]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[20]_i_1_n_0\
    );
\countAddrToBeSent[20]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(20),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(20),
      O => \countAddrToBeSent[20]_i_2_n_0\
    );
\countAddrToBeSent[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[21]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[21]_i_1_n_0\
    );
\countAddrToBeSent[21]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(21),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(21),
      O => \countAddrToBeSent[21]_i_2_n_0\
    );
\countAddrToBeSent[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[22]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[22]_i_1_n_0\
    );
\countAddrToBeSent[22]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(22),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(22),
      O => \countAddrToBeSent[22]_i_2_n_0\
    );
\countAddrToBeSent[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[23]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[23]_i_1_n_0\
    );
\countAddrToBeSent[23]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(17),
      I1 => write_blocking_ratio(17),
      O => \countAddrToBeSent[23]_i_10_n_0\
    );
\countAddrToBeSent[23]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(16),
      I1 => write_blocking_ratio(16),
      O => \countAddrToBeSent[23]_i_11_n_0\
    );
\countAddrToBeSent[23]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(23),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(23),
      O => \countAddrToBeSent[23]_i_2_n_0\
    );
\countAddrToBeSent[23]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(23),
      I1 => write_blocking_ratio(23),
      O => \countAddrToBeSent[23]_i_4_n_0\
    );
\countAddrToBeSent[23]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(22),
      I1 => write_blocking_ratio(22),
      O => \countAddrToBeSent[23]_i_5_n_0\
    );
\countAddrToBeSent[23]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(21),
      I1 => write_blocking_ratio(21),
      O => \countAddrToBeSent[23]_i_6_n_0\
    );
\countAddrToBeSent[23]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(20),
      I1 => write_blocking_ratio(20),
      O => \countAddrToBeSent[23]_i_7_n_0\
    );
\countAddrToBeSent[23]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(19),
      I1 => write_blocking_ratio(19),
      O => \countAddrToBeSent[23]_i_8_n_0\
    );
\countAddrToBeSent[23]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(18),
      I1 => write_blocking_ratio(18),
      O => \countAddrToBeSent[23]_i_9_n_0\
    );
\countAddrToBeSent[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[24]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[24]_i_1_n_0\
    );
\countAddrToBeSent[24]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(24),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(24),
      O => \countAddrToBeSent[24]_i_2_n_0\
    );
\countAddrToBeSent[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[25]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[25]_i_1_n_0\
    );
\countAddrToBeSent[25]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(25),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(25),
      O => \countAddrToBeSent[25]_i_2_n_0\
    );
\countAddrToBeSent[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[26]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[26]_i_1_n_0\
    );
\countAddrToBeSent[26]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(26),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(26),
      O => \countAddrToBeSent[26]_i_2_n_0\
    );
\countAddrToBeSent[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[27]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[27]_i_1_n_0\
    );
\countAddrToBeSent[27]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(27),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(27),
      O => \countAddrToBeSent[27]_i_2_n_0\
    );
\countAddrToBeSent[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[28]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[28]_i_1_n_0\
    );
\countAddrToBeSent[28]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(28),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(28),
      O => \countAddrToBeSent[28]_i_2_n_0\
    );
\countAddrToBeSent[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[29]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[29]_i_1_n_0\
    );
\countAddrToBeSent[29]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(29),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(29),
      O => \countAddrToBeSent[29]_i_2_n_0\
    );
\countAddrToBeSent[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[2]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[2]_i_1_n_0\
    );
\countAddrToBeSent[2]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(2),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(2),
      O => \countAddrToBeSent[2]_i_2_n_0\
    );
\countAddrToBeSent[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[30]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[30]_i_1_n_0\
    );
\countAddrToBeSent[30]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(30),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(30),
      O => \countAddrToBeSent[30]_i_2_n_0\
    );
\countAddrToBeSent[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[31]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[31]_i_1_n_0\
    );
\countAddrToBeSent[31]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(25),
      I1 => write_blocking_ratio(25),
      O => \countAddrToBeSent[31]_i_10_n_0\
    );
\countAddrToBeSent[31]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(24),
      I1 => write_blocking_ratio(24),
      O => \countAddrToBeSent[31]_i_11_n_0\
    );
\countAddrToBeSent[31]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(31),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(31),
      O => \countAddrToBeSent[31]_i_2_n_0\
    );
\countAddrToBeSent[31]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(31),
      I1 => write_blocking_ratio(31),
      O => \countAddrToBeSent[31]_i_4_n_0\
    );
\countAddrToBeSent[31]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(30),
      I1 => write_blocking_ratio(30),
      O => \countAddrToBeSent[31]_i_5_n_0\
    );
\countAddrToBeSent[31]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(29),
      I1 => write_blocking_ratio(29),
      O => \countAddrToBeSent[31]_i_6_n_0\
    );
\countAddrToBeSent[31]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(28),
      I1 => write_blocking_ratio(28),
      O => \countAddrToBeSent[31]_i_7_n_0\
    );
\countAddrToBeSent[31]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(27),
      I1 => write_blocking_ratio(27),
      O => \countAddrToBeSent[31]_i_8_n_0\
    );
\countAddrToBeSent[31]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(26),
      I1 => write_blocking_ratio(26),
      O => \countAddrToBeSent[31]_i_9_n_0\
    );
\countAddrToBeSent[32]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[32]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[32]_i_1_n_0\
    );
\countAddrToBeSent[32]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(32),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(32),
      O => \countAddrToBeSent[32]_i_2_n_0\
    );
\countAddrToBeSent[33]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[33]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[33]_i_1_n_0\
    );
\countAddrToBeSent[33]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(33),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(33),
      O => \countAddrToBeSent[33]_i_2_n_0\
    );
\countAddrToBeSent[34]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[34]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[34]_i_1_n_0\
    );
\countAddrToBeSent[34]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(34),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(34),
      O => \countAddrToBeSent[34]_i_2_n_0\
    );
\countAddrToBeSent[35]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[35]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[35]_i_1_n_0\
    );
\countAddrToBeSent[35]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(35),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(35),
      O => \countAddrToBeSent[35]_i_2_n_0\
    );
\countAddrToBeSent[36]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[36]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[36]_i_1_n_0\
    );
\countAddrToBeSent[36]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(36),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(36),
      O => \countAddrToBeSent[36]_i_2_n_0\
    );
\countAddrToBeSent[37]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[37]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[37]_i_1_n_0\
    );
\countAddrToBeSent[37]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(37),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(37),
      O => \countAddrToBeSent[37]_i_2_n_0\
    );
\countAddrToBeSent[38]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[38]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[38]_i_1_n_0\
    );
\countAddrToBeSent[38]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(38),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(38),
      O => \countAddrToBeSent[38]_i_2_n_0\
    );
\countAddrToBeSent[39]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFF4F4F4F4F4F4F4"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \countAddrToBeSent__0\,
      I3 => active_blocking,
      I4 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I5 => write_ticks1,
      O => \countAddrToBeSent[39]_i_1_n_0\
    );
\countAddrToBeSent[39]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_ticks21_out(36),
      I1 => write_ticks21_out(37),
      O => \countAddrToBeSent[39]_i_10_n_0\
    );
\countAddrToBeSent[39]_i_100\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(34),
      I1 => countAddrSent(34),
      O => \countAddrToBeSent[39]_i_100_n_0\
    );
\countAddrToBeSent[39]_i_101\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(33),
      I1 => countAddrSent(33),
      O => \countAddrToBeSent[39]_i_101_n_0\
    );
\countAddrToBeSent[39]_i_102\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(32),
      I1 => countAddrSent(32),
      O => \countAddrToBeSent[39]_i_102_n_0\
    );
\countAddrToBeSent[39]_i_105\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(31),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_8\,
      O => \countAddrToBeSent[39]_i_105_n_0\
    );
\countAddrToBeSent[39]_i_106\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(30),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_9\,
      O => \countAddrToBeSent[39]_i_106_n_0\
    );
\countAddrToBeSent[39]_i_107\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(29),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_10\,
      O => \countAddrToBeSent[39]_i_107_n_0\
    );
\countAddrToBeSent[39]_i_108\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(28),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_11\,
      O => \countAddrToBeSent[39]_i_108_n_0\
    );
\countAddrToBeSent[39]_i_109\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(27),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_12\,
      O => \countAddrToBeSent[39]_i_109_n_0\
    );
\countAddrToBeSent[39]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_ticks21_out(34),
      I1 => write_ticks21_out(35),
      O => \countAddrToBeSent[39]_i_11_n_0\
    );
\countAddrToBeSent[39]_i_110\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(26),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_13\,
      O => \countAddrToBeSent[39]_i_110_n_0\
    );
\countAddrToBeSent[39]_i_111\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(25),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_14\,
      O => \countAddrToBeSent[39]_i_111_n_0\
    );
\countAddrToBeSent[39]_i_112\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(24),
      I1 => \countAddrToBeSent_reg[39]_i_158_n_15\,
      O => \countAddrToBeSent[39]_i_112_n_0\
    );
\countAddrToBeSent[39]_i_113\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(39),
      I1 => \countAddrSentRatioFix_reg_n_0_\(39),
      O => \countAddrToBeSent[39]_i_113_n_0\
    );
\countAddrToBeSent[39]_i_114\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(38),
      I1 => \countAddrSentRatioFix_reg_n_0_\(38),
      O => \countAddrToBeSent[39]_i_114_n_0\
    );
\countAddrToBeSent[39]_i_115\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(37),
      I1 => \countAddrSentRatioFix_reg_n_0_\(37),
      O => \countAddrToBeSent[39]_i_115_n_0\
    );
\countAddrToBeSent[39]_i_116\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(36),
      I1 => \countAddrSentRatioFix_reg_n_0_\(36),
      O => \countAddrToBeSent[39]_i_116_n_0\
    );
\countAddrToBeSent[39]_i_117\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(35),
      I1 => \countAddrSentRatioFix_reg_n_0_\(35),
      O => \countAddrToBeSent[39]_i_117_n_0\
    );
\countAddrToBeSent[39]_i_118\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(34),
      I1 => \countAddrSentRatioFix_reg_n_0_\(34),
      O => \countAddrToBeSent[39]_i_118_n_0\
    );
\countAddrToBeSent[39]_i_119\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(33),
      I1 => \countAddrSentRatioFix_reg_n_0_\(33),
      O => \countAddrToBeSent[39]_i_119_n_0\
    );
\countAddrToBeSent[39]_i_12\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_ticks21_out(32),
      I1 => write_ticks21_out(33),
      O => \countAddrToBeSent[39]_i_12_n_0\
    );
\countAddrToBeSent[39]_i_120\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(32),
      I1 => \countAddrSentRatioFix_reg_n_0_\(32),
      O => \countAddrToBeSent[39]_i_120_n_0\
    );
\countAddrToBeSent[39]_i_124\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(31),
      I1 => countAddrSent(31),
      O => \countAddrToBeSent[39]_i_124_n_0\
    );
\countAddrToBeSent[39]_i_125\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(30),
      I1 => countAddrSent(30),
      O => \countAddrToBeSent[39]_i_125_n_0\
    );
\countAddrToBeSent[39]_i_126\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(29),
      I1 => countAddrSent(29),
      O => \countAddrToBeSent[39]_i_126_n_0\
    );
\countAddrToBeSent[39]_i_127\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(28),
      I1 => countAddrSent(28),
      O => \countAddrToBeSent[39]_i_127_n_0\
    );
\countAddrToBeSent[39]_i_128\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(27),
      I1 => countAddrSent(27),
      O => \countAddrToBeSent[39]_i_128_n_0\
    );
\countAddrToBeSent[39]_i_129\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(26),
      I1 => countAddrSent(26),
      O => \countAddrToBeSent[39]_i_129_n_0\
    );
\countAddrToBeSent[39]_i_130\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(25),
      I1 => countAddrSent(25),
      O => \countAddrToBeSent[39]_i_130_n_0\
    );
\countAddrToBeSent[39]_i_131\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(24),
      I1 => countAddrSent(24),
      O => \countAddrToBeSent[39]_i_131_n_0\
    );
\countAddrToBeSent[39]_i_132\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(23),
      I1 => countAddrSent(23),
      O => \countAddrToBeSent[39]_i_132_n_0\
    );
\countAddrToBeSent[39]_i_133\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(22),
      I1 => countAddrSent(22),
      O => \countAddrToBeSent[39]_i_133_n_0\
    );
\countAddrToBeSent[39]_i_134\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(21),
      I1 => countAddrSent(21),
      O => \countAddrToBeSent[39]_i_134_n_0\
    );
\countAddrToBeSent[39]_i_135\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(20),
      I1 => countAddrSent(20),
      O => \countAddrToBeSent[39]_i_135_n_0\
    );
\countAddrToBeSent[39]_i_136\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(19),
      I1 => countAddrSent(19),
      O => \countAddrToBeSent[39]_i_136_n_0\
    );
\countAddrToBeSent[39]_i_137\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(18),
      I1 => countAddrSent(18),
      O => \countAddrToBeSent[39]_i_137_n_0\
    );
\countAddrToBeSent[39]_i_138\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(17),
      I1 => countAddrSent(17),
      O => \countAddrToBeSent[39]_i_138_n_0\
    );
\countAddrToBeSent[39]_i_139\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(16),
      I1 => countAddrSent(16),
      O => \countAddrToBeSent[39]_i_139_n_0\
    );
\countAddrToBeSent[39]_i_142\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(23),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_8\,
      O => \countAddrToBeSent[39]_i_142_n_0\
    );
\countAddrToBeSent[39]_i_143\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(22),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_9\,
      O => \countAddrToBeSent[39]_i_143_n_0\
    );
\countAddrToBeSent[39]_i_144\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(21),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_10\,
      O => \countAddrToBeSent[39]_i_144_n_0\
    );
\countAddrToBeSent[39]_i_145\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(20),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_11\,
      O => \countAddrToBeSent[39]_i_145_n_0\
    );
\countAddrToBeSent[39]_i_146\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(19),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_12\,
      O => \countAddrToBeSent[39]_i_146_n_0\
    );
\countAddrToBeSent[39]_i_147\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(18),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_13\,
      O => \countAddrToBeSent[39]_i_147_n_0\
    );
\countAddrToBeSent[39]_i_148\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(17),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_14\,
      O => \countAddrToBeSent[39]_i_148_n_0\
    );
\countAddrToBeSent[39]_i_149\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(16),
      I1 => \countAddrToBeSent_reg[39]_i_201_n_15\,
      O => \countAddrToBeSent[39]_i_149_n_0\
    );
\countAddrToBeSent[39]_i_150\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(31),
      I1 => \countAddrSentRatioFix_reg_n_0_\(31),
      O => \countAddrToBeSent[39]_i_150_n_0\
    );
\countAddrToBeSent[39]_i_151\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(30),
      I1 => \countAddrSentRatioFix_reg_n_0_\(30),
      O => \countAddrToBeSent[39]_i_151_n_0\
    );
\countAddrToBeSent[39]_i_152\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(29),
      I1 => \countAddrSentRatioFix_reg_n_0_\(29),
      O => \countAddrToBeSent[39]_i_152_n_0\
    );
\countAddrToBeSent[39]_i_153\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(28),
      I1 => \countAddrSentRatioFix_reg_n_0_\(28),
      O => \countAddrToBeSent[39]_i_153_n_0\
    );
\countAddrToBeSent[39]_i_154\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(27),
      I1 => \countAddrSentRatioFix_reg_n_0_\(27),
      O => \countAddrToBeSent[39]_i_154_n_0\
    );
\countAddrToBeSent[39]_i_155\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(26),
      I1 => \countAddrSentRatioFix_reg_n_0_\(26),
      O => \countAddrToBeSent[39]_i_155_n_0\
    );
\countAddrToBeSent[39]_i_156\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(25),
      I1 => \countAddrSentRatioFix_reg_n_0_\(25),
      O => \countAddrToBeSent[39]_i_156_n_0\
    );
\countAddrToBeSent[39]_i_157\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(24),
      I1 => \countAddrSentRatioFix_reg_n_0_\(24),
      O => \countAddrToBeSent[39]_i_157_n_0\
    );
\countAddrToBeSent[39]_i_159\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(39),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(39),
      O => \countAddrToBeSent[39]_i_159_n_0\
    );
\countAddrToBeSent[39]_i_160\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(38),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(38),
      O => \countAddrToBeSent[39]_i_160_n_0\
    );
\countAddrToBeSent[39]_i_161\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(37),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(37),
      O => \countAddrToBeSent[39]_i_161_n_0\
    );
\countAddrToBeSent[39]_i_162\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(36),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(36),
      O => \countAddrToBeSent[39]_i_162_n_0\
    );
\countAddrToBeSent[39]_i_163\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(35),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(35),
      O => \countAddrToBeSent[39]_i_163_n_0\
    );
\countAddrToBeSent[39]_i_164\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(34),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(34),
      O => \countAddrToBeSent[39]_i_164_n_0\
    );
\countAddrToBeSent[39]_i_165\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(33),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(33),
      O => \countAddrToBeSent[39]_i_165_n_0\
    );
\countAddrToBeSent[39]_i_166\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(32),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(32),
      O => \countAddrToBeSent[39]_i_166_n_0\
    );
\countAddrToBeSent[39]_i_167\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(15),
      I1 => countAddrSent(15),
      O => \countAddrToBeSent[39]_i_167_n_0\
    );
\countAddrToBeSent[39]_i_168\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(14),
      I1 => countAddrSent(14),
      O => \countAddrToBeSent[39]_i_168_n_0\
    );
\countAddrToBeSent[39]_i_169\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(13),
      I1 => countAddrSent(13),
      O => \countAddrToBeSent[39]_i_169_n_0\
    );
\countAddrToBeSent[39]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(30),
      I1 => write_ticks_per_burst(30),
      I2 => write_ticks_per_burst(31),
      I3 => write_ticks2(31),
      O => \countAddrToBeSent[39]_i_17_n_0\
    );
\countAddrToBeSent[39]_i_170\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(12),
      I1 => countAddrSent(12),
      O => \countAddrToBeSent[39]_i_170_n_0\
    );
\countAddrToBeSent[39]_i_171\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(11),
      I1 => countAddrSent(11),
      O => \countAddrToBeSent[39]_i_171_n_0\
    );
\countAddrToBeSent[39]_i_172\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(10),
      I1 => countAddrSent(10),
      O => \countAddrToBeSent[39]_i_172_n_0\
    );
\countAddrToBeSent[39]_i_173\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(9),
      I1 => countAddrSent(9),
      O => \countAddrToBeSent[39]_i_173_n_0\
    );
\countAddrToBeSent[39]_i_174\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(8),
      I1 => countAddrSent(8),
      O => \countAddrToBeSent[39]_i_174_n_0\
    );
\countAddrToBeSent[39]_i_175\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(7),
      I1 => countAddrSent(7),
      O => \countAddrToBeSent[39]_i_175_n_0\
    );
\countAddrToBeSent[39]_i_176\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(6),
      I1 => countAddrSent(6),
      O => \countAddrToBeSent[39]_i_176_n_0\
    );
\countAddrToBeSent[39]_i_177\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(5),
      I1 => countAddrSent(5),
      O => \countAddrToBeSent[39]_i_177_n_0\
    );
\countAddrToBeSent[39]_i_178\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(4),
      I1 => countAddrSent(4),
      O => \countAddrToBeSent[39]_i_178_n_0\
    );
\countAddrToBeSent[39]_i_179\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(3),
      I1 => countAddrSent(3),
      O => \countAddrToBeSent[39]_i_179_n_0\
    );
\countAddrToBeSent[39]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(28),
      I1 => write_ticks_per_burst(28),
      I2 => write_ticks_per_burst(29),
      I3 => write_ticks2(29),
      O => \countAddrToBeSent[39]_i_18_n_0\
    );
\countAddrToBeSent[39]_i_180\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(2),
      I1 => countAddrSent(2),
      O => \countAddrToBeSent[39]_i_180_n_0\
    );
\countAddrToBeSent[39]_i_181\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(1),
      I1 => countAddrSent(1),
      O => \countAddrToBeSent[39]_i_181_n_0\
    );
\countAddrToBeSent[39]_i_182\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(0),
      I1 => countAddrSent(0),
      O => \countAddrToBeSent[39]_i_182_n_0\
    );
\countAddrToBeSent[39]_i_185\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(15),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_8\,
      O => \countAddrToBeSent[39]_i_185_n_0\
    );
\countAddrToBeSent[39]_i_186\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(14),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_9\,
      O => \countAddrToBeSent[39]_i_186_n_0\
    );
\countAddrToBeSent[39]_i_187\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(13),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_10\,
      O => \countAddrToBeSent[39]_i_187_n_0\
    );
\countAddrToBeSent[39]_i_188\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(12),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_11\,
      O => \countAddrToBeSent[39]_i_188_n_0\
    );
\countAddrToBeSent[39]_i_189\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(11),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_12\,
      O => \countAddrToBeSent[39]_i_189_n_0\
    );
\countAddrToBeSent[39]_i_19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(26),
      I1 => write_ticks_per_burst(26),
      I2 => write_ticks_per_burst(27),
      I3 => write_ticks2(27),
      O => \countAddrToBeSent[39]_i_19_n_0\
    );
\countAddrToBeSent[39]_i_190\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(10),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_13\,
      O => \countAddrToBeSent[39]_i_190_n_0\
    );
\countAddrToBeSent[39]_i_191\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(9),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_14\,
      O => \countAddrToBeSent[39]_i_191_n_0\
    );
\countAddrToBeSent[39]_i_192\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(8),
      I1 => \countAddrToBeSent_reg[39]_i_227_n_15\,
      O => \countAddrToBeSent[39]_i_192_n_0\
    );
\countAddrToBeSent[39]_i_193\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(23),
      I1 => \countAddrSentRatioFix_reg_n_0_\(23),
      O => \countAddrToBeSent[39]_i_193_n_0\
    );
\countAddrToBeSent[39]_i_194\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(22),
      I1 => \countAddrSentRatioFix_reg_n_0_\(22),
      O => \countAddrToBeSent[39]_i_194_n_0\
    );
\countAddrToBeSent[39]_i_195\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(21),
      I1 => \countAddrSentRatioFix_reg_n_0_\(21),
      O => \countAddrToBeSent[39]_i_195_n_0\
    );
\countAddrToBeSent[39]_i_196\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(20),
      I1 => \countAddrSentRatioFix_reg_n_0_\(20),
      O => \countAddrToBeSent[39]_i_196_n_0\
    );
\countAddrToBeSent[39]_i_197\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(19),
      I1 => \countAddrSentRatioFix_reg_n_0_\(19),
      O => \countAddrToBeSent[39]_i_197_n_0\
    );
\countAddrToBeSent[39]_i_198\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(18),
      I1 => \countAddrSentRatioFix_reg_n_0_\(18),
      O => \countAddrToBeSent[39]_i_198_n_0\
    );
\countAddrToBeSent[39]_i_199\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(17),
      I1 => \countAddrSentRatioFix_reg_n_0_\(17),
      O => \countAddrToBeSent[39]_i_199_n_0\
    );
\countAddrToBeSent[39]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[39]_i_6_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[39]_i_2_n_0\
    );
\countAddrToBeSent[39]_i_20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(24),
      I1 => write_ticks_per_burst(24),
      I2 => write_ticks_per_burst(25),
      I3 => write_ticks2(25),
      O => \countAddrToBeSent[39]_i_20_n_0\
    );
\countAddrToBeSent[39]_i_200\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(16),
      I1 => \countAddrSentRatioFix_reg_n_0_\(16),
      O => \countAddrToBeSent[39]_i_200_n_0\
    );
\countAddrToBeSent[39]_i_202\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(31),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(31),
      O => \countAddrToBeSent[39]_i_202_n_0\
    );
\countAddrToBeSent[39]_i_203\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(30),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(30),
      O => \countAddrToBeSent[39]_i_203_n_0\
    );
\countAddrToBeSent[39]_i_204\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(29),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(29),
      O => \countAddrToBeSent[39]_i_204_n_0\
    );
\countAddrToBeSent[39]_i_205\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(28),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(28),
      O => \countAddrToBeSent[39]_i_205_n_0\
    );
\countAddrToBeSent[39]_i_206\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(27),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(27),
      O => \countAddrToBeSent[39]_i_206_n_0\
    );
\countAddrToBeSent[39]_i_207\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(26),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(26),
      O => \countAddrToBeSent[39]_i_207_n_0\
    );
\countAddrToBeSent[39]_i_208\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(25),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(25),
      O => \countAddrToBeSent[39]_i_208_n_0\
    );
\countAddrToBeSent[39]_i_209\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(24),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(24),
      O => \countAddrToBeSent[39]_i_209_n_0\
    );
\countAddrToBeSent[39]_i_21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(22),
      I1 => write_ticks_per_burst(22),
      I2 => write_ticks_per_burst(23),
      I3 => write_ticks2(23),
      O => \countAddrToBeSent[39]_i_21_n_0\
    );
\countAddrToBeSent[39]_i_211\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(7),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_8\,
      O => \countAddrToBeSent[39]_i_211_n_0\
    );
\countAddrToBeSent[39]_i_212\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(6),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_9\,
      O => \countAddrToBeSent[39]_i_212_n_0\
    );
\countAddrToBeSent[39]_i_213\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(5),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_10\,
      O => \countAddrToBeSent[39]_i_213_n_0\
    );
\countAddrToBeSent[39]_i_214\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(4),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_11\,
      O => \countAddrToBeSent[39]_i_214_n_0\
    );
\countAddrToBeSent[39]_i_215\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(3),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_12\,
      O => \countAddrToBeSent[39]_i_215_n_0\
    );
\countAddrToBeSent[39]_i_216\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(2),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_13\,
      O => \countAddrToBeSent[39]_i_216_n_0\
    );
\countAddrToBeSent[39]_i_217\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(1),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_14\,
      O => \countAddrToBeSent[39]_i_217_n_0\
    );
\countAddrToBeSent[39]_i_218\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(0),
      I1 => \countAddrToBeSent_reg[39]_i_244_n_15\,
      O => \countAddrToBeSent[39]_i_218_n_0\
    );
\countAddrToBeSent[39]_i_219\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(15),
      I1 => \countAddrSentRatioFix_reg_n_0_\(15),
      O => \countAddrToBeSent[39]_i_219_n_0\
    );
\countAddrToBeSent[39]_i_22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(20),
      I1 => write_ticks_per_burst(20),
      I2 => write_ticks_per_burst(21),
      I3 => write_ticks2(21),
      O => \countAddrToBeSent[39]_i_22_n_0\
    );
\countAddrToBeSent[39]_i_220\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(14),
      I1 => \countAddrSentRatioFix_reg_n_0_\(14),
      O => \countAddrToBeSent[39]_i_220_n_0\
    );
\countAddrToBeSent[39]_i_221\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(13),
      I1 => \countAddrSentRatioFix_reg_n_0_\(13),
      O => \countAddrToBeSent[39]_i_221_n_0\
    );
\countAddrToBeSent[39]_i_222\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(12),
      I1 => \countAddrSentRatioFix_reg_n_0_\(12),
      O => \countAddrToBeSent[39]_i_222_n_0\
    );
\countAddrToBeSent[39]_i_223\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(11),
      I1 => \countAddrSentRatioFix_reg_n_0_\(11),
      O => \countAddrToBeSent[39]_i_223_n_0\
    );
\countAddrToBeSent[39]_i_224\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(10),
      I1 => \countAddrSentRatioFix_reg_n_0_\(10),
      O => \countAddrToBeSent[39]_i_224_n_0\
    );
\countAddrToBeSent[39]_i_225\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(9),
      I1 => \countAddrSentRatioFix_reg_n_0_\(9),
      O => \countAddrToBeSent[39]_i_225_n_0\
    );
\countAddrToBeSent[39]_i_226\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(8),
      I1 => \countAddrSentRatioFix_reg_n_0_\(8),
      O => \countAddrToBeSent[39]_i_226_n_0\
    );
\countAddrToBeSent[39]_i_228\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(23),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(23),
      O => \countAddrToBeSent[39]_i_228_n_0\
    );
\countAddrToBeSent[39]_i_229\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(22),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(22),
      O => \countAddrToBeSent[39]_i_229_n_0\
    );
\countAddrToBeSent[39]_i_23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(18),
      I1 => write_ticks_per_burst(18),
      I2 => write_ticks_per_burst(19),
      I3 => write_ticks2(19),
      O => \countAddrToBeSent[39]_i_23_n_0\
    );
\countAddrToBeSent[39]_i_230\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(21),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(21),
      O => \countAddrToBeSent[39]_i_230_n_0\
    );
\countAddrToBeSent[39]_i_231\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(20),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(20),
      O => \countAddrToBeSent[39]_i_231_n_0\
    );
\countAddrToBeSent[39]_i_232\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(19),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(19),
      O => \countAddrToBeSent[39]_i_232_n_0\
    );
\countAddrToBeSent[39]_i_233\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(18),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(18),
      O => \countAddrToBeSent[39]_i_233_n_0\
    );
\countAddrToBeSent[39]_i_234\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(17),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(17),
      O => \countAddrToBeSent[39]_i_234_n_0\
    );
\countAddrToBeSent[39]_i_235\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(16),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(16),
      O => \countAddrToBeSent[39]_i_235_n_0\
    );
\countAddrToBeSent[39]_i_236\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(7),
      I1 => \countAddrSentRatioFix_reg_n_0_\(7),
      O => \countAddrToBeSent[39]_i_236_n_0\
    );
\countAddrToBeSent[39]_i_237\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(6),
      I1 => \countAddrSentRatioFix_reg_n_0_\(6),
      O => \countAddrToBeSent[39]_i_237_n_0\
    );
\countAddrToBeSent[39]_i_238\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(5),
      I1 => \countAddrSentRatioFix_reg_n_0_\(5),
      O => \countAddrToBeSent[39]_i_238_n_0\
    );
\countAddrToBeSent[39]_i_239\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(4),
      I1 => \countAddrSentRatioFix_reg_n_0_\(4),
      O => \countAddrToBeSent[39]_i_239_n_0\
    );
\countAddrToBeSent[39]_i_24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(16),
      I1 => write_ticks_per_burst(16),
      I2 => write_ticks_per_burst(17),
      I3 => write_ticks2(17),
      O => \countAddrToBeSent[39]_i_24_n_0\
    );
\countAddrToBeSent[39]_i_240\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(3),
      I1 => \countAddrSentRatioFix_reg_n_0_\(3),
      O => \countAddrToBeSent[39]_i_240_n_0\
    );
\countAddrToBeSent[39]_i_241\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(2),
      I1 => \countAddrSentRatioFix_reg_n_0_\(2),
      O => \countAddrToBeSent[39]_i_241_n_0\
    );
\countAddrToBeSent[39]_i_242\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(1),
      I1 => \countAddrSentRatioFix_reg_n_0_\(1),
      O => \countAddrToBeSent[39]_i_242_n_0\
    );
\countAddrToBeSent[39]_i_243\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(0),
      I1 => \countAddrSentRatioFix_reg_n_0_\(0),
      O => \countAddrToBeSent[39]_i_243_n_0\
    );
\countAddrToBeSent[39]_i_245\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(15),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(15),
      O => \countAddrToBeSent[39]_i_245_n_0\
    );
\countAddrToBeSent[39]_i_246\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(14),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(14),
      O => \countAddrToBeSent[39]_i_246_n_0\
    );
\countAddrToBeSent[39]_i_247\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(13),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(13),
      O => \countAddrToBeSent[39]_i_247_n_0\
    );
\countAddrToBeSent[39]_i_248\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(12),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(12),
      O => \countAddrToBeSent[39]_i_248_n_0\
    );
\countAddrToBeSent[39]_i_249\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(11),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(11),
      O => \countAddrToBeSent[39]_i_249_n_0\
    );
\countAddrToBeSent[39]_i_25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(30),
      I1 => write_ticks_per_burst(30),
      I2 => write_ticks2(31),
      I3 => write_ticks_per_burst(31),
      O => \countAddrToBeSent[39]_i_25_n_0\
    );
\countAddrToBeSent[39]_i_250\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(10),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(10),
      O => \countAddrToBeSent[39]_i_250_n_0\
    );
\countAddrToBeSent[39]_i_251\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(9),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(9),
      O => \countAddrToBeSent[39]_i_251_n_0\
    );
\countAddrToBeSent[39]_i_252\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(8),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(8),
      O => \countAddrToBeSent[39]_i_252_n_0\
    );
\countAddrToBeSent[39]_i_253\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(7),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(7),
      O => \countAddrToBeSent[39]_i_253_n_0\
    );
\countAddrToBeSent[39]_i_254\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(6),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(6),
      O => \countAddrToBeSent[39]_i_254_n_0\
    );
\countAddrToBeSent[39]_i_255\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(5),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(5),
      O => \countAddrToBeSent[39]_i_255_n_0\
    );
\countAddrToBeSent[39]_i_256\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(4),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(4),
      O => \countAddrToBeSent[39]_i_256_n_0\
    );
\countAddrToBeSent[39]_i_257\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(3),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(3),
      O => \countAddrToBeSent[39]_i_257_n_0\
    );
\countAddrToBeSent[39]_i_258\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(2),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(2),
      O => \countAddrToBeSent[39]_i_258_n_0\
    );
\countAddrToBeSent[39]_i_259\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(1),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(1),
      O => \countAddrToBeSent[39]_i_259_n_0\
    );
\countAddrToBeSent[39]_i_26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(28),
      I1 => write_ticks_per_burst(28),
      I2 => write_ticks2(29),
      I3 => write_ticks_per_burst(29),
      O => \countAddrToBeSent[39]_i_26_n_0\
    );
\countAddrToBeSent[39]_i_260\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataReceived(0),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(0),
      O => \countAddrToBeSent[39]_i_260_n_0\
    );
\countAddrToBeSent[39]_i_27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(26),
      I1 => write_ticks_per_burst(26),
      I2 => write_ticks2(27),
      I3 => write_ticks_per_burst(27),
      O => \countAddrToBeSent[39]_i_27_n_0\
    );
\countAddrToBeSent[39]_i_28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(24),
      I1 => write_ticks_per_burst(24),
      I2 => write_ticks2(25),
      I3 => write_ticks_per_burst(25),
      O => \countAddrToBeSent[39]_i_28_n_0\
    );
\countAddrToBeSent[39]_i_29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(22),
      I1 => write_ticks_per_burst(22),
      I2 => write_ticks2(23),
      I3 => write_ticks_per_burst(23),
      O => \countAddrToBeSent[39]_i_29_n_0\
    );
\countAddrToBeSent[39]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => active_write,
      I1 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      O => \countAddrToBeSent__0\
    );
\countAddrToBeSent[39]_i_30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(20),
      I1 => write_ticks_per_burst(20),
      I2 => write_ticks2(21),
      I3 => write_ticks_per_burst(21),
      O => \countAddrToBeSent[39]_i_30_n_0\
    );
\countAddrToBeSent[39]_i_31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(18),
      I1 => write_ticks_per_burst(18),
      I2 => write_ticks2(19),
      I3 => write_ticks_per_burst(19),
      O => \countAddrToBeSent[39]_i_31_n_0\
    );
\countAddrToBeSent[39]_i_32\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(16),
      I1 => write_ticks_per_burst(16),
      I2 => write_ticks2(17),
      I3 => write_ticks_per_burst(17),
      O => \countAddrToBeSent[39]_i_32_n_0\
    );
\countAddrToBeSent[39]_i_34\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(30),
      I1 => write_ticks21_out(30),
      I2 => write_ticks21_out(31),
      I3 => write_max_queue_size(31),
      O => \countAddrToBeSent[39]_i_34_n_0\
    );
\countAddrToBeSent[39]_i_35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(28),
      I1 => write_ticks21_out(28),
      I2 => write_ticks21_out(29),
      I3 => write_max_queue_size(29),
      O => \countAddrToBeSent[39]_i_35_n_0\
    );
\countAddrToBeSent[39]_i_36\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(26),
      I1 => write_ticks21_out(26),
      I2 => write_ticks21_out(27),
      I3 => write_max_queue_size(27),
      O => \countAddrToBeSent[39]_i_36_n_0\
    );
\countAddrToBeSent[39]_i_37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(24),
      I1 => write_ticks21_out(24),
      I2 => write_ticks21_out(25),
      I3 => write_max_queue_size(25),
      O => \countAddrToBeSent[39]_i_37_n_0\
    );
\countAddrToBeSent[39]_i_38\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(22),
      I1 => write_ticks21_out(22),
      I2 => write_ticks21_out(23),
      I3 => write_max_queue_size(23),
      O => \countAddrToBeSent[39]_i_38_n_0\
    );
\countAddrToBeSent[39]_i_39\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(20),
      I1 => write_ticks21_out(20),
      I2 => write_ticks21_out(21),
      I3 => write_max_queue_size(21),
      O => \countAddrToBeSent[39]_i_39_n_0\
    );
\countAddrToBeSent[39]_i_40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(18),
      I1 => write_ticks21_out(18),
      I2 => write_ticks21_out(19),
      I3 => write_max_queue_size(19),
      O => \countAddrToBeSent[39]_i_40_n_0\
    );
\countAddrToBeSent[39]_i_41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(16),
      I1 => write_ticks21_out(16),
      I2 => write_ticks21_out(17),
      I3 => write_max_queue_size(17),
      O => \countAddrToBeSent[39]_i_41_n_0\
    );
\countAddrToBeSent[39]_i_42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(30),
      I1 => write_ticks21_out(30),
      I2 => write_max_queue_size(31),
      I3 => write_ticks21_out(31),
      O => \countAddrToBeSent[39]_i_42_n_0\
    );
\countAddrToBeSent[39]_i_43\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(28),
      I1 => write_ticks21_out(28),
      I2 => write_max_queue_size(29),
      I3 => write_ticks21_out(29),
      O => \countAddrToBeSent[39]_i_43_n_0\
    );
\countAddrToBeSent[39]_i_44\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(26),
      I1 => write_ticks21_out(26),
      I2 => write_max_queue_size(27),
      I3 => write_ticks21_out(27),
      O => \countAddrToBeSent[39]_i_44_n_0\
    );
\countAddrToBeSent[39]_i_45\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(24),
      I1 => write_ticks21_out(24),
      I2 => write_max_queue_size(25),
      I3 => write_ticks21_out(25),
      O => \countAddrToBeSent[39]_i_45_n_0\
    );
\countAddrToBeSent[39]_i_46\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(22),
      I1 => write_ticks21_out(22),
      I2 => write_max_queue_size(23),
      I3 => write_ticks21_out(23),
      O => \countAddrToBeSent[39]_i_46_n_0\
    );
\countAddrToBeSent[39]_i_47\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(20),
      I1 => write_ticks21_out(20),
      I2 => write_max_queue_size(21),
      I3 => write_ticks21_out(21),
      O => \countAddrToBeSent[39]_i_47_n_0\
    );
\countAddrToBeSent[39]_i_48\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(18),
      I1 => write_ticks21_out(18),
      I2 => write_max_queue_size(19),
      I3 => write_ticks21_out(19),
      O => \countAddrToBeSent[39]_i_48_n_0\
    );
\countAddrToBeSent[39]_i_49\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(16),
      I1 => write_ticks21_out(16),
      I2 => write_max_queue_size(17),
      I3 => write_ticks21_out(17),
      O => \countAddrToBeSent[39]_i_49_n_0\
    );
\countAddrToBeSent[39]_i_53\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(39),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_8\,
      O => \countAddrToBeSent[39]_i_53_n_0\
    );
\countAddrToBeSent[39]_i_54\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(38),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_9\,
      O => \countAddrToBeSent[39]_i_54_n_0\
    );
\countAddrToBeSent[39]_i_55\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(37),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_10\,
      O => \countAddrToBeSent[39]_i_55_n_0\
    );
\countAddrToBeSent[39]_i_56\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(36),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_11\,
      O => \countAddrToBeSent[39]_i_56_n_0\
    );
\countAddrToBeSent[39]_i_57\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(35),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_12\,
      O => \countAddrToBeSent[39]_i_57_n_0\
    );
\countAddrToBeSent[39]_i_58\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(34),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_13\,
      O => \countAddrToBeSent[39]_i_58_n_0\
    );
\countAddrToBeSent[39]_i_59\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(33),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_14\,
      O => \countAddrToBeSent[39]_i_59_n_0\
    );
\countAddrToBeSent[39]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(39),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(39),
      O => \countAddrToBeSent[39]_i_6_n_0\
    );
\countAddrToBeSent[39]_i_60\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_ticks22_out(32),
      I1 => \countAddrToBeSent_reg[39]_i_121_n_15\,
      O => \countAddrToBeSent[39]_i_60_n_0\
    );
\countAddrToBeSent[39]_i_61\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(14),
      I1 => write_ticks_per_burst(14),
      I2 => write_ticks_per_burst(15),
      I3 => write_ticks2(15),
      O => \countAddrToBeSent[39]_i_61_n_0\
    );
\countAddrToBeSent[39]_i_62\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(12),
      I1 => write_ticks_per_burst(12),
      I2 => write_ticks_per_burst(13),
      I3 => write_ticks2(13),
      O => \countAddrToBeSent[39]_i_62_n_0\
    );
\countAddrToBeSent[39]_i_63\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(10),
      I1 => write_ticks_per_burst(10),
      I2 => write_ticks_per_burst(11),
      I3 => write_ticks2(11),
      O => \countAddrToBeSent[39]_i_63_n_0\
    );
\countAddrToBeSent[39]_i_64\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(8),
      I1 => write_ticks_per_burst(8),
      I2 => write_ticks_per_burst(9),
      I3 => write_ticks2(9),
      O => \countAddrToBeSent[39]_i_64_n_0\
    );
\countAddrToBeSent[39]_i_65\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(6),
      I1 => write_ticks_per_burst(6),
      I2 => write_ticks_per_burst(7),
      I3 => write_ticks2(7),
      O => \countAddrToBeSent[39]_i_65_n_0\
    );
\countAddrToBeSent[39]_i_66\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(4),
      I1 => write_ticks_per_burst(4),
      I2 => write_ticks_per_burst(5),
      I3 => write_ticks2(5),
      O => \countAddrToBeSent[39]_i_66_n_0\
    );
\countAddrToBeSent[39]_i_67\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_ticks2(2),
      I1 => write_ticks_per_burst(2),
      I2 => write_ticks_per_burst(3),
      I3 => write_ticks2(3),
      O => \countAddrToBeSent[39]_i_67_n_0\
    );
\countAddrToBeSent[39]_i_68\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1F01"
    )
        port map (
      I0 => write_ticks_per_burst(0),
      I1 => write_ticks(0),
      I2 => write_ticks_per_burst(1),
      I3 => write_ticks2(1),
      O => \countAddrToBeSent[39]_i_68_n_0\
    );
\countAddrToBeSent[39]_i_69\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(14),
      I1 => write_ticks_per_burst(14),
      I2 => write_ticks2(15),
      I3 => write_ticks_per_burst(15),
      O => \countAddrToBeSent[39]_i_69_n_0\
    );
\countAddrToBeSent[39]_i_70\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(12),
      I1 => write_ticks_per_burst(12),
      I2 => write_ticks2(13),
      I3 => write_ticks_per_burst(13),
      O => \countAddrToBeSent[39]_i_70_n_0\
    );
\countAddrToBeSent[39]_i_71\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(10),
      I1 => write_ticks_per_burst(10),
      I2 => write_ticks2(11),
      I3 => write_ticks_per_burst(11),
      O => \countAddrToBeSent[39]_i_71_n_0\
    );
\countAddrToBeSent[39]_i_72\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(8),
      I1 => write_ticks_per_burst(8),
      I2 => write_ticks2(9),
      I3 => write_ticks_per_burst(9),
      O => \countAddrToBeSent[39]_i_72_n_0\
    );
\countAddrToBeSent[39]_i_73\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(6),
      I1 => write_ticks_per_burst(6),
      I2 => write_ticks2(7),
      I3 => write_ticks_per_burst(7),
      O => \countAddrToBeSent[39]_i_73_n_0\
    );
\countAddrToBeSent[39]_i_74\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(4),
      I1 => write_ticks_per_burst(4),
      I2 => write_ticks2(5),
      I3 => write_ticks_per_burst(5),
      O => \countAddrToBeSent[39]_i_74_n_0\
    );
\countAddrToBeSent[39]_i_75\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_ticks2(2),
      I1 => write_ticks_per_burst(2),
      I2 => write_ticks2(3),
      I3 => write_ticks_per_burst(3),
      O => \countAddrToBeSent[39]_i_75_n_0\
    );
\countAddrToBeSent[39]_i_76\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6006"
    )
        port map (
      I0 => write_ticks(0),
      I1 => write_ticks_per_burst(0),
      I2 => write_ticks2(1),
      I3 => write_ticks_per_burst(1),
      O => \countAddrToBeSent[39]_i_76_n_0\
    );
\countAddrToBeSent[39]_i_77\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(14),
      I1 => write_ticks21_out(14),
      I2 => write_ticks21_out(15),
      I3 => write_max_queue_size(15),
      O => \countAddrToBeSent[39]_i_77_n_0\
    );
\countAddrToBeSent[39]_i_78\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(12),
      I1 => write_ticks21_out(12),
      I2 => write_ticks21_out(13),
      I3 => write_max_queue_size(13),
      O => \countAddrToBeSent[39]_i_78_n_0\
    );
\countAddrToBeSent[39]_i_79\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(10),
      I1 => write_ticks21_out(10),
      I2 => write_ticks21_out(11),
      I3 => write_max_queue_size(11),
      O => \countAddrToBeSent[39]_i_79_n_0\
    );
\countAddrToBeSent[39]_i_80\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(8),
      I1 => write_ticks21_out(8),
      I2 => write_ticks21_out(9),
      I3 => write_max_queue_size(9),
      O => \countAddrToBeSent[39]_i_80_n_0\
    );
\countAddrToBeSent[39]_i_81\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(6),
      I1 => write_ticks21_out(6),
      I2 => write_ticks21_out(7),
      I3 => write_max_queue_size(7),
      O => \countAddrToBeSent[39]_i_81_n_0\
    );
\countAddrToBeSent[39]_i_82\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(4),
      I1 => write_ticks21_out(4),
      I2 => write_ticks21_out(5),
      I3 => write_max_queue_size(5),
      O => \countAddrToBeSent[39]_i_82_n_0\
    );
\countAddrToBeSent[39]_i_83\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(2),
      I1 => write_ticks21_out(2),
      I2 => write_ticks21_out(3),
      I3 => write_max_queue_size(3),
      O => \countAddrToBeSent[39]_i_83_n_0\
    );
\countAddrToBeSent[39]_i_84\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_max_queue_size(0),
      I1 => write_ticks21_out(0),
      I2 => write_ticks21_out(1),
      I3 => write_max_queue_size(1),
      O => \countAddrToBeSent[39]_i_84_n_0\
    );
\countAddrToBeSent[39]_i_85\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(14),
      I1 => write_ticks21_out(14),
      I2 => write_max_queue_size(15),
      I3 => write_ticks21_out(15),
      O => \countAddrToBeSent[39]_i_85_n_0\
    );
\countAddrToBeSent[39]_i_86\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(12),
      I1 => write_ticks21_out(12),
      I2 => write_max_queue_size(13),
      I3 => write_ticks21_out(13),
      O => \countAddrToBeSent[39]_i_86_n_0\
    );
\countAddrToBeSent[39]_i_87\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(10),
      I1 => write_ticks21_out(10),
      I2 => write_max_queue_size(11),
      I3 => write_ticks21_out(11),
      O => \countAddrToBeSent[39]_i_87_n_0\
    );
\countAddrToBeSent[39]_i_88\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(8),
      I1 => write_ticks21_out(8),
      I2 => write_max_queue_size(9),
      I3 => write_ticks21_out(9),
      O => \countAddrToBeSent[39]_i_88_n_0\
    );
\countAddrToBeSent[39]_i_89\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(6),
      I1 => write_ticks21_out(6),
      I2 => write_max_queue_size(7),
      I3 => write_ticks21_out(7),
      O => \countAddrToBeSent[39]_i_89_n_0\
    );
\countAddrToBeSent[39]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_ticks21_out(38),
      I1 => write_ticks21_out(39),
      O => \countAddrToBeSent[39]_i_9_n_0\
    );
\countAddrToBeSent[39]_i_90\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(4),
      I1 => write_ticks21_out(4),
      I2 => write_max_queue_size(5),
      I3 => write_ticks21_out(5),
      O => \countAddrToBeSent[39]_i_90_n_0\
    );
\countAddrToBeSent[39]_i_91\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(2),
      I1 => write_ticks21_out(2),
      I2 => write_max_queue_size(3),
      I3 => write_ticks21_out(3),
      O => \countAddrToBeSent[39]_i_91_n_0\
    );
\countAddrToBeSent[39]_i_92\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_max_queue_size(0),
      I1 => write_ticks21_out(0),
      I2 => write_max_queue_size(1),
      I3 => write_ticks21_out(1),
      O => \countAddrToBeSent[39]_i_92_n_0\
    );
\countAddrToBeSent[39]_i_95\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(39),
      I1 => countAddrSent(39),
      O => \countAddrToBeSent[39]_i_95_n_0\
    );
\countAddrToBeSent[39]_i_96\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(38),
      I1 => countAddrSent(38),
      O => \countAddrToBeSent[39]_i_96_n_0\
    );
\countAddrToBeSent[39]_i_97\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(37),
      I1 => countAddrSent(37),
      O => \countAddrToBeSent[39]_i_97_n_0\
    );
\countAddrToBeSent[39]_i_98\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(36),
      I1 => countAddrSent(36),
      O => \countAddrToBeSent[39]_i_98_n_0\
    );
\countAddrToBeSent[39]_i_99\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrToBeSent(35),
      I1 => countAddrSent(35),
      O => \countAddrToBeSent[39]_i_99_n_0\
    );
\countAddrToBeSent[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[3]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[3]_i_1_n_0\
    );
\countAddrToBeSent[3]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(3),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(3),
      O => \countAddrToBeSent[3]_i_2_n_0\
    );
\countAddrToBeSent[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[4]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[4]_i_1_n_0\
    );
\countAddrToBeSent[4]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(4),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(4),
      O => \countAddrToBeSent[4]_i_2_n_0\
    );
\countAddrToBeSent[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[5]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[5]_i_1_n_0\
    );
\countAddrToBeSent[5]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(5),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(5),
      O => \countAddrToBeSent[5]_i_2_n_0\
    );
\countAddrToBeSent[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[6]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[6]_i_1_n_0\
    );
\countAddrToBeSent[6]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(6),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(6),
      O => \countAddrToBeSent[6]_i_2_n_0\
    );
\countAddrToBeSent[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[7]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[7]_i_1_n_0\
    );
\countAddrToBeSent[7]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(1),
      I1 => write_blocking_ratio(1),
      O => \countAddrToBeSent[7]_i_10_n_0\
    );
\countAddrToBeSent[7]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(0),
      I1 => write_blocking_ratio(0),
      O => \countAddrToBeSent[7]_i_11_n_0\
    );
\countAddrToBeSent[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(7),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(7),
      O => \countAddrToBeSent[7]_i_2_n_0\
    );
\countAddrToBeSent[7]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(7),
      I1 => write_blocking_ratio(7),
      O => \countAddrToBeSent[7]_i_4_n_0\
    );
\countAddrToBeSent[7]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(6),
      I1 => write_blocking_ratio(6),
      O => \countAddrToBeSent[7]_i_5_n_0\
    );
\countAddrToBeSent[7]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(5),
      I1 => write_blocking_ratio(5),
      O => \countAddrToBeSent[7]_i_6_n_0\
    );
\countAddrToBeSent[7]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(4),
      I1 => write_blocking_ratio(4),
      O => \countAddrToBeSent[7]_i_7_n_0\
    );
\countAddrToBeSent[7]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(3),
      I1 => write_blocking_ratio(3),
      O => \countAddrToBeSent[7]_i_8_n_0\
    );
\countAddrToBeSent[7]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countAddrToBeSent(2),
      I1 => write_blocking_ratio(2),
      O => \countAddrToBeSent[7]_i_9_n_0\
    );
\countAddrToBeSent[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[8]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[8]_i_1_n_0\
    );
\countAddrToBeSent[8]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(8),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(8),
      O => \countAddrToBeSent[8]_i_2_n_0\
    );
\countAddrToBeSent[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \countAddrToBeSent[9]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countAddrToBeSent[9]_i_1_n_0\
    );
\countAddrToBeSent[9]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countAddrToBeSent00_in(9),
      I1 => write_ticks1,
      I2 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I3 => active_blocking,
      I4 => countAddrToBeSent0(9),
      O => \countAddrToBeSent[9]_i_2_n_0\
    );
\countAddrToBeSent_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[0]_i_1_n_0\,
      Q => countAddrToBeSent(0),
      R => '0'
    );
\countAddrToBeSent_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[10]_i_1_n_0\,
      Q => countAddrToBeSent(10),
      R => '0'
    );
\countAddrToBeSent_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[11]_i_1_n_0\,
      Q => countAddrToBeSent(11),
      R => '0'
    );
\countAddrToBeSent_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[12]_i_1_n_0\,
      Q => countAddrToBeSent(12),
      R => '0'
    );
\countAddrToBeSent_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[13]_i_1_n_0\,
      Q => countAddrToBeSent(13),
      R => '0'
    );
\countAddrToBeSent_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[14]_i_1_n_0\,
      Q => countAddrToBeSent(14),
      R => '0'
    );
\countAddrToBeSent_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[15]_i_1_n_0\,
      Q => countAddrToBeSent(15),
      R => '0'
    );
\countAddrToBeSent_reg[15]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[7]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[15]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[15]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[15]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[15]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[15]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[15]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[15]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[15]_i_3_n_7\,
      DI(7 downto 0) => countAddrToBeSent(15 downto 8),
      O(7 downto 0) => countAddrToBeSent00_in(15 downto 8),
      S(7) => \countAddrToBeSent[15]_i_4_n_0\,
      S(6) => \countAddrToBeSent[15]_i_5_n_0\,
      S(5) => \countAddrToBeSent[15]_i_6_n_0\,
      S(4) => \countAddrToBeSent[15]_i_7_n_0\,
      S(3) => \countAddrToBeSent[15]_i_8_n_0\,
      S(2) => \countAddrToBeSent[15]_i_9_n_0\,
      S(1) => \countAddrToBeSent[15]_i_10_n_0\,
      S(0) => \countAddrToBeSent[15]_i_11_n_0\
    );
\countAddrToBeSent_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[16]_i_1_n_0\,
      Q => countAddrToBeSent(16),
      R => '0'
    );
\countAddrToBeSent_reg[16]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[8]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[16]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[16]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[16]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[16]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[16]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[16]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[16]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[16]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrToBeSent0(16 downto 9),
      S(7 downto 0) => countAddrToBeSent(16 downto 9)
    );
\countAddrToBeSent_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[17]_i_1_n_0\,
      Q => countAddrToBeSent(17),
      R => '0'
    );
\countAddrToBeSent_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[18]_i_1_n_0\,
      Q => countAddrToBeSent(18),
      R => '0'
    );
\countAddrToBeSent_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[19]_i_1_n_0\,
      Q => countAddrToBeSent(19),
      R => '0'
    );
\countAddrToBeSent_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[1]_i_1_n_0\,
      Q => countAddrToBeSent(1),
      R => '0'
    );
\countAddrToBeSent_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[20]_i_1_n_0\,
      Q => countAddrToBeSent(20),
      R => '0'
    );
\countAddrToBeSent_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[21]_i_1_n_0\,
      Q => countAddrToBeSent(21),
      R => '0'
    );
\countAddrToBeSent_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[22]_i_1_n_0\,
      Q => countAddrToBeSent(22),
      R => '0'
    );
\countAddrToBeSent_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[23]_i_1_n_0\,
      Q => countAddrToBeSent(23),
      R => '0'
    );
\countAddrToBeSent_reg[23]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[15]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[23]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[23]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[23]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[23]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[23]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[23]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[23]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[23]_i_3_n_7\,
      DI(7 downto 0) => countAddrToBeSent(23 downto 16),
      O(7 downto 0) => countAddrToBeSent00_in(23 downto 16),
      S(7) => \countAddrToBeSent[23]_i_4_n_0\,
      S(6) => \countAddrToBeSent[23]_i_5_n_0\,
      S(5) => \countAddrToBeSent[23]_i_6_n_0\,
      S(4) => \countAddrToBeSent[23]_i_7_n_0\,
      S(3) => \countAddrToBeSent[23]_i_8_n_0\,
      S(2) => \countAddrToBeSent[23]_i_9_n_0\,
      S(1) => \countAddrToBeSent[23]_i_10_n_0\,
      S(0) => \countAddrToBeSent[23]_i_11_n_0\
    );
\countAddrToBeSent_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[24]_i_1_n_0\,
      Q => countAddrToBeSent(24),
      R => '0'
    );
\countAddrToBeSent_reg[24]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[16]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[24]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[24]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[24]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[24]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[24]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[24]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[24]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[24]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrToBeSent0(24 downto 17),
      S(7 downto 0) => countAddrToBeSent(24 downto 17)
    );
\countAddrToBeSent_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[25]_i_1_n_0\,
      Q => countAddrToBeSent(25),
      R => '0'
    );
\countAddrToBeSent_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[26]_i_1_n_0\,
      Q => countAddrToBeSent(26),
      R => '0'
    );
\countAddrToBeSent_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[27]_i_1_n_0\,
      Q => countAddrToBeSent(27),
      R => '0'
    );
\countAddrToBeSent_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[28]_i_1_n_0\,
      Q => countAddrToBeSent(28),
      R => '0'
    );
\countAddrToBeSent_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[29]_i_1_n_0\,
      Q => countAddrToBeSent(29),
      R => '0'
    );
\countAddrToBeSent_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[2]_i_1_n_0\,
      Q => countAddrToBeSent(2),
      R => '0'
    );
\countAddrToBeSent_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[30]_i_1_n_0\,
      Q => countAddrToBeSent(30),
      R => '0'
    );
\countAddrToBeSent_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[31]_i_1_n_0\,
      Q => countAddrToBeSent(31),
      R => '0'
    );
\countAddrToBeSent_reg[31]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[23]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[31]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[31]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[31]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[31]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[31]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[31]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[31]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[31]_i_3_n_7\,
      DI(7 downto 0) => countAddrToBeSent(31 downto 24),
      O(7 downto 0) => countAddrToBeSent00_in(31 downto 24),
      S(7) => \countAddrToBeSent[31]_i_4_n_0\,
      S(6) => \countAddrToBeSent[31]_i_5_n_0\,
      S(5) => \countAddrToBeSent[31]_i_6_n_0\,
      S(4) => \countAddrToBeSent[31]_i_7_n_0\,
      S(3) => \countAddrToBeSent[31]_i_8_n_0\,
      S(2) => \countAddrToBeSent[31]_i_9_n_0\,
      S(1) => \countAddrToBeSent[31]_i_10_n_0\,
      S(0) => \countAddrToBeSent[31]_i_11_n_0\
    );
\countAddrToBeSent_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[32]_i_1_n_0\,
      Q => countAddrToBeSent(32),
      R => '0'
    );
\countAddrToBeSent_reg[32]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[24]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[32]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[32]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[32]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[32]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[32]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[32]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[32]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[32]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrToBeSent0(32 downto 25),
      S(7 downto 0) => countAddrToBeSent(32 downto 25)
    );
\countAddrToBeSent_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[33]_i_1_n_0\,
      Q => countAddrToBeSent(33),
      R => '0'
    );
\countAddrToBeSent_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[34]_i_1_n_0\,
      Q => countAddrToBeSent(34),
      R => '0'
    );
\countAddrToBeSent_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[35]_i_1_n_0\,
      Q => countAddrToBeSent(35),
      R => '0'
    );
\countAddrToBeSent_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[36]_i_1_n_0\,
      Q => countAddrToBeSent(36),
      R => '0'
    );
\countAddrToBeSent_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[37]_i_1_n_0\,
      Q => countAddrToBeSent(37),
      R => '0'
    );
\countAddrToBeSent_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[38]_i_1_n_0\,
      Q => countAddrToBeSent(38),
      R => '0'
    );
\countAddrToBeSent_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[39]_i_2_n_0\,
      Q => countAddrToBeSent(39),
      R => '0'
    );
\countAddrToBeSent_reg[39]_i_103\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_140_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_103_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_103_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_103_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_103_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_103_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_103_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_103_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_103_n_7\,
      DI(7 downto 0) => write_ticks22_out(23 downto 16),
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_103_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_142_n_0\,
      S(6) => \countAddrToBeSent[39]_i_143_n_0\,
      S(5) => \countAddrToBeSent[39]_i_144_n_0\,
      S(4) => \countAddrToBeSent[39]_i_145_n_0\,
      S(3) => \countAddrToBeSent[39]_i_146_n_0\,
      S(2) => \countAddrToBeSent[39]_i_147_n_0\,
      S(1) => \countAddrToBeSent[39]_i_148_n_0\,
      S(0) => \countAddrToBeSent[39]_i_149_n_0\
    );
\countAddrToBeSent_reg[39]_i_104\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_141_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_104_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_104_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_104_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_104_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_104_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_104_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_104_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_104_n_7\,
      DI(7 downto 0) => countAddrToBeSent(31 downto 24),
      O(7 downto 0) => write_ticks22_out(31 downto 24),
      S(7) => \countAddrToBeSent[39]_i_150_n_0\,
      S(6) => \countAddrToBeSent[39]_i_151_n_0\,
      S(5) => \countAddrToBeSent[39]_i_152_n_0\,
      S(4) => \countAddrToBeSent[39]_i_153_n_0\,
      S(3) => \countAddrToBeSent[39]_i_154_n_0\,
      S(2) => \countAddrToBeSent[39]_i_155_n_0\,
      S(1) => \countAddrToBeSent[39]_i_156_n_0\,
      S(0) => \countAddrToBeSent[39]_i_157_n_0\
    );
\countAddrToBeSent_reg[39]_i_121\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_158_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countAddrToBeSent_reg[39]_i_121_CO_UNCONNECTED\(7),
      CO(6) => \countAddrToBeSent_reg[39]_i_121_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_121_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_121_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_121_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_121_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_121_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_121_n_7\,
      DI(7) => '0',
      DI(6 downto 0) => countDataReceived(38 downto 32),
      O(7) => \countAddrToBeSent_reg[39]_i_121_n_8\,
      O(6) => \countAddrToBeSent_reg[39]_i_121_n_9\,
      O(5) => \countAddrToBeSent_reg[39]_i_121_n_10\,
      O(4) => \countAddrToBeSent_reg[39]_i_121_n_11\,
      O(3) => \countAddrToBeSent_reg[39]_i_121_n_12\,
      O(2) => \countAddrToBeSent_reg[39]_i_121_n_13\,
      O(1) => \countAddrToBeSent_reg[39]_i_121_n_14\,
      O(0) => \countAddrToBeSent_reg[39]_i_121_n_15\,
      S(7) => \countAddrToBeSent[39]_i_159_n_0\,
      S(6) => \countAddrToBeSent[39]_i_160_n_0\,
      S(5) => \countAddrToBeSent[39]_i_161_n_0\,
      S(4) => \countAddrToBeSent[39]_i_162_n_0\,
      S(3) => \countAddrToBeSent[39]_i_163_n_0\,
      S(2) => \countAddrToBeSent[39]_i_164_n_0\,
      S(1) => \countAddrToBeSent[39]_i_165_n_0\,
      S(0) => \countAddrToBeSent[39]_i_166_n_0\
    );
\countAddrToBeSent_reg[39]_i_122\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_123_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_122_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_122_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_122_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_122_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_122_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_122_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_122_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_122_n_7\,
      DI(7 downto 0) => countAddrToBeSent(15 downto 8),
      O(7 downto 0) => write_ticks21_out(15 downto 8),
      S(7) => \countAddrToBeSent[39]_i_167_n_0\,
      S(6) => \countAddrToBeSent[39]_i_168_n_0\,
      S(5) => \countAddrToBeSent[39]_i_169_n_0\,
      S(4) => \countAddrToBeSent[39]_i_170_n_0\,
      S(3) => \countAddrToBeSent[39]_i_171_n_0\,
      S(2) => \countAddrToBeSent[39]_i_172_n_0\,
      S(1) => \countAddrToBeSent[39]_i_173_n_0\,
      S(0) => \countAddrToBeSent[39]_i_174_n_0\
    );
\countAddrToBeSent_reg[39]_i_123\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_123_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_123_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_123_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_123_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_123_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_123_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_123_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_123_n_7\,
      DI(7 downto 0) => countAddrToBeSent(7 downto 0),
      O(7 downto 0) => write_ticks21_out(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_175_n_0\,
      S(6) => \countAddrToBeSent[39]_i_176_n_0\,
      S(5) => \countAddrToBeSent[39]_i_177_n_0\,
      S(4) => \countAddrToBeSent[39]_i_178_n_0\,
      S(3) => \countAddrToBeSent[39]_i_179_n_0\,
      S(2) => \countAddrToBeSent[39]_i_180_n_0\,
      S(1) => \countAddrToBeSent[39]_i_181_n_0\,
      S(0) => \countAddrToBeSent[39]_i_182_n_0\
    );
\countAddrToBeSent_reg[39]_i_13\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_51_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_13_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_13_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_13_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_13_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_13_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_13_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_13_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_13_n_7\,
      DI(7 downto 0) => write_ticks22_out(39 downto 32),
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_13_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_53_n_0\,
      S(6) => \countAddrToBeSent[39]_i_54_n_0\,
      S(5) => \countAddrToBeSent[39]_i_55_n_0\,
      S(4) => \countAddrToBeSent[39]_i_56_n_0\,
      S(3) => \countAddrToBeSent[39]_i_57_n_0\,
      S(2) => \countAddrToBeSent[39]_i_58_n_0\,
      S(1) => \countAddrToBeSent[39]_i_59_n_0\,
      S(0) => \countAddrToBeSent[39]_i_60_n_0\
    );
\countAddrToBeSent_reg[39]_i_14\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[31]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countAddrToBeSent_reg[39]_i_14_CO_UNCONNECTED\(7),
      CO(6) => \countAddrToBeSent_reg[39]_i_14_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_14_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_14_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_14_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_14_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_14_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_14_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrToBeSent00_in(39 downto 32),
      S(7 downto 0) => countAddrToBeSent(39 downto 32)
    );
\countAddrToBeSent_reg[39]_i_140\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_183_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_140_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_140_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_140_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_140_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_140_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_140_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_140_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_140_n_7\,
      DI(7 downto 0) => write_ticks22_out(15 downto 8),
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_140_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_185_n_0\,
      S(6) => \countAddrToBeSent[39]_i_186_n_0\,
      S(5) => \countAddrToBeSent[39]_i_187_n_0\,
      S(4) => \countAddrToBeSent[39]_i_188_n_0\,
      S(3) => \countAddrToBeSent[39]_i_189_n_0\,
      S(2) => \countAddrToBeSent[39]_i_190_n_0\,
      S(1) => \countAddrToBeSent[39]_i_191_n_0\,
      S(0) => \countAddrToBeSent[39]_i_192_n_0\
    );
\countAddrToBeSent_reg[39]_i_141\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_184_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_141_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_141_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_141_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_141_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_141_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_141_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_141_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_141_n_7\,
      DI(7 downto 0) => countAddrToBeSent(23 downto 16),
      O(7 downto 0) => write_ticks22_out(23 downto 16),
      S(7) => \countAddrToBeSent[39]_i_193_n_0\,
      S(6) => \countAddrToBeSent[39]_i_194_n_0\,
      S(5) => \countAddrToBeSent[39]_i_195_n_0\,
      S(4) => \countAddrToBeSent[39]_i_196_n_0\,
      S(3) => \countAddrToBeSent[39]_i_197_n_0\,
      S(2) => \countAddrToBeSent[39]_i_198_n_0\,
      S(1) => \countAddrToBeSent[39]_i_199_n_0\,
      S(0) => \countAddrToBeSent[39]_i_200_n_0\
    );
\countAddrToBeSent_reg[39]_i_15\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[32]_i_3_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countAddrToBeSent_reg[39]_i_15_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \countAddrToBeSent_reg[39]_i_15_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_15_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_15_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_15_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_15_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_15_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_countAddrToBeSent_reg[39]_i_15_O_UNCONNECTED\(7),
      O(6 downto 0) => countAddrToBeSent0(39 downto 33),
      S(7) => '0',
      S(6 downto 0) => countAddrToBeSent(39 downto 33)
    );
\countAddrToBeSent_reg[39]_i_158\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_201_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_158_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_158_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_158_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_158_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_158_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_158_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_158_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_158_n_7\,
      DI(7 downto 0) => countDataReceived(31 downto 24),
      O(7) => \countAddrToBeSent_reg[39]_i_158_n_8\,
      O(6) => \countAddrToBeSent_reg[39]_i_158_n_9\,
      O(5) => \countAddrToBeSent_reg[39]_i_158_n_10\,
      O(4) => \countAddrToBeSent_reg[39]_i_158_n_11\,
      O(3) => \countAddrToBeSent_reg[39]_i_158_n_12\,
      O(2) => \countAddrToBeSent_reg[39]_i_158_n_13\,
      O(1) => \countAddrToBeSent_reg[39]_i_158_n_14\,
      O(0) => \countAddrToBeSent_reg[39]_i_158_n_15\,
      S(7) => \countAddrToBeSent[39]_i_202_n_0\,
      S(6) => \countAddrToBeSent[39]_i_203_n_0\,
      S(5) => \countAddrToBeSent[39]_i_204_n_0\,
      S(4) => \countAddrToBeSent[39]_i_205_n_0\,
      S(3) => \countAddrToBeSent[39]_i_206_n_0\,
      S(2) => \countAddrToBeSent[39]_i_207_n_0\,
      S(1) => \countAddrToBeSent[39]_i_208_n_0\,
      S(0) => \countAddrToBeSent[39]_i_209_n_0\
    );
\countAddrToBeSent_reg[39]_i_16\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_16_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_16_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_16_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_16_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_16_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_16_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_16_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_16_n_7\,
      DI(7) => \countAddrToBeSent[39]_i_61_n_0\,
      DI(6) => \countAddrToBeSent[39]_i_62_n_0\,
      DI(5) => \countAddrToBeSent[39]_i_63_n_0\,
      DI(4) => \countAddrToBeSent[39]_i_64_n_0\,
      DI(3) => \countAddrToBeSent[39]_i_65_n_0\,
      DI(2) => \countAddrToBeSent[39]_i_66_n_0\,
      DI(1) => \countAddrToBeSent[39]_i_67_n_0\,
      DI(0) => \countAddrToBeSent[39]_i_68_n_0\,
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_16_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_69_n_0\,
      S(6) => \countAddrToBeSent[39]_i_70_n_0\,
      S(5) => \countAddrToBeSent[39]_i_71_n_0\,
      S(4) => \countAddrToBeSent[39]_i_72_n_0\,
      S(3) => \countAddrToBeSent[39]_i_73_n_0\,
      S(2) => \countAddrToBeSent[39]_i_74_n_0\,
      S(1) => \countAddrToBeSent[39]_i_75_n_0\,
      S(0) => \countAddrToBeSent[39]_i_76_n_0\
    );
\countAddrToBeSent_reg[39]_i_183\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_183_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_183_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_183_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_183_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_183_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_183_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_183_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_183_n_7\,
      DI(7 downto 0) => write_ticks22_out(7 downto 0),
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_183_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_211_n_0\,
      S(6) => \countAddrToBeSent[39]_i_212_n_0\,
      S(5) => \countAddrToBeSent[39]_i_213_n_0\,
      S(4) => \countAddrToBeSent[39]_i_214_n_0\,
      S(3) => \countAddrToBeSent[39]_i_215_n_0\,
      S(2) => \countAddrToBeSent[39]_i_216_n_0\,
      S(1) => \countAddrToBeSent[39]_i_217_n_0\,
      S(0) => \countAddrToBeSent[39]_i_218_n_0\
    );
\countAddrToBeSent_reg[39]_i_184\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_210_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_184_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_184_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_184_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_184_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_184_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_184_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_184_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_184_n_7\,
      DI(7 downto 0) => countAddrToBeSent(15 downto 8),
      O(7 downto 0) => write_ticks22_out(15 downto 8),
      S(7) => \countAddrToBeSent[39]_i_219_n_0\,
      S(6) => \countAddrToBeSent[39]_i_220_n_0\,
      S(5) => \countAddrToBeSent[39]_i_221_n_0\,
      S(4) => \countAddrToBeSent[39]_i_222_n_0\,
      S(3) => \countAddrToBeSent[39]_i_223_n_0\,
      S(2) => \countAddrToBeSent[39]_i_224_n_0\,
      S(1) => \countAddrToBeSent[39]_i_225_n_0\,
      S(0) => \countAddrToBeSent[39]_i_226_n_0\
    );
\countAddrToBeSent_reg[39]_i_201\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_227_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_201_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_201_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_201_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_201_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_201_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_201_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_201_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_201_n_7\,
      DI(7 downto 0) => countDataReceived(23 downto 16),
      O(7) => \countAddrToBeSent_reg[39]_i_201_n_8\,
      O(6) => \countAddrToBeSent_reg[39]_i_201_n_9\,
      O(5) => \countAddrToBeSent_reg[39]_i_201_n_10\,
      O(4) => \countAddrToBeSent_reg[39]_i_201_n_11\,
      O(3) => \countAddrToBeSent_reg[39]_i_201_n_12\,
      O(2) => \countAddrToBeSent_reg[39]_i_201_n_13\,
      O(1) => \countAddrToBeSent_reg[39]_i_201_n_14\,
      O(0) => \countAddrToBeSent_reg[39]_i_201_n_15\,
      S(7) => \countAddrToBeSent[39]_i_228_n_0\,
      S(6) => \countAddrToBeSent[39]_i_229_n_0\,
      S(5) => \countAddrToBeSent[39]_i_230_n_0\,
      S(4) => \countAddrToBeSent[39]_i_231_n_0\,
      S(3) => \countAddrToBeSent[39]_i_232_n_0\,
      S(2) => \countAddrToBeSent[39]_i_233_n_0\,
      S(1) => \countAddrToBeSent[39]_i_234_n_0\,
      S(0) => \countAddrToBeSent[39]_i_235_n_0\
    );
\countAddrToBeSent_reg[39]_i_210\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_210_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_210_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_210_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_210_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_210_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_210_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_210_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_210_n_7\,
      DI(7 downto 0) => countAddrToBeSent(7 downto 0),
      O(7 downto 0) => write_ticks22_out(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_236_n_0\,
      S(6) => \countAddrToBeSent[39]_i_237_n_0\,
      S(5) => \countAddrToBeSent[39]_i_238_n_0\,
      S(4) => \countAddrToBeSent[39]_i_239_n_0\,
      S(3) => \countAddrToBeSent[39]_i_240_n_0\,
      S(2) => \countAddrToBeSent[39]_i_241_n_0\,
      S(1) => \countAddrToBeSent[39]_i_242_n_0\,
      S(0) => \countAddrToBeSent[39]_i_243_n_0\
    );
\countAddrToBeSent_reg[39]_i_227\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_244_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_227_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_227_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_227_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_227_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_227_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_227_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_227_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_227_n_7\,
      DI(7 downto 0) => countDataReceived(15 downto 8),
      O(7) => \countAddrToBeSent_reg[39]_i_227_n_8\,
      O(6) => \countAddrToBeSent_reg[39]_i_227_n_9\,
      O(5) => \countAddrToBeSent_reg[39]_i_227_n_10\,
      O(4) => \countAddrToBeSent_reg[39]_i_227_n_11\,
      O(3) => \countAddrToBeSent_reg[39]_i_227_n_12\,
      O(2) => \countAddrToBeSent_reg[39]_i_227_n_13\,
      O(1) => \countAddrToBeSent_reg[39]_i_227_n_14\,
      O(0) => \countAddrToBeSent_reg[39]_i_227_n_15\,
      S(7) => \countAddrToBeSent[39]_i_245_n_0\,
      S(6) => \countAddrToBeSent[39]_i_246_n_0\,
      S(5) => \countAddrToBeSent[39]_i_247_n_0\,
      S(4) => \countAddrToBeSent[39]_i_248_n_0\,
      S(3) => \countAddrToBeSent[39]_i_249_n_0\,
      S(2) => \countAddrToBeSent[39]_i_250_n_0\,
      S(1) => \countAddrToBeSent[39]_i_251_n_0\,
      S(0) => \countAddrToBeSent[39]_i_252_n_0\
    );
\countAddrToBeSent_reg[39]_i_244\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_244_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_244_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_244_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_244_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_244_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_244_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_244_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_244_n_7\,
      DI(7 downto 0) => countDataReceived(7 downto 0),
      O(7) => \countAddrToBeSent_reg[39]_i_244_n_8\,
      O(6) => \countAddrToBeSent_reg[39]_i_244_n_9\,
      O(5) => \countAddrToBeSent_reg[39]_i_244_n_10\,
      O(4) => \countAddrToBeSent_reg[39]_i_244_n_11\,
      O(3) => \countAddrToBeSent_reg[39]_i_244_n_12\,
      O(2) => \countAddrToBeSent_reg[39]_i_244_n_13\,
      O(1) => \countAddrToBeSent_reg[39]_i_244_n_14\,
      O(0) => \countAddrToBeSent_reg[39]_i_244_n_15\,
      S(7) => \countAddrToBeSent[39]_i_253_n_0\,
      S(6) => \countAddrToBeSent[39]_i_254_n_0\,
      S(5) => \countAddrToBeSent[39]_i_255_n_0\,
      S(4) => \countAddrToBeSent[39]_i_256_n_0\,
      S(3) => \countAddrToBeSent[39]_i_257_n_0\,
      S(2) => \countAddrToBeSent[39]_i_258_n_0\,
      S(1) => \countAddrToBeSent[39]_i_259_n_0\,
      S(0) => \countAddrToBeSent[39]_i_260_n_0\
    );
\countAddrToBeSent_reg[39]_i_33\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_33_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_33_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_33_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_33_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_33_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_33_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_33_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_33_n_7\,
      DI(7) => \countAddrToBeSent[39]_i_77_n_0\,
      DI(6) => \countAddrToBeSent[39]_i_78_n_0\,
      DI(5) => \countAddrToBeSent[39]_i_79_n_0\,
      DI(4) => \countAddrToBeSent[39]_i_80_n_0\,
      DI(3) => \countAddrToBeSent[39]_i_81_n_0\,
      DI(2) => \countAddrToBeSent[39]_i_82_n_0\,
      DI(1) => \countAddrToBeSent[39]_i_83_n_0\,
      DI(0) => \countAddrToBeSent[39]_i_84_n_0\,
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_33_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_85_n_0\,
      S(6) => \countAddrToBeSent[39]_i_86_n_0\,
      S(5) => \countAddrToBeSent[39]_i_87_n_0\,
      S(4) => \countAddrToBeSent[39]_i_88_n_0\,
      S(3) => \countAddrToBeSent[39]_i_89_n_0\,
      S(2) => \countAddrToBeSent[39]_i_90_n_0\,
      S(1) => \countAddrToBeSent[39]_i_91_n_0\,
      S(0) => \countAddrToBeSent[39]_i_92_n_0\
    );
\countAddrToBeSent_reg[39]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_8_n_0\,
      CI_TOP => '0',
      CO(7 downto 4) => \NLW_countAddrToBeSent_reg[39]_i_4_CO_UNCONNECTED\(7 downto 4),
      CO(3) => \countAddrToBeSent_reg[39]_i_4_n_4\,
      CO(2) => \countAddrToBeSent_reg[39]_i_4_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_4_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_4_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_4_O_UNCONNECTED\(7 downto 0),
      S(7 downto 4) => B"0000",
      S(3) => \countAddrToBeSent[39]_i_9_n_0\,
      S(2) => \countAddrToBeSent[39]_i_10_n_0\,
      S(1) => \countAddrToBeSent[39]_i_11_n_0\,
      S(0) => \countAddrToBeSent[39]_i_12_n_0\
    );
\countAddrToBeSent_reg[39]_i_5\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_13_n_0\,
      CI_TOP => '0',
      CO(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_5_CO_UNCONNECTED\(7 downto 0),
      DI(7 downto 0) => B"00000000",
      O(7 downto 1) => \NLW_countAddrToBeSent_reg[39]_i_5_O_UNCONNECTED\(7 downto 1),
      O(0) => write_ticks1,
      S(7 downto 0) => B"00000001"
    );
\countAddrToBeSent_reg[39]_i_50\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_93_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countAddrToBeSent_reg[39]_i_50_CO_UNCONNECTED\(7),
      CO(6) => \countAddrToBeSent_reg[39]_i_50_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_50_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_50_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_50_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_50_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_50_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_50_n_7\,
      DI(7) => '0',
      DI(6 downto 0) => countAddrToBeSent(38 downto 32),
      O(7 downto 0) => write_ticks21_out(39 downto 32),
      S(7) => \countAddrToBeSent[39]_i_95_n_0\,
      S(6) => \countAddrToBeSent[39]_i_96_n_0\,
      S(5) => \countAddrToBeSent[39]_i_97_n_0\,
      S(4) => \countAddrToBeSent[39]_i_98_n_0\,
      S(3) => \countAddrToBeSent[39]_i_99_n_0\,
      S(2) => \countAddrToBeSent[39]_i_100_n_0\,
      S(1) => \countAddrToBeSent[39]_i_101_n_0\,
      S(0) => \countAddrToBeSent[39]_i_102_n_0\
    );
\countAddrToBeSent_reg[39]_i_51\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_103_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_51_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_51_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_51_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_51_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_51_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_51_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_51_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_51_n_7\,
      DI(7 downto 0) => write_ticks22_out(31 downto 24),
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_51_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_105_n_0\,
      S(6) => \countAddrToBeSent[39]_i_106_n_0\,
      S(5) => \countAddrToBeSent[39]_i_107_n_0\,
      S(4) => \countAddrToBeSent[39]_i_108_n_0\,
      S(3) => \countAddrToBeSent[39]_i_109_n_0\,
      S(2) => \countAddrToBeSent[39]_i_110_n_0\,
      S(1) => \countAddrToBeSent[39]_i_111_n_0\,
      S(0) => \countAddrToBeSent[39]_i_112_n_0\
    );
\countAddrToBeSent_reg[39]_i_52\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_104_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countAddrToBeSent_reg[39]_i_52_CO_UNCONNECTED\(7),
      CO(6) => \countAddrToBeSent_reg[39]_i_52_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_52_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_52_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_52_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_52_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_52_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_52_n_7\,
      DI(7) => '0',
      DI(6 downto 0) => countAddrToBeSent(38 downto 32),
      O(7 downto 0) => write_ticks22_out(39 downto 32),
      S(7) => \countAddrToBeSent[39]_i_113_n_0\,
      S(6) => \countAddrToBeSent[39]_i_114_n_0\,
      S(5) => \countAddrToBeSent[39]_i_115_n_0\,
      S(4) => \countAddrToBeSent[39]_i_116_n_0\,
      S(3) => \countAddrToBeSent[39]_i_117_n_0\,
      S(2) => \countAddrToBeSent[39]_i_118_n_0\,
      S(1) => \countAddrToBeSent[39]_i_119_n_0\,
      S(0) => \countAddrToBeSent[39]_i_120_n_0\
    );
\countAddrToBeSent_reg[39]_i_7\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_16_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_7_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_7_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_7_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_7_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_7_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_7_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_7_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_7_n_7\,
      DI(7) => \countAddrToBeSent[39]_i_17_n_0\,
      DI(6) => \countAddrToBeSent[39]_i_18_n_0\,
      DI(5) => \countAddrToBeSent[39]_i_19_n_0\,
      DI(4) => \countAddrToBeSent[39]_i_20_n_0\,
      DI(3) => \countAddrToBeSent[39]_i_21_n_0\,
      DI(2) => \countAddrToBeSent[39]_i_22_n_0\,
      DI(1) => \countAddrToBeSent[39]_i_23_n_0\,
      DI(0) => \countAddrToBeSent[39]_i_24_n_0\,
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_7_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_25_n_0\,
      S(6) => \countAddrToBeSent[39]_i_26_n_0\,
      S(5) => \countAddrToBeSent[39]_i_27_n_0\,
      S(4) => \countAddrToBeSent[39]_i_28_n_0\,
      S(3) => \countAddrToBeSent[39]_i_29_n_0\,
      S(2) => \countAddrToBeSent[39]_i_30_n_0\,
      S(1) => \countAddrToBeSent[39]_i_31_n_0\,
      S(0) => \countAddrToBeSent[39]_i_32_n_0\
    );
\countAddrToBeSent_reg[39]_i_8\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_33_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_8_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_8_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_8_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_8_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_8_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_8_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_8_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_8_n_7\,
      DI(7) => \countAddrToBeSent[39]_i_34_n_0\,
      DI(6) => \countAddrToBeSent[39]_i_35_n_0\,
      DI(5) => \countAddrToBeSent[39]_i_36_n_0\,
      DI(4) => \countAddrToBeSent[39]_i_37_n_0\,
      DI(3) => \countAddrToBeSent[39]_i_38_n_0\,
      DI(2) => \countAddrToBeSent[39]_i_39_n_0\,
      DI(1) => \countAddrToBeSent[39]_i_40_n_0\,
      DI(0) => \countAddrToBeSent[39]_i_41_n_0\,
      O(7 downto 0) => \NLW_countAddrToBeSent_reg[39]_i_8_O_UNCONNECTED\(7 downto 0),
      S(7) => \countAddrToBeSent[39]_i_42_n_0\,
      S(6) => \countAddrToBeSent[39]_i_43_n_0\,
      S(5) => \countAddrToBeSent[39]_i_44_n_0\,
      S(4) => \countAddrToBeSent[39]_i_45_n_0\,
      S(3) => \countAddrToBeSent[39]_i_46_n_0\,
      S(2) => \countAddrToBeSent[39]_i_47_n_0\,
      S(1) => \countAddrToBeSent[39]_i_48_n_0\,
      S(0) => \countAddrToBeSent[39]_i_49_n_0\
    );
\countAddrToBeSent_reg[39]_i_93\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_94_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_93_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_93_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_93_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_93_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_93_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_93_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_93_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_93_n_7\,
      DI(7 downto 0) => countAddrToBeSent(31 downto 24),
      O(7 downto 0) => write_ticks21_out(31 downto 24),
      S(7) => \countAddrToBeSent[39]_i_124_n_0\,
      S(6) => \countAddrToBeSent[39]_i_125_n_0\,
      S(5) => \countAddrToBeSent[39]_i_126_n_0\,
      S(4) => \countAddrToBeSent[39]_i_127_n_0\,
      S(3) => \countAddrToBeSent[39]_i_128_n_0\,
      S(2) => \countAddrToBeSent[39]_i_129_n_0\,
      S(1) => \countAddrToBeSent[39]_i_130_n_0\,
      S(0) => \countAddrToBeSent[39]_i_131_n_0\
    );
\countAddrToBeSent_reg[39]_i_94\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countAddrToBeSent_reg[39]_i_122_n_0\,
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[39]_i_94_n_0\,
      CO(6) => \countAddrToBeSent_reg[39]_i_94_n_1\,
      CO(5) => \countAddrToBeSent_reg[39]_i_94_n_2\,
      CO(4) => \countAddrToBeSent_reg[39]_i_94_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[39]_i_94_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[39]_i_94_n_5\,
      CO(1) => \countAddrToBeSent_reg[39]_i_94_n_6\,
      CO(0) => \countAddrToBeSent_reg[39]_i_94_n_7\,
      DI(7 downto 0) => countAddrToBeSent(23 downto 16),
      O(7 downto 0) => write_ticks21_out(23 downto 16),
      S(7) => \countAddrToBeSent[39]_i_132_n_0\,
      S(6) => \countAddrToBeSent[39]_i_133_n_0\,
      S(5) => \countAddrToBeSent[39]_i_134_n_0\,
      S(4) => \countAddrToBeSent[39]_i_135_n_0\,
      S(3) => \countAddrToBeSent[39]_i_136_n_0\,
      S(2) => \countAddrToBeSent[39]_i_137_n_0\,
      S(1) => \countAddrToBeSent[39]_i_138_n_0\,
      S(0) => \countAddrToBeSent[39]_i_139_n_0\
    );
\countAddrToBeSent_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[3]_i_1_n_0\,
      Q => countAddrToBeSent(3),
      R => '0'
    );
\countAddrToBeSent_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[4]_i_1_n_0\,
      Q => countAddrToBeSent(4),
      R => '0'
    );
\countAddrToBeSent_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[5]_i_1_n_0\,
      Q => countAddrToBeSent(5),
      R => '0'
    );
\countAddrToBeSent_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[6]_i_1_n_0\,
      Q => countAddrToBeSent(6),
      R => '0'
    );
\countAddrToBeSent_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[7]_i_1_n_0\,
      Q => countAddrToBeSent(7),
      R => '0'
    );
\countAddrToBeSent_reg[7]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[7]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[7]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[7]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[7]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[7]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[7]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[7]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[7]_i_3_n_7\,
      DI(7 downto 0) => countAddrToBeSent(7 downto 0),
      O(7 downto 0) => countAddrToBeSent00_in(7 downto 0),
      S(7) => \countAddrToBeSent[7]_i_4_n_0\,
      S(6) => \countAddrToBeSent[7]_i_5_n_0\,
      S(5) => \countAddrToBeSent[7]_i_6_n_0\,
      S(4) => \countAddrToBeSent[7]_i_7_n_0\,
      S(3) => \countAddrToBeSent[7]_i_8_n_0\,
      S(2) => \countAddrToBeSent[7]_i_9_n_0\,
      S(1) => \countAddrToBeSent[7]_i_10_n_0\,
      S(0) => \countAddrToBeSent[7]_i_11_n_0\
    );
\countAddrToBeSent_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[8]_i_1_n_0\,
      Q => countAddrToBeSent(8),
      R => '0'
    );
\countAddrToBeSent_reg[8]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => countAddrToBeSent(0),
      CI_TOP => '0',
      CO(7) => \countAddrToBeSent_reg[8]_i_3_n_0\,
      CO(6) => \countAddrToBeSent_reg[8]_i_3_n_1\,
      CO(5) => \countAddrToBeSent_reg[8]_i_3_n_2\,
      CO(4) => \countAddrToBeSent_reg[8]_i_3_n_3\,
      CO(3) => \NLW_countAddrToBeSent_reg[8]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countAddrToBeSent_reg[8]_i_3_n_5\,
      CO(1) => \countAddrToBeSent_reg[8]_i_3_n_6\,
      CO(0) => \countAddrToBeSent_reg[8]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countAddrToBeSent0(8 downto 1),
      S(7 downto 0) => countAddrToBeSent(8 downto 1)
    );
\countAddrToBeSent_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent[39]_i_1_n_0\,
      D => \countAddrToBeSent[9]_i_1_n_0\,
      Q => countAddrToBeSent(9),
      R => '0'
    );
\countDataReceivedRatioFix[15]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(15),
      I1 => write_blocking_ratio(15),
      I2 => read_blocking_ratio(15),
      I3 => \countDataReceivedRatioFix[15]_i_2_n_0\,
      O => \countDataReceivedRatioFix[15]_i_10_n_0\
    );
\countDataReceivedRatioFix[15]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(14),
      I1 => write_blocking_ratio(14),
      I2 => read_blocking_ratio(14),
      I3 => \countDataReceivedRatioFix[15]_i_3_n_0\,
      O => \countDataReceivedRatioFix[15]_i_11_n_0\
    );
\countDataReceivedRatioFix[15]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(13),
      I1 => write_blocking_ratio(13),
      I2 => read_blocking_ratio(13),
      I3 => \countDataReceivedRatioFix[15]_i_4_n_0\,
      O => \countDataReceivedRatioFix[15]_i_12_n_0\
    );
\countDataReceivedRatioFix[15]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(12),
      I1 => write_blocking_ratio(12),
      I2 => read_blocking_ratio(12),
      I3 => \countDataReceivedRatioFix[15]_i_5_n_0\,
      O => \countDataReceivedRatioFix[15]_i_13_n_0\
    );
\countDataReceivedRatioFix[15]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(11),
      I1 => write_blocking_ratio(11),
      I2 => read_blocking_ratio(11),
      I3 => \countDataReceivedRatioFix[15]_i_6_n_0\,
      O => \countDataReceivedRatioFix[15]_i_14_n_0\
    );
\countDataReceivedRatioFix[15]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(10),
      I1 => write_blocking_ratio(10),
      I2 => read_blocking_ratio(10),
      I3 => \countDataReceivedRatioFix[15]_i_7_n_0\,
      O => \countDataReceivedRatioFix[15]_i_15_n_0\
    );
\countDataReceivedRatioFix[15]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(9),
      I1 => write_blocking_ratio(9),
      I2 => read_blocking_ratio(9),
      I3 => \countDataReceivedRatioFix[15]_i_8_n_0\,
      O => \countDataReceivedRatioFix[15]_i_16_n_0\
    );
\countDataReceivedRatioFix[15]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(8),
      I1 => write_blocking_ratio(8),
      I2 => read_blocking_ratio(8),
      I3 => \countDataReceivedRatioFix[15]_i_9_n_0\,
      O => \countDataReceivedRatioFix[15]_i_17_n_0\
    );
\countDataReceivedRatioFix[15]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(14),
      I1 => write_blocking_ratio(14),
      I2 => read_blocking_ratio(14),
      O => \countDataReceivedRatioFix[15]_i_2_n_0\
    );
\countDataReceivedRatioFix[15]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(13),
      I1 => write_blocking_ratio(13),
      I2 => read_blocking_ratio(13),
      O => \countDataReceivedRatioFix[15]_i_3_n_0\
    );
\countDataReceivedRatioFix[15]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(12),
      I1 => write_blocking_ratio(12),
      I2 => read_blocking_ratio(12),
      O => \countDataReceivedRatioFix[15]_i_4_n_0\
    );
\countDataReceivedRatioFix[15]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(11),
      I1 => write_blocking_ratio(11),
      I2 => read_blocking_ratio(11),
      O => \countDataReceivedRatioFix[15]_i_5_n_0\
    );
\countDataReceivedRatioFix[15]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(10),
      I1 => write_blocking_ratio(10),
      I2 => read_blocking_ratio(10),
      O => \countDataReceivedRatioFix[15]_i_6_n_0\
    );
\countDataReceivedRatioFix[15]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(9),
      I1 => write_blocking_ratio(9),
      I2 => read_blocking_ratio(9),
      O => \countDataReceivedRatioFix[15]_i_7_n_0\
    );
\countDataReceivedRatioFix[15]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(8),
      I1 => write_blocking_ratio(8),
      I2 => read_blocking_ratio(8),
      O => \countDataReceivedRatioFix[15]_i_8_n_0\
    );
\countDataReceivedRatioFix[15]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(7),
      I1 => write_blocking_ratio(7),
      I2 => read_blocking_ratio(7),
      O => \countDataReceivedRatioFix[15]_i_9_n_0\
    );
\countDataReceivedRatioFix[23]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(23),
      I1 => write_blocking_ratio(23),
      I2 => read_blocking_ratio(23),
      I3 => \countDataReceivedRatioFix[23]_i_2_n_0\,
      O => \countDataReceivedRatioFix[23]_i_10_n_0\
    );
\countDataReceivedRatioFix[23]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(22),
      I1 => write_blocking_ratio(22),
      I2 => read_blocking_ratio(22),
      I3 => \countDataReceivedRatioFix[23]_i_3_n_0\,
      O => \countDataReceivedRatioFix[23]_i_11_n_0\
    );
\countDataReceivedRatioFix[23]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(21),
      I1 => write_blocking_ratio(21),
      I2 => read_blocking_ratio(21),
      I3 => \countDataReceivedRatioFix[23]_i_4_n_0\,
      O => \countDataReceivedRatioFix[23]_i_12_n_0\
    );
\countDataReceivedRatioFix[23]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(20),
      I1 => write_blocking_ratio(20),
      I2 => read_blocking_ratio(20),
      I3 => \countDataReceivedRatioFix[23]_i_5_n_0\,
      O => \countDataReceivedRatioFix[23]_i_13_n_0\
    );
\countDataReceivedRatioFix[23]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(19),
      I1 => write_blocking_ratio(19),
      I2 => read_blocking_ratio(19),
      I3 => \countDataReceivedRatioFix[23]_i_6_n_0\,
      O => \countDataReceivedRatioFix[23]_i_14_n_0\
    );
\countDataReceivedRatioFix[23]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(18),
      I1 => write_blocking_ratio(18),
      I2 => read_blocking_ratio(18),
      I3 => \countDataReceivedRatioFix[23]_i_7_n_0\,
      O => \countDataReceivedRatioFix[23]_i_15_n_0\
    );
\countDataReceivedRatioFix[23]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(17),
      I1 => write_blocking_ratio(17),
      I2 => read_blocking_ratio(17),
      I3 => \countDataReceivedRatioFix[23]_i_8_n_0\,
      O => \countDataReceivedRatioFix[23]_i_16_n_0\
    );
\countDataReceivedRatioFix[23]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(16),
      I1 => write_blocking_ratio(16),
      I2 => read_blocking_ratio(16),
      I3 => \countDataReceivedRatioFix[23]_i_9_n_0\,
      O => \countDataReceivedRatioFix[23]_i_17_n_0\
    );
\countDataReceivedRatioFix[23]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(22),
      I1 => write_blocking_ratio(22),
      I2 => read_blocking_ratio(22),
      O => \countDataReceivedRatioFix[23]_i_2_n_0\
    );
\countDataReceivedRatioFix[23]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(21),
      I1 => write_blocking_ratio(21),
      I2 => read_blocking_ratio(21),
      O => \countDataReceivedRatioFix[23]_i_3_n_0\
    );
\countDataReceivedRatioFix[23]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(20),
      I1 => write_blocking_ratio(20),
      I2 => read_blocking_ratio(20),
      O => \countDataReceivedRatioFix[23]_i_4_n_0\
    );
\countDataReceivedRatioFix[23]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(19),
      I1 => write_blocking_ratio(19),
      I2 => read_blocking_ratio(19),
      O => \countDataReceivedRatioFix[23]_i_5_n_0\
    );
\countDataReceivedRatioFix[23]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(18),
      I1 => write_blocking_ratio(18),
      I2 => read_blocking_ratio(18),
      O => \countDataReceivedRatioFix[23]_i_6_n_0\
    );
\countDataReceivedRatioFix[23]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(17),
      I1 => write_blocking_ratio(17),
      I2 => read_blocking_ratio(17),
      O => \countDataReceivedRatioFix[23]_i_7_n_0\
    );
\countDataReceivedRatioFix[23]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(16),
      I1 => write_blocking_ratio(16),
      I2 => read_blocking_ratio(16),
      O => \countDataReceivedRatioFix[23]_i_8_n_0\
    );
\countDataReceivedRatioFix[23]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(15),
      I1 => write_blocking_ratio(15),
      I2 => read_blocking_ratio(15),
      O => \countDataReceivedRatioFix[23]_i_9_n_0\
    );
\countDataReceivedRatioFix[31]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix[31]_i_2_n_0\,
      I1 => write_blocking_ratio(31),
      I2 => \countDataReceivedRatioFix_reg_n_0_\(31),
      I3 => read_blocking_ratio(31),
      O => \countDataReceivedRatioFix[31]_i_10_n_0\
    );
\countDataReceivedRatioFix[31]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(30),
      I1 => write_blocking_ratio(30),
      I2 => read_blocking_ratio(30),
      I3 => \countDataReceivedRatioFix[31]_i_3_n_0\,
      O => \countDataReceivedRatioFix[31]_i_11_n_0\
    );
\countDataReceivedRatioFix[31]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(29),
      I1 => write_blocking_ratio(29),
      I2 => read_blocking_ratio(29),
      I3 => \countDataReceivedRatioFix[31]_i_4_n_0\,
      O => \countDataReceivedRatioFix[31]_i_12_n_0\
    );
\countDataReceivedRatioFix[31]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(28),
      I1 => write_blocking_ratio(28),
      I2 => read_blocking_ratio(28),
      I3 => \countDataReceivedRatioFix[31]_i_5_n_0\,
      O => \countDataReceivedRatioFix[31]_i_13_n_0\
    );
\countDataReceivedRatioFix[31]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(27),
      I1 => write_blocking_ratio(27),
      I2 => read_blocking_ratio(27),
      I3 => \countDataReceivedRatioFix[31]_i_6_n_0\,
      O => \countDataReceivedRatioFix[31]_i_14_n_0\
    );
\countDataReceivedRatioFix[31]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(26),
      I1 => write_blocking_ratio(26),
      I2 => read_blocking_ratio(26),
      I3 => \countDataReceivedRatioFix[31]_i_7_n_0\,
      O => \countDataReceivedRatioFix[31]_i_15_n_0\
    );
\countDataReceivedRatioFix[31]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(25),
      I1 => write_blocking_ratio(25),
      I2 => read_blocking_ratio(25),
      I3 => \countDataReceivedRatioFix[31]_i_8_n_0\,
      O => \countDataReceivedRatioFix[31]_i_16_n_0\
    );
\countDataReceivedRatioFix[31]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(24),
      I1 => write_blocking_ratio(24),
      I2 => read_blocking_ratio(24),
      I3 => \countDataReceivedRatioFix[31]_i_9_n_0\,
      O => \countDataReceivedRatioFix[31]_i_17_n_0\
    );
\countDataReceivedRatioFix[31]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(30),
      I1 => write_blocking_ratio(30),
      I2 => read_blocking_ratio(30),
      O => \countDataReceivedRatioFix[31]_i_2_n_0\
    );
\countDataReceivedRatioFix[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(29),
      I1 => write_blocking_ratio(29),
      I2 => read_blocking_ratio(29),
      O => \countDataReceivedRatioFix[31]_i_3_n_0\
    );
\countDataReceivedRatioFix[31]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(28),
      I1 => write_blocking_ratio(28),
      I2 => read_blocking_ratio(28),
      O => \countDataReceivedRatioFix[31]_i_4_n_0\
    );
\countDataReceivedRatioFix[31]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(27),
      I1 => write_blocking_ratio(27),
      I2 => read_blocking_ratio(27),
      O => \countDataReceivedRatioFix[31]_i_5_n_0\
    );
\countDataReceivedRatioFix[31]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(26),
      I1 => write_blocking_ratio(26),
      I2 => read_blocking_ratio(26),
      O => \countDataReceivedRatioFix[31]_i_6_n_0\
    );
\countDataReceivedRatioFix[31]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(25),
      I1 => write_blocking_ratio(25),
      I2 => read_blocking_ratio(25),
      O => \countDataReceivedRatioFix[31]_i_7_n_0\
    );
\countDataReceivedRatioFix[31]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(24),
      I1 => write_blocking_ratio(24),
      I2 => read_blocking_ratio(24),
      O => \countDataReceivedRatioFix[31]_i_8_n_0\
    );
\countDataReceivedRatioFix[31]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(23),
      I1 => write_blocking_ratio(23),
      I2 => read_blocking_ratio(23),
      O => \countDataReceivedRatioFix[31]_i_9_n_0\
    );
\countDataReceivedRatioFix[39]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_3_n_4\,
      I1 => active_blocking,
      I2 => \countDataReceivedRatioFix_reg[39]_i_3_n_0\,
      I3 => \read_ticks_reg[31]_i_4_n_0\,
      O => countDataReceivedRatioFix
    );
\countDataReceivedRatioFix[39]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(33),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(34),
      O => \countDataReceivedRatioFix[39]_i_10_n_0\
    );
\countDataReceivedRatioFix[39]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(32),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(33),
      O => \countDataReceivedRatioFix[39]_i_11_n_0\
    );
\countDataReceivedRatioFix[39]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"D42B"
    )
        port map (
      I0 => read_blocking_ratio(31),
      I1 => write_blocking_ratio(31),
      I2 => \countDataReceivedRatioFix_reg_n_0_\(31),
      I3 => \countDataReceivedRatioFix_reg_n_0_\(32),
      O => \countDataReceivedRatioFix[39]_i_12_n_0\
    );
\countDataReceivedRatioFix[39]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(30),
      I1 => read_blocking_ratio(30),
      I2 => read_blocking_ratio(31),
      I3 => write_blocking_ratio(31),
      O => \countDataReceivedRatioFix[39]_i_14_n_0\
    );
\countDataReceivedRatioFix[39]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(28),
      I1 => read_blocking_ratio(28),
      I2 => read_blocking_ratio(29),
      I3 => write_blocking_ratio(29),
      O => \countDataReceivedRatioFix[39]_i_15_n_0\
    );
\countDataReceivedRatioFix[39]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(26),
      I1 => read_blocking_ratio(26),
      I2 => read_blocking_ratio(27),
      I3 => write_blocking_ratio(27),
      O => \countDataReceivedRatioFix[39]_i_16_n_0\
    );
\countDataReceivedRatioFix[39]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(24),
      I1 => read_blocking_ratio(24),
      I2 => read_blocking_ratio(25),
      I3 => write_blocking_ratio(25),
      O => \countDataReceivedRatioFix[39]_i_17_n_0\
    );
\countDataReceivedRatioFix[39]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(22),
      I1 => read_blocking_ratio(22),
      I2 => read_blocking_ratio(23),
      I3 => write_blocking_ratio(23),
      O => \countDataReceivedRatioFix[39]_i_18_n_0\
    );
\countDataReceivedRatioFix[39]_i_19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(20),
      I1 => read_blocking_ratio(20),
      I2 => read_blocking_ratio(21),
      I3 => write_blocking_ratio(21),
      O => \countDataReceivedRatioFix[39]_i_19_n_0\
    );
\countDataReceivedRatioFix[39]_i_20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(18),
      I1 => read_blocking_ratio(18),
      I2 => read_blocking_ratio(19),
      I3 => write_blocking_ratio(19),
      O => \countDataReceivedRatioFix[39]_i_20_n_0\
    );
\countDataReceivedRatioFix[39]_i_21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(16),
      I1 => read_blocking_ratio(16),
      I2 => read_blocking_ratio(17),
      I3 => write_blocking_ratio(17),
      O => \countDataReceivedRatioFix[39]_i_21_n_0\
    );
\countDataReceivedRatioFix[39]_i_22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(30),
      I1 => read_blocking_ratio(30),
      I2 => write_blocking_ratio(31),
      I3 => read_blocking_ratio(31),
      O => \countDataReceivedRatioFix[39]_i_22_n_0\
    );
\countDataReceivedRatioFix[39]_i_23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(28),
      I1 => read_blocking_ratio(28),
      I2 => write_blocking_ratio(29),
      I3 => read_blocking_ratio(29),
      O => \countDataReceivedRatioFix[39]_i_23_n_0\
    );
\countDataReceivedRatioFix[39]_i_24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(26),
      I1 => read_blocking_ratio(26),
      I2 => write_blocking_ratio(27),
      I3 => read_blocking_ratio(27),
      O => \countDataReceivedRatioFix[39]_i_24_n_0\
    );
\countDataReceivedRatioFix[39]_i_25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(24),
      I1 => read_blocking_ratio(24),
      I2 => write_blocking_ratio(25),
      I3 => read_blocking_ratio(25),
      O => \countDataReceivedRatioFix[39]_i_25_n_0\
    );
\countDataReceivedRatioFix[39]_i_26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(22),
      I1 => read_blocking_ratio(22),
      I2 => write_blocking_ratio(23),
      I3 => read_blocking_ratio(23),
      O => \countDataReceivedRatioFix[39]_i_26_n_0\
    );
\countDataReceivedRatioFix[39]_i_27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(20),
      I1 => read_blocking_ratio(20),
      I2 => write_blocking_ratio(21),
      I3 => read_blocking_ratio(21),
      O => \countDataReceivedRatioFix[39]_i_27_n_0\
    );
\countDataReceivedRatioFix[39]_i_28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(18),
      I1 => read_blocking_ratio(18),
      I2 => write_blocking_ratio(19),
      I3 => read_blocking_ratio(19),
      O => \countDataReceivedRatioFix[39]_i_28_n_0\
    );
\countDataReceivedRatioFix[39]_i_29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(16),
      I1 => read_blocking_ratio(16),
      I2 => write_blocking_ratio(17),
      I3 => read_blocking_ratio(17),
      O => \countDataReceivedRatioFix[39]_i_29_n_0\
    );
\countDataReceivedRatioFix[39]_i_30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(14),
      I1 => read_blocking_ratio(14),
      I2 => read_blocking_ratio(15),
      I3 => write_blocking_ratio(15),
      O => \countDataReceivedRatioFix[39]_i_30_n_0\
    );
\countDataReceivedRatioFix[39]_i_31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(12),
      I1 => read_blocking_ratio(12),
      I2 => read_blocking_ratio(13),
      I3 => write_blocking_ratio(13),
      O => \countDataReceivedRatioFix[39]_i_31_n_0\
    );
\countDataReceivedRatioFix[39]_i_32\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(10),
      I1 => read_blocking_ratio(10),
      I2 => read_blocking_ratio(11),
      I3 => write_blocking_ratio(11),
      O => \countDataReceivedRatioFix[39]_i_32_n_0\
    );
\countDataReceivedRatioFix[39]_i_33\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(8),
      I1 => read_blocking_ratio(8),
      I2 => read_blocking_ratio(9),
      I3 => write_blocking_ratio(9),
      O => \countDataReceivedRatioFix[39]_i_33_n_0\
    );
\countDataReceivedRatioFix[39]_i_34\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(6),
      I1 => read_blocking_ratio(6),
      I2 => read_blocking_ratio(7),
      I3 => write_blocking_ratio(7),
      O => \countDataReceivedRatioFix[39]_i_34_n_0\
    );
\countDataReceivedRatioFix[39]_i_35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(4),
      I1 => read_blocking_ratio(4),
      I2 => read_blocking_ratio(5),
      I3 => write_blocking_ratio(5),
      O => \countDataReceivedRatioFix[39]_i_35_n_0\
    );
\countDataReceivedRatioFix[39]_i_36\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => write_blocking_ratio(2),
      I1 => read_blocking_ratio(2),
      I2 => read_blocking_ratio(3),
      I3 => write_blocking_ratio(3),
      O => \countDataReceivedRatioFix[39]_i_36_n_0\
    );
\countDataReceivedRatioFix[39]_i_37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"20F2"
    )
        port map (
      I0 => write_blocking_ratio(0),
      I1 => read_blocking_ratio(0),
      I2 => write_blocking_ratio(1),
      I3 => read_blocking_ratio(1),
      O => \countDataReceivedRatioFix[39]_i_37_n_0\
    );
\countDataReceivedRatioFix[39]_i_38\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(14),
      I1 => read_blocking_ratio(14),
      I2 => write_blocking_ratio(15),
      I3 => read_blocking_ratio(15),
      O => \countDataReceivedRatioFix[39]_i_38_n_0\
    );
\countDataReceivedRatioFix[39]_i_39\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(12),
      I1 => read_blocking_ratio(12),
      I2 => write_blocking_ratio(13),
      I3 => read_blocking_ratio(13),
      O => \countDataReceivedRatioFix[39]_i_39_n_0\
    );
\countDataReceivedRatioFix[39]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(31),
      I1 => write_blocking_ratio(31),
      I2 => read_blocking_ratio(31),
      O => \countDataReceivedRatioFix[39]_i_4_n_0\
    );
\countDataReceivedRatioFix[39]_i_40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(10),
      I1 => read_blocking_ratio(10),
      I2 => write_blocking_ratio(11),
      I3 => read_blocking_ratio(11),
      O => \countDataReceivedRatioFix[39]_i_40_n_0\
    );
\countDataReceivedRatioFix[39]_i_41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(8),
      I1 => read_blocking_ratio(8),
      I2 => write_blocking_ratio(9),
      I3 => read_blocking_ratio(9),
      O => \countDataReceivedRatioFix[39]_i_41_n_0\
    );
\countDataReceivedRatioFix[39]_i_42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(6),
      I1 => read_blocking_ratio(6),
      I2 => write_blocking_ratio(7),
      I3 => read_blocking_ratio(7),
      O => \countDataReceivedRatioFix[39]_i_42_n_0\
    );
\countDataReceivedRatioFix[39]_i_43\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(4),
      I1 => read_blocking_ratio(4),
      I2 => write_blocking_ratio(5),
      I3 => read_blocking_ratio(5),
      O => \countDataReceivedRatioFix[39]_i_43_n_0\
    );
\countDataReceivedRatioFix[39]_i_44\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(2),
      I1 => read_blocking_ratio(2),
      I2 => write_blocking_ratio(3),
      I3 => read_blocking_ratio(3),
      O => \countDataReceivedRatioFix[39]_i_44_n_0\
    );
\countDataReceivedRatioFix[39]_i_45\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => write_blocking_ratio(0),
      I1 => read_blocking_ratio(0),
      I2 => write_blocking_ratio(1),
      I3 => read_blocking_ratio(1),
      O => \countDataReceivedRatioFix[39]_i_45_n_0\
    );
\countDataReceivedRatioFix[39]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(38),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(39),
      O => \countDataReceivedRatioFix[39]_i_5_n_0\
    );
\countDataReceivedRatioFix[39]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(37),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(38),
      O => \countDataReceivedRatioFix[39]_i_6_n_0\
    );
\countDataReceivedRatioFix[39]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(36),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(37),
      O => \countDataReceivedRatioFix[39]_i_7_n_0\
    );
\countDataReceivedRatioFix[39]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(35),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(36),
      O => \countDataReceivedRatioFix[39]_i_8_n_0\
    );
\countDataReceivedRatioFix[39]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(34),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(35),
      O => \countDataReceivedRatioFix[39]_i_9_n_0\
    );
\countDataReceivedRatioFix[7]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(7),
      I1 => write_blocking_ratio(7),
      I2 => read_blocking_ratio(7),
      I3 => \countDataReceivedRatioFix[7]_i_2_n_0\,
      O => \countDataReceivedRatioFix[7]_i_10_n_0\
    );
\countDataReceivedRatioFix[7]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(6),
      I1 => write_blocking_ratio(6),
      I2 => read_blocking_ratio(6),
      I3 => \countDataReceivedRatioFix[7]_i_3_n_0\,
      O => \countDataReceivedRatioFix[7]_i_11_n_0\
    );
\countDataReceivedRatioFix[7]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(5),
      I1 => write_blocking_ratio(5),
      I2 => read_blocking_ratio(5),
      I3 => \countDataReceivedRatioFix[7]_i_4_n_0\,
      O => \countDataReceivedRatioFix[7]_i_12_n_0\
    );
\countDataReceivedRatioFix[7]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(4),
      I1 => write_blocking_ratio(4),
      I2 => read_blocking_ratio(4),
      I3 => \countDataReceivedRatioFix[7]_i_5_n_0\,
      O => \countDataReceivedRatioFix[7]_i_13_n_0\
    );
\countDataReceivedRatioFix[7]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(3),
      I1 => write_blocking_ratio(3),
      I2 => read_blocking_ratio(3),
      I3 => \countDataReceivedRatioFix[7]_i_6_n_0\,
      O => \countDataReceivedRatioFix[7]_i_14_n_0\
    );
\countDataReceivedRatioFix[7]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(2),
      I1 => write_blocking_ratio(2),
      I2 => read_blocking_ratio(2),
      I3 => \countDataReceivedRatioFix[7]_i_7_n_0\,
      O => \countDataReceivedRatioFix[7]_i_15_n_0\
    );
\countDataReceivedRatioFix[7]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(1),
      I1 => write_blocking_ratio(1),
      I2 => read_blocking_ratio(1),
      I3 => \countDataReceivedRatioFix[7]_i_8_n_0\,
      O => \countDataReceivedRatioFix[7]_i_16_n_0\
    );
\countDataReceivedRatioFix[7]_i_17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => write_blocking_ratio(0),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(0),
      I2 => read_blocking_ratio(0),
      O => \countDataReceivedRatioFix[7]_i_17_n_0\
    );
\countDataReceivedRatioFix[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(6),
      I1 => write_blocking_ratio(6),
      I2 => read_blocking_ratio(6),
      O => \countDataReceivedRatioFix[7]_i_2_n_0\
    );
\countDataReceivedRatioFix[7]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(5),
      I1 => write_blocking_ratio(5),
      I2 => read_blocking_ratio(5),
      O => \countDataReceivedRatioFix[7]_i_3_n_0\
    );
\countDataReceivedRatioFix[7]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(4),
      I1 => write_blocking_ratio(4),
      I2 => read_blocking_ratio(4),
      O => \countDataReceivedRatioFix[7]_i_4_n_0\
    );
\countDataReceivedRatioFix[7]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(3),
      I1 => write_blocking_ratio(3),
      I2 => read_blocking_ratio(3),
      O => \countDataReceivedRatioFix[7]_i_5_n_0\
    );
\countDataReceivedRatioFix[7]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(2),
      I1 => write_blocking_ratio(2),
      I2 => read_blocking_ratio(2),
      O => \countDataReceivedRatioFix[7]_i_6_n_0\
    );
\countDataReceivedRatioFix[7]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8E"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(1),
      I1 => write_blocking_ratio(1),
      I2 => read_blocking_ratio(1),
      O => \countDataReceivedRatioFix[7]_i_7_n_0\
    );
\countDataReceivedRatioFix[7]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => write_blocking_ratio(0),
      I1 => \countDataReceivedRatioFix_reg_n_0_\(0),
      O => \countDataReceivedRatioFix[7]_i_8_n_0\
    );
\countDataReceivedRatioFix[7]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \countDataReceivedRatioFix_reg_n_0_\(0),
      I1 => write_blocking_ratio(0),
      O => \countDataReceivedRatioFix[7]_i_9_n_0\
    );
\countDataReceivedRatioFix_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_15\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(0),
      R => '0'
    );
\countDataReceivedRatioFix_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_13\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(10),
      R => '0'
    );
\countDataReceivedRatioFix_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_12\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(11),
      R => '0'
    );
\countDataReceivedRatioFix_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_11\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(12),
      R => '0'
    );
\countDataReceivedRatioFix_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_10\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(13),
      R => '0'
    );
\countDataReceivedRatioFix_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_9\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(14),
      R => '0'
    );
\countDataReceivedRatioFix_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_8\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(15),
      R => '0'
    );
\countDataReceivedRatioFix_reg[15]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceivedRatioFix_reg[7]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataReceivedRatioFix_reg[15]_i_1_n_0\,
      CO(6) => \countDataReceivedRatioFix_reg[15]_i_1_n_1\,
      CO(5) => \countDataReceivedRatioFix_reg[15]_i_1_n_2\,
      CO(4) => \countDataReceivedRatioFix_reg[15]_i_1_n_3\,
      CO(3) => \NLW_countDataReceivedRatioFix_reg[15]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceivedRatioFix_reg[15]_i_1_n_5\,
      CO(1) => \countDataReceivedRatioFix_reg[15]_i_1_n_6\,
      CO(0) => \countDataReceivedRatioFix_reg[15]_i_1_n_7\,
      DI(7) => \countDataReceivedRatioFix[15]_i_2_n_0\,
      DI(6) => \countDataReceivedRatioFix[15]_i_3_n_0\,
      DI(5) => \countDataReceivedRatioFix[15]_i_4_n_0\,
      DI(4) => \countDataReceivedRatioFix[15]_i_5_n_0\,
      DI(3) => \countDataReceivedRatioFix[15]_i_6_n_0\,
      DI(2) => \countDataReceivedRatioFix[15]_i_7_n_0\,
      DI(1) => \countDataReceivedRatioFix[15]_i_8_n_0\,
      DI(0) => \countDataReceivedRatioFix[15]_i_9_n_0\,
      O(7) => \countDataReceivedRatioFix_reg[15]_i_1_n_8\,
      O(6) => \countDataReceivedRatioFix_reg[15]_i_1_n_9\,
      O(5) => \countDataReceivedRatioFix_reg[15]_i_1_n_10\,
      O(4) => \countDataReceivedRatioFix_reg[15]_i_1_n_11\,
      O(3) => \countDataReceivedRatioFix_reg[15]_i_1_n_12\,
      O(2) => \countDataReceivedRatioFix_reg[15]_i_1_n_13\,
      O(1) => \countDataReceivedRatioFix_reg[15]_i_1_n_14\,
      O(0) => \countDataReceivedRatioFix_reg[15]_i_1_n_15\,
      S(7) => \countDataReceivedRatioFix[15]_i_10_n_0\,
      S(6) => \countDataReceivedRatioFix[15]_i_11_n_0\,
      S(5) => \countDataReceivedRatioFix[15]_i_12_n_0\,
      S(4) => \countDataReceivedRatioFix[15]_i_13_n_0\,
      S(3) => \countDataReceivedRatioFix[15]_i_14_n_0\,
      S(2) => \countDataReceivedRatioFix[15]_i_15_n_0\,
      S(1) => \countDataReceivedRatioFix[15]_i_16_n_0\,
      S(0) => \countDataReceivedRatioFix[15]_i_17_n_0\
    );
\countDataReceivedRatioFix_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_15\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(16),
      R => '0'
    );
\countDataReceivedRatioFix_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_14\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(17),
      R => '0'
    );
\countDataReceivedRatioFix_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_13\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(18),
      R => '0'
    );
\countDataReceivedRatioFix_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_12\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(19),
      R => '0'
    );
\countDataReceivedRatioFix_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_14\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(1),
      R => '0'
    );
\countDataReceivedRatioFix_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_11\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(20),
      R => '0'
    );
\countDataReceivedRatioFix_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_10\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(21),
      R => '0'
    );
\countDataReceivedRatioFix_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_9\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(22),
      R => '0'
    );
\countDataReceivedRatioFix_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[23]_i_1_n_8\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(23),
      R => '0'
    );
\countDataReceivedRatioFix_reg[23]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceivedRatioFix_reg[15]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataReceivedRatioFix_reg[23]_i_1_n_0\,
      CO(6) => \countDataReceivedRatioFix_reg[23]_i_1_n_1\,
      CO(5) => \countDataReceivedRatioFix_reg[23]_i_1_n_2\,
      CO(4) => \countDataReceivedRatioFix_reg[23]_i_1_n_3\,
      CO(3) => \NLW_countDataReceivedRatioFix_reg[23]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceivedRatioFix_reg[23]_i_1_n_5\,
      CO(1) => \countDataReceivedRatioFix_reg[23]_i_1_n_6\,
      CO(0) => \countDataReceivedRatioFix_reg[23]_i_1_n_7\,
      DI(7) => \countDataReceivedRatioFix[23]_i_2_n_0\,
      DI(6) => \countDataReceivedRatioFix[23]_i_3_n_0\,
      DI(5) => \countDataReceivedRatioFix[23]_i_4_n_0\,
      DI(4) => \countDataReceivedRatioFix[23]_i_5_n_0\,
      DI(3) => \countDataReceivedRatioFix[23]_i_6_n_0\,
      DI(2) => \countDataReceivedRatioFix[23]_i_7_n_0\,
      DI(1) => \countDataReceivedRatioFix[23]_i_8_n_0\,
      DI(0) => \countDataReceivedRatioFix[23]_i_9_n_0\,
      O(7) => \countDataReceivedRatioFix_reg[23]_i_1_n_8\,
      O(6) => \countDataReceivedRatioFix_reg[23]_i_1_n_9\,
      O(5) => \countDataReceivedRatioFix_reg[23]_i_1_n_10\,
      O(4) => \countDataReceivedRatioFix_reg[23]_i_1_n_11\,
      O(3) => \countDataReceivedRatioFix_reg[23]_i_1_n_12\,
      O(2) => \countDataReceivedRatioFix_reg[23]_i_1_n_13\,
      O(1) => \countDataReceivedRatioFix_reg[23]_i_1_n_14\,
      O(0) => \countDataReceivedRatioFix_reg[23]_i_1_n_15\,
      S(7) => \countDataReceivedRatioFix[23]_i_10_n_0\,
      S(6) => \countDataReceivedRatioFix[23]_i_11_n_0\,
      S(5) => \countDataReceivedRatioFix[23]_i_12_n_0\,
      S(4) => \countDataReceivedRatioFix[23]_i_13_n_0\,
      S(3) => \countDataReceivedRatioFix[23]_i_14_n_0\,
      S(2) => \countDataReceivedRatioFix[23]_i_15_n_0\,
      S(1) => \countDataReceivedRatioFix[23]_i_16_n_0\,
      S(0) => \countDataReceivedRatioFix[23]_i_17_n_0\
    );
\countDataReceivedRatioFix_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_15\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(24),
      R => '0'
    );
\countDataReceivedRatioFix_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_14\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(25),
      R => '0'
    );
\countDataReceivedRatioFix_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_13\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(26),
      R => '0'
    );
\countDataReceivedRatioFix_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_12\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(27),
      R => '0'
    );
\countDataReceivedRatioFix_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_11\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(28),
      R => '0'
    );
\countDataReceivedRatioFix_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_10\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(29),
      R => '0'
    );
\countDataReceivedRatioFix_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_13\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(2),
      R => '0'
    );
\countDataReceivedRatioFix_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_9\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(30),
      R => '0'
    );
\countDataReceivedRatioFix_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[31]_i_1_n_8\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(31),
      R => '0'
    );
\countDataReceivedRatioFix_reg[31]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceivedRatioFix_reg[23]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataReceivedRatioFix_reg[31]_i_1_n_0\,
      CO(6) => \countDataReceivedRatioFix_reg[31]_i_1_n_1\,
      CO(5) => \countDataReceivedRatioFix_reg[31]_i_1_n_2\,
      CO(4) => \countDataReceivedRatioFix_reg[31]_i_1_n_3\,
      CO(3) => \NLW_countDataReceivedRatioFix_reg[31]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceivedRatioFix_reg[31]_i_1_n_5\,
      CO(1) => \countDataReceivedRatioFix_reg[31]_i_1_n_6\,
      CO(0) => \countDataReceivedRatioFix_reg[31]_i_1_n_7\,
      DI(7) => \countDataReceivedRatioFix[31]_i_2_n_0\,
      DI(6) => \countDataReceivedRatioFix[31]_i_3_n_0\,
      DI(5) => \countDataReceivedRatioFix[31]_i_4_n_0\,
      DI(4) => \countDataReceivedRatioFix[31]_i_5_n_0\,
      DI(3) => \countDataReceivedRatioFix[31]_i_6_n_0\,
      DI(2) => \countDataReceivedRatioFix[31]_i_7_n_0\,
      DI(1) => \countDataReceivedRatioFix[31]_i_8_n_0\,
      DI(0) => \countDataReceivedRatioFix[31]_i_9_n_0\,
      O(7) => \countDataReceivedRatioFix_reg[31]_i_1_n_8\,
      O(6) => \countDataReceivedRatioFix_reg[31]_i_1_n_9\,
      O(5) => \countDataReceivedRatioFix_reg[31]_i_1_n_10\,
      O(4) => \countDataReceivedRatioFix_reg[31]_i_1_n_11\,
      O(3) => \countDataReceivedRatioFix_reg[31]_i_1_n_12\,
      O(2) => \countDataReceivedRatioFix_reg[31]_i_1_n_13\,
      O(1) => \countDataReceivedRatioFix_reg[31]_i_1_n_14\,
      O(0) => \countDataReceivedRatioFix_reg[31]_i_1_n_15\,
      S(7) => \countDataReceivedRatioFix[31]_i_10_n_0\,
      S(6) => \countDataReceivedRatioFix[31]_i_11_n_0\,
      S(5) => \countDataReceivedRatioFix[31]_i_12_n_0\,
      S(4) => \countDataReceivedRatioFix[31]_i_13_n_0\,
      S(3) => \countDataReceivedRatioFix[31]_i_14_n_0\,
      S(2) => \countDataReceivedRatioFix[31]_i_15_n_0\,
      S(1) => \countDataReceivedRatioFix[31]_i_16_n_0\,
      S(0) => \countDataReceivedRatioFix[31]_i_17_n_0\
    );
\countDataReceivedRatioFix_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_15\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(32),
      R => '0'
    );
\countDataReceivedRatioFix_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_14\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(33),
      R => '0'
    );
\countDataReceivedRatioFix_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_13\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(34),
      R => '0'
    );
\countDataReceivedRatioFix_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_12\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(35),
      R => '0'
    );
\countDataReceivedRatioFix_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_11\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(36),
      R => '0'
    );
\countDataReceivedRatioFix_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_10\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(37),
      R => '0'
    );
\countDataReceivedRatioFix_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_9\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(38),
      R => '0'
    );
\countDataReceivedRatioFix_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[39]_i_2_n_8\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(39),
      R => '0'
    );
\countDataReceivedRatioFix_reg[39]_i_13\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \countDataReceivedRatioFix_reg[39]_i_13_n_0\,
      CO(6) => \countDataReceivedRatioFix_reg[39]_i_13_n_1\,
      CO(5) => \countDataReceivedRatioFix_reg[39]_i_13_n_2\,
      CO(4) => \countDataReceivedRatioFix_reg[39]_i_13_n_3\,
      CO(3) => \NLW_countDataReceivedRatioFix_reg[39]_i_13_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceivedRatioFix_reg[39]_i_13_n_5\,
      CO(1) => \countDataReceivedRatioFix_reg[39]_i_13_n_6\,
      CO(0) => \countDataReceivedRatioFix_reg[39]_i_13_n_7\,
      DI(7) => \countDataReceivedRatioFix[39]_i_30_n_0\,
      DI(6) => \countDataReceivedRatioFix[39]_i_31_n_0\,
      DI(5) => \countDataReceivedRatioFix[39]_i_32_n_0\,
      DI(4) => \countDataReceivedRatioFix[39]_i_33_n_0\,
      DI(3) => \countDataReceivedRatioFix[39]_i_34_n_0\,
      DI(2) => \countDataReceivedRatioFix[39]_i_35_n_0\,
      DI(1) => \countDataReceivedRatioFix[39]_i_36_n_0\,
      DI(0) => \countDataReceivedRatioFix[39]_i_37_n_0\,
      O(7 downto 0) => \NLW_countDataReceivedRatioFix_reg[39]_i_13_O_UNCONNECTED\(7 downto 0),
      S(7) => \countDataReceivedRatioFix[39]_i_38_n_0\,
      S(6) => \countDataReceivedRatioFix[39]_i_39_n_0\,
      S(5) => \countDataReceivedRatioFix[39]_i_40_n_0\,
      S(4) => \countDataReceivedRatioFix[39]_i_41_n_0\,
      S(3) => \countDataReceivedRatioFix[39]_i_42_n_0\,
      S(2) => \countDataReceivedRatioFix[39]_i_43_n_0\,
      S(1) => \countDataReceivedRatioFix[39]_i_44_n_0\,
      S(0) => \countDataReceivedRatioFix[39]_i_45_n_0\
    );
\countDataReceivedRatioFix_reg[39]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceivedRatioFix_reg[31]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countDataReceivedRatioFix_reg[39]_i_2_CO_UNCONNECTED\(7),
      CO(6) => \countDataReceivedRatioFix_reg[39]_i_2_n_1\,
      CO(5) => \countDataReceivedRatioFix_reg[39]_i_2_n_2\,
      CO(4) => \countDataReceivedRatioFix_reg[39]_i_2_n_3\,
      CO(3) => \NLW_countDataReceivedRatioFix_reg[39]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceivedRatioFix_reg[39]_i_2_n_5\,
      CO(1) => \countDataReceivedRatioFix_reg[39]_i_2_n_6\,
      CO(0) => \countDataReceivedRatioFix_reg[39]_i_2_n_7\,
      DI(7) => '0',
      DI(6 downto 1) => \countDataReceivedRatioFix_reg_n_0_\(37 downto 32),
      DI(0) => \countDataReceivedRatioFix[39]_i_4_n_0\,
      O(7) => \countDataReceivedRatioFix_reg[39]_i_2_n_8\,
      O(6) => \countDataReceivedRatioFix_reg[39]_i_2_n_9\,
      O(5) => \countDataReceivedRatioFix_reg[39]_i_2_n_10\,
      O(4) => \countDataReceivedRatioFix_reg[39]_i_2_n_11\,
      O(3) => \countDataReceivedRatioFix_reg[39]_i_2_n_12\,
      O(2) => \countDataReceivedRatioFix_reg[39]_i_2_n_13\,
      O(1) => \countDataReceivedRatioFix_reg[39]_i_2_n_14\,
      O(0) => \countDataReceivedRatioFix_reg[39]_i_2_n_15\,
      S(7) => \countDataReceivedRatioFix[39]_i_5_n_0\,
      S(6) => \countDataReceivedRatioFix[39]_i_6_n_0\,
      S(5) => \countDataReceivedRatioFix[39]_i_7_n_0\,
      S(4) => \countDataReceivedRatioFix[39]_i_8_n_0\,
      S(3) => \countDataReceivedRatioFix[39]_i_9_n_0\,
      S(2) => \countDataReceivedRatioFix[39]_i_10_n_0\,
      S(1) => \countDataReceivedRatioFix[39]_i_11_n_0\,
      S(0) => \countDataReceivedRatioFix[39]_i_12_n_0\
    );
\countDataReceivedRatioFix_reg[39]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceivedRatioFix_reg[39]_i_13_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataReceivedRatioFix_reg[39]_i_3_n_0\,
      CO(6) => \countDataReceivedRatioFix_reg[39]_i_3_n_1\,
      CO(5) => \countDataReceivedRatioFix_reg[39]_i_3_n_2\,
      CO(4) => \countDataReceivedRatioFix_reg[39]_i_3_n_3\,
      CO(3) => \NLW_countDataReceivedRatioFix_reg[39]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceivedRatioFix_reg[39]_i_3_n_5\,
      CO(1) => \countDataReceivedRatioFix_reg[39]_i_3_n_6\,
      CO(0) => \countDataReceivedRatioFix_reg[39]_i_3_n_7\,
      DI(7) => \countDataReceivedRatioFix[39]_i_14_n_0\,
      DI(6) => \countDataReceivedRatioFix[39]_i_15_n_0\,
      DI(5) => \countDataReceivedRatioFix[39]_i_16_n_0\,
      DI(4) => \countDataReceivedRatioFix[39]_i_17_n_0\,
      DI(3) => \countDataReceivedRatioFix[39]_i_18_n_0\,
      DI(2) => \countDataReceivedRatioFix[39]_i_19_n_0\,
      DI(1) => \countDataReceivedRatioFix[39]_i_20_n_0\,
      DI(0) => \countDataReceivedRatioFix[39]_i_21_n_0\,
      O(7 downto 0) => \NLW_countDataReceivedRatioFix_reg[39]_i_3_O_UNCONNECTED\(7 downto 0),
      S(7) => \countDataReceivedRatioFix[39]_i_22_n_0\,
      S(6) => \countDataReceivedRatioFix[39]_i_23_n_0\,
      S(5) => \countDataReceivedRatioFix[39]_i_24_n_0\,
      S(4) => \countDataReceivedRatioFix[39]_i_25_n_0\,
      S(3) => \countDataReceivedRatioFix[39]_i_26_n_0\,
      S(2) => \countDataReceivedRatioFix[39]_i_27_n_0\,
      S(1) => \countDataReceivedRatioFix[39]_i_28_n_0\,
      S(0) => \countDataReceivedRatioFix[39]_i_29_n_0\
    );
\countDataReceivedRatioFix_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_12\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(3),
      R => '0'
    );
\countDataReceivedRatioFix_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_11\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(4),
      R => '0'
    );
\countDataReceivedRatioFix_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_10\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(5),
      R => '0'
    );
\countDataReceivedRatioFix_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_9\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(6),
      R => '0'
    );
\countDataReceivedRatioFix_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[7]_i_1_n_8\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(7),
      R => '0'
    );
\countDataReceivedRatioFix_reg[7]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataReceivedRatioFix_reg[7]_i_1_n_0\,
      CO(6) => \countDataReceivedRatioFix_reg[7]_i_1_n_1\,
      CO(5) => \countDataReceivedRatioFix_reg[7]_i_1_n_2\,
      CO(4) => \countDataReceivedRatioFix_reg[7]_i_1_n_3\,
      CO(3) => \NLW_countDataReceivedRatioFix_reg[7]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceivedRatioFix_reg[7]_i_1_n_5\,
      CO(1) => \countDataReceivedRatioFix_reg[7]_i_1_n_6\,
      CO(0) => \countDataReceivedRatioFix_reg[7]_i_1_n_7\,
      DI(7) => \countDataReceivedRatioFix[7]_i_2_n_0\,
      DI(6) => \countDataReceivedRatioFix[7]_i_3_n_0\,
      DI(5) => \countDataReceivedRatioFix[7]_i_4_n_0\,
      DI(4) => \countDataReceivedRatioFix[7]_i_5_n_0\,
      DI(3) => \countDataReceivedRatioFix[7]_i_6_n_0\,
      DI(2) => \countDataReceivedRatioFix[7]_i_7_n_0\,
      DI(1) => \countDataReceivedRatioFix[7]_i_8_n_0\,
      DI(0) => \countDataReceivedRatioFix[7]_i_9_n_0\,
      O(7) => \countDataReceivedRatioFix_reg[7]_i_1_n_8\,
      O(6) => \countDataReceivedRatioFix_reg[7]_i_1_n_9\,
      O(5) => \countDataReceivedRatioFix_reg[7]_i_1_n_10\,
      O(4) => \countDataReceivedRatioFix_reg[7]_i_1_n_11\,
      O(3) => \countDataReceivedRatioFix_reg[7]_i_1_n_12\,
      O(2) => \countDataReceivedRatioFix_reg[7]_i_1_n_13\,
      O(1) => \countDataReceivedRatioFix_reg[7]_i_1_n_14\,
      O(0) => \countDataReceivedRatioFix_reg[7]_i_1_n_15\,
      S(7) => \countDataReceivedRatioFix[7]_i_10_n_0\,
      S(6) => \countDataReceivedRatioFix[7]_i_11_n_0\,
      S(5) => \countDataReceivedRatioFix[7]_i_12_n_0\,
      S(4) => \countDataReceivedRatioFix[7]_i_13_n_0\,
      S(3) => \countDataReceivedRatioFix[7]_i_14_n_0\,
      S(2) => \countDataReceivedRatioFix[7]_i_15_n_0\,
      S(1) => \countDataReceivedRatioFix[7]_i_16_n_0\,
      S(0) => \countDataReceivedRatioFix[7]_i_17_n_0\
    );
\countDataReceivedRatioFix_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_15\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(8),
      R => '0'
    );
\countDataReceivedRatioFix_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => countDataReceivedRatioFix,
      D => \countDataReceivedRatioFix_reg[15]_i_1_n_14\,
      Q => \countDataReceivedRatioFix_reg_n_0_\(9),
      R => '0'
    );
\countDataReceived[32]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(32),
      I2 => reset_cmd,
      O => \p_1_in__0\(32)
    );
\countDataReceived[33]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(33),
      I2 => reset_cmd,
      O => \p_1_in__0\(33)
    );
\countDataReceived[34]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(34),
      I2 => reset_cmd,
      O => \p_1_in__0\(34)
    );
\countDataReceived[35]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(35),
      I2 => reset_cmd,
      O => \p_1_in__0\(35)
    );
\countDataReceived[36]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(36),
      I2 => reset_cmd,
      O => \p_1_in__0\(36)
    );
\countDataReceived[37]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(37),
      I2 => reset_cmd,
      O => \p_1_in__0\(37)
    );
\countDataReceived[38]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(38),
      I2 => reset_cmd,
      O => \p_1_in__0\(38)
    );
\countDataReceived[39]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F444"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => readDataLast,
      I3 => readDataValid,
      O => \countDataReceived[39]_i_1_n_0\
    );
\countDataReceived[39]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countDataSent_reg(39),
      I1 => countDataToBeSent_reg(39),
      O => \countDataReceived[39]_i_11_n_0\
    );
\countDataReceived[39]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(36),
      I1 => countDataSent_reg(36),
      I2 => countDataSent_reg(38),
      I3 => countDataToBeSent_reg(38),
      I4 => countDataSent_reg(37),
      I5 => countDataToBeSent_reg(37),
      O => \countDataReceived[39]_i_12_n_0\
    );
\countDataReceived[39]_i_13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(33),
      I1 => countDataSent_reg(33),
      I2 => countDataSent_reg(35),
      I3 => countDataToBeSent_reg(35),
      I4 => countDataSent_reg(34),
      I5 => countDataToBeSent_reg(34),
      O => \countDataReceived[39]_i_13_n_0\
    );
\countDataReceived[39]_i_14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(30),
      I1 => countDataSent_reg(30),
      I2 => countDataSent_reg(32),
      I3 => countDataToBeSent_reg(32),
      I4 => countDataSent_reg(31),
      I5 => countDataToBeSent_reg(31),
      O => \countDataReceived[39]_i_14_n_0\
    );
\countDataReceived[39]_i_15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(27),
      I1 => countDataSent_reg(27),
      I2 => countDataSent_reg(29),
      I3 => countDataToBeSent_reg(29),
      I4 => countDataSent_reg(28),
      I5 => countDataToBeSent_reg(28),
      O => \countDataReceived[39]_i_15_n_0\
    );
\countDataReceived[39]_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(24),
      I1 => countDataSent_reg(24),
      I2 => countDataSent_reg(26),
      I3 => countDataToBeSent_reg(26),
      I4 => countDataSent_reg(25),
      I5 => countDataToBeSent_reg(25),
      O => \countDataReceived[39]_i_16_n_0\
    );
\countDataReceived[39]_i_18\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countAddrSent(39),
      I1 => countAddrToBeSent(39),
      O => \countDataReceived[39]_i_18_n_0\
    );
\countDataReceived[39]_i_19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(36),
      I1 => countAddrSent(36),
      I2 => countAddrSent(38),
      I3 => countAddrToBeSent(38),
      I4 => countAddrSent(37),
      I5 => countAddrToBeSent(37),
      O => \countDataReceived[39]_i_19_n_0\
    );
\countDataReceived[39]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => countDataReceived0(39),
      I2 => reset_cmd,
      O => \p_1_in__0\(39)
    );
\countDataReceived[39]_i_20\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(33),
      I1 => countAddrSent(33),
      I2 => countAddrSent(35),
      I3 => countAddrToBeSent(35),
      I4 => countAddrSent(34),
      I5 => countAddrToBeSent(34),
      O => \countDataReceived[39]_i_20_n_0\
    );
\countDataReceived[39]_i_21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(30),
      I1 => countAddrSent(30),
      I2 => countAddrSent(32),
      I3 => countAddrToBeSent(32),
      I4 => countAddrSent(31),
      I5 => countAddrToBeSent(31),
      O => \countDataReceived[39]_i_21_n_0\
    );
\countDataReceived[39]_i_22\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(27),
      I1 => countAddrSent(27),
      I2 => countAddrSent(29),
      I3 => countAddrToBeSent(29),
      I4 => countAddrSent(28),
      I5 => countAddrToBeSent(28),
      O => \countDataReceived[39]_i_22_n_0\
    );
\countDataReceived[39]_i_23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(24),
      I1 => countAddrSent(24),
      I2 => countAddrSent(26),
      I3 => countAddrToBeSent(26),
      I4 => countAddrSent(25),
      I5 => countAddrToBeSent(25),
      O => \countDataReceived[39]_i_23_n_0\
    );
\countDataReceived[39]_i_25\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countDataReceived(39),
      I1 => countDataToBeReceived_reg(39),
      O => \countDataReceived[39]_i_25_n_0\
    );
\countDataReceived[39]_i_26\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(36),
      I1 => countDataReceived(36),
      I2 => countDataReceived(38),
      I3 => countDataToBeReceived_reg(38),
      I4 => countDataReceived(37),
      I5 => countDataToBeReceived_reg(37),
      O => \countDataReceived[39]_i_26_n_0\
    );
\countDataReceived[39]_i_27\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(33),
      I1 => countDataReceived(33),
      I2 => countDataReceived(35),
      I3 => countDataToBeReceived_reg(35),
      I4 => countDataReceived(34),
      I5 => countDataToBeReceived_reg(34),
      O => \countDataReceived[39]_i_27_n_0\
    );
\countDataReceived[39]_i_28\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(30),
      I1 => countDataReceived(30),
      I2 => countDataReceived(32),
      I3 => countDataToBeReceived_reg(32),
      I4 => countDataReceived(31),
      I5 => countDataToBeReceived_reg(31),
      O => \countDataReceived[39]_i_28_n_0\
    );
\countDataReceived[39]_i_29\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(27),
      I1 => countDataReceived(27),
      I2 => countDataReceived(29),
      I3 => countDataToBeReceived_reg(29),
      I4 => countDataReceived(28),
      I5 => countDataToBeReceived_reg(28),
      O => \countDataReceived[39]_i_29_n_0\
    );
\countDataReceived[39]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => active_runtime0,
      I1 => active_runtime1,
      I2 => active_blocking,
      I3 => \countDataReceived[39]_i_7_n_0\,
      I4 => active_runtime2,
      I5 => active_runtime3,
      O => \countDataReceived[39]_i_3_n_0\
    );
\countDataReceived[39]_i_30\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(24),
      I1 => countDataReceived(24),
      I2 => countDataReceived(26),
      I3 => countDataToBeReceived_reg(26),
      I4 => countDataReceived(25),
      I5 => countDataToBeReceived_reg(25),
      O => \countDataReceived[39]_i_30_n_0\
    );
\countDataReceived[39]_i_32\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqSent_reg(39),
      I1 => countReadReqToBeSent(39),
      O => \countDataReceived[39]_i_32_n_0\
    );
\countDataReceived[39]_i_33\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(36),
      I1 => countReadReqSent_reg(36),
      I2 => countReadReqSent_reg(38),
      I3 => countReadReqToBeSent(38),
      I4 => countReadReqSent_reg(37),
      I5 => countReadReqToBeSent(37),
      O => \countDataReceived[39]_i_33_n_0\
    );
\countDataReceived[39]_i_34\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(33),
      I1 => countReadReqSent_reg(33),
      I2 => countReadReqSent_reg(35),
      I3 => countReadReqToBeSent(35),
      I4 => countReadReqSent_reg(34),
      I5 => countReadReqToBeSent(34),
      O => \countDataReceived[39]_i_34_n_0\
    );
\countDataReceived[39]_i_35\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(30),
      I1 => countReadReqSent_reg(30),
      I2 => countReadReqSent_reg(32),
      I3 => countReadReqToBeSent(32),
      I4 => countReadReqSent_reg(31),
      I5 => countReadReqToBeSent(31),
      O => \countDataReceived[39]_i_35_n_0\
    );
\countDataReceived[39]_i_36\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(27),
      I1 => countReadReqSent_reg(27),
      I2 => countReadReqSent_reg(29),
      I3 => countReadReqToBeSent(29),
      I4 => countReadReqSent_reg(28),
      I5 => countReadReqToBeSent(28),
      O => \countDataReceived[39]_i_36_n_0\
    );
\countDataReceived[39]_i_37\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(24),
      I1 => countReadReqSent_reg(24),
      I2 => countReadReqSent_reg(26),
      I3 => countReadReqToBeSent(26),
      I4 => countReadReqSent_reg(25),
      I5 => countReadReqToBeSent(25),
      O => \countDataReceived[39]_i_37_n_0\
    );
\countDataReceived[39]_i_38\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(21),
      I1 => countDataSent_reg(21),
      I2 => countDataSent_reg(23),
      I3 => countDataToBeSent_reg(23),
      I4 => countDataSent_reg(22),
      I5 => countDataToBeSent_reg(22),
      O => \countDataReceived[39]_i_38_n_0\
    );
\countDataReceived[39]_i_39\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(18),
      I1 => countDataSent_reg(18),
      I2 => countDataSent_reg(20),
      I3 => countDataToBeSent_reg(20),
      I4 => countDataSent_reg(19),
      I5 => countDataToBeSent_reg(19),
      O => \countDataReceived[39]_i_39_n_0\
    );
\countDataReceived[39]_i_40\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(15),
      I1 => countDataSent_reg(15),
      I2 => countDataSent_reg(17),
      I3 => countDataToBeSent_reg(17),
      I4 => countDataSent_reg(16),
      I5 => countDataToBeSent_reg(16),
      O => \countDataReceived[39]_i_40_n_0\
    );
\countDataReceived[39]_i_41\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(12),
      I1 => countDataSent_reg(12),
      I2 => countDataSent_reg(14),
      I3 => countDataToBeSent_reg(14),
      I4 => countDataSent_reg(13),
      I5 => countDataToBeSent_reg(13),
      O => \countDataReceived[39]_i_41_n_0\
    );
\countDataReceived[39]_i_42\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(9),
      I1 => countDataSent_reg(9),
      I2 => countDataSent_reg(11),
      I3 => countDataToBeSent_reg(11),
      I4 => countDataSent_reg(10),
      I5 => countDataToBeSent_reg(10),
      O => \countDataReceived[39]_i_42_n_0\
    );
\countDataReceived[39]_i_43\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(6),
      I1 => countDataSent_reg(6),
      I2 => countDataSent_reg(8),
      I3 => countDataToBeSent_reg(8),
      I4 => countDataSent_reg(7),
      I5 => countDataToBeSent_reg(7),
      O => \countDataReceived[39]_i_43_n_0\
    );
\countDataReceived[39]_i_44\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(3),
      I1 => countDataSent_reg(3),
      I2 => countDataSent_reg(5),
      I3 => countDataToBeSent_reg(5),
      I4 => countDataSent_reg(4),
      I5 => countDataToBeSent_reg(4),
      O => \countDataReceived[39]_i_44_n_0\
    );
\countDataReceived[39]_i_45\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeSent_reg(0),
      I1 => countDataSent_reg(0),
      I2 => countDataSent_reg(2),
      I3 => countDataToBeSent_reg(2),
      I4 => countDataSent_reg(1),
      I5 => countDataToBeSent_reg(1),
      O => \countDataReceived[39]_i_45_n_0\
    );
\countDataReceived[39]_i_46\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(21),
      I1 => countAddrSent(21),
      I2 => countAddrSent(23),
      I3 => countAddrToBeSent(23),
      I4 => countAddrSent(22),
      I5 => countAddrToBeSent(22),
      O => \countDataReceived[39]_i_46_n_0\
    );
\countDataReceived[39]_i_47\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(18),
      I1 => countAddrSent(18),
      I2 => countAddrSent(20),
      I3 => countAddrToBeSent(20),
      I4 => countAddrSent(19),
      I5 => countAddrToBeSent(19),
      O => \countDataReceived[39]_i_47_n_0\
    );
\countDataReceived[39]_i_48\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(15),
      I1 => countAddrSent(15),
      I2 => countAddrSent(17),
      I3 => countAddrToBeSent(17),
      I4 => countAddrSent(16),
      I5 => countAddrToBeSent(16),
      O => \countDataReceived[39]_i_48_n_0\
    );
\countDataReceived[39]_i_49\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(12),
      I1 => countAddrSent(12),
      I2 => countAddrSent(14),
      I3 => countAddrToBeSent(14),
      I4 => countAddrSent(13),
      I5 => countAddrToBeSent(13),
      O => \countDataReceived[39]_i_49_n_0\
    );
\countDataReceived[39]_i_50\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(9),
      I1 => countAddrSent(9),
      I2 => countAddrSent(11),
      I3 => countAddrToBeSent(11),
      I4 => countAddrSent(10),
      I5 => countAddrToBeSent(10),
      O => \countDataReceived[39]_i_50_n_0\
    );
\countDataReceived[39]_i_51\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(6),
      I1 => countAddrSent(6),
      I2 => countAddrSent(8),
      I3 => countAddrToBeSent(8),
      I4 => countAddrSent(7),
      I5 => countAddrToBeSent(7),
      O => \countDataReceived[39]_i_51_n_0\
    );
\countDataReceived[39]_i_52\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(3),
      I1 => countAddrSent(3),
      I2 => countAddrSent(5),
      I3 => countAddrToBeSent(5),
      I4 => countAddrSent(4),
      I5 => countAddrToBeSent(4),
      O => \countDataReceived[39]_i_52_n_0\
    );
\countDataReceived[39]_i_53\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countAddrToBeSent(0),
      I1 => countAddrSent(0),
      I2 => countAddrSent(2),
      I3 => countAddrToBeSent(2),
      I4 => countAddrSent(1),
      I5 => countAddrToBeSent(1),
      O => \countDataReceived[39]_i_53_n_0\
    );
\countDataReceived[39]_i_54\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(21),
      I1 => countDataReceived(21),
      I2 => countDataReceived(23),
      I3 => countDataToBeReceived_reg(23),
      I4 => countDataReceived(22),
      I5 => countDataToBeReceived_reg(22),
      O => \countDataReceived[39]_i_54_n_0\
    );
\countDataReceived[39]_i_55\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(18),
      I1 => countDataReceived(18),
      I2 => countDataReceived(20),
      I3 => countDataToBeReceived_reg(20),
      I4 => countDataReceived(19),
      I5 => countDataToBeReceived_reg(19),
      O => \countDataReceived[39]_i_55_n_0\
    );
\countDataReceived[39]_i_56\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(15),
      I1 => countDataReceived(15),
      I2 => countDataReceived(17),
      I3 => countDataToBeReceived_reg(17),
      I4 => countDataReceived(16),
      I5 => countDataToBeReceived_reg(16),
      O => \countDataReceived[39]_i_56_n_0\
    );
\countDataReceived[39]_i_57\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(12),
      I1 => countDataReceived(12),
      I2 => countDataReceived(14),
      I3 => countDataToBeReceived_reg(14),
      I4 => countDataReceived(13),
      I5 => countDataToBeReceived_reg(13),
      O => \countDataReceived[39]_i_57_n_0\
    );
\countDataReceived[39]_i_58\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(9),
      I1 => countDataReceived(9),
      I2 => countDataReceived(11),
      I3 => countDataToBeReceived_reg(11),
      I4 => countDataReceived(10),
      I5 => countDataToBeReceived_reg(10),
      O => \countDataReceived[39]_i_58_n_0\
    );
\countDataReceived[39]_i_59\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(6),
      I1 => countDataReceived(6),
      I2 => countDataReceived(8),
      I3 => countDataToBeReceived_reg(8),
      I4 => countDataReceived(7),
      I5 => countDataToBeReceived_reg(7),
      O => \countDataReceived[39]_i_59_n_0\
    );
\countDataReceived[39]_i_60\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(3),
      I1 => countDataReceived(3),
      I2 => countDataReceived(5),
      I3 => countDataToBeReceived_reg(5),
      I4 => countDataReceived(4),
      I5 => countDataToBeReceived_reg(4),
      O => \countDataReceived[39]_i_60_n_0\
    );
\countDataReceived[39]_i_61\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countDataToBeReceived_reg(0),
      I1 => countDataReceived(0),
      I2 => countDataReceived(2),
      I3 => countDataToBeReceived_reg(2),
      I4 => countDataReceived(1),
      I5 => countDataToBeReceived_reg(1),
      O => \countDataReceived[39]_i_61_n_0\
    );
\countDataReceived[39]_i_62\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(21),
      I1 => countReadReqSent_reg(21),
      I2 => countReadReqSent_reg(23),
      I3 => countReadReqToBeSent(23),
      I4 => countReadReqSent_reg(22),
      I5 => countReadReqToBeSent(22),
      O => \countDataReceived[39]_i_62_n_0\
    );
\countDataReceived[39]_i_63\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(18),
      I1 => countReadReqSent_reg(18),
      I2 => countReadReqSent_reg(20),
      I3 => countReadReqToBeSent(20),
      I4 => countReadReqSent_reg(19),
      I5 => countReadReqToBeSent(19),
      O => \countDataReceived[39]_i_63_n_0\
    );
\countDataReceived[39]_i_64\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(15),
      I1 => countReadReqSent_reg(15),
      I2 => countReadReqSent_reg(17),
      I3 => countReadReqToBeSent(17),
      I4 => countReadReqSent_reg(16),
      I5 => countReadReqToBeSent(16),
      O => \countDataReceived[39]_i_64_n_0\
    );
\countDataReceived[39]_i_65\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(12),
      I1 => countReadReqSent_reg(12),
      I2 => countReadReqSent_reg(14),
      I3 => countReadReqToBeSent(14),
      I4 => countReadReqSent_reg(13),
      I5 => countReadReqToBeSent(13),
      O => \countDataReceived[39]_i_65_n_0\
    );
\countDataReceived[39]_i_66\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(9),
      I1 => countReadReqSent_reg(9),
      I2 => countReadReqSent_reg(11),
      I3 => countReadReqToBeSent(11),
      I4 => countReadReqSent_reg(10),
      I5 => countReadReqToBeSent(10),
      O => \countDataReceived[39]_i_66_n_0\
    );
\countDataReceived[39]_i_67\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(6),
      I1 => countReadReqSent_reg(6),
      I2 => countReadReqSent_reg(8),
      I3 => countReadReqToBeSent(8),
      I4 => countReadReqSent_reg(7),
      I5 => countReadReqToBeSent(7),
      O => \countDataReceived[39]_i_67_n_0\
    );
\countDataReceived[39]_i_68\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(3),
      I1 => countReadReqSent_reg(3),
      I2 => countReadReqSent_reg(5),
      I3 => countReadReqToBeSent(5),
      I4 => countReadReqSent_reg(4),
      I5 => countReadReqToBeSent(4),
      O => \countDataReceived[39]_i_68_n_0\
    );
\countDataReceived[39]_i_69\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => countReadReqToBeSent(0),
      I1 => countReadReqSent_reg(0),
      I2 => countReadReqSent_reg(2),
      I3 => countReadReqToBeSent(2),
      I4 => countReadReqSent_reg(1),
      I5 => countReadReqToBeSent(1),
      O => \countDataReceived[39]_i_69_n_0\
    );
\countDataReceived[39]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => active_read,
      I1 => active_write,
      O => \countDataReceived[39]_i_7_n_0\
    );
\countDataReceived_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(0),
      Q => countDataReceived(0),
      R => '0'
    );
\countDataReceived_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(10),
      Q => countDataReceived(10),
      R => '0'
    );
\countDataReceived_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(11),
      Q => countDataReceived(11),
      R => '0'
    );
\countDataReceived_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(12),
      Q => countDataReceived(12),
      R => '0'
    );
\countDataReceived_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(13),
      Q => countDataReceived(13),
      R => '0'
    );
\countDataReceived_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(14),
      Q => countDataReceived(14),
      R => '0'
    );
\countDataReceived_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(15),
      Q => countDataReceived(15),
      R => '0'
    );
\countDataReceived_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(16),
      Q => countDataReceived(16),
      R => '0'
    );
\countDataReceived_reg[16]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[8]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[16]_i_2_n_0\,
      CO(6) => \countDataReceived_reg[16]_i_2_n_1\,
      CO(5) => \countDataReceived_reg[16]_i_2_n_2\,
      CO(4) => \countDataReceived_reg[16]_i_2_n_3\,
      CO(3) => \NLW_countDataReceived_reg[16]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[16]_i_2_n_5\,
      CO(1) => \countDataReceived_reg[16]_i_2_n_6\,
      CO(0) => \countDataReceived_reg[16]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataReceived0(16 downto 9),
      S(7 downto 0) => countDataReceived(16 downto 9)
    );
\countDataReceived_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(17),
      Q => countDataReceived(17),
      R => '0'
    );
\countDataReceived_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(18),
      Q => countDataReceived(18),
      R => '0'
    );
\countDataReceived_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(19),
      Q => countDataReceived(19),
      R => '0'
    );
\countDataReceived_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(1),
      Q => countDataReceived(1),
      R => '0'
    );
\countDataReceived_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(20),
      Q => countDataReceived(20),
      R => '0'
    );
\countDataReceived_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(21),
      Q => countDataReceived(21),
      R => '0'
    );
\countDataReceived_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(22),
      Q => countDataReceived(22),
      R => '0'
    );
\countDataReceived_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(23),
      Q => countDataReceived(23),
      R => '0'
    );
\countDataReceived_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(24),
      Q => countDataReceived(24),
      R => '0'
    );
\countDataReceived_reg[24]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[16]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[24]_i_2_n_0\,
      CO(6) => \countDataReceived_reg[24]_i_2_n_1\,
      CO(5) => \countDataReceived_reg[24]_i_2_n_2\,
      CO(4) => \countDataReceived_reg[24]_i_2_n_3\,
      CO(3) => \NLW_countDataReceived_reg[24]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[24]_i_2_n_5\,
      CO(1) => \countDataReceived_reg[24]_i_2_n_6\,
      CO(0) => \countDataReceived_reg[24]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataReceived0(24 downto 17),
      S(7 downto 0) => countDataReceived(24 downto 17)
    );
\countDataReceived_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(25),
      Q => countDataReceived(25),
      R => '0'
    );
\countDataReceived_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(26),
      Q => countDataReceived(26),
      R => '0'
    );
\countDataReceived_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(27),
      Q => countDataReceived(27),
      R => '0'
    );
\countDataReceived_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(28),
      Q => countDataReceived(28),
      R => '0'
    );
\countDataReceived_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(29),
      Q => countDataReceived(29),
      R => '0'
    );
\countDataReceived_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(2),
      Q => countDataReceived(2),
      R => '0'
    );
\countDataReceived_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(30),
      Q => countDataReceived(30),
      R => '0'
    );
\countDataReceived_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(31),
      Q => countDataReceived(31),
      R => '0'
    );
\countDataReceived_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(32),
      Q => countDataReceived(32),
      R => '0'
    );
\countDataReceived_reg[32]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[24]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[32]_i_2_n_0\,
      CO(6) => \countDataReceived_reg[32]_i_2_n_1\,
      CO(5) => \countDataReceived_reg[32]_i_2_n_2\,
      CO(4) => \countDataReceived_reg[32]_i_2_n_3\,
      CO(3) => \NLW_countDataReceived_reg[32]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[32]_i_2_n_5\,
      CO(1) => \countDataReceived_reg[32]_i_2_n_6\,
      CO(0) => \countDataReceived_reg[32]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataReceived0(32 downto 25),
      S(7 downto 0) => countDataReceived(32 downto 25)
    );
\countDataReceived_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(33),
      Q => countDataReceived(33),
      R => '0'
    );
\countDataReceived_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(34),
      Q => countDataReceived(34),
      R => '0'
    );
\countDataReceived_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(35),
      Q => countDataReceived(35),
      R => '0'
    );
\countDataReceived_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(36),
      Q => countDataReceived(36),
      R => '0'
    );
\countDataReceived_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(37),
      Q => countDataReceived(37),
      R => '0'
    );
\countDataReceived_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(38),
      Q => countDataReceived(38),
      R => '0'
    );
\countDataReceived_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countDataReceived[39]_i_1_n_0\,
      D => \p_1_in__0\(39),
      Q => countDataReceived(39),
      R => '0'
    );
\countDataReceived_reg[39]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[39]_i_10_n_0\,
      CO(6) => \countDataReceived_reg[39]_i_10_n_1\,
      CO(5) => \countDataReceived_reg[39]_i_10_n_2\,
      CO(4) => \countDataReceived_reg[39]_i_10_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_10_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_10_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_10_n_7\,
      DI(7 downto 0) => B"11111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_10_O_UNCONNECTED\(7 downto 0),
      S(7) => \countDataReceived[39]_i_38_n_0\,
      S(6) => \countDataReceived[39]_i_39_n_0\,
      S(5) => \countDataReceived[39]_i_40_n_0\,
      S(4) => \countDataReceived[39]_i_41_n_0\,
      S(3) => \countDataReceived[39]_i_42_n_0\,
      S(2) => \countDataReceived[39]_i_43_n_0\,
      S(1) => \countDataReceived[39]_i_44_n_0\,
      S(0) => \countDataReceived[39]_i_45_n_0\
    );
\countDataReceived_reg[39]_i_17\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[39]_i_17_n_0\,
      CO(6) => \countDataReceived_reg[39]_i_17_n_1\,
      CO(5) => \countDataReceived_reg[39]_i_17_n_2\,
      CO(4) => \countDataReceived_reg[39]_i_17_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_17_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_17_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_17_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_17_n_7\,
      DI(7 downto 0) => B"11111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_17_O_UNCONNECTED\(7 downto 0),
      S(7) => \countDataReceived[39]_i_46_n_0\,
      S(6) => \countDataReceived[39]_i_47_n_0\,
      S(5) => \countDataReceived[39]_i_48_n_0\,
      S(4) => \countDataReceived[39]_i_49_n_0\,
      S(3) => \countDataReceived[39]_i_50_n_0\,
      S(2) => \countDataReceived[39]_i_51_n_0\,
      S(1) => \countDataReceived[39]_i_52_n_0\,
      S(0) => \countDataReceived[39]_i_53_n_0\
    );
\countDataReceived_reg[39]_i_24\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[39]_i_24_n_0\,
      CO(6) => \countDataReceived_reg[39]_i_24_n_1\,
      CO(5) => \countDataReceived_reg[39]_i_24_n_2\,
      CO(4) => \countDataReceived_reg[39]_i_24_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_24_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_24_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_24_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_24_n_7\,
      DI(7 downto 0) => B"11111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_24_O_UNCONNECTED\(7 downto 0),
      S(7) => \countDataReceived[39]_i_54_n_0\,
      S(6) => \countDataReceived[39]_i_55_n_0\,
      S(5) => \countDataReceived[39]_i_56_n_0\,
      S(4) => \countDataReceived[39]_i_57_n_0\,
      S(3) => \countDataReceived[39]_i_58_n_0\,
      S(2) => \countDataReceived[39]_i_59_n_0\,
      S(1) => \countDataReceived[39]_i_60_n_0\,
      S(0) => \countDataReceived[39]_i_61_n_0\
    );
\countDataReceived_reg[39]_i_31\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[39]_i_31_n_0\,
      CO(6) => \countDataReceived_reg[39]_i_31_n_1\,
      CO(5) => \countDataReceived_reg[39]_i_31_n_2\,
      CO(4) => \countDataReceived_reg[39]_i_31_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_31_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_31_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_31_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_31_n_7\,
      DI(7 downto 0) => B"11111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_31_O_UNCONNECTED\(7 downto 0),
      S(7) => \countDataReceived[39]_i_62_n_0\,
      S(6) => \countDataReceived[39]_i_63_n_0\,
      S(5) => \countDataReceived[39]_i_64_n_0\,
      S(4) => \countDataReceived[39]_i_65_n_0\,
      S(3) => \countDataReceived[39]_i_66_n_0\,
      S(2) => \countDataReceived[39]_i_67_n_0\,
      S(1) => \countDataReceived[39]_i_68_n_0\,
      S(0) => \countDataReceived[39]_i_69_n_0\
    );
\countDataReceived_reg[39]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[32]_i_2_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countDataReceived_reg[39]_i_4_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \countDataReceived_reg[39]_i_4_n_2\,
      CO(4) => \countDataReceived_reg[39]_i_4_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_4_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_4_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_4_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_countDataReceived_reg[39]_i_4_O_UNCONNECTED\(7),
      O(6 downto 0) => countDataReceived0(39 downto 33),
      S(7) => '0',
      S(6 downto 0) => countDataReceived(39 downto 33)
    );
\countDataReceived_reg[39]_i_5\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[39]_i_10_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countDataReceived_reg[39]_i_5_CO_UNCONNECTED\(7 downto 6),
      CO(5) => active_runtime0,
      CO(4) => \countDataReceived_reg[39]_i_5_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_5_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_5_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_5_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_5_n_7\,
      DI(7 downto 0) => B"00111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_5_O_UNCONNECTED\(7 downto 0),
      S(7 downto 6) => B"00",
      S(5) => \countDataReceived[39]_i_11_n_0\,
      S(4) => \countDataReceived[39]_i_12_n_0\,
      S(3) => \countDataReceived[39]_i_13_n_0\,
      S(2) => \countDataReceived[39]_i_14_n_0\,
      S(1) => \countDataReceived[39]_i_15_n_0\,
      S(0) => \countDataReceived[39]_i_16_n_0\
    );
\countDataReceived_reg[39]_i_6\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[39]_i_17_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countDataReceived_reg[39]_i_6_CO_UNCONNECTED\(7 downto 6),
      CO(5) => active_runtime1,
      CO(4) => \countDataReceived_reg[39]_i_6_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_6_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_6_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_6_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_6_n_7\,
      DI(7 downto 0) => B"00111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_6_O_UNCONNECTED\(7 downto 0),
      S(7 downto 6) => B"00",
      S(5) => \countDataReceived[39]_i_18_n_0\,
      S(4) => \countDataReceived[39]_i_19_n_0\,
      S(3) => \countDataReceived[39]_i_20_n_0\,
      S(2) => \countDataReceived[39]_i_21_n_0\,
      S(1) => \countDataReceived[39]_i_22_n_0\,
      S(0) => \countDataReceived[39]_i_23_n_0\
    );
\countDataReceived_reg[39]_i_8\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[39]_i_24_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countDataReceived_reg[39]_i_8_CO_UNCONNECTED\(7 downto 6),
      CO(5) => active_runtime2,
      CO(4) => \countDataReceived_reg[39]_i_8_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_8_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_8_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_8_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_8_n_7\,
      DI(7 downto 0) => B"00111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_8_O_UNCONNECTED\(7 downto 0),
      S(7 downto 6) => B"00",
      S(5) => \countDataReceived[39]_i_25_n_0\,
      S(4) => \countDataReceived[39]_i_26_n_0\,
      S(3) => \countDataReceived[39]_i_27_n_0\,
      S(2) => \countDataReceived[39]_i_28_n_0\,
      S(1) => \countDataReceived[39]_i_29_n_0\,
      S(0) => \countDataReceived[39]_i_30_n_0\
    );
\countDataReceived_reg[39]_i_9\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataReceived_reg[39]_i_31_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countDataReceived_reg[39]_i_9_CO_UNCONNECTED\(7 downto 6),
      CO(5) => active_runtime3,
      CO(4) => \countDataReceived_reg[39]_i_9_n_3\,
      CO(3) => \NLW_countDataReceived_reg[39]_i_9_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[39]_i_9_n_5\,
      CO(1) => \countDataReceived_reg[39]_i_9_n_6\,
      CO(0) => \countDataReceived_reg[39]_i_9_n_7\,
      DI(7 downto 0) => B"00111111",
      O(7 downto 0) => \NLW_countDataReceived_reg[39]_i_9_O_UNCONNECTED\(7 downto 0),
      S(7 downto 6) => B"00",
      S(5) => \countDataReceived[39]_i_32_n_0\,
      S(4) => \countDataReceived[39]_i_33_n_0\,
      S(3) => \countDataReceived[39]_i_34_n_0\,
      S(2) => \countDataReceived[39]_i_35_n_0\,
      S(1) => \countDataReceived[39]_i_36_n_0\,
      S(0) => \countDataReceived[39]_i_37_n_0\
    );
\countDataReceived_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(3),
      Q => countDataReceived(3),
      R => '0'
    );
\countDataReceived_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(4),
      Q => countDataReceived(4),
      R => '0'
    );
\countDataReceived_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(5),
      Q => countDataReceived(5),
      R => '0'
    );
\countDataReceived_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(6),
      Q => countDataReceived(6),
      R => '0'
    );
\countDataReceived_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(7),
      Q => countDataReceived(7),
      R => '0'
    );
\countDataReceived_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(8),
      Q => countDataReceived(8),
      R => '0'
    );
\countDataReceived_reg[8]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => countDataReceived(0),
      CI_TOP => '0',
      CO(7) => \countDataReceived_reg[8]_i_2_n_0\,
      CO(6) => \countDataReceived_reg[8]_i_2_n_1\,
      CO(5) => \countDataReceived_reg[8]_i_2_n_2\,
      CO(4) => \countDataReceived_reg[8]_i_2_n_3\,
      CO(3) => \NLW_countDataReceived_reg[8]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \countDataReceived_reg[8]_i_2_n_5\,
      CO(1) => \countDataReceived_reg[8]_i_2_n_6\,
      CO(0) => \countDataReceived_reg[8]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataReceived0(8 downto 1),
      S(7 downto 0) => countDataReceived(8 downto 1)
    );
\countDataReceived_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_67,
      D => \p_1_in__0\(9),
      Q => countDataReceived(9),
      R => '0'
    );
\countDataSent[0]_i_10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"31"
    )
        port map (
      I0 => reset_cmd,
      I1 => countDataSent_reg(0),
      I2 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataSent[0]_i_10_n_0\
    );
\countDataSent[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"89"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => countDataSent_reg(0),
      I2 => reset_cmd,
      O => \countDataSent[0]_i_2_n_0\
    );
\countDataSent[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(7),
      I1 => active_runtime,
      I2 => countDataSent0(7),
      I3 => reset_cmd,
      O => \countDataSent[0]_i_3_n_0\
    );
\countDataSent[0]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(6),
      I1 => active_runtime,
      I2 => countDataSent0(6),
      I3 => reset_cmd,
      O => \countDataSent[0]_i_4_n_0\
    );
\countDataSent[0]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(5),
      I1 => active_runtime,
      I2 => countDataSent0(5),
      I3 => reset_cmd,
      O => \countDataSent[0]_i_5_n_0\
    );
\countDataSent[0]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(4),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(4),
      I3 => reset_cmd,
      O => \countDataSent[0]_i_6_n_0\
    );
\countDataSent[0]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(3),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(3),
      I3 => reset_cmd,
      O => \countDataSent[0]_i_7_n_0\
    );
\countDataSent[0]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(2),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(2),
      I3 => reset_cmd,
      O => \countDataSent[0]_i_8_n_0\
    );
\countDataSent[0]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(1),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(1),
      I3 => reset_cmd,
      O => \countDataSent[0]_i_9_n_0\
    );
\countDataSent[16]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(23),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(23),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_2_n_0\
    );
\countDataSent[16]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(22),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(22),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_3_n_0\
    );
\countDataSent[16]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(21),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(21),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_4_n_0\
    );
\countDataSent[16]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(20),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(20),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_5_n_0\
    );
\countDataSent[16]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(19),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(19),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_6_n_0\
    );
\countDataSent[16]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(18),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(18),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_7_n_0\
    );
\countDataSent[16]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(17),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(17),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_8_n_0\
    );
\countDataSent[16]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(16),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(16),
      I3 => reset_cmd,
      O => \countDataSent[16]_i_9_n_0\
    );
\countDataSent[24]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(31),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(31),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_2_n_0\
    );
\countDataSent[24]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(30),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(30),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_3_n_0\
    );
\countDataSent[24]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(29),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(29),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_4_n_0\
    );
\countDataSent[24]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(28),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(28),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_5_n_0\
    );
\countDataSent[24]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(27),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(27),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_6_n_0\
    );
\countDataSent[24]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(26),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(26),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_7_n_0\
    );
\countDataSent[24]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(25),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(25),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_8_n_0\
    );
\countDataSent[24]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(24),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(24),
      I3 => reset_cmd,
      O => \countDataSent[24]_i_9_n_0\
    );
\countDataSent[32]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(39),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(39),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_2_n_0\
    );
\countDataSent[32]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(38),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(38),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_3_n_0\
    );
\countDataSent[32]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(37),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(37),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_4_n_0\
    );
\countDataSent[32]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(36),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(36),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_5_n_0\
    );
\countDataSent[32]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(35),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(35),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_6_n_0\
    );
\countDataSent[32]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(34),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(34),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_7_n_0\
    );
\countDataSent[32]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(33),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(33),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_8_n_0\
    );
\countDataSent[32]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(32),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(32),
      I3 => reset_cmd,
      O => \countDataSent[32]_i_9_n_0\
    );
\countDataSent[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(15),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(15),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_2_n_0\
    );
\countDataSent[8]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(14),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(14),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_3_n_0\
    );
\countDataSent[8]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(13),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(13),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_4_n_0\
    );
\countDataSent[8]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(12),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(12),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_5_n_0\
    );
\countDataSent[8]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(11),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(11),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_6_n_0\
    );
\countDataSent[8]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(10),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(10),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_7_n_0\
    );
\countDataSent[8]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(9),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(9),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_8_n_0\
    );
\countDataSent[8]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataSent_reg(8),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataSent0(8),
      I3 => reset_cmd,
      O => \countDataSent[8]_i_9_n_0\
    );
\countDataSent_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_15\,
      Q => countDataSent_reg(0),
      R => '0'
    );
\countDataSent_reg[0]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[0]_i_1_n_0\,
      CO(6) => \countDataSent_reg[0]_i_1_n_1\,
      CO(5) => \countDataSent_reg[0]_i_1_n_2\,
      CO(4) => \countDataSent_reg[0]_i_1_n_3\,
      CO(3) => \NLW_countDataSent_reg[0]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[0]_i_1_n_5\,
      CO(1) => \countDataSent_reg[0]_i_1_n_6\,
      CO(0) => \countDataSent_reg[0]_i_1_n_7\,
      DI(7 downto 1) => B"0000000",
      DI(0) => \countDataSent[0]_i_2_n_0\,
      O(7) => \countDataSent_reg[0]_i_1_n_8\,
      O(6) => \countDataSent_reg[0]_i_1_n_9\,
      O(5) => \countDataSent_reg[0]_i_1_n_10\,
      O(4) => \countDataSent_reg[0]_i_1_n_11\,
      O(3) => \countDataSent_reg[0]_i_1_n_12\,
      O(2) => \countDataSent_reg[0]_i_1_n_13\,
      O(1) => \countDataSent_reg[0]_i_1_n_14\,
      O(0) => \countDataSent_reg[0]_i_1_n_15\,
      S(7) => \countDataSent[0]_i_3_n_0\,
      S(6) => \countDataSent[0]_i_4_n_0\,
      S(5) => \countDataSent[0]_i_5_n_0\,
      S(4) => \countDataSent[0]_i_6_n_0\,
      S(3) => \countDataSent[0]_i_7_n_0\,
      S(2) => \countDataSent[0]_i_8_n_0\,
      S(1) => \countDataSent[0]_i_9_n_0\,
      S(0) => \countDataSent[0]_i_10_n_0\
    );
\countDataSent_reg[0]_i_11\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => countDataSent_reg(0),
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[0]_i_11_n_0\,
      CO(6) => \countDataSent_reg[0]_i_11_n_1\,
      CO(5) => \countDataSent_reg[0]_i_11_n_2\,
      CO(4) => \countDataSent_reg[0]_i_11_n_3\,
      CO(3) => \NLW_countDataSent_reg[0]_i_11_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[0]_i_11_n_5\,
      CO(1) => \countDataSent_reg[0]_i_11_n_6\,
      CO(0) => \countDataSent_reg[0]_i_11_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataSent0(8 downto 1),
      S(7 downto 0) => countDataSent_reg(8 downto 1)
    );
\countDataSent_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_13\,
      Q => countDataSent_reg(10),
      R => '0'
    );
\countDataSent_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_12\,
      Q => countDataSent_reg(11),
      R => '0'
    );
\countDataSent_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_11\,
      Q => countDataSent_reg(12),
      R => '0'
    );
\countDataSent_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_10\,
      Q => countDataSent_reg(13),
      R => '0'
    );
\countDataSent_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_9\,
      Q => countDataSent_reg(14),
      R => '0'
    );
\countDataSent_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_8\,
      Q => countDataSent_reg(15),
      R => '0'
    );
\countDataSent_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_15\,
      Q => countDataSent_reg(16),
      R => '0'
    );
\countDataSent_reg[16]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[8]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[16]_i_1_n_0\,
      CO(6) => \countDataSent_reg[16]_i_1_n_1\,
      CO(5) => \countDataSent_reg[16]_i_1_n_2\,
      CO(4) => \countDataSent_reg[16]_i_1_n_3\,
      CO(3) => \NLW_countDataSent_reg[16]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[16]_i_1_n_5\,
      CO(1) => \countDataSent_reg[16]_i_1_n_6\,
      CO(0) => \countDataSent_reg[16]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataSent_reg[16]_i_1_n_8\,
      O(6) => \countDataSent_reg[16]_i_1_n_9\,
      O(5) => \countDataSent_reg[16]_i_1_n_10\,
      O(4) => \countDataSent_reg[16]_i_1_n_11\,
      O(3) => \countDataSent_reg[16]_i_1_n_12\,
      O(2) => \countDataSent_reg[16]_i_1_n_13\,
      O(1) => \countDataSent_reg[16]_i_1_n_14\,
      O(0) => \countDataSent_reg[16]_i_1_n_15\,
      S(7) => \countDataSent[16]_i_2_n_0\,
      S(6) => \countDataSent[16]_i_3_n_0\,
      S(5) => \countDataSent[16]_i_4_n_0\,
      S(4) => \countDataSent[16]_i_5_n_0\,
      S(3) => \countDataSent[16]_i_6_n_0\,
      S(2) => \countDataSent[16]_i_7_n_0\,
      S(1) => \countDataSent[16]_i_8_n_0\,
      S(0) => \countDataSent[16]_i_9_n_0\
    );
\countDataSent_reg[16]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[8]_i_10_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[16]_i_10_n_0\,
      CO(6) => \countDataSent_reg[16]_i_10_n_1\,
      CO(5) => \countDataSent_reg[16]_i_10_n_2\,
      CO(4) => \countDataSent_reg[16]_i_10_n_3\,
      CO(3) => \NLW_countDataSent_reg[16]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[16]_i_10_n_5\,
      CO(1) => \countDataSent_reg[16]_i_10_n_6\,
      CO(0) => \countDataSent_reg[16]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataSent0(24 downto 17),
      S(7 downto 0) => countDataSent_reg(24 downto 17)
    );
\countDataSent_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_14\,
      Q => countDataSent_reg(17),
      R => '0'
    );
\countDataSent_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_13\,
      Q => countDataSent_reg(18),
      R => '0'
    );
\countDataSent_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_12\,
      Q => countDataSent_reg(19),
      R => '0'
    );
\countDataSent_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_14\,
      Q => countDataSent_reg(1),
      R => '0'
    );
\countDataSent_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_11\,
      Q => countDataSent_reg(20),
      R => '0'
    );
\countDataSent_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_10\,
      Q => countDataSent_reg(21),
      R => '0'
    );
\countDataSent_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_9\,
      Q => countDataSent_reg(22),
      R => '0'
    );
\countDataSent_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[16]_i_1_n_8\,
      Q => countDataSent_reg(23),
      R => '0'
    );
\countDataSent_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_15\,
      Q => countDataSent_reg(24),
      R => '0'
    );
\countDataSent_reg[24]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[16]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[24]_i_1_n_0\,
      CO(6) => \countDataSent_reg[24]_i_1_n_1\,
      CO(5) => \countDataSent_reg[24]_i_1_n_2\,
      CO(4) => \countDataSent_reg[24]_i_1_n_3\,
      CO(3) => \NLW_countDataSent_reg[24]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[24]_i_1_n_5\,
      CO(1) => \countDataSent_reg[24]_i_1_n_6\,
      CO(0) => \countDataSent_reg[24]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataSent_reg[24]_i_1_n_8\,
      O(6) => \countDataSent_reg[24]_i_1_n_9\,
      O(5) => \countDataSent_reg[24]_i_1_n_10\,
      O(4) => \countDataSent_reg[24]_i_1_n_11\,
      O(3) => \countDataSent_reg[24]_i_1_n_12\,
      O(2) => \countDataSent_reg[24]_i_1_n_13\,
      O(1) => \countDataSent_reg[24]_i_1_n_14\,
      O(0) => \countDataSent_reg[24]_i_1_n_15\,
      S(7) => \countDataSent[24]_i_2_n_0\,
      S(6) => \countDataSent[24]_i_3_n_0\,
      S(5) => \countDataSent[24]_i_4_n_0\,
      S(4) => \countDataSent[24]_i_5_n_0\,
      S(3) => \countDataSent[24]_i_6_n_0\,
      S(2) => \countDataSent[24]_i_7_n_0\,
      S(1) => \countDataSent[24]_i_8_n_0\,
      S(0) => \countDataSent[24]_i_9_n_0\
    );
\countDataSent_reg[24]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[16]_i_10_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[24]_i_10_n_0\,
      CO(6) => \countDataSent_reg[24]_i_10_n_1\,
      CO(5) => \countDataSent_reg[24]_i_10_n_2\,
      CO(4) => \countDataSent_reg[24]_i_10_n_3\,
      CO(3) => \NLW_countDataSent_reg[24]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[24]_i_10_n_5\,
      CO(1) => \countDataSent_reg[24]_i_10_n_6\,
      CO(0) => \countDataSent_reg[24]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataSent0(32 downto 25),
      S(7 downto 0) => countDataSent_reg(32 downto 25)
    );
\countDataSent_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_14\,
      Q => countDataSent_reg(25),
      R => '0'
    );
\countDataSent_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_13\,
      Q => countDataSent_reg(26),
      R => '0'
    );
\countDataSent_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_12\,
      Q => countDataSent_reg(27),
      R => '0'
    );
\countDataSent_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_11\,
      Q => countDataSent_reg(28),
      R => '0'
    );
\countDataSent_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_10\,
      Q => countDataSent_reg(29),
      R => '0'
    );
\countDataSent_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_13\,
      Q => countDataSent_reg(2),
      R => '0'
    );
\countDataSent_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_9\,
      Q => countDataSent_reg(30),
      R => '0'
    );
\countDataSent_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[24]_i_1_n_8\,
      Q => countDataSent_reg(31),
      R => '0'
    );
\countDataSent_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_15\,
      Q => countDataSent_reg(32),
      R => '0'
    );
\countDataSent_reg[32]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[24]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countDataSent_reg[32]_i_1_CO_UNCONNECTED\(7),
      CO(6) => \countDataSent_reg[32]_i_1_n_1\,
      CO(5) => \countDataSent_reg[32]_i_1_n_2\,
      CO(4) => \countDataSent_reg[32]_i_1_n_3\,
      CO(3) => \NLW_countDataSent_reg[32]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[32]_i_1_n_5\,
      CO(1) => \countDataSent_reg[32]_i_1_n_6\,
      CO(0) => \countDataSent_reg[32]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataSent_reg[32]_i_1_n_8\,
      O(6) => \countDataSent_reg[32]_i_1_n_9\,
      O(5) => \countDataSent_reg[32]_i_1_n_10\,
      O(4) => \countDataSent_reg[32]_i_1_n_11\,
      O(3) => \countDataSent_reg[32]_i_1_n_12\,
      O(2) => \countDataSent_reg[32]_i_1_n_13\,
      O(1) => \countDataSent_reg[32]_i_1_n_14\,
      O(0) => \countDataSent_reg[32]_i_1_n_15\,
      S(7) => \countDataSent[32]_i_2_n_0\,
      S(6) => \countDataSent[32]_i_3_n_0\,
      S(5) => \countDataSent[32]_i_4_n_0\,
      S(4) => \countDataSent[32]_i_5_n_0\,
      S(3) => \countDataSent[32]_i_6_n_0\,
      S(2) => \countDataSent[32]_i_7_n_0\,
      S(1) => \countDataSent[32]_i_8_n_0\,
      S(0) => \countDataSent[32]_i_9_n_0\
    );
\countDataSent_reg[32]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[24]_i_10_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countDataSent_reg[32]_i_10_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \countDataSent_reg[32]_i_10_n_2\,
      CO(4) => \countDataSent_reg[32]_i_10_n_3\,
      CO(3) => \NLW_countDataSent_reg[32]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[32]_i_10_n_5\,
      CO(1) => \countDataSent_reg[32]_i_10_n_6\,
      CO(0) => \countDataSent_reg[32]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_countDataSent_reg[32]_i_10_O_UNCONNECTED\(7),
      O(6 downto 0) => countDataSent0(39 downto 33),
      S(7) => '0',
      S(6 downto 0) => countDataSent_reg(39 downto 33)
    );
\countDataSent_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_14\,
      Q => countDataSent_reg(33),
      R => '0'
    );
\countDataSent_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_13\,
      Q => countDataSent_reg(34),
      R => '0'
    );
\countDataSent_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_12\,
      Q => countDataSent_reg(35),
      R => '0'
    );
\countDataSent_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_11\,
      Q => countDataSent_reg(36),
      R => '0'
    );
\countDataSent_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_10\,
      Q => countDataSent_reg(37),
      R => '0'
    );
\countDataSent_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_9\,
      Q => countDataSent_reg(38),
      R => '0'
    );
\countDataSent_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[32]_i_1_n_8\,
      Q => countDataSent_reg(39),
      R => '0'
    );
\countDataSent_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_12\,
      Q => countDataSent_reg(3),
      R => '0'
    );
\countDataSent_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_11\,
      Q => countDataSent_reg(4),
      R => '0'
    );
\countDataSent_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_10\,
      Q => countDataSent_reg(5),
      R => '0'
    );
\countDataSent_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_9\,
      Q => countDataSent_reg(6),
      R => '0'
    );
\countDataSent_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[0]_i_1_n_8\,
      Q => countDataSent_reg(7),
      R => '0'
    );
\countDataSent_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_15\,
      Q => countDataSent_reg(8),
      R => '0'
    );
\countDataSent_reg[8]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[0]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[8]_i_1_n_0\,
      CO(6) => \countDataSent_reg[8]_i_1_n_1\,
      CO(5) => \countDataSent_reg[8]_i_1_n_2\,
      CO(4) => \countDataSent_reg[8]_i_1_n_3\,
      CO(3) => \NLW_countDataSent_reg[8]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[8]_i_1_n_5\,
      CO(1) => \countDataSent_reg[8]_i_1_n_6\,
      CO(0) => \countDataSent_reg[8]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataSent_reg[8]_i_1_n_8\,
      O(6) => \countDataSent_reg[8]_i_1_n_9\,
      O(5) => \countDataSent_reg[8]_i_1_n_10\,
      O(4) => \countDataSent_reg[8]_i_1_n_11\,
      O(3) => \countDataSent_reg[8]_i_1_n_12\,
      O(2) => \countDataSent_reg[8]_i_1_n_13\,
      O(1) => \countDataSent_reg[8]_i_1_n_14\,
      O(0) => \countDataSent_reg[8]_i_1_n_15\,
      S(7) => \countDataSent[8]_i_2_n_0\,
      S(6) => \countDataSent[8]_i_3_n_0\,
      S(5) => \countDataSent[8]_i_4_n_0\,
      S(4) => \countDataSent[8]_i_5_n_0\,
      S(3) => \countDataSent[8]_i_6_n_0\,
      S(2) => \countDataSent[8]_i_7_n_0\,
      S(1) => \countDataSent[8]_i_8_n_0\,
      S(0) => \countDataSent[8]_i_9_n_0\
    );
\countDataSent_reg[8]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataSent_reg[0]_i_11_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataSent_reg[8]_i_10_n_0\,
      CO(6) => \countDataSent_reg[8]_i_10_n_1\,
      CO(5) => \countDataSent_reg[8]_i_10_n_2\,
      CO(4) => \countDataSent_reg[8]_i_10_n_3\,
      CO(3) => \NLW_countDataSent_reg[8]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataSent_reg[8]_i_10_n_5\,
      CO(1) => \countDataSent_reg[8]_i_10_n_6\,
      CO(0) => \countDataSent_reg[8]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataSent0(16 downto 9),
      S(7 downto 0) => countDataSent_reg(16 downto 9)
    );
\countDataSent_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \countDataSent_reg[8]_i_1_n_14\,
      Q => countDataSent_reg(9),
      R => '0'
    );
\countDataToBeReceived[0]_i_10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"31"
    )
        port map (
      I0 => reset_cmd,
      I1 => countDataToBeReceived_reg(0),
      I2 => \countAddrSent[31]_i_3_n_0\,
      O => \countDataToBeReceived[0]_i_10_n_0\
    );
\countDataToBeReceived[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"89"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => countDataToBeReceived_reg(0),
      I2 => reset_cmd,
      O => \countDataToBeReceived[0]_i_2_n_0\
    );
\countDataToBeReceived[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(7),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(7),
      I3 => reset_cmd,
      O => \countDataToBeReceived[0]_i_3_n_0\
    );
\countDataToBeReceived[0]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(6),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(6),
      I3 => reset_cmd,
      O => \countDataToBeReceived[0]_i_4_n_0\
    );
\countDataToBeReceived[0]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(5),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(5),
      I3 => reset_cmd,
      O => \countDataToBeReceived[0]_i_5_n_0\
    );
\countDataToBeReceived[0]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(4),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(4),
      I3 => reset_cmd,
      O => \countDataToBeReceived[0]_i_6_n_0\
    );
\countDataToBeReceived[0]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(3),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(3),
      I3 => reset_cmd,
      O => \countDataToBeReceived[0]_i_7_n_0\
    );
\countDataToBeReceived[0]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(2),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(2),
      I3 => reset_cmd,
      O => \countDataToBeReceived[0]_i_8_n_0\
    );
\countDataToBeReceived[0]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(1),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(1),
      I3 => reset_cmd,
      O => \countDataToBeReceived[0]_i_9_n_0\
    );
\countDataToBeReceived[16]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(23),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(23),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_2_n_0\
    );
\countDataToBeReceived[16]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(22),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(22),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_3_n_0\
    );
\countDataToBeReceived[16]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(21),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(21),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_4_n_0\
    );
\countDataToBeReceived[16]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(20),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(20),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_5_n_0\
    );
\countDataToBeReceived[16]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(19),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(19),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_6_n_0\
    );
\countDataToBeReceived[16]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(18),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(18),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_7_n_0\
    );
\countDataToBeReceived[16]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(17),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(17),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_8_n_0\
    );
\countDataToBeReceived[16]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(16),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(16),
      I3 => reset_cmd,
      O => \countDataToBeReceived[16]_i_9_n_0\
    );
\countDataToBeReceived[24]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(31),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(31),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_2_n_0\
    );
\countDataToBeReceived[24]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(30),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(30),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_3_n_0\
    );
\countDataToBeReceived[24]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(29),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(29),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_4_n_0\
    );
\countDataToBeReceived[24]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(28),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(28),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_5_n_0\
    );
\countDataToBeReceived[24]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(27),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(27),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_6_n_0\
    );
\countDataToBeReceived[24]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(26),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(26),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_7_n_0\
    );
\countDataToBeReceived[24]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(25),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(25),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_8_n_0\
    );
\countDataToBeReceived[24]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(24),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(24),
      I3 => reset_cmd,
      O => \countDataToBeReceived[24]_i_9_n_0\
    );
\countDataToBeReceived[32]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(39),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(39),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_2_n_0\
    );
\countDataToBeReceived[32]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(38),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(38),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_3_n_0\
    );
\countDataToBeReceived[32]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(37),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(37),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_4_n_0\
    );
\countDataToBeReceived[32]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(36),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(36),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_5_n_0\
    );
\countDataToBeReceived[32]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(35),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(35),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_6_n_0\
    );
\countDataToBeReceived[32]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(34),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(34),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_7_n_0\
    );
\countDataToBeReceived[32]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(33),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(33),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_8_n_0\
    );
\countDataToBeReceived[32]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(32),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(32),
      I3 => reset_cmd,
      O => \countDataToBeReceived[32]_i_9_n_0\
    );
\countDataToBeReceived[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(15),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(15),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_2_n_0\
    );
\countDataToBeReceived[8]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(14),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(14),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_3_n_0\
    );
\countDataToBeReceived[8]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(13),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(13),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_4_n_0\
    );
\countDataToBeReceived[8]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(12),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(12),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_5_n_0\
    );
\countDataToBeReceived[8]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(11),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(11),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_6_n_0\
    );
\countDataToBeReceived[8]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(10),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(10),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_7_n_0\
    );
\countDataToBeReceived[8]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(9),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(9),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_8_n_0\
    );
\countDataToBeReceived[8]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeReceived_reg(8),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countDataToBeReceived0(8),
      I3 => reset_cmd,
      O => \countDataToBeReceived[8]_i_9_n_0\
    );
\countDataToBeReceived_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_15\,
      Q => countDataToBeReceived_reg(0),
      R => '0'
    );
\countDataToBeReceived_reg[0]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[0]_i_1_n_0\,
      CO(6) => \countDataToBeReceived_reg[0]_i_1_n_1\,
      CO(5) => \countDataToBeReceived_reg[0]_i_1_n_2\,
      CO(4) => \countDataToBeReceived_reg[0]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[0]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[0]_i_1_n_5\,
      CO(1) => \countDataToBeReceived_reg[0]_i_1_n_6\,
      CO(0) => \countDataToBeReceived_reg[0]_i_1_n_7\,
      DI(7 downto 1) => B"0000000",
      DI(0) => \countDataToBeReceived[0]_i_2_n_0\,
      O(7) => \countDataToBeReceived_reg[0]_i_1_n_8\,
      O(6) => \countDataToBeReceived_reg[0]_i_1_n_9\,
      O(5) => \countDataToBeReceived_reg[0]_i_1_n_10\,
      O(4) => \countDataToBeReceived_reg[0]_i_1_n_11\,
      O(3) => \countDataToBeReceived_reg[0]_i_1_n_12\,
      O(2) => \countDataToBeReceived_reg[0]_i_1_n_13\,
      O(1) => \countDataToBeReceived_reg[0]_i_1_n_14\,
      O(0) => \countDataToBeReceived_reg[0]_i_1_n_15\,
      S(7) => \countDataToBeReceived[0]_i_3_n_0\,
      S(6) => \countDataToBeReceived[0]_i_4_n_0\,
      S(5) => \countDataToBeReceived[0]_i_5_n_0\,
      S(4) => \countDataToBeReceived[0]_i_6_n_0\,
      S(3) => \countDataToBeReceived[0]_i_7_n_0\,
      S(2) => \countDataToBeReceived[0]_i_8_n_0\,
      S(1) => \countDataToBeReceived[0]_i_9_n_0\,
      S(0) => \countDataToBeReceived[0]_i_10_n_0\
    );
\countDataToBeReceived_reg[0]_i_11\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => countDataToBeReceived_reg(0),
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[0]_i_11_n_0\,
      CO(6) => \countDataToBeReceived_reg[0]_i_11_n_1\,
      CO(5) => \countDataToBeReceived_reg[0]_i_11_n_2\,
      CO(4) => \countDataToBeReceived_reg[0]_i_11_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[0]_i_11_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[0]_i_11_n_5\,
      CO(1) => \countDataToBeReceived_reg[0]_i_11_n_6\,
      CO(0) => \countDataToBeReceived_reg[0]_i_11_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataToBeReceived0(8 downto 1),
      S(7 downto 0) => countDataToBeReceived_reg(8 downto 1)
    );
\countDataToBeReceived_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_13\,
      Q => countDataToBeReceived_reg(10),
      R => '0'
    );
\countDataToBeReceived_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_12\,
      Q => countDataToBeReceived_reg(11),
      R => '0'
    );
\countDataToBeReceived_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_11\,
      Q => countDataToBeReceived_reg(12),
      R => '0'
    );
\countDataToBeReceived_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_10\,
      Q => countDataToBeReceived_reg(13),
      R => '0'
    );
\countDataToBeReceived_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_9\,
      Q => countDataToBeReceived_reg(14),
      R => '0'
    );
\countDataToBeReceived_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_8\,
      Q => countDataToBeReceived_reg(15),
      R => '0'
    );
\countDataToBeReceived_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_15\,
      Q => countDataToBeReceived_reg(16),
      R => '0'
    );
\countDataToBeReceived_reg[16]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[8]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[16]_i_1_n_0\,
      CO(6) => \countDataToBeReceived_reg[16]_i_1_n_1\,
      CO(5) => \countDataToBeReceived_reg[16]_i_1_n_2\,
      CO(4) => \countDataToBeReceived_reg[16]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[16]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[16]_i_1_n_5\,
      CO(1) => \countDataToBeReceived_reg[16]_i_1_n_6\,
      CO(0) => \countDataToBeReceived_reg[16]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataToBeReceived_reg[16]_i_1_n_8\,
      O(6) => \countDataToBeReceived_reg[16]_i_1_n_9\,
      O(5) => \countDataToBeReceived_reg[16]_i_1_n_10\,
      O(4) => \countDataToBeReceived_reg[16]_i_1_n_11\,
      O(3) => \countDataToBeReceived_reg[16]_i_1_n_12\,
      O(2) => \countDataToBeReceived_reg[16]_i_1_n_13\,
      O(1) => \countDataToBeReceived_reg[16]_i_1_n_14\,
      O(0) => \countDataToBeReceived_reg[16]_i_1_n_15\,
      S(7) => \countDataToBeReceived[16]_i_2_n_0\,
      S(6) => \countDataToBeReceived[16]_i_3_n_0\,
      S(5) => \countDataToBeReceived[16]_i_4_n_0\,
      S(4) => \countDataToBeReceived[16]_i_5_n_0\,
      S(3) => \countDataToBeReceived[16]_i_6_n_0\,
      S(2) => \countDataToBeReceived[16]_i_7_n_0\,
      S(1) => \countDataToBeReceived[16]_i_8_n_0\,
      S(0) => \countDataToBeReceived[16]_i_9_n_0\
    );
\countDataToBeReceived_reg[16]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[8]_i_10_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[16]_i_10_n_0\,
      CO(6) => \countDataToBeReceived_reg[16]_i_10_n_1\,
      CO(5) => \countDataToBeReceived_reg[16]_i_10_n_2\,
      CO(4) => \countDataToBeReceived_reg[16]_i_10_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[16]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[16]_i_10_n_5\,
      CO(1) => \countDataToBeReceived_reg[16]_i_10_n_6\,
      CO(0) => \countDataToBeReceived_reg[16]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataToBeReceived0(24 downto 17),
      S(7 downto 0) => countDataToBeReceived_reg(24 downto 17)
    );
\countDataToBeReceived_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_14\,
      Q => countDataToBeReceived_reg(17),
      R => '0'
    );
\countDataToBeReceived_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_13\,
      Q => countDataToBeReceived_reg(18),
      R => '0'
    );
\countDataToBeReceived_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_12\,
      Q => countDataToBeReceived_reg(19),
      R => '0'
    );
\countDataToBeReceived_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_14\,
      Q => countDataToBeReceived_reg(1),
      R => '0'
    );
\countDataToBeReceived_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_11\,
      Q => countDataToBeReceived_reg(20),
      R => '0'
    );
\countDataToBeReceived_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_10\,
      Q => countDataToBeReceived_reg(21),
      R => '0'
    );
\countDataToBeReceived_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_9\,
      Q => countDataToBeReceived_reg(22),
      R => '0'
    );
\countDataToBeReceived_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[16]_i_1_n_8\,
      Q => countDataToBeReceived_reg(23),
      R => '0'
    );
\countDataToBeReceived_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_15\,
      Q => countDataToBeReceived_reg(24),
      R => '0'
    );
\countDataToBeReceived_reg[24]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[16]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[24]_i_1_n_0\,
      CO(6) => \countDataToBeReceived_reg[24]_i_1_n_1\,
      CO(5) => \countDataToBeReceived_reg[24]_i_1_n_2\,
      CO(4) => \countDataToBeReceived_reg[24]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[24]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[24]_i_1_n_5\,
      CO(1) => \countDataToBeReceived_reg[24]_i_1_n_6\,
      CO(0) => \countDataToBeReceived_reg[24]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataToBeReceived_reg[24]_i_1_n_8\,
      O(6) => \countDataToBeReceived_reg[24]_i_1_n_9\,
      O(5) => \countDataToBeReceived_reg[24]_i_1_n_10\,
      O(4) => \countDataToBeReceived_reg[24]_i_1_n_11\,
      O(3) => \countDataToBeReceived_reg[24]_i_1_n_12\,
      O(2) => \countDataToBeReceived_reg[24]_i_1_n_13\,
      O(1) => \countDataToBeReceived_reg[24]_i_1_n_14\,
      O(0) => \countDataToBeReceived_reg[24]_i_1_n_15\,
      S(7) => \countDataToBeReceived[24]_i_2_n_0\,
      S(6) => \countDataToBeReceived[24]_i_3_n_0\,
      S(5) => \countDataToBeReceived[24]_i_4_n_0\,
      S(4) => \countDataToBeReceived[24]_i_5_n_0\,
      S(3) => \countDataToBeReceived[24]_i_6_n_0\,
      S(2) => \countDataToBeReceived[24]_i_7_n_0\,
      S(1) => \countDataToBeReceived[24]_i_8_n_0\,
      S(0) => \countDataToBeReceived[24]_i_9_n_0\
    );
\countDataToBeReceived_reg[24]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[16]_i_10_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[24]_i_10_n_0\,
      CO(6) => \countDataToBeReceived_reg[24]_i_10_n_1\,
      CO(5) => \countDataToBeReceived_reg[24]_i_10_n_2\,
      CO(4) => \countDataToBeReceived_reg[24]_i_10_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[24]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[24]_i_10_n_5\,
      CO(1) => \countDataToBeReceived_reg[24]_i_10_n_6\,
      CO(0) => \countDataToBeReceived_reg[24]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataToBeReceived0(32 downto 25),
      S(7 downto 0) => countDataToBeReceived_reg(32 downto 25)
    );
\countDataToBeReceived_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_14\,
      Q => countDataToBeReceived_reg(25),
      R => '0'
    );
\countDataToBeReceived_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_13\,
      Q => countDataToBeReceived_reg(26),
      R => '0'
    );
\countDataToBeReceived_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_12\,
      Q => countDataToBeReceived_reg(27),
      R => '0'
    );
\countDataToBeReceived_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_11\,
      Q => countDataToBeReceived_reg(28),
      R => '0'
    );
\countDataToBeReceived_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_10\,
      Q => countDataToBeReceived_reg(29),
      R => '0'
    );
\countDataToBeReceived_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_13\,
      Q => countDataToBeReceived_reg(2),
      R => '0'
    );
\countDataToBeReceived_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_9\,
      Q => countDataToBeReceived_reg(30),
      R => '0'
    );
\countDataToBeReceived_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[24]_i_1_n_8\,
      Q => countDataToBeReceived_reg(31),
      R => '0'
    );
\countDataToBeReceived_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_15\,
      Q => countDataToBeReceived_reg(32),
      R => '0'
    );
\countDataToBeReceived_reg[32]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[24]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countDataToBeReceived_reg[32]_i_1_CO_UNCONNECTED\(7),
      CO(6) => \countDataToBeReceived_reg[32]_i_1_n_1\,
      CO(5) => \countDataToBeReceived_reg[32]_i_1_n_2\,
      CO(4) => \countDataToBeReceived_reg[32]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[32]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[32]_i_1_n_5\,
      CO(1) => \countDataToBeReceived_reg[32]_i_1_n_6\,
      CO(0) => \countDataToBeReceived_reg[32]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataToBeReceived_reg[32]_i_1_n_8\,
      O(6) => \countDataToBeReceived_reg[32]_i_1_n_9\,
      O(5) => \countDataToBeReceived_reg[32]_i_1_n_10\,
      O(4) => \countDataToBeReceived_reg[32]_i_1_n_11\,
      O(3) => \countDataToBeReceived_reg[32]_i_1_n_12\,
      O(2) => \countDataToBeReceived_reg[32]_i_1_n_13\,
      O(1) => \countDataToBeReceived_reg[32]_i_1_n_14\,
      O(0) => \countDataToBeReceived_reg[32]_i_1_n_15\,
      S(7) => \countDataToBeReceived[32]_i_2_n_0\,
      S(6) => \countDataToBeReceived[32]_i_3_n_0\,
      S(5) => \countDataToBeReceived[32]_i_4_n_0\,
      S(4) => \countDataToBeReceived[32]_i_5_n_0\,
      S(3) => \countDataToBeReceived[32]_i_6_n_0\,
      S(2) => \countDataToBeReceived[32]_i_7_n_0\,
      S(1) => \countDataToBeReceived[32]_i_8_n_0\,
      S(0) => \countDataToBeReceived[32]_i_9_n_0\
    );
\countDataToBeReceived_reg[32]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[24]_i_10_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countDataToBeReceived_reg[32]_i_10_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \countDataToBeReceived_reg[32]_i_10_n_2\,
      CO(4) => \countDataToBeReceived_reg[32]_i_10_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[32]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[32]_i_10_n_5\,
      CO(1) => \countDataToBeReceived_reg[32]_i_10_n_6\,
      CO(0) => \countDataToBeReceived_reg[32]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_countDataToBeReceived_reg[32]_i_10_O_UNCONNECTED\(7),
      O(6 downto 0) => countDataToBeReceived0(39 downto 33),
      S(7) => '0',
      S(6 downto 0) => countDataToBeReceived_reg(39 downto 33)
    );
\countDataToBeReceived_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_14\,
      Q => countDataToBeReceived_reg(33),
      R => '0'
    );
\countDataToBeReceived_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_13\,
      Q => countDataToBeReceived_reg(34),
      R => '0'
    );
\countDataToBeReceived_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_12\,
      Q => countDataToBeReceived_reg(35),
      R => '0'
    );
\countDataToBeReceived_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_11\,
      Q => countDataToBeReceived_reg(36),
      R => '0'
    );
\countDataToBeReceived_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_10\,
      Q => countDataToBeReceived_reg(37),
      R => '0'
    );
\countDataToBeReceived_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_9\,
      Q => countDataToBeReceived_reg(38),
      R => '0'
    );
\countDataToBeReceived_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[32]_i_1_n_8\,
      Q => countDataToBeReceived_reg(39),
      R => '0'
    );
\countDataToBeReceived_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_12\,
      Q => countDataToBeReceived_reg(3),
      R => '0'
    );
\countDataToBeReceived_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_11\,
      Q => countDataToBeReceived_reg(4),
      R => '0'
    );
\countDataToBeReceived_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_10\,
      Q => countDataToBeReceived_reg(5),
      R => '0'
    );
\countDataToBeReceived_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_9\,
      Q => countDataToBeReceived_reg(6),
      R => '0'
    );
\countDataToBeReceived_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[0]_i_1_n_8\,
      Q => countDataToBeReceived_reg(7),
      R => '0'
    );
\countDataToBeReceived_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_15\,
      Q => countDataToBeReceived_reg(8),
      R => '0'
    );
\countDataToBeReceived_reg[8]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[0]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[8]_i_1_n_0\,
      CO(6) => \countDataToBeReceived_reg[8]_i_1_n_1\,
      CO(5) => \countDataToBeReceived_reg[8]_i_1_n_2\,
      CO(4) => \countDataToBeReceived_reg[8]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[8]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[8]_i_1_n_5\,
      CO(1) => \countDataToBeReceived_reg[8]_i_1_n_6\,
      CO(0) => \countDataToBeReceived_reg[8]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataToBeReceived_reg[8]_i_1_n_8\,
      O(6) => \countDataToBeReceived_reg[8]_i_1_n_9\,
      O(5) => \countDataToBeReceived_reg[8]_i_1_n_10\,
      O(4) => \countDataToBeReceived_reg[8]_i_1_n_11\,
      O(3) => \countDataToBeReceived_reg[8]_i_1_n_12\,
      O(2) => \countDataToBeReceived_reg[8]_i_1_n_13\,
      O(1) => \countDataToBeReceived_reg[8]_i_1_n_14\,
      O(0) => \countDataToBeReceived_reg[8]_i_1_n_15\,
      S(7) => \countDataToBeReceived[8]_i_2_n_0\,
      S(6) => \countDataToBeReceived[8]_i_3_n_0\,
      S(5) => \countDataToBeReceived[8]_i_4_n_0\,
      S(4) => \countDataToBeReceived[8]_i_5_n_0\,
      S(3) => \countDataToBeReceived[8]_i_6_n_0\,
      S(2) => \countDataToBeReceived[8]_i_7_n_0\,
      S(1) => \countDataToBeReceived[8]_i_8_n_0\,
      S(0) => \countDataToBeReceived[8]_i_9_n_0\
    );
\countDataToBeReceived_reg[8]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeReceived_reg[0]_i_11_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeReceived_reg[8]_i_10_n_0\,
      CO(6) => \countDataToBeReceived_reg[8]_i_10_n_1\,
      CO(5) => \countDataToBeReceived_reg[8]_i_10_n_2\,
      CO(4) => \countDataToBeReceived_reg[8]_i_10_n_3\,
      CO(3) => \NLW_countDataToBeReceived_reg[8]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeReceived_reg[8]_i_10_n_5\,
      CO(1) => \countDataToBeReceived_reg[8]_i_10_n_6\,
      CO(0) => \countDataToBeReceived_reg[8]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataToBeReceived0(16 downto 9),
      S(7 downto 0) => countDataToBeReceived_reg(16 downto 9)
    );
\countDataToBeReceived_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countDataToBeReceived_reg[8]_i_1_n_14\,
      Q => countDataToBeReceived_reg(9),
      R => '0'
    );
\countDataToBeSent[0]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(7),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(7),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(7),
      O => \countDataToBeSent[0]_i_10_n_0\
    );
\countDataToBeSent[0]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(6),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(6),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(6),
      O => \countDataToBeSent[0]_i_11_n_0\
    );
\countDataToBeSent[0]_i_12\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(5),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(5),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(5),
      O => \countDataToBeSent[0]_i_12_n_0\
    );
\countDataToBeSent[0]_i_13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(4),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(4),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(4),
      O => \countDataToBeSent[0]_i_13_n_0\
    );
\countDataToBeSent[0]_i_14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(3),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(3),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(3),
      O => \countDataToBeSent[0]_i_14_n_0\
    );
\countDataToBeSent[0]_i_15\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(2),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(2),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(2),
      O => \countDataToBeSent[0]_i_15_n_0\
    );
\countDataToBeSent[0]_i_16\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(1),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(1),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(1),
      O => \countDataToBeSent[0]_i_16_n_0\
    );
\countDataToBeSent[0]_i_17\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(0),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(0),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(0),
      O => \countDataToBeSent[0]_i_17_n_0\
    );
\countDataToBeSent[0]_i_19\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(7),
      I1 => write_burst_size(7),
      O => \countDataToBeSent[0]_i_19_n_0\
    );
\countDataToBeSent[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(7),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_2_n_0\
    );
\countDataToBeSent[0]_i_20\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(6),
      I1 => write_burst_size(6),
      O => \countDataToBeSent[0]_i_20_n_0\
    );
\countDataToBeSent[0]_i_21\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(5),
      I1 => write_burst_size(5),
      O => \countDataToBeSent[0]_i_21_n_0\
    );
\countDataToBeSent[0]_i_22\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(4),
      I1 => write_burst_size(4),
      O => \countDataToBeSent[0]_i_22_n_0\
    );
\countDataToBeSent[0]_i_23\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(3),
      I1 => write_burst_size(3),
      O => \countDataToBeSent[0]_i_23_n_0\
    );
\countDataToBeSent[0]_i_24\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(2),
      I1 => write_burst_size(2),
      O => \countDataToBeSent[0]_i_24_n_0\
    );
\countDataToBeSent[0]_i_25\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(1),
      I1 => write_burst_size(1),
      O => \countDataToBeSent[0]_i_25_n_0\
    );
\countDataToBeSent[0]_i_26\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(0),
      I1 => write_burst_size(0),
      O => \countDataToBeSent[0]_i_26_n_0\
    );
\countDataToBeSent[0]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(6),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_3_n_0\
    );
\countDataToBeSent[0]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(5),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_4_n_0\
    );
\countDataToBeSent[0]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(4),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_5_n_0\
    );
\countDataToBeSent[0]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(3),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_6_n_0\
    );
\countDataToBeSent[0]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(2),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_7_n_0\
    );
\countDataToBeSent[0]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(1),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_8_n_0\
    );
\countDataToBeSent[0]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(0),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[0]_i_9_n_0\
    );
\countDataToBeSent[16]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(23),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(23),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(23),
      O => \countDataToBeSent[16]_i_10_n_0\
    );
\countDataToBeSent[16]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(22),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(22),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(22),
      O => \countDataToBeSent[16]_i_11_n_0\
    );
\countDataToBeSent[16]_i_12\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(21),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(21),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(21),
      O => \countDataToBeSent[16]_i_12_n_0\
    );
\countDataToBeSent[16]_i_13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(20),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(20),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(20),
      O => \countDataToBeSent[16]_i_13_n_0\
    );
\countDataToBeSent[16]_i_14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(19),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(19),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(19),
      O => \countDataToBeSent[16]_i_14_n_0\
    );
\countDataToBeSent[16]_i_15\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(18),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(18),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(18),
      O => \countDataToBeSent[16]_i_15_n_0\
    );
\countDataToBeSent[16]_i_16\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(17),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(17),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(17),
      O => \countDataToBeSent[16]_i_16_n_0\
    );
\countDataToBeSent[16]_i_17\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(16),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(16),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(16),
      O => \countDataToBeSent[16]_i_17_n_0\
    );
\countDataToBeSent[16]_i_19\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(23),
      I1 => write_burst_size(23),
      O => \countDataToBeSent[16]_i_19_n_0\
    );
\countDataToBeSent[16]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(23),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_2_n_0\
    );
\countDataToBeSent[16]_i_20\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(22),
      I1 => write_burst_size(22),
      O => \countDataToBeSent[16]_i_20_n_0\
    );
\countDataToBeSent[16]_i_21\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(21),
      I1 => write_burst_size(21),
      O => \countDataToBeSent[16]_i_21_n_0\
    );
\countDataToBeSent[16]_i_22\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(20),
      I1 => write_burst_size(20),
      O => \countDataToBeSent[16]_i_22_n_0\
    );
\countDataToBeSent[16]_i_23\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(19),
      I1 => write_burst_size(19),
      O => \countDataToBeSent[16]_i_23_n_0\
    );
\countDataToBeSent[16]_i_24\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(18),
      I1 => write_burst_size(18),
      O => \countDataToBeSent[16]_i_24_n_0\
    );
\countDataToBeSent[16]_i_25\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(17),
      I1 => write_burst_size(17),
      O => \countDataToBeSent[16]_i_25_n_0\
    );
\countDataToBeSent[16]_i_26\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(16),
      I1 => write_burst_size(16),
      O => \countDataToBeSent[16]_i_26_n_0\
    );
\countDataToBeSent[16]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(22),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_3_n_0\
    );
\countDataToBeSent[16]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(21),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_4_n_0\
    );
\countDataToBeSent[16]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(20),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_5_n_0\
    );
\countDataToBeSent[16]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(19),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_6_n_0\
    );
\countDataToBeSent[16]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(18),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_7_n_0\
    );
\countDataToBeSent[16]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(17),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_8_n_0\
    );
\countDataToBeSent[16]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(16),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[16]_i_9_n_0\
    );
\countDataToBeSent[24]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(31),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(31),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(31),
      O => \countDataToBeSent[24]_i_10_n_0\
    );
\countDataToBeSent[24]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(30),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(30),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(30),
      O => \countDataToBeSent[24]_i_11_n_0\
    );
\countDataToBeSent[24]_i_12\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(29),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(29),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(29),
      O => \countDataToBeSent[24]_i_12_n_0\
    );
\countDataToBeSent[24]_i_13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(28),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(28),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(28),
      O => \countDataToBeSent[24]_i_13_n_0\
    );
\countDataToBeSent[24]_i_14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(27),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(27),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(27),
      O => \countDataToBeSent[24]_i_14_n_0\
    );
\countDataToBeSent[24]_i_15\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(26),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(26),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(26),
      O => \countDataToBeSent[24]_i_15_n_0\
    );
\countDataToBeSent[24]_i_16\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(25),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(25),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(25),
      O => \countDataToBeSent[24]_i_16_n_0\
    );
\countDataToBeSent[24]_i_17\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(24),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(24),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(24),
      O => \countDataToBeSent[24]_i_17_n_0\
    );
\countDataToBeSent[24]_i_19\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(31),
      I1 => write_burst_size(31),
      O => \countDataToBeSent[24]_i_19_n_0\
    );
\countDataToBeSent[24]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(31),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_2_n_0\
    );
\countDataToBeSent[24]_i_20\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(30),
      I1 => write_burst_size(30),
      O => \countDataToBeSent[24]_i_20_n_0\
    );
\countDataToBeSent[24]_i_21\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(29),
      I1 => write_burst_size(29),
      O => \countDataToBeSent[24]_i_21_n_0\
    );
\countDataToBeSent[24]_i_22\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(28),
      I1 => write_burst_size(28),
      O => \countDataToBeSent[24]_i_22_n_0\
    );
\countDataToBeSent[24]_i_23\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(27),
      I1 => write_burst_size(27),
      O => \countDataToBeSent[24]_i_23_n_0\
    );
\countDataToBeSent[24]_i_24\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(26),
      I1 => write_burst_size(26),
      O => \countDataToBeSent[24]_i_24_n_0\
    );
\countDataToBeSent[24]_i_25\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(25),
      I1 => write_burst_size(25),
      O => \countDataToBeSent[24]_i_25_n_0\
    );
\countDataToBeSent[24]_i_26\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(24),
      I1 => write_burst_size(24),
      O => \countDataToBeSent[24]_i_26_n_0\
    );
\countDataToBeSent[24]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(30),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_3_n_0\
    );
\countDataToBeSent[24]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(29),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_4_n_0\
    );
\countDataToBeSent[24]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(28),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_5_n_0\
    );
\countDataToBeSent[24]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(27),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_6_n_0\
    );
\countDataToBeSent[24]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(26),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_7_n_0\
    );
\countDataToBeSent[24]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(25),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_8_n_0\
    );
\countDataToBeSent[24]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(24),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[24]_i_9_n_0\
    );
\countDataToBeSent[32]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(39),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(39),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_2_n_0\
    );
\countDataToBeSent[32]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(38),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(38),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_3_n_0\
    );
\countDataToBeSent[32]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(37),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(37),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_4_n_0\
    );
\countDataToBeSent[32]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(36),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(36),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_5_n_0\
    );
\countDataToBeSent[32]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(35),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(35),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_6_n_0\
    );
\countDataToBeSent[32]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(34),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(34),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_7_n_0\
    );
\countDataToBeSent[32]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(33),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(33),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_8_n_0\
    );
\countDataToBeSent[32]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countDataToBeSent_reg(32),
      I1 => \countAddrSent[39]_i_5_n_0\,
      I2 => countDataToBeSent0(32),
      I3 => reset_cmd,
      O => \countDataToBeSent[32]_i_9_n_0\
    );
\countDataToBeSent[8]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(15),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(15),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(15),
      O => \countDataToBeSent[8]_i_10_n_0\
    );
\countDataToBeSent[8]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(14),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(14),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(14),
      O => \countDataToBeSent[8]_i_11_n_0\
    );
\countDataToBeSent[8]_i_12\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(13),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(13),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(13),
      O => \countDataToBeSent[8]_i_12_n_0\
    );
\countDataToBeSent[8]_i_13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(12),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(12),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(12),
      O => \countDataToBeSent[8]_i_13_n_0\
    );
\countDataToBeSent[8]_i_14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(11),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(11),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(11),
      O => \countDataToBeSent[8]_i_14_n_0\
    );
\countDataToBeSent[8]_i_15\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(10),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(10),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(10),
      O => \countDataToBeSent[8]_i_15_n_0\
    );
\countDataToBeSent[8]_i_16\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(9),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(9),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(9),
      O => \countDataToBeSent[8]_i_16_n_0\
    );
\countDataToBeSent[8]_i_17\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5530AA30"
    )
        port map (
      I0 => write_burst_size(8),
      I1 => reset_cmd,
      I2 => countDataToBeSent0(8),
      I3 => \countAddrSent[39]_i_5_n_0\,
      I4 => countDataToBeSent_reg(8),
      O => \countDataToBeSent[8]_i_17_n_0\
    );
\countDataToBeSent[8]_i_19\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(15),
      I1 => write_burst_size(15),
      O => \countDataToBeSent[8]_i_19_n_0\
    );
\countDataToBeSent[8]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(15),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_2_n_0\
    );
\countDataToBeSent[8]_i_20\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(14),
      I1 => write_burst_size(14),
      O => \countDataToBeSent[8]_i_20_n_0\
    );
\countDataToBeSent[8]_i_21\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(13),
      I1 => write_burst_size(13),
      O => \countDataToBeSent[8]_i_21_n_0\
    );
\countDataToBeSent[8]_i_22\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(12),
      I1 => write_burst_size(12),
      O => \countDataToBeSent[8]_i_22_n_0\
    );
\countDataToBeSent[8]_i_23\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(11),
      I1 => write_burst_size(11),
      O => \countDataToBeSent[8]_i_23_n_0\
    );
\countDataToBeSent[8]_i_24\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(10),
      I1 => write_burst_size(10),
      O => \countDataToBeSent[8]_i_24_n_0\
    );
\countDataToBeSent[8]_i_25\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(9),
      I1 => write_burst_size(9),
      O => \countDataToBeSent[8]_i_25_n_0\
    );
\countDataToBeSent[8]_i_26\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countDataToBeSent_reg(8),
      I1 => write_burst_size(8),
      O => \countDataToBeSent[8]_i_26_n_0\
    );
\countDataToBeSent[8]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(14),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_3_n_0\
    );
\countDataToBeSent[8]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(13),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_4_n_0\
    );
\countDataToBeSent[8]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(12),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_5_n_0\
    );
\countDataToBeSent[8]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(11),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_6_n_0\
    );
\countDataToBeSent[8]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(10),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_7_n_0\
    );
\countDataToBeSent[8]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(9),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_8_n_0\
    );
\countDataToBeSent[8]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => write_burst_size(8),
      I1 => \countAddrSent[39]_i_5_n_0\,
      O => \countDataToBeSent[8]_i_9_n_0\
    );
\countDataToBeSent_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_15\,
      Q => countDataToBeSent_reg(0),
      R => '0'
    );
\countDataToBeSent_reg[0]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[0]_i_1_n_0\,
      CO(6) => \countDataToBeSent_reg[0]_i_1_n_1\,
      CO(5) => \countDataToBeSent_reg[0]_i_1_n_2\,
      CO(4) => \countDataToBeSent_reg[0]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[0]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[0]_i_1_n_5\,
      CO(1) => \countDataToBeSent_reg[0]_i_1_n_6\,
      CO(0) => \countDataToBeSent_reg[0]_i_1_n_7\,
      DI(7) => \countDataToBeSent[0]_i_2_n_0\,
      DI(6) => \countDataToBeSent[0]_i_3_n_0\,
      DI(5) => \countDataToBeSent[0]_i_4_n_0\,
      DI(4) => \countDataToBeSent[0]_i_5_n_0\,
      DI(3) => \countDataToBeSent[0]_i_6_n_0\,
      DI(2) => \countDataToBeSent[0]_i_7_n_0\,
      DI(1) => \countDataToBeSent[0]_i_8_n_0\,
      DI(0) => \countDataToBeSent[0]_i_9_n_0\,
      O(7) => \countDataToBeSent_reg[0]_i_1_n_8\,
      O(6) => \countDataToBeSent_reg[0]_i_1_n_9\,
      O(5) => \countDataToBeSent_reg[0]_i_1_n_10\,
      O(4) => \countDataToBeSent_reg[0]_i_1_n_11\,
      O(3) => \countDataToBeSent_reg[0]_i_1_n_12\,
      O(2) => \countDataToBeSent_reg[0]_i_1_n_13\,
      O(1) => \countDataToBeSent_reg[0]_i_1_n_14\,
      O(0) => \countDataToBeSent_reg[0]_i_1_n_15\,
      S(7) => \countDataToBeSent[0]_i_10_n_0\,
      S(6) => \countDataToBeSent[0]_i_11_n_0\,
      S(5) => \countDataToBeSent[0]_i_12_n_0\,
      S(4) => \countDataToBeSent[0]_i_13_n_0\,
      S(3) => \countDataToBeSent[0]_i_14_n_0\,
      S(2) => \countDataToBeSent[0]_i_15_n_0\,
      S(1) => \countDataToBeSent[0]_i_16_n_0\,
      S(0) => \countDataToBeSent[0]_i_17_n_0\
    );
\countDataToBeSent_reg[0]_i_18\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[0]_i_18_n_0\,
      CO(6) => \countDataToBeSent_reg[0]_i_18_n_1\,
      CO(5) => \countDataToBeSent_reg[0]_i_18_n_2\,
      CO(4) => \countDataToBeSent_reg[0]_i_18_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[0]_i_18_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[0]_i_18_n_5\,
      CO(1) => \countDataToBeSent_reg[0]_i_18_n_6\,
      CO(0) => \countDataToBeSent_reg[0]_i_18_n_7\,
      DI(7 downto 0) => countDataToBeSent_reg(7 downto 0),
      O(7 downto 0) => countDataToBeSent0(7 downto 0),
      S(7) => \countDataToBeSent[0]_i_19_n_0\,
      S(6) => \countDataToBeSent[0]_i_20_n_0\,
      S(5) => \countDataToBeSent[0]_i_21_n_0\,
      S(4) => \countDataToBeSent[0]_i_22_n_0\,
      S(3) => \countDataToBeSent[0]_i_23_n_0\,
      S(2) => \countDataToBeSent[0]_i_24_n_0\,
      S(1) => \countDataToBeSent[0]_i_25_n_0\,
      S(0) => \countDataToBeSent[0]_i_26_n_0\
    );
\countDataToBeSent_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_13\,
      Q => countDataToBeSent_reg(10),
      R => '0'
    );
\countDataToBeSent_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_12\,
      Q => countDataToBeSent_reg(11),
      R => '0'
    );
\countDataToBeSent_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_11\,
      Q => countDataToBeSent_reg(12),
      R => '0'
    );
\countDataToBeSent_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_10\,
      Q => countDataToBeSent_reg(13),
      R => '0'
    );
\countDataToBeSent_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_9\,
      Q => countDataToBeSent_reg(14),
      R => '0'
    );
\countDataToBeSent_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_8\,
      Q => countDataToBeSent_reg(15),
      R => '0'
    );
\countDataToBeSent_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_15\,
      Q => countDataToBeSent_reg(16),
      R => '0'
    );
\countDataToBeSent_reg[16]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[8]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[16]_i_1_n_0\,
      CO(6) => \countDataToBeSent_reg[16]_i_1_n_1\,
      CO(5) => \countDataToBeSent_reg[16]_i_1_n_2\,
      CO(4) => \countDataToBeSent_reg[16]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[16]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[16]_i_1_n_5\,
      CO(1) => \countDataToBeSent_reg[16]_i_1_n_6\,
      CO(0) => \countDataToBeSent_reg[16]_i_1_n_7\,
      DI(7) => \countDataToBeSent[16]_i_2_n_0\,
      DI(6) => \countDataToBeSent[16]_i_3_n_0\,
      DI(5) => \countDataToBeSent[16]_i_4_n_0\,
      DI(4) => \countDataToBeSent[16]_i_5_n_0\,
      DI(3) => \countDataToBeSent[16]_i_6_n_0\,
      DI(2) => \countDataToBeSent[16]_i_7_n_0\,
      DI(1) => \countDataToBeSent[16]_i_8_n_0\,
      DI(0) => \countDataToBeSent[16]_i_9_n_0\,
      O(7) => \countDataToBeSent_reg[16]_i_1_n_8\,
      O(6) => \countDataToBeSent_reg[16]_i_1_n_9\,
      O(5) => \countDataToBeSent_reg[16]_i_1_n_10\,
      O(4) => \countDataToBeSent_reg[16]_i_1_n_11\,
      O(3) => \countDataToBeSent_reg[16]_i_1_n_12\,
      O(2) => \countDataToBeSent_reg[16]_i_1_n_13\,
      O(1) => \countDataToBeSent_reg[16]_i_1_n_14\,
      O(0) => \countDataToBeSent_reg[16]_i_1_n_15\,
      S(7) => \countDataToBeSent[16]_i_10_n_0\,
      S(6) => \countDataToBeSent[16]_i_11_n_0\,
      S(5) => \countDataToBeSent[16]_i_12_n_0\,
      S(4) => \countDataToBeSent[16]_i_13_n_0\,
      S(3) => \countDataToBeSent[16]_i_14_n_0\,
      S(2) => \countDataToBeSent[16]_i_15_n_0\,
      S(1) => \countDataToBeSent[16]_i_16_n_0\,
      S(0) => \countDataToBeSent[16]_i_17_n_0\
    );
\countDataToBeSent_reg[16]_i_18\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[8]_i_18_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[16]_i_18_n_0\,
      CO(6) => \countDataToBeSent_reg[16]_i_18_n_1\,
      CO(5) => \countDataToBeSent_reg[16]_i_18_n_2\,
      CO(4) => \countDataToBeSent_reg[16]_i_18_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[16]_i_18_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[16]_i_18_n_5\,
      CO(1) => \countDataToBeSent_reg[16]_i_18_n_6\,
      CO(0) => \countDataToBeSent_reg[16]_i_18_n_7\,
      DI(7 downto 0) => countDataToBeSent_reg(23 downto 16),
      O(7 downto 0) => countDataToBeSent0(23 downto 16),
      S(7) => \countDataToBeSent[16]_i_19_n_0\,
      S(6) => \countDataToBeSent[16]_i_20_n_0\,
      S(5) => \countDataToBeSent[16]_i_21_n_0\,
      S(4) => \countDataToBeSent[16]_i_22_n_0\,
      S(3) => \countDataToBeSent[16]_i_23_n_0\,
      S(2) => \countDataToBeSent[16]_i_24_n_0\,
      S(1) => \countDataToBeSent[16]_i_25_n_0\,
      S(0) => \countDataToBeSent[16]_i_26_n_0\
    );
\countDataToBeSent_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_14\,
      Q => countDataToBeSent_reg(17),
      R => '0'
    );
\countDataToBeSent_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_13\,
      Q => countDataToBeSent_reg(18),
      R => '0'
    );
\countDataToBeSent_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_12\,
      Q => countDataToBeSent_reg(19),
      R => '0'
    );
\countDataToBeSent_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_14\,
      Q => countDataToBeSent_reg(1),
      R => '0'
    );
\countDataToBeSent_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_11\,
      Q => countDataToBeSent_reg(20),
      R => '0'
    );
\countDataToBeSent_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_10\,
      Q => countDataToBeSent_reg(21),
      R => '0'
    );
\countDataToBeSent_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_9\,
      Q => countDataToBeSent_reg(22),
      R => '0'
    );
\countDataToBeSent_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[16]_i_1_n_8\,
      Q => countDataToBeSent_reg(23),
      R => '0'
    );
\countDataToBeSent_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_15\,
      Q => countDataToBeSent_reg(24),
      R => '0'
    );
\countDataToBeSent_reg[24]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[16]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[24]_i_1_n_0\,
      CO(6) => \countDataToBeSent_reg[24]_i_1_n_1\,
      CO(5) => \countDataToBeSent_reg[24]_i_1_n_2\,
      CO(4) => \countDataToBeSent_reg[24]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[24]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[24]_i_1_n_5\,
      CO(1) => \countDataToBeSent_reg[24]_i_1_n_6\,
      CO(0) => \countDataToBeSent_reg[24]_i_1_n_7\,
      DI(7) => \countDataToBeSent[24]_i_2_n_0\,
      DI(6) => \countDataToBeSent[24]_i_3_n_0\,
      DI(5) => \countDataToBeSent[24]_i_4_n_0\,
      DI(4) => \countDataToBeSent[24]_i_5_n_0\,
      DI(3) => \countDataToBeSent[24]_i_6_n_0\,
      DI(2) => \countDataToBeSent[24]_i_7_n_0\,
      DI(1) => \countDataToBeSent[24]_i_8_n_0\,
      DI(0) => \countDataToBeSent[24]_i_9_n_0\,
      O(7) => \countDataToBeSent_reg[24]_i_1_n_8\,
      O(6) => \countDataToBeSent_reg[24]_i_1_n_9\,
      O(5) => \countDataToBeSent_reg[24]_i_1_n_10\,
      O(4) => \countDataToBeSent_reg[24]_i_1_n_11\,
      O(3) => \countDataToBeSent_reg[24]_i_1_n_12\,
      O(2) => \countDataToBeSent_reg[24]_i_1_n_13\,
      O(1) => \countDataToBeSent_reg[24]_i_1_n_14\,
      O(0) => \countDataToBeSent_reg[24]_i_1_n_15\,
      S(7) => \countDataToBeSent[24]_i_10_n_0\,
      S(6) => \countDataToBeSent[24]_i_11_n_0\,
      S(5) => \countDataToBeSent[24]_i_12_n_0\,
      S(4) => \countDataToBeSent[24]_i_13_n_0\,
      S(3) => \countDataToBeSent[24]_i_14_n_0\,
      S(2) => \countDataToBeSent[24]_i_15_n_0\,
      S(1) => \countDataToBeSent[24]_i_16_n_0\,
      S(0) => \countDataToBeSent[24]_i_17_n_0\
    );
\countDataToBeSent_reg[24]_i_18\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[16]_i_18_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[24]_i_18_n_0\,
      CO(6) => \countDataToBeSent_reg[24]_i_18_n_1\,
      CO(5) => \countDataToBeSent_reg[24]_i_18_n_2\,
      CO(4) => \countDataToBeSent_reg[24]_i_18_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[24]_i_18_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[24]_i_18_n_5\,
      CO(1) => \countDataToBeSent_reg[24]_i_18_n_6\,
      CO(0) => \countDataToBeSent_reg[24]_i_18_n_7\,
      DI(7 downto 0) => countDataToBeSent_reg(31 downto 24),
      O(7 downto 0) => countDataToBeSent0(31 downto 24),
      S(7) => \countDataToBeSent[24]_i_19_n_0\,
      S(6) => \countDataToBeSent[24]_i_20_n_0\,
      S(5) => \countDataToBeSent[24]_i_21_n_0\,
      S(4) => \countDataToBeSent[24]_i_22_n_0\,
      S(3) => \countDataToBeSent[24]_i_23_n_0\,
      S(2) => \countDataToBeSent[24]_i_24_n_0\,
      S(1) => \countDataToBeSent[24]_i_25_n_0\,
      S(0) => \countDataToBeSent[24]_i_26_n_0\
    );
\countDataToBeSent_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_14\,
      Q => countDataToBeSent_reg(25),
      R => '0'
    );
\countDataToBeSent_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_13\,
      Q => countDataToBeSent_reg(26),
      R => '0'
    );
\countDataToBeSent_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_12\,
      Q => countDataToBeSent_reg(27),
      R => '0'
    );
\countDataToBeSent_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_11\,
      Q => countDataToBeSent_reg(28),
      R => '0'
    );
\countDataToBeSent_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_10\,
      Q => countDataToBeSent_reg(29),
      R => '0'
    );
\countDataToBeSent_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_13\,
      Q => countDataToBeSent_reg(2),
      R => '0'
    );
\countDataToBeSent_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_9\,
      Q => countDataToBeSent_reg(30),
      R => '0'
    );
\countDataToBeSent_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[24]_i_1_n_8\,
      Q => countDataToBeSent_reg(31),
      R => '0'
    );
\countDataToBeSent_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_15\,
      Q => countDataToBeSent_reg(32),
      R => '0'
    );
\countDataToBeSent_reg[32]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[24]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countDataToBeSent_reg[32]_i_1_CO_UNCONNECTED\(7),
      CO(6) => \countDataToBeSent_reg[32]_i_1_n_1\,
      CO(5) => \countDataToBeSent_reg[32]_i_1_n_2\,
      CO(4) => \countDataToBeSent_reg[32]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[32]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[32]_i_1_n_5\,
      CO(1) => \countDataToBeSent_reg[32]_i_1_n_6\,
      CO(0) => \countDataToBeSent_reg[32]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countDataToBeSent_reg[32]_i_1_n_8\,
      O(6) => \countDataToBeSent_reg[32]_i_1_n_9\,
      O(5) => \countDataToBeSent_reg[32]_i_1_n_10\,
      O(4) => \countDataToBeSent_reg[32]_i_1_n_11\,
      O(3) => \countDataToBeSent_reg[32]_i_1_n_12\,
      O(2) => \countDataToBeSent_reg[32]_i_1_n_13\,
      O(1) => \countDataToBeSent_reg[32]_i_1_n_14\,
      O(0) => \countDataToBeSent_reg[32]_i_1_n_15\,
      S(7) => \countDataToBeSent[32]_i_2_n_0\,
      S(6) => \countDataToBeSent[32]_i_3_n_0\,
      S(5) => \countDataToBeSent[32]_i_4_n_0\,
      S(4) => \countDataToBeSent[32]_i_5_n_0\,
      S(3) => \countDataToBeSent[32]_i_6_n_0\,
      S(2) => \countDataToBeSent[32]_i_7_n_0\,
      S(1) => \countDataToBeSent[32]_i_8_n_0\,
      S(0) => \countDataToBeSent[32]_i_9_n_0\
    );
\countDataToBeSent_reg[32]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[24]_i_18_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countDataToBeSent_reg[32]_i_10_CO_UNCONNECTED\(7),
      CO(6) => \countDataToBeSent_reg[32]_i_10_n_1\,
      CO(5) => \countDataToBeSent_reg[32]_i_10_n_2\,
      CO(4) => \countDataToBeSent_reg[32]_i_10_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[32]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[32]_i_10_n_5\,
      CO(1) => \countDataToBeSent_reg[32]_i_10_n_6\,
      CO(0) => \countDataToBeSent_reg[32]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countDataToBeSent0(39 downto 32),
      S(7 downto 0) => countDataToBeSent_reg(39 downto 32)
    );
\countDataToBeSent_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_14\,
      Q => countDataToBeSent_reg(33),
      R => '0'
    );
\countDataToBeSent_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_13\,
      Q => countDataToBeSent_reg(34),
      R => '0'
    );
\countDataToBeSent_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_12\,
      Q => countDataToBeSent_reg(35),
      R => '0'
    );
\countDataToBeSent_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_11\,
      Q => countDataToBeSent_reg(36),
      R => '0'
    );
\countDataToBeSent_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_10\,
      Q => countDataToBeSent_reg(37),
      R => '0'
    );
\countDataToBeSent_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_9\,
      Q => countDataToBeSent_reg(38),
      R => '0'
    );
\countDataToBeSent_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[32]_i_1_n_8\,
      Q => countDataToBeSent_reg(39),
      R => '0'
    );
\countDataToBeSent_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_12\,
      Q => countDataToBeSent_reg(3),
      R => '0'
    );
\countDataToBeSent_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_11\,
      Q => countDataToBeSent_reg(4),
      R => '0'
    );
\countDataToBeSent_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_10\,
      Q => countDataToBeSent_reg(5),
      R => '0'
    );
\countDataToBeSent_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_9\,
      Q => countDataToBeSent_reg(6),
      R => '0'
    );
\countDataToBeSent_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[0]_i_1_n_8\,
      Q => countDataToBeSent_reg(7),
      R => '0'
    );
\countDataToBeSent_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_15\,
      Q => countDataToBeSent_reg(8),
      R => '0'
    );
\countDataToBeSent_reg[8]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[0]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[8]_i_1_n_0\,
      CO(6) => \countDataToBeSent_reg[8]_i_1_n_1\,
      CO(5) => \countDataToBeSent_reg[8]_i_1_n_2\,
      CO(4) => \countDataToBeSent_reg[8]_i_1_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[8]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[8]_i_1_n_5\,
      CO(1) => \countDataToBeSent_reg[8]_i_1_n_6\,
      CO(0) => \countDataToBeSent_reg[8]_i_1_n_7\,
      DI(7) => \countDataToBeSent[8]_i_2_n_0\,
      DI(6) => \countDataToBeSent[8]_i_3_n_0\,
      DI(5) => \countDataToBeSent[8]_i_4_n_0\,
      DI(4) => \countDataToBeSent[8]_i_5_n_0\,
      DI(3) => \countDataToBeSent[8]_i_6_n_0\,
      DI(2) => \countDataToBeSent[8]_i_7_n_0\,
      DI(1) => \countDataToBeSent[8]_i_8_n_0\,
      DI(0) => \countDataToBeSent[8]_i_9_n_0\,
      O(7) => \countDataToBeSent_reg[8]_i_1_n_8\,
      O(6) => \countDataToBeSent_reg[8]_i_1_n_9\,
      O(5) => \countDataToBeSent_reg[8]_i_1_n_10\,
      O(4) => \countDataToBeSent_reg[8]_i_1_n_11\,
      O(3) => \countDataToBeSent_reg[8]_i_1_n_12\,
      O(2) => \countDataToBeSent_reg[8]_i_1_n_13\,
      O(1) => \countDataToBeSent_reg[8]_i_1_n_14\,
      O(0) => \countDataToBeSent_reg[8]_i_1_n_15\,
      S(7) => \countDataToBeSent[8]_i_10_n_0\,
      S(6) => \countDataToBeSent[8]_i_11_n_0\,
      S(5) => \countDataToBeSent[8]_i_12_n_0\,
      S(4) => \countDataToBeSent[8]_i_13_n_0\,
      S(3) => \countDataToBeSent[8]_i_14_n_0\,
      S(2) => \countDataToBeSent[8]_i_15_n_0\,
      S(1) => \countDataToBeSent[8]_i_16_n_0\,
      S(0) => \countDataToBeSent[8]_i_17_n_0\
    );
\countDataToBeSent_reg[8]_i_18\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countDataToBeSent_reg[0]_i_18_n_0\,
      CI_TOP => '0',
      CO(7) => \countDataToBeSent_reg[8]_i_18_n_0\,
      CO(6) => \countDataToBeSent_reg[8]_i_18_n_1\,
      CO(5) => \countDataToBeSent_reg[8]_i_18_n_2\,
      CO(4) => \countDataToBeSent_reg[8]_i_18_n_3\,
      CO(3) => \NLW_countDataToBeSent_reg[8]_i_18_CO_UNCONNECTED\(3),
      CO(2) => \countDataToBeSent_reg[8]_i_18_n_5\,
      CO(1) => \countDataToBeSent_reg[8]_i_18_n_6\,
      CO(0) => \countDataToBeSent_reg[8]_i_18_n_7\,
      DI(7 downto 0) => countDataToBeSent_reg(15 downto 8),
      O(7 downto 0) => countDataToBeSent0(15 downto 8),
      S(7) => \countDataToBeSent[8]_i_19_n_0\,
      S(6) => \countDataToBeSent[8]_i_20_n_0\,
      S(5) => \countDataToBeSent[8]_i_21_n_0\,
      S(4) => \countDataToBeSent[8]_i_22_n_0\,
      S(3) => \countDataToBeSent[8]_i_23_n_0\,
      S(2) => \countDataToBeSent[8]_i_24_n_0\,
      S(1) => \countDataToBeSent[8]_i_25_n_0\,
      S(0) => \countDataToBeSent[8]_i_26_n_0\
    );
\countDataToBeSent_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \countDataToBeSent_reg[8]_i_1_n_14\,
      Q => countDataToBeSent_reg(9),
      R => '0'
    );
\countReadReqSent[0]_i_10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"31"
    )
        port map (
      I0 => reset_cmd,
      I1 => countReadReqSent_reg(0),
      I2 => \countAddrSent[31]_i_3_n_0\,
      O => \countReadReqSent[0]_i_10_n_0\
    );
\countReadReqSent[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"89"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => countReadReqSent_reg(0),
      I2 => reset_cmd,
      O => \countReadReqSent[0]_i_2_n_0\
    );
\countReadReqSent[0]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(7),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(7),
      I3 => reset_cmd,
      O => \countReadReqSent[0]_i_3_n_0\
    );
\countReadReqSent[0]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(6),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(6),
      I3 => reset_cmd,
      O => \countReadReqSent[0]_i_4_n_0\
    );
\countReadReqSent[0]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(5),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(5),
      I3 => reset_cmd,
      O => \countReadReqSent[0]_i_5_n_0\
    );
\countReadReqSent[0]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(4),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(4),
      I3 => reset_cmd,
      O => \countReadReqSent[0]_i_6_n_0\
    );
\countReadReqSent[0]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(3),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(3),
      I3 => reset_cmd,
      O => \countReadReqSent[0]_i_7_n_0\
    );
\countReadReqSent[0]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(2),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(2),
      I3 => reset_cmd,
      O => \countReadReqSent[0]_i_8_n_0\
    );
\countReadReqSent[0]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(1),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(1),
      I3 => reset_cmd,
      O => \countReadReqSent[0]_i_9_n_0\
    );
\countReadReqSent[16]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(23),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(23),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_2_n_0\
    );
\countReadReqSent[16]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(22),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(22),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_3_n_0\
    );
\countReadReqSent[16]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(21),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(21),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_4_n_0\
    );
\countReadReqSent[16]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(20),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(20),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_5_n_0\
    );
\countReadReqSent[16]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(19),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(19),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_6_n_0\
    );
\countReadReqSent[16]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(18),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(18),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_7_n_0\
    );
\countReadReqSent[16]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(17),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(17),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_8_n_0\
    );
\countReadReqSent[16]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(16),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(16),
      I3 => reset_cmd,
      O => \countReadReqSent[16]_i_9_n_0\
    );
\countReadReqSent[24]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(31),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(31),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_2_n_0\
    );
\countReadReqSent[24]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(30),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(30),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_3_n_0\
    );
\countReadReqSent[24]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(29),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(29),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_4_n_0\
    );
\countReadReqSent[24]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(28),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(28),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_5_n_0\
    );
\countReadReqSent[24]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(27),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(27),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_6_n_0\
    );
\countReadReqSent[24]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(26),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(26),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_7_n_0\
    );
\countReadReqSent[24]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(25),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(25),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_8_n_0\
    );
\countReadReqSent[24]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(24),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(24),
      I3 => reset_cmd,
      O => \countReadReqSent[24]_i_9_n_0\
    );
\countReadReqSent[32]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(39),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(39),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_2_n_0\
    );
\countReadReqSent[32]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(38),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(38),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_3_n_0\
    );
\countReadReqSent[32]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(37),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(37),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_4_n_0\
    );
\countReadReqSent[32]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(36),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(36),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_5_n_0\
    );
\countReadReqSent[32]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(35),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(35),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_6_n_0\
    );
\countReadReqSent[32]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(34),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(34),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_7_n_0\
    );
\countReadReqSent[32]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(33),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(33),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_8_n_0\
    );
\countReadReqSent[32]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(32),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(32),
      I3 => reset_cmd,
      O => \countReadReqSent[32]_i_9_n_0\
    );
\countReadReqSent[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(15),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(15),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_2_n_0\
    );
\countReadReqSent[8]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(14),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(14),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_3_n_0\
    );
\countReadReqSent[8]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(13),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(13),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_4_n_0\
    );
\countReadReqSent[8]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(12),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(12),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_5_n_0\
    );
\countReadReqSent[8]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(11),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(11),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_6_n_0\
    );
\countReadReqSent[8]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(10),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(10),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_7_n_0\
    );
\countReadReqSent[8]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(9),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(9),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_8_n_0\
    );
\countReadReqSent[8]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => countReadReqSent_reg(8),
      I1 => \countAddrSent[31]_i_3_n_0\,
      I2 => countReadReqSent0(8),
      I3 => reset_cmd,
      O => \countReadReqSent[8]_i_9_n_0\
    );
\countReadReqSent_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_15\,
      Q => countReadReqSent_reg(0),
      R => '0'
    );
\countReadReqSent_reg[0]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[0]_i_1_n_0\,
      CO(6) => \countReadReqSent_reg[0]_i_1_n_1\,
      CO(5) => \countReadReqSent_reg[0]_i_1_n_2\,
      CO(4) => \countReadReqSent_reg[0]_i_1_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[0]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[0]_i_1_n_5\,
      CO(1) => \countReadReqSent_reg[0]_i_1_n_6\,
      CO(0) => \countReadReqSent_reg[0]_i_1_n_7\,
      DI(7 downto 1) => B"0000000",
      DI(0) => \countReadReqSent[0]_i_2_n_0\,
      O(7) => \countReadReqSent_reg[0]_i_1_n_8\,
      O(6) => \countReadReqSent_reg[0]_i_1_n_9\,
      O(5) => \countReadReqSent_reg[0]_i_1_n_10\,
      O(4) => \countReadReqSent_reg[0]_i_1_n_11\,
      O(3) => \countReadReqSent_reg[0]_i_1_n_12\,
      O(2) => \countReadReqSent_reg[0]_i_1_n_13\,
      O(1) => \countReadReqSent_reg[0]_i_1_n_14\,
      O(0) => \countReadReqSent_reg[0]_i_1_n_15\,
      S(7) => \countReadReqSent[0]_i_3_n_0\,
      S(6) => \countReadReqSent[0]_i_4_n_0\,
      S(5) => \countReadReqSent[0]_i_5_n_0\,
      S(4) => \countReadReqSent[0]_i_6_n_0\,
      S(3) => \countReadReqSent[0]_i_7_n_0\,
      S(2) => \countReadReqSent[0]_i_8_n_0\,
      S(1) => \countReadReqSent[0]_i_9_n_0\,
      S(0) => \countReadReqSent[0]_i_10_n_0\
    );
\countReadReqSent_reg[0]_i_11\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => countReadReqSent_reg(0),
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[0]_i_11_n_0\,
      CO(6) => \countReadReqSent_reg[0]_i_11_n_1\,
      CO(5) => \countReadReqSent_reg[0]_i_11_n_2\,
      CO(4) => \countReadReqSent_reg[0]_i_11_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[0]_i_11_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[0]_i_11_n_5\,
      CO(1) => \countReadReqSent_reg[0]_i_11_n_6\,
      CO(0) => \countReadReqSent_reg[0]_i_11_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqSent0(8 downto 1),
      S(7 downto 0) => countReadReqSent_reg(8 downto 1)
    );
\countReadReqSent_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_13\,
      Q => countReadReqSent_reg(10),
      R => '0'
    );
\countReadReqSent_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_12\,
      Q => countReadReqSent_reg(11),
      R => '0'
    );
\countReadReqSent_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_11\,
      Q => countReadReqSent_reg(12),
      R => '0'
    );
\countReadReqSent_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_10\,
      Q => countReadReqSent_reg(13),
      R => '0'
    );
\countReadReqSent_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_9\,
      Q => countReadReqSent_reg(14),
      R => '0'
    );
\countReadReqSent_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_8\,
      Q => countReadReqSent_reg(15),
      R => '0'
    );
\countReadReqSent_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_15\,
      Q => countReadReqSent_reg(16),
      R => '0'
    );
\countReadReqSent_reg[16]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[8]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[16]_i_1_n_0\,
      CO(6) => \countReadReqSent_reg[16]_i_1_n_1\,
      CO(5) => \countReadReqSent_reg[16]_i_1_n_2\,
      CO(4) => \countReadReqSent_reg[16]_i_1_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[16]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[16]_i_1_n_5\,
      CO(1) => \countReadReqSent_reg[16]_i_1_n_6\,
      CO(0) => \countReadReqSent_reg[16]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countReadReqSent_reg[16]_i_1_n_8\,
      O(6) => \countReadReqSent_reg[16]_i_1_n_9\,
      O(5) => \countReadReqSent_reg[16]_i_1_n_10\,
      O(4) => \countReadReqSent_reg[16]_i_1_n_11\,
      O(3) => \countReadReqSent_reg[16]_i_1_n_12\,
      O(2) => \countReadReqSent_reg[16]_i_1_n_13\,
      O(1) => \countReadReqSent_reg[16]_i_1_n_14\,
      O(0) => \countReadReqSent_reg[16]_i_1_n_15\,
      S(7) => \countReadReqSent[16]_i_2_n_0\,
      S(6) => \countReadReqSent[16]_i_3_n_0\,
      S(5) => \countReadReqSent[16]_i_4_n_0\,
      S(4) => \countReadReqSent[16]_i_5_n_0\,
      S(3) => \countReadReqSent[16]_i_6_n_0\,
      S(2) => \countReadReqSent[16]_i_7_n_0\,
      S(1) => \countReadReqSent[16]_i_8_n_0\,
      S(0) => \countReadReqSent[16]_i_9_n_0\
    );
\countReadReqSent_reg[16]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[8]_i_10_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[16]_i_10_n_0\,
      CO(6) => \countReadReqSent_reg[16]_i_10_n_1\,
      CO(5) => \countReadReqSent_reg[16]_i_10_n_2\,
      CO(4) => \countReadReqSent_reg[16]_i_10_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[16]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[16]_i_10_n_5\,
      CO(1) => \countReadReqSent_reg[16]_i_10_n_6\,
      CO(0) => \countReadReqSent_reg[16]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqSent0(24 downto 17),
      S(7 downto 0) => countReadReqSent_reg(24 downto 17)
    );
\countReadReqSent_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_14\,
      Q => countReadReqSent_reg(17),
      R => '0'
    );
\countReadReqSent_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_13\,
      Q => countReadReqSent_reg(18),
      R => '0'
    );
\countReadReqSent_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_12\,
      Q => countReadReqSent_reg(19),
      R => '0'
    );
\countReadReqSent_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_14\,
      Q => countReadReqSent_reg(1),
      R => '0'
    );
\countReadReqSent_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_11\,
      Q => countReadReqSent_reg(20),
      R => '0'
    );
\countReadReqSent_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_10\,
      Q => countReadReqSent_reg(21),
      R => '0'
    );
\countReadReqSent_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_9\,
      Q => countReadReqSent_reg(22),
      R => '0'
    );
\countReadReqSent_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[16]_i_1_n_8\,
      Q => countReadReqSent_reg(23),
      R => '0'
    );
\countReadReqSent_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_15\,
      Q => countReadReqSent_reg(24),
      R => '0'
    );
\countReadReqSent_reg[24]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[16]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[24]_i_1_n_0\,
      CO(6) => \countReadReqSent_reg[24]_i_1_n_1\,
      CO(5) => \countReadReqSent_reg[24]_i_1_n_2\,
      CO(4) => \countReadReqSent_reg[24]_i_1_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[24]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[24]_i_1_n_5\,
      CO(1) => \countReadReqSent_reg[24]_i_1_n_6\,
      CO(0) => \countReadReqSent_reg[24]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countReadReqSent_reg[24]_i_1_n_8\,
      O(6) => \countReadReqSent_reg[24]_i_1_n_9\,
      O(5) => \countReadReqSent_reg[24]_i_1_n_10\,
      O(4) => \countReadReqSent_reg[24]_i_1_n_11\,
      O(3) => \countReadReqSent_reg[24]_i_1_n_12\,
      O(2) => \countReadReqSent_reg[24]_i_1_n_13\,
      O(1) => \countReadReqSent_reg[24]_i_1_n_14\,
      O(0) => \countReadReqSent_reg[24]_i_1_n_15\,
      S(7) => \countReadReqSent[24]_i_2_n_0\,
      S(6) => \countReadReqSent[24]_i_3_n_0\,
      S(5) => \countReadReqSent[24]_i_4_n_0\,
      S(4) => \countReadReqSent[24]_i_5_n_0\,
      S(3) => \countReadReqSent[24]_i_6_n_0\,
      S(2) => \countReadReqSent[24]_i_7_n_0\,
      S(1) => \countReadReqSent[24]_i_8_n_0\,
      S(0) => \countReadReqSent[24]_i_9_n_0\
    );
\countReadReqSent_reg[24]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[16]_i_10_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[24]_i_10_n_0\,
      CO(6) => \countReadReqSent_reg[24]_i_10_n_1\,
      CO(5) => \countReadReqSent_reg[24]_i_10_n_2\,
      CO(4) => \countReadReqSent_reg[24]_i_10_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[24]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[24]_i_10_n_5\,
      CO(1) => \countReadReqSent_reg[24]_i_10_n_6\,
      CO(0) => \countReadReqSent_reg[24]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqSent0(32 downto 25),
      S(7 downto 0) => countReadReqSent_reg(32 downto 25)
    );
\countReadReqSent_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_14\,
      Q => countReadReqSent_reg(25),
      R => '0'
    );
\countReadReqSent_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_13\,
      Q => countReadReqSent_reg(26),
      R => '0'
    );
\countReadReqSent_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_12\,
      Q => countReadReqSent_reg(27),
      R => '0'
    );
\countReadReqSent_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_11\,
      Q => countReadReqSent_reg(28),
      R => '0'
    );
\countReadReqSent_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_10\,
      Q => countReadReqSent_reg(29),
      R => '0'
    );
\countReadReqSent_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_13\,
      Q => countReadReqSent_reg(2),
      R => '0'
    );
\countReadReqSent_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_9\,
      Q => countReadReqSent_reg(30),
      R => '0'
    );
\countReadReqSent_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[24]_i_1_n_8\,
      Q => countReadReqSent_reg(31),
      R => '0'
    );
\countReadReqSent_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_15\,
      Q => countReadReqSent_reg(32),
      R => '0'
    );
\countReadReqSent_reg[32]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[24]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countReadReqSent_reg[32]_i_1_CO_UNCONNECTED\(7),
      CO(6) => \countReadReqSent_reg[32]_i_1_n_1\,
      CO(5) => \countReadReqSent_reg[32]_i_1_n_2\,
      CO(4) => \countReadReqSent_reg[32]_i_1_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[32]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[32]_i_1_n_5\,
      CO(1) => \countReadReqSent_reg[32]_i_1_n_6\,
      CO(0) => \countReadReqSent_reg[32]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countReadReqSent_reg[32]_i_1_n_8\,
      O(6) => \countReadReqSent_reg[32]_i_1_n_9\,
      O(5) => \countReadReqSent_reg[32]_i_1_n_10\,
      O(4) => \countReadReqSent_reg[32]_i_1_n_11\,
      O(3) => \countReadReqSent_reg[32]_i_1_n_12\,
      O(2) => \countReadReqSent_reg[32]_i_1_n_13\,
      O(1) => \countReadReqSent_reg[32]_i_1_n_14\,
      O(0) => \countReadReqSent_reg[32]_i_1_n_15\,
      S(7) => \countReadReqSent[32]_i_2_n_0\,
      S(6) => \countReadReqSent[32]_i_3_n_0\,
      S(5) => \countReadReqSent[32]_i_4_n_0\,
      S(4) => \countReadReqSent[32]_i_5_n_0\,
      S(3) => \countReadReqSent[32]_i_6_n_0\,
      S(2) => \countReadReqSent[32]_i_7_n_0\,
      S(1) => \countReadReqSent[32]_i_8_n_0\,
      S(0) => \countReadReqSent[32]_i_9_n_0\
    );
\countReadReqSent_reg[32]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[24]_i_10_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countReadReqSent_reg[32]_i_10_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \countReadReqSent_reg[32]_i_10_n_2\,
      CO(4) => \countReadReqSent_reg[32]_i_10_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[32]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[32]_i_10_n_5\,
      CO(1) => \countReadReqSent_reg[32]_i_10_n_6\,
      CO(0) => \countReadReqSent_reg[32]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_countReadReqSent_reg[32]_i_10_O_UNCONNECTED\(7),
      O(6 downto 0) => countReadReqSent0(39 downto 33),
      S(7) => '0',
      S(6 downto 0) => countReadReqSent_reg(39 downto 33)
    );
\countReadReqSent_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_14\,
      Q => countReadReqSent_reg(33),
      R => '0'
    );
\countReadReqSent_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_13\,
      Q => countReadReqSent_reg(34),
      R => '0'
    );
\countReadReqSent_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_12\,
      Q => countReadReqSent_reg(35),
      R => '0'
    );
\countReadReqSent_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_11\,
      Q => countReadReqSent_reg(36),
      R => '0'
    );
\countReadReqSent_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_10\,
      Q => countReadReqSent_reg(37),
      R => '0'
    );
\countReadReqSent_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_9\,
      Q => countReadReqSent_reg(38),
      R => '0'
    );
\countReadReqSent_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[32]_i_1_n_8\,
      Q => countReadReqSent_reg(39),
      R => '0'
    );
\countReadReqSent_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_12\,
      Q => countReadReqSent_reg(3),
      R => '0'
    );
\countReadReqSent_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_11\,
      Q => countReadReqSent_reg(4),
      R => '0'
    );
\countReadReqSent_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_10\,
      Q => countReadReqSent_reg(5),
      R => '0'
    );
\countReadReqSent_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_9\,
      Q => countReadReqSent_reg(6),
      R => '0'
    );
\countReadReqSent_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[0]_i_1_n_8\,
      Q => countReadReqSent_reg(7),
      R => '0'
    );
\countReadReqSent_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_15\,
      Q => countReadReqSent_reg(8),
      R => '0'
    );
\countReadReqSent_reg[8]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[0]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[8]_i_1_n_0\,
      CO(6) => \countReadReqSent_reg[8]_i_1_n_1\,
      CO(5) => \countReadReqSent_reg[8]_i_1_n_2\,
      CO(4) => \countReadReqSent_reg[8]_i_1_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[8]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[8]_i_1_n_5\,
      CO(1) => \countReadReqSent_reg[8]_i_1_n_6\,
      CO(0) => \countReadReqSent_reg[8]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \countReadReqSent_reg[8]_i_1_n_8\,
      O(6) => \countReadReqSent_reg[8]_i_1_n_9\,
      O(5) => \countReadReqSent_reg[8]_i_1_n_10\,
      O(4) => \countReadReqSent_reg[8]_i_1_n_11\,
      O(3) => \countReadReqSent_reg[8]_i_1_n_12\,
      O(2) => \countReadReqSent_reg[8]_i_1_n_13\,
      O(1) => \countReadReqSent_reg[8]_i_1_n_14\,
      O(0) => \countReadReqSent_reg[8]_i_1_n_15\,
      S(7) => \countReadReqSent[8]_i_2_n_0\,
      S(6) => \countReadReqSent[8]_i_3_n_0\,
      S(5) => \countReadReqSent[8]_i_4_n_0\,
      S(4) => \countReadReqSent[8]_i_5_n_0\,
      S(3) => \countReadReqSent[8]_i_6_n_0\,
      S(2) => \countReadReqSent[8]_i_7_n_0\,
      S(1) => \countReadReqSent[8]_i_8_n_0\,
      S(0) => \countReadReqSent[8]_i_9_n_0\
    );
\countReadReqSent_reg[8]_i_10\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqSent_reg[0]_i_11_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqSent_reg[8]_i_10_n_0\,
      CO(6) => \countReadReqSent_reg[8]_i_10_n_1\,
      CO(5) => \countReadReqSent_reg[8]_i_10_n_2\,
      CO(4) => \countReadReqSent_reg[8]_i_10_n_3\,
      CO(3) => \NLW_countReadReqSent_reg[8]_i_10_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqSent_reg[8]_i_10_n_5\,
      CO(1) => \countReadReqSent_reg[8]_i_10_n_6\,
      CO(0) => \countReadReqSent_reg[8]_i_10_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqSent0(16 downto 9),
      S(7 downto 0) => countReadReqSent_reg(16 downto 9)
    );
\countReadReqSent_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \countReadReqSent_reg[8]_i_1_n_14\,
      Q => countReadReqSent_reg(9),
      R => '0'
    );
\countReadReqToBeSent[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[0]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[0]_i_1_n_0\
    );
\countReadReqToBeSent[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8000BFFF"
    )
        port map (
      I0 => countReadReqToBeSent01_in(0),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent(0),
      O => \countReadReqToBeSent[0]_i_2_n_0\
    );
\countReadReqToBeSent[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[10]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[10]_i_1_n_0\
    );
\countReadReqToBeSent[10]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(10),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(10),
      O => \countReadReqToBeSent[10]_i_2_n_0\
    );
\countReadReqToBeSent[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[11]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[11]_i_1_n_0\
    );
\countReadReqToBeSent[11]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(11),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(11),
      O => \countReadReqToBeSent[11]_i_2_n_0\
    );
\countReadReqToBeSent[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[12]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[12]_i_1_n_0\
    );
\countReadReqToBeSent[12]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(12),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(12),
      O => \countReadReqToBeSent[12]_i_2_n_0\
    );
\countReadReqToBeSent[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[13]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[13]_i_1_n_0\
    );
\countReadReqToBeSent[13]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(13),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(13),
      O => \countReadReqToBeSent[13]_i_2_n_0\
    );
\countReadReqToBeSent[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[14]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[14]_i_1_n_0\
    );
\countReadReqToBeSent[14]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(14),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(14),
      O => \countReadReqToBeSent[14]_i_2_n_0\
    );
\countReadReqToBeSent[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[15]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[15]_i_1_n_0\
    );
\countReadReqToBeSent[15]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(9),
      I1 => read_blocking_ratio(9),
      O => \countReadReqToBeSent[15]_i_10_n_0\
    );
\countReadReqToBeSent[15]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(8),
      I1 => read_blocking_ratio(8),
      O => \countReadReqToBeSent[15]_i_11_n_0\
    );
\countReadReqToBeSent[15]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(15),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(15),
      O => \countReadReqToBeSent[15]_i_2_n_0\
    );
\countReadReqToBeSent[15]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(15),
      I1 => read_blocking_ratio(15),
      O => \countReadReqToBeSent[15]_i_4_n_0\
    );
\countReadReqToBeSent[15]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(14),
      I1 => read_blocking_ratio(14),
      O => \countReadReqToBeSent[15]_i_5_n_0\
    );
\countReadReqToBeSent[15]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(13),
      I1 => read_blocking_ratio(13),
      O => \countReadReqToBeSent[15]_i_6_n_0\
    );
\countReadReqToBeSent[15]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(12),
      I1 => read_blocking_ratio(12),
      O => \countReadReqToBeSent[15]_i_7_n_0\
    );
\countReadReqToBeSent[15]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(11),
      I1 => read_blocking_ratio(11),
      O => \countReadReqToBeSent[15]_i_8_n_0\
    );
\countReadReqToBeSent[15]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(10),
      I1 => read_blocking_ratio(10),
      O => \countReadReqToBeSent[15]_i_9_n_0\
    );
\countReadReqToBeSent[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[16]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[16]_i_1_n_0\
    );
\countReadReqToBeSent[16]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(16),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(16),
      O => \countReadReqToBeSent[16]_i_2_n_0\
    );
\countReadReqToBeSent[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[17]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[17]_i_1_n_0\
    );
\countReadReqToBeSent[17]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(17),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(17),
      O => \countReadReqToBeSent[17]_i_2_n_0\
    );
\countReadReqToBeSent[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[18]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[18]_i_1_n_0\
    );
\countReadReqToBeSent[18]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(18),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(18),
      O => \countReadReqToBeSent[18]_i_2_n_0\
    );
\countReadReqToBeSent[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[19]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[19]_i_1_n_0\
    );
\countReadReqToBeSent[19]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(19),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(19),
      O => \countReadReqToBeSent[19]_i_2_n_0\
    );
\countReadReqToBeSent[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[1]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[1]_i_1_n_0\
    );
\countReadReqToBeSent[1]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(1),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(1),
      O => \countReadReqToBeSent[1]_i_2_n_0\
    );
\countReadReqToBeSent[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[20]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[20]_i_1_n_0\
    );
\countReadReqToBeSent[20]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(20),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(20),
      O => \countReadReqToBeSent[20]_i_2_n_0\
    );
\countReadReqToBeSent[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[21]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[21]_i_1_n_0\
    );
\countReadReqToBeSent[21]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(21),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(21),
      O => \countReadReqToBeSent[21]_i_2_n_0\
    );
\countReadReqToBeSent[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[22]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[22]_i_1_n_0\
    );
\countReadReqToBeSent[22]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(22),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(22),
      O => \countReadReqToBeSent[22]_i_2_n_0\
    );
\countReadReqToBeSent[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[23]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[23]_i_1_n_0\
    );
\countReadReqToBeSent[23]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(17),
      I1 => read_blocking_ratio(17),
      O => \countReadReqToBeSent[23]_i_10_n_0\
    );
\countReadReqToBeSent[23]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(16),
      I1 => read_blocking_ratio(16),
      O => \countReadReqToBeSent[23]_i_11_n_0\
    );
\countReadReqToBeSent[23]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(23),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(23),
      O => \countReadReqToBeSent[23]_i_2_n_0\
    );
\countReadReqToBeSent[23]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(23),
      I1 => read_blocking_ratio(23),
      O => \countReadReqToBeSent[23]_i_4_n_0\
    );
\countReadReqToBeSent[23]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(22),
      I1 => read_blocking_ratio(22),
      O => \countReadReqToBeSent[23]_i_5_n_0\
    );
\countReadReqToBeSent[23]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(21),
      I1 => read_blocking_ratio(21),
      O => \countReadReqToBeSent[23]_i_6_n_0\
    );
\countReadReqToBeSent[23]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(20),
      I1 => read_blocking_ratio(20),
      O => \countReadReqToBeSent[23]_i_7_n_0\
    );
\countReadReqToBeSent[23]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(19),
      I1 => read_blocking_ratio(19),
      O => \countReadReqToBeSent[23]_i_8_n_0\
    );
\countReadReqToBeSent[23]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(18),
      I1 => read_blocking_ratio(18),
      O => \countReadReqToBeSent[23]_i_9_n_0\
    );
\countReadReqToBeSent[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[24]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[24]_i_1_n_0\
    );
\countReadReqToBeSent[24]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(24),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(24),
      O => \countReadReqToBeSent[24]_i_2_n_0\
    );
\countReadReqToBeSent[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[25]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[25]_i_1_n_0\
    );
\countReadReqToBeSent[25]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(25),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(25),
      O => \countReadReqToBeSent[25]_i_2_n_0\
    );
\countReadReqToBeSent[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[26]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[26]_i_1_n_0\
    );
\countReadReqToBeSent[26]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(26),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(26),
      O => \countReadReqToBeSent[26]_i_2_n_0\
    );
\countReadReqToBeSent[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[27]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[27]_i_1_n_0\
    );
\countReadReqToBeSent[27]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(27),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(27),
      O => \countReadReqToBeSent[27]_i_2_n_0\
    );
\countReadReqToBeSent[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[28]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[28]_i_1_n_0\
    );
\countReadReqToBeSent[28]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(28),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(28),
      O => \countReadReqToBeSent[28]_i_2_n_0\
    );
\countReadReqToBeSent[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[29]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[29]_i_1_n_0\
    );
\countReadReqToBeSent[29]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(29),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(29),
      O => \countReadReqToBeSent[29]_i_2_n_0\
    );
\countReadReqToBeSent[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[2]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[2]_i_1_n_0\
    );
\countReadReqToBeSent[2]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(2),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(2),
      O => \countReadReqToBeSent[2]_i_2_n_0\
    );
\countReadReqToBeSent[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[30]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[30]_i_1_n_0\
    );
\countReadReqToBeSent[30]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(30),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(30),
      O => \countReadReqToBeSent[30]_i_2_n_0\
    );
\countReadReqToBeSent[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[31]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[31]_i_1_n_0\
    );
\countReadReqToBeSent[31]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(25),
      I1 => read_blocking_ratio(25),
      O => \countReadReqToBeSent[31]_i_10_n_0\
    );
\countReadReqToBeSent[31]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(24),
      I1 => read_blocking_ratio(24),
      O => \countReadReqToBeSent[31]_i_11_n_0\
    );
\countReadReqToBeSent[31]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(31),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(31),
      O => \countReadReqToBeSent[31]_i_2_n_0\
    );
\countReadReqToBeSent[31]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(31),
      I1 => read_blocking_ratio(31),
      O => \countReadReqToBeSent[31]_i_4_n_0\
    );
\countReadReqToBeSent[31]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(30),
      I1 => read_blocking_ratio(30),
      O => \countReadReqToBeSent[31]_i_5_n_0\
    );
\countReadReqToBeSent[31]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(29),
      I1 => read_blocking_ratio(29),
      O => \countReadReqToBeSent[31]_i_6_n_0\
    );
\countReadReqToBeSent[31]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(28),
      I1 => read_blocking_ratio(28),
      O => \countReadReqToBeSent[31]_i_7_n_0\
    );
\countReadReqToBeSent[31]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(27),
      I1 => read_blocking_ratio(27),
      O => \countReadReqToBeSent[31]_i_8_n_0\
    );
\countReadReqToBeSent[31]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(26),
      I1 => read_blocking_ratio(26),
      O => \countReadReqToBeSent[31]_i_9_n_0\
    );
\countReadReqToBeSent[32]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[32]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[32]_i_1_n_0\
    );
\countReadReqToBeSent[32]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(32),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(32),
      O => \countReadReqToBeSent[32]_i_2_n_0\
    );
\countReadReqToBeSent[33]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[33]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[33]_i_1_n_0\
    );
\countReadReqToBeSent[33]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(33),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(33),
      O => \countReadReqToBeSent[33]_i_2_n_0\
    );
\countReadReqToBeSent[34]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[34]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[34]_i_1_n_0\
    );
\countReadReqToBeSent[34]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(34),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(34),
      O => \countReadReqToBeSent[34]_i_2_n_0\
    );
\countReadReqToBeSent[35]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[35]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[35]_i_1_n_0\
    );
\countReadReqToBeSent[35]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(35),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(35),
      O => \countReadReqToBeSent[35]_i_2_n_0\
    );
\countReadReqToBeSent[36]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[36]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[36]_i_1_n_0\
    );
\countReadReqToBeSent[36]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(36),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(36),
      O => \countReadReqToBeSent[36]_i_2_n_0\
    );
\countReadReqToBeSent[37]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[37]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[37]_i_1_n_0\
    );
\countReadReqToBeSent[37]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(37),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(37),
      O => \countReadReqToBeSent[37]_i_2_n_0\
    );
\countReadReqToBeSent[38]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[38]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[38]_i_1_n_0\
    );
\countReadReqToBeSent[38]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(38),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(38),
      O => \countReadReqToBeSent[38]_i_2_n_0\
    );
\countReadReqToBeSent[39]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F444F444F4444444"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => \read_ticks_reg[31]_i_4_n_0\,
      I4 => active_read,
      I5 => active_blocking,
      O => \countReadReqToBeSent[39]_i_1_n_0\
    );
\countReadReqToBeSent[39]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[39]_i_3_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[39]_i_2_n_0\
    );
\countReadReqToBeSent[39]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(39),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(39),
      O => \countReadReqToBeSent[39]_i_3_n_0\
    );
\countReadReqToBeSent[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[3]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[3]_i_1_n_0\
    );
\countReadReqToBeSent[3]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(3),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(3),
      O => \countReadReqToBeSent[3]_i_2_n_0\
    );
\countReadReqToBeSent[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[4]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[4]_i_1_n_0\
    );
\countReadReqToBeSent[4]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(4),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(4),
      O => \countReadReqToBeSent[4]_i_2_n_0\
    );
\countReadReqToBeSent[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[5]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[5]_i_1_n_0\
    );
\countReadReqToBeSent[5]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(5),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(5),
      O => \countReadReqToBeSent[5]_i_2_n_0\
    );
\countReadReqToBeSent[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[6]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[6]_i_1_n_0\
    );
\countReadReqToBeSent[6]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(6),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(6),
      O => \countReadReqToBeSent[6]_i_2_n_0\
    );
\countReadReqToBeSent[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[7]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[7]_i_1_n_0\
    );
\countReadReqToBeSent[7]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(1),
      I1 => read_blocking_ratio(1),
      O => \countReadReqToBeSent[7]_i_10_n_0\
    );
\countReadReqToBeSent[7]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(0),
      I1 => read_blocking_ratio(0),
      O => \countReadReqToBeSent[7]_i_11_n_0\
    );
\countReadReqToBeSent[7]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(7),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(7),
      O => \countReadReqToBeSent[7]_i_2_n_0\
    );
\countReadReqToBeSent[7]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(7),
      I1 => read_blocking_ratio(7),
      O => \countReadReqToBeSent[7]_i_4_n_0\
    );
\countReadReqToBeSent[7]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(6),
      I1 => read_blocking_ratio(6),
      O => \countReadReqToBeSent[7]_i_5_n_0\
    );
\countReadReqToBeSent[7]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(5),
      I1 => read_blocking_ratio(5),
      O => \countReadReqToBeSent[7]_i_6_n_0\
    );
\countReadReqToBeSent[7]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(4),
      I1 => read_blocking_ratio(4),
      O => \countReadReqToBeSent[7]_i_7_n_0\
    );
\countReadReqToBeSent[7]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(3),
      I1 => read_blocking_ratio(3),
      O => \countReadReqToBeSent[7]_i_8_n_0\
    );
\countReadReqToBeSent[7]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => countReadReqToBeSent(2),
      I1 => read_blocking_ratio(2),
      O => \countReadReqToBeSent[7]_i_9_n_0\
    );
\countReadReqToBeSent[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[8]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[8]_i_1_n_0\
    );
\countReadReqToBeSent[8]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(8),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(8),
      O => \countReadReqToBeSent[8]_i_2_n_0\
    );
\countReadReqToBeSent[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8C"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \countReadReqToBeSent[9]_i_2_n_0\,
      I2 => reset_cmd,
      O => \countReadReqToBeSent[9]_i_1_n_0\
    );
\countReadReqToBeSent[9]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BFFF8000"
    )
        port map (
      I0 => countReadReqToBeSent01_in(9),
      I1 => \read_ticks_reg[31]_i_4_n_0\,
      I2 => \read_ticks_reg[31]_i_3_n_4\,
      I3 => active_blocking,
      I4 => countReadReqToBeSent0(9),
      O => \countReadReqToBeSent[9]_i_2_n_0\
    );
\countReadReqToBeSent_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[0]_i_1_n_0\,
      Q => countReadReqToBeSent(0),
      R => '0'
    );
\countReadReqToBeSent_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[10]_i_1_n_0\,
      Q => countReadReqToBeSent(10),
      R => '0'
    );
\countReadReqToBeSent_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[11]_i_1_n_0\,
      Q => countReadReqToBeSent(11),
      R => '0'
    );
\countReadReqToBeSent_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[12]_i_1_n_0\,
      Q => countReadReqToBeSent(12),
      R => '0'
    );
\countReadReqToBeSent_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[13]_i_1_n_0\,
      Q => countReadReqToBeSent(13),
      R => '0'
    );
\countReadReqToBeSent_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[14]_i_1_n_0\,
      Q => countReadReqToBeSent(14),
      R => '0'
    );
\countReadReqToBeSent_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[15]_i_1_n_0\,
      Q => countReadReqToBeSent(15),
      R => '0'
    );
\countReadReqToBeSent_reg[15]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[7]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[15]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[15]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[15]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[15]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[15]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[15]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[15]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[15]_i_3_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(15 downto 8),
      O(7 downto 0) => countReadReqToBeSent01_in(15 downto 8),
      S(7) => \countReadReqToBeSent[15]_i_4_n_0\,
      S(6) => \countReadReqToBeSent[15]_i_5_n_0\,
      S(5) => \countReadReqToBeSent[15]_i_6_n_0\,
      S(4) => \countReadReqToBeSent[15]_i_7_n_0\,
      S(3) => \countReadReqToBeSent[15]_i_8_n_0\,
      S(2) => \countReadReqToBeSent[15]_i_9_n_0\,
      S(1) => \countReadReqToBeSent[15]_i_10_n_0\,
      S(0) => \countReadReqToBeSent[15]_i_11_n_0\
    );
\countReadReqToBeSent_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[16]_i_1_n_0\,
      Q => countReadReqToBeSent(16),
      R => '0'
    );
\countReadReqToBeSent_reg[16]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[8]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[16]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[16]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[16]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[16]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[16]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[16]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[16]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[16]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqToBeSent0(16 downto 9),
      S(7 downto 0) => countReadReqToBeSent(16 downto 9)
    );
\countReadReqToBeSent_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[17]_i_1_n_0\,
      Q => countReadReqToBeSent(17),
      R => '0'
    );
\countReadReqToBeSent_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[18]_i_1_n_0\,
      Q => countReadReqToBeSent(18),
      R => '0'
    );
\countReadReqToBeSent_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[19]_i_1_n_0\,
      Q => countReadReqToBeSent(19),
      R => '0'
    );
\countReadReqToBeSent_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[1]_i_1_n_0\,
      Q => countReadReqToBeSent(1),
      R => '0'
    );
\countReadReqToBeSent_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[20]_i_1_n_0\,
      Q => countReadReqToBeSent(20),
      R => '0'
    );
\countReadReqToBeSent_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[21]_i_1_n_0\,
      Q => countReadReqToBeSent(21),
      R => '0'
    );
\countReadReqToBeSent_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[22]_i_1_n_0\,
      Q => countReadReqToBeSent(22),
      R => '0'
    );
\countReadReqToBeSent_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[23]_i_1_n_0\,
      Q => countReadReqToBeSent(23),
      R => '0'
    );
\countReadReqToBeSent_reg[23]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[15]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[23]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[23]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[23]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[23]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[23]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[23]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[23]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[23]_i_3_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(23 downto 16),
      O(7 downto 0) => countReadReqToBeSent01_in(23 downto 16),
      S(7) => \countReadReqToBeSent[23]_i_4_n_0\,
      S(6) => \countReadReqToBeSent[23]_i_5_n_0\,
      S(5) => \countReadReqToBeSent[23]_i_6_n_0\,
      S(4) => \countReadReqToBeSent[23]_i_7_n_0\,
      S(3) => \countReadReqToBeSent[23]_i_8_n_0\,
      S(2) => \countReadReqToBeSent[23]_i_9_n_0\,
      S(1) => \countReadReqToBeSent[23]_i_10_n_0\,
      S(0) => \countReadReqToBeSent[23]_i_11_n_0\
    );
\countReadReqToBeSent_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[24]_i_1_n_0\,
      Q => countReadReqToBeSent(24),
      R => '0'
    );
\countReadReqToBeSent_reg[24]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[16]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[24]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[24]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[24]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[24]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[24]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[24]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[24]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[24]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqToBeSent0(24 downto 17),
      S(7 downto 0) => countReadReqToBeSent(24 downto 17)
    );
\countReadReqToBeSent_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[25]_i_1_n_0\,
      Q => countReadReqToBeSent(25),
      R => '0'
    );
\countReadReqToBeSent_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[26]_i_1_n_0\,
      Q => countReadReqToBeSent(26),
      R => '0'
    );
\countReadReqToBeSent_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[27]_i_1_n_0\,
      Q => countReadReqToBeSent(27),
      R => '0'
    );
\countReadReqToBeSent_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[28]_i_1_n_0\,
      Q => countReadReqToBeSent(28),
      R => '0'
    );
\countReadReqToBeSent_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[29]_i_1_n_0\,
      Q => countReadReqToBeSent(29),
      R => '0'
    );
\countReadReqToBeSent_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[2]_i_1_n_0\,
      Q => countReadReqToBeSent(2),
      R => '0'
    );
\countReadReqToBeSent_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[30]_i_1_n_0\,
      Q => countReadReqToBeSent(30),
      R => '0'
    );
\countReadReqToBeSent_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[31]_i_1_n_0\,
      Q => countReadReqToBeSent(31),
      R => '0'
    );
\countReadReqToBeSent_reg[31]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[23]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[31]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[31]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[31]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[31]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[31]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[31]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[31]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[31]_i_3_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(31 downto 24),
      O(7 downto 0) => countReadReqToBeSent01_in(31 downto 24),
      S(7) => \countReadReqToBeSent[31]_i_4_n_0\,
      S(6) => \countReadReqToBeSent[31]_i_5_n_0\,
      S(5) => \countReadReqToBeSent[31]_i_6_n_0\,
      S(4) => \countReadReqToBeSent[31]_i_7_n_0\,
      S(3) => \countReadReqToBeSent[31]_i_8_n_0\,
      S(2) => \countReadReqToBeSent[31]_i_9_n_0\,
      S(1) => \countReadReqToBeSent[31]_i_10_n_0\,
      S(0) => \countReadReqToBeSent[31]_i_11_n_0\
    );
\countReadReqToBeSent_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[32]_i_1_n_0\,
      Q => countReadReqToBeSent(32),
      R => '0'
    );
\countReadReqToBeSent_reg[32]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[24]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[32]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[32]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[32]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[32]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[32]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[32]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[32]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[32]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqToBeSent0(32 downto 25),
      S(7 downto 0) => countReadReqToBeSent(32 downto 25)
    );
\countReadReqToBeSent_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[33]_i_1_n_0\,
      Q => countReadReqToBeSent(33),
      R => '0'
    );
\countReadReqToBeSent_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[34]_i_1_n_0\,
      Q => countReadReqToBeSent(34),
      R => '0'
    );
\countReadReqToBeSent_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[35]_i_1_n_0\,
      Q => countReadReqToBeSent(35),
      R => '0'
    );
\countReadReqToBeSent_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[36]_i_1_n_0\,
      Q => countReadReqToBeSent(36),
      R => '0'
    );
\countReadReqToBeSent_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[37]_i_1_n_0\,
      Q => countReadReqToBeSent(37),
      R => '0'
    );
\countReadReqToBeSent_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[38]_i_1_n_0\,
      Q => countReadReqToBeSent(38),
      R => '0'
    );
\countReadReqToBeSent_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[39]_i_2_n_0\,
      Q => countReadReqToBeSent(39),
      R => '0'
    );
\countReadReqToBeSent_reg[39]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[31]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_countReadReqToBeSent_reg[39]_i_4_CO_UNCONNECTED\(7),
      CO(6) => \countReadReqToBeSent_reg[39]_i_4_n_1\,
      CO(5) => \countReadReqToBeSent_reg[39]_i_4_n_2\,
      CO(4) => \countReadReqToBeSent_reg[39]_i_4_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[39]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[39]_i_4_n_5\,
      CO(1) => \countReadReqToBeSent_reg[39]_i_4_n_6\,
      CO(0) => \countReadReqToBeSent_reg[39]_i_4_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqToBeSent01_in(39 downto 32),
      S(7 downto 0) => countReadReqToBeSent(39 downto 32)
    );
\countReadReqToBeSent_reg[39]_i_5\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \countReadReqToBeSent_reg[32]_i_3_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_countReadReqToBeSent_reg[39]_i_5_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \countReadReqToBeSent_reg[39]_i_5_n_2\,
      CO(4) => \countReadReqToBeSent_reg[39]_i_5_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[39]_i_5_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[39]_i_5_n_5\,
      CO(1) => \countReadReqToBeSent_reg[39]_i_5_n_6\,
      CO(0) => \countReadReqToBeSent_reg[39]_i_5_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_countReadReqToBeSent_reg[39]_i_5_O_UNCONNECTED\(7),
      O(6 downto 0) => countReadReqToBeSent0(39 downto 33),
      S(7) => '0',
      S(6 downto 0) => countReadReqToBeSent(39 downto 33)
    );
\countReadReqToBeSent_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[3]_i_1_n_0\,
      Q => countReadReqToBeSent(3),
      R => '0'
    );
\countReadReqToBeSent_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[4]_i_1_n_0\,
      Q => countReadReqToBeSent(4),
      R => '0'
    );
\countReadReqToBeSent_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[5]_i_1_n_0\,
      Q => countReadReqToBeSent(5),
      R => '0'
    );
\countReadReqToBeSent_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[6]_i_1_n_0\,
      Q => countReadReqToBeSent(6),
      R => '0'
    );
\countReadReqToBeSent_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[7]_i_1_n_0\,
      Q => countReadReqToBeSent(7),
      R => '0'
    );
\countReadReqToBeSent_reg[7]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[7]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[7]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[7]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[7]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[7]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[7]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[7]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[7]_i_3_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(7 downto 0),
      O(7 downto 0) => countReadReqToBeSent01_in(7 downto 0),
      S(7) => \countReadReqToBeSent[7]_i_4_n_0\,
      S(6) => \countReadReqToBeSent[7]_i_5_n_0\,
      S(5) => \countReadReqToBeSent[7]_i_6_n_0\,
      S(4) => \countReadReqToBeSent[7]_i_7_n_0\,
      S(3) => \countReadReqToBeSent[7]_i_8_n_0\,
      S(2) => \countReadReqToBeSent[7]_i_9_n_0\,
      S(1) => \countReadReqToBeSent[7]_i_10_n_0\,
      S(0) => \countReadReqToBeSent[7]_i_11_n_0\
    );
\countReadReqToBeSent_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[8]_i_1_n_0\,
      Q => countReadReqToBeSent(8),
      R => '0'
    );
\countReadReqToBeSent_reg[8]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => countReadReqToBeSent(0),
      CI_TOP => '0',
      CO(7) => \countReadReqToBeSent_reg[8]_i_3_n_0\,
      CO(6) => \countReadReqToBeSent_reg[8]_i_3_n_1\,
      CO(5) => \countReadReqToBeSent_reg[8]_i_3_n_2\,
      CO(4) => \countReadReqToBeSent_reg[8]_i_3_n_3\,
      CO(3) => \NLW_countReadReqToBeSent_reg[8]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \countReadReqToBeSent_reg[8]_i_3_n_5\,
      CO(1) => \countReadReqToBeSent_reg[8]_i_3_n_6\,
      CO(0) => \countReadReqToBeSent_reg[8]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => countReadReqToBeSent0(8 downto 1),
      S(7 downto 0) => countReadReqToBeSent(8 downto 1)
    );
\countReadReqToBeSent_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countReadReqToBeSent[39]_i_1_n_0\,
      D => \countReadReqToBeSent[9]_i_1_n_0\,
      Q => countReadReqToBeSent(9),
      R => '0'
    );
\current_cycles_with_no_data_read[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[0]_i_1_n_0\
    );
\current_cycles_with_no_data_read[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[10]_i_1_n_0\
    );
\current_cycles_with_no_data_read[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[11]_i_1_n_0\
    );
\current_cycles_with_no_data_read[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[12]_i_1_n_0\
    );
\current_cycles_with_no_data_read[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[13]_i_1_n_0\
    );
\current_cycles_with_no_data_read[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[14]_i_1_n_0\
    );
\current_cycles_with_no_data_read[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[15]_i_1_n_0\
    );
\current_cycles_with_no_data_read[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[16]_i_1_n_0\
    );
\current_cycles_with_no_data_read[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[17]_i_1_n_0\
    );
\current_cycles_with_no_data_read[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[18]_i_1_n_0\
    );
\current_cycles_with_no_data_read[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[19]_i_1_n_0\
    );
\current_cycles_with_no_data_read[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[1]_i_1_n_0\
    );
\current_cycles_with_no_data_read[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[20]_i_1_n_0\
    );
\current_cycles_with_no_data_read[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[21]_i_1_n_0\
    );
\current_cycles_with_no_data_read[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[22]_i_1_n_0\
    );
\current_cycles_with_no_data_read[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[23]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[23]_i_1_n_0\
    );
\current_cycles_with_no_data_read[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[24]_i_1_n_0\
    );
\current_cycles_with_no_data_read[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[25]_i_1_n_0\
    );
\current_cycles_with_no_data_read[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[26]_i_1_n_0\
    );
\current_cycles_with_no_data_read[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[27]_i_1_n_0\
    );
\current_cycles_with_no_data_read[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[28]_i_1_n_0\
    );
\current_cycles_with_no_data_read[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[29]_i_1_n_0\
    );
\current_cycles_with_no_data_read[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[2]_i_1_n_0\
    );
\current_cycles_with_no_data_read[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[30]_i_1_n_0\
    );
\current_cycles_with_no_data_read[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[31]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[31]_i_1_n_0\
    );
\current_cycles_with_no_data_read[32]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[32]_i_1_n_0\
    );
\current_cycles_with_no_data_read[33]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[33]_i_1_n_0\
    );
\current_cycles_with_no_data_read[34]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[34]_i_1_n_0\
    );
\current_cycles_with_no_data_read[35]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[35]_i_1_n_0\
    );
\current_cycles_with_no_data_read[36]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[36]_i_1_n_0\
    );
\current_cycles_with_no_data_read[37]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[37]_i_1_n_0\
    );
\current_cycles_with_no_data_read[38]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[38]_i_1_n_0\
    );
\current_cycles_with_no_data_read[39]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[39]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[39]_i_1_n_0\
    );
\current_cycles_with_no_data_read[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[3]_i_1_n_0\
    );
\current_cycles_with_no_data_read[40]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[40]_i_1_n_0\
    );
\current_cycles_with_no_data_read[41]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[41]_i_1_n_0\
    );
\current_cycles_with_no_data_read[42]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[42]_i_1_n_0\
    );
\current_cycles_with_no_data_read[43]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[43]_i_1_n_0\
    );
\current_cycles_with_no_data_read[44]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[44]_i_1_n_0\
    );
\current_cycles_with_no_data_read[45]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[45]_i_1_n_0\
    );
\current_cycles_with_no_data_read[46]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[46]_i_1_n_0\
    );
\current_cycles_with_no_data_read[47]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[47]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[47]_i_1_n_0\
    );
\current_cycles_with_no_data_read[48]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[48]_i_1_n_0\
    );
\current_cycles_with_no_data_read[49]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[49]_i_1_n_0\
    );
\current_cycles_with_no_data_read[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[4]_i_1_n_0\
    );
\current_cycles_with_no_data_read[50]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[50]_i_1_n_0\
    );
\current_cycles_with_no_data_read[51]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[51]_i_1_n_0\
    );
\current_cycles_with_no_data_read[52]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[52]_i_1_n_0\
    );
\current_cycles_with_no_data_read[53]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[53]_i_1_n_0\
    );
\current_cycles_with_no_data_read[54]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[54]_i_1_n_0\
    );
\current_cycles_with_no_data_read[55]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[55]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[55]_i_1_n_0\
    );
\current_cycles_with_no_data_read[56]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[56]_i_1_n_0\
    );
\current_cycles_with_no_data_read[57]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[57]_i_1_n_0\
    );
\current_cycles_with_no_data_read[58]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_13\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[58]_i_1_n_0\
    );
\current_cycles_with_no_data_read[59]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_12\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[59]_i_1_n_0\
    );
\current_cycles_with_no_data_read[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[5]_i_1_n_0\
    );
\current_cycles_with_no_data_read[60]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_11\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[60]_i_1_n_0\
    );
\current_cycles_with_no_data_read[61]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_10\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[61]_i_1_n_0\
    );
\current_cycles_with_no_data_read[62]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[62]_i_1_n_0\
    );
\current_cycles_with_no_data_read[63]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[63]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[63]_i_1_n_0\
    );
\current_cycles_with_no_data_read[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_9\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[6]_i_1_n_0\
    );
\current_cycles_with_no_data_read[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[7]_i_2_n_8\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[7]_i_1_n_0\
    );
\current_cycles_with_no_data_read[7]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => current_cycles_with_no_data_read(0),
      I1 => data_read_in_this_test,
      O => \current_cycles_with_no_data_read[7]_i_3_n_0\
    );
\current_cycles_with_no_data_read[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_15\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[8]_i_1_n_0\
    );
\current_cycles_with_no_data_read[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => readDataValid,
      I2 => \current_cycles_with_no_data_read_reg[15]_i_2_n_14\,
      I3 => reset_cmd,
      O => \current_cycles_with_no_data_read[9]_i_1_n_0\
    );
\current_cycles_with_no_data_read_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[0]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(0),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[10]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(10),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[11]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(11),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[12]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(12),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[13]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(13),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[14]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(14),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[15]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(15),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[15]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \current_cycles_with_no_data_read_reg[7]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \current_cycles_with_no_data_read_reg[15]_i_2_n_0\,
      CO(6) => \current_cycles_with_no_data_read_reg[15]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[15]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[15]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[15]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[15]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[15]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[15]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \current_cycles_with_no_data_read_reg[15]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[15]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[15]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[15]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[15]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[15]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[15]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[15]_i_2_n_15\,
      S(7 downto 0) => current_cycles_with_no_data_read(15 downto 8)
    );
\current_cycles_with_no_data_read_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[16]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(16),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[17]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(17),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[18]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(18),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[19]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(19),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[1]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(1),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[20]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(20),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[21]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(21),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[22]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(22),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[23]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(23),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[23]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \current_cycles_with_no_data_read_reg[15]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \current_cycles_with_no_data_read_reg[23]_i_2_n_0\,
      CO(6) => \current_cycles_with_no_data_read_reg[23]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[23]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[23]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[23]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[23]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[23]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[23]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \current_cycles_with_no_data_read_reg[23]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[23]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[23]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[23]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[23]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[23]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[23]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[23]_i_2_n_15\,
      S(7 downto 0) => current_cycles_with_no_data_read(23 downto 16)
    );
\current_cycles_with_no_data_read_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[24]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(24),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[25]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(25),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[26]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(26),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[27]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(27),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[28]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(28),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[29]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(29),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[2]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(2),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[30]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(30),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[31]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(31),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[31]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \current_cycles_with_no_data_read_reg[23]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \current_cycles_with_no_data_read_reg[31]_i_2_n_0\,
      CO(6) => \current_cycles_with_no_data_read_reg[31]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[31]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[31]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[31]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[31]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[31]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[31]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \current_cycles_with_no_data_read_reg[31]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[31]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[31]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[31]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[31]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[31]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[31]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[31]_i_2_n_15\,
      S(7 downto 0) => current_cycles_with_no_data_read(31 downto 24)
    );
\current_cycles_with_no_data_read_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[32]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(32),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[33]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(33),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[34]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(34),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[35]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(35),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[36]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(36),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[37]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(37),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[38]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(38),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[39]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(39),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[39]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \current_cycles_with_no_data_read_reg[31]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \current_cycles_with_no_data_read_reg[39]_i_2_n_0\,
      CO(6) => \current_cycles_with_no_data_read_reg[39]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[39]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[39]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[39]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[39]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[39]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[39]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \current_cycles_with_no_data_read_reg[39]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[39]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[39]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[39]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[39]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[39]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[39]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[39]_i_2_n_15\,
      S(7 downto 0) => current_cycles_with_no_data_read(39 downto 32)
    );
\current_cycles_with_no_data_read_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[3]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(3),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[40]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(40),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[41]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(41),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[42]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(42),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[43]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(43),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[44]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(44),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[45]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(45),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[46]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(46),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[47]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(47),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[47]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \current_cycles_with_no_data_read_reg[39]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \current_cycles_with_no_data_read_reg[47]_i_2_n_0\,
      CO(6) => \current_cycles_with_no_data_read_reg[47]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[47]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[47]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[47]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[47]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[47]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[47]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \current_cycles_with_no_data_read_reg[47]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[47]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[47]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[47]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[47]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[47]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[47]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[47]_i_2_n_15\,
      S(7 downto 0) => current_cycles_with_no_data_read(47 downto 40)
    );
\current_cycles_with_no_data_read_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[48]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(48),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[49]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(49),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[4]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(4),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[50]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(50),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[51]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(51),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[52]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(52),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[53]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(53),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[54]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(54),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[55]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(55),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[55]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \current_cycles_with_no_data_read_reg[47]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \current_cycles_with_no_data_read_reg[55]_i_2_n_0\,
      CO(6) => \current_cycles_with_no_data_read_reg[55]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[55]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[55]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[55]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[55]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[55]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[55]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \current_cycles_with_no_data_read_reg[55]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[55]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[55]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[55]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[55]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[55]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[55]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[55]_i_2_n_15\,
      S(7 downto 0) => current_cycles_with_no_data_read(55 downto 48)
    );
\current_cycles_with_no_data_read_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[56]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(56),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[57]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(57),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[58]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(58),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[59]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(59),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[5]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(5),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[60]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(60),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[61]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(61),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[62]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(62),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[63]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(63),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[63]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \current_cycles_with_no_data_read_reg[55]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_current_cycles_with_no_data_read_reg[63]_i_2_CO_UNCONNECTED\(7),
      CO(6) => \current_cycles_with_no_data_read_reg[63]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[63]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[63]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[63]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[63]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[63]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[63]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \current_cycles_with_no_data_read_reg[63]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[63]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[63]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[63]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[63]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[63]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[63]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[63]_i_2_n_15\,
      S(7 downto 0) => current_cycles_with_no_data_read(63 downto 56)
    );
\current_cycles_with_no_data_read_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[6]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(6),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[7]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(7),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[7]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \current_cycles_with_no_data_read_reg[7]_i_2_n_0\,
      CO(6) => \current_cycles_with_no_data_read_reg[7]_i_2_n_1\,
      CO(5) => \current_cycles_with_no_data_read_reg[7]_i_2_n_2\,
      CO(4) => \current_cycles_with_no_data_read_reg[7]_i_2_n_3\,
      CO(3) => \NLW_current_cycles_with_no_data_read_reg[7]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \current_cycles_with_no_data_read_reg[7]_i_2_n_5\,
      CO(1) => \current_cycles_with_no_data_read_reg[7]_i_2_n_6\,
      CO(0) => \current_cycles_with_no_data_read_reg[7]_i_2_n_7\,
      DI(7 downto 1) => B"0000000",
      DI(0) => current_cycles_with_no_data_read(0),
      O(7) => \current_cycles_with_no_data_read_reg[7]_i_2_n_8\,
      O(6) => \current_cycles_with_no_data_read_reg[7]_i_2_n_9\,
      O(5) => \current_cycles_with_no_data_read_reg[7]_i_2_n_10\,
      O(4) => \current_cycles_with_no_data_read_reg[7]_i_2_n_11\,
      O(3) => \current_cycles_with_no_data_read_reg[7]_i_2_n_12\,
      O(2) => \current_cycles_with_no_data_read_reg[7]_i_2_n_13\,
      O(1) => \current_cycles_with_no_data_read_reg[7]_i_2_n_14\,
      O(0) => \current_cycles_with_no_data_read_reg[7]_i_2_n_15\,
      S(7 downto 1) => current_cycles_with_no_data_read(7 downto 1),
      S(0) => \current_cycles_with_no_data_read[7]_i_3_n_0\
    );
\current_cycles_with_no_data_read_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[8]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(8),
      R => '0'
    );
\current_cycles_with_no_data_read_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \current_cycles_with_no_data_read[9]_i_1_n_0\,
      Q => current_cycles_with_no_data_read(9),
      R => '0'
    );
\dataBuffer_S1_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(0),
      Q => dataBuffer_S1(0),
      R => '0'
    );
\dataBuffer_S1_reg[100]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(100),
      Q => dataBuffer_S1(100),
      R => '0'
    );
\dataBuffer_S1_reg[101]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(101),
      Q => dataBuffer_S1(101),
      R => '0'
    );
\dataBuffer_S1_reg[102]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(102),
      Q => dataBuffer_S1(102),
      R => '0'
    );
\dataBuffer_S1_reg[103]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(103),
      Q => dataBuffer_S1(103),
      R => '0'
    );
\dataBuffer_S1_reg[104]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(104),
      Q => dataBuffer_S1(104),
      R => '0'
    );
\dataBuffer_S1_reg[105]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(105),
      Q => dataBuffer_S1(105),
      R => '0'
    );
\dataBuffer_S1_reg[106]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(106),
      Q => dataBuffer_S1(106),
      R => '0'
    );
\dataBuffer_S1_reg[107]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(107),
      Q => dataBuffer_S1(107),
      R => '0'
    );
\dataBuffer_S1_reg[108]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(108),
      Q => dataBuffer_S1(108),
      R => '0'
    );
\dataBuffer_S1_reg[109]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(109),
      Q => dataBuffer_S1(109),
      R => '0'
    );
\dataBuffer_S1_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(10),
      Q => dataBuffer_S1(10),
      R => '0'
    );
\dataBuffer_S1_reg[110]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(110),
      Q => dataBuffer_S1(110),
      R => '0'
    );
\dataBuffer_S1_reg[111]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(111),
      Q => dataBuffer_S1(111),
      R => '0'
    );
\dataBuffer_S1_reg[112]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(112),
      Q => dataBuffer_S1(112),
      R => '0'
    );
\dataBuffer_S1_reg[113]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(113),
      Q => dataBuffer_S1(113),
      R => '0'
    );
\dataBuffer_S1_reg[114]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(114),
      Q => dataBuffer_S1(114),
      R => '0'
    );
\dataBuffer_S1_reg[115]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(115),
      Q => dataBuffer_S1(115),
      R => '0'
    );
\dataBuffer_S1_reg[116]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(116),
      Q => dataBuffer_S1(116),
      R => '0'
    );
\dataBuffer_S1_reg[117]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(117),
      Q => dataBuffer_S1(117),
      R => '0'
    );
\dataBuffer_S1_reg[118]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(118),
      Q => dataBuffer_S1(118),
      R => '0'
    );
\dataBuffer_S1_reg[119]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(119),
      Q => dataBuffer_S1(119),
      R => '0'
    );
\dataBuffer_S1_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(11),
      Q => dataBuffer_S1(11),
      R => '0'
    );
\dataBuffer_S1_reg[120]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(120),
      Q => dataBuffer_S1(120),
      R => '0'
    );
\dataBuffer_S1_reg[121]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(121),
      Q => dataBuffer_S1(121),
      R => '0'
    );
\dataBuffer_S1_reg[122]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(122),
      Q => dataBuffer_S1(122),
      R => '0'
    );
\dataBuffer_S1_reg[123]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(123),
      Q => dataBuffer_S1(123),
      R => '0'
    );
\dataBuffer_S1_reg[124]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(124),
      Q => dataBuffer_S1(124),
      R => '0'
    );
\dataBuffer_S1_reg[125]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(125),
      Q => dataBuffer_S1(125),
      R => '0'
    );
\dataBuffer_S1_reg[126]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(126),
      Q => dataBuffer_S1(126),
      R => '0'
    );
\dataBuffer_S1_reg[127]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(127),
      Q => dataBuffer_S1(127),
      R => '0'
    );
\dataBuffer_S1_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(12),
      Q => dataBuffer_S1(12),
      R => '0'
    );
\dataBuffer_S1_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(13),
      Q => dataBuffer_S1(13),
      R => '0'
    );
\dataBuffer_S1_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(14),
      Q => dataBuffer_S1(14),
      R => '0'
    );
\dataBuffer_S1_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(15),
      Q => dataBuffer_S1(15),
      R => '0'
    );
\dataBuffer_S1_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(16),
      Q => dataBuffer_S1(16),
      R => '0'
    );
\dataBuffer_S1_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(17),
      Q => dataBuffer_S1(17),
      R => '0'
    );
\dataBuffer_S1_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(18),
      Q => dataBuffer_S1(18),
      R => '0'
    );
\dataBuffer_S1_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(19),
      Q => dataBuffer_S1(19),
      R => '0'
    );
\dataBuffer_S1_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(1),
      Q => dataBuffer_S1(1),
      R => '0'
    );
\dataBuffer_S1_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(20),
      Q => dataBuffer_S1(20),
      R => '0'
    );
\dataBuffer_S1_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(21),
      Q => dataBuffer_S1(21),
      R => '0'
    );
\dataBuffer_S1_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(22),
      Q => dataBuffer_S1(22),
      R => '0'
    );
\dataBuffer_S1_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(23),
      Q => dataBuffer_S1(23),
      R => '0'
    );
\dataBuffer_S1_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(24),
      Q => dataBuffer_S1(24),
      R => '0'
    );
\dataBuffer_S1_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(25),
      Q => dataBuffer_S1(25),
      R => '0'
    );
\dataBuffer_S1_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(26),
      Q => dataBuffer_S1(26),
      R => '0'
    );
\dataBuffer_S1_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(27),
      Q => dataBuffer_S1(27),
      R => '0'
    );
\dataBuffer_S1_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(28),
      Q => dataBuffer_S1(28),
      R => '0'
    );
\dataBuffer_S1_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(29),
      Q => dataBuffer_S1(29),
      R => '0'
    );
\dataBuffer_S1_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(2),
      Q => dataBuffer_S1(2),
      R => '0'
    );
\dataBuffer_S1_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(30),
      Q => dataBuffer_S1(30),
      R => '0'
    );
\dataBuffer_S1_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(31),
      Q => dataBuffer_S1(31),
      R => '0'
    );
\dataBuffer_S1_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(32),
      Q => dataBuffer_S1(32),
      R => '0'
    );
\dataBuffer_S1_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(33),
      Q => dataBuffer_S1(33),
      R => '0'
    );
\dataBuffer_S1_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(34),
      Q => dataBuffer_S1(34),
      R => '0'
    );
\dataBuffer_S1_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(35),
      Q => dataBuffer_S1(35),
      R => '0'
    );
\dataBuffer_S1_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(36),
      Q => dataBuffer_S1(36),
      R => '0'
    );
\dataBuffer_S1_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(37),
      Q => dataBuffer_S1(37),
      R => '0'
    );
\dataBuffer_S1_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(38),
      Q => dataBuffer_S1(38),
      R => '0'
    );
\dataBuffer_S1_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(39),
      Q => dataBuffer_S1(39),
      R => '0'
    );
\dataBuffer_S1_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(3),
      Q => dataBuffer_S1(3),
      R => '0'
    );
\dataBuffer_S1_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(40),
      Q => dataBuffer_S1(40),
      R => '0'
    );
\dataBuffer_S1_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(41),
      Q => dataBuffer_S1(41),
      R => '0'
    );
\dataBuffer_S1_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(42),
      Q => dataBuffer_S1(42),
      R => '0'
    );
\dataBuffer_S1_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(43),
      Q => dataBuffer_S1(43),
      R => '0'
    );
\dataBuffer_S1_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(44),
      Q => dataBuffer_S1(44),
      R => '0'
    );
\dataBuffer_S1_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(45),
      Q => dataBuffer_S1(45),
      R => '0'
    );
\dataBuffer_S1_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(46),
      Q => dataBuffer_S1(46),
      R => '0'
    );
\dataBuffer_S1_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(47),
      Q => dataBuffer_S1(47),
      R => '0'
    );
\dataBuffer_S1_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(48),
      Q => dataBuffer_S1(48),
      R => '0'
    );
\dataBuffer_S1_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(49),
      Q => dataBuffer_S1(49),
      R => '0'
    );
\dataBuffer_S1_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(4),
      Q => dataBuffer_S1(4),
      R => '0'
    );
\dataBuffer_S1_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(50),
      Q => dataBuffer_S1(50),
      R => '0'
    );
\dataBuffer_S1_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(51),
      Q => dataBuffer_S1(51),
      R => '0'
    );
\dataBuffer_S1_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(52),
      Q => dataBuffer_S1(52),
      R => '0'
    );
\dataBuffer_S1_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(53),
      Q => dataBuffer_S1(53),
      R => '0'
    );
\dataBuffer_S1_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(54),
      Q => dataBuffer_S1(54),
      R => '0'
    );
\dataBuffer_S1_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(55),
      Q => dataBuffer_S1(55),
      R => '0'
    );
\dataBuffer_S1_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(56),
      Q => dataBuffer_S1(56),
      R => '0'
    );
\dataBuffer_S1_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(57),
      Q => dataBuffer_S1(57),
      R => '0'
    );
\dataBuffer_S1_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(58),
      Q => dataBuffer_S1(58),
      R => '0'
    );
\dataBuffer_S1_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(59),
      Q => dataBuffer_S1(59),
      R => '0'
    );
\dataBuffer_S1_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(5),
      Q => dataBuffer_S1(5),
      R => '0'
    );
\dataBuffer_S1_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(60),
      Q => dataBuffer_S1(60),
      R => '0'
    );
\dataBuffer_S1_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(61),
      Q => dataBuffer_S1(61),
      R => '0'
    );
\dataBuffer_S1_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(62),
      Q => dataBuffer_S1(62),
      R => '0'
    );
\dataBuffer_S1_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(63),
      Q => dataBuffer_S1(63),
      R => '0'
    );
\dataBuffer_S1_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(64),
      Q => dataBuffer_S1(64),
      R => '0'
    );
\dataBuffer_S1_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(65),
      Q => dataBuffer_S1(65),
      R => '0'
    );
\dataBuffer_S1_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(66),
      Q => dataBuffer_S1(66),
      R => '0'
    );
\dataBuffer_S1_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(67),
      Q => dataBuffer_S1(67),
      R => '0'
    );
\dataBuffer_S1_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(68),
      Q => dataBuffer_S1(68),
      R => '0'
    );
\dataBuffer_S1_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(69),
      Q => dataBuffer_S1(69),
      R => '0'
    );
\dataBuffer_S1_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(6),
      Q => dataBuffer_S1(6),
      R => '0'
    );
\dataBuffer_S1_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(70),
      Q => dataBuffer_S1(70),
      R => '0'
    );
\dataBuffer_S1_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(71),
      Q => dataBuffer_S1(71),
      R => '0'
    );
\dataBuffer_S1_reg[72]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(72),
      Q => dataBuffer_S1(72),
      R => '0'
    );
\dataBuffer_S1_reg[73]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(73),
      Q => dataBuffer_S1(73),
      R => '0'
    );
\dataBuffer_S1_reg[74]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(74),
      Q => dataBuffer_S1(74),
      R => '0'
    );
\dataBuffer_S1_reg[75]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(75),
      Q => dataBuffer_S1(75),
      R => '0'
    );
\dataBuffer_S1_reg[76]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(76),
      Q => dataBuffer_S1(76),
      R => '0'
    );
\dataBuffer_S1_reg[77]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(77),
      Q => dataBuffer_S1(77),
      R => '0'
    );
\dataBuffer_S1_reg[78]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(78),
      Q => dataBuffer_S1(78),
      R => '0'
    );
\dataBuffer_S1_reg[79]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(79),
      Q => dataBuffer_S1(79),
      R => '0'
    );
\dataBuffer_S1_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(7),
      Q => dataBuffer_S1(7),
      R => '0'
    );
\dataBuffer_S1_reg[80]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(80),
      Q => dataBuffer_S1(80),
      R => '0'
    );
\dataBuffer_S1_reg[81]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(81),
      Q => dataBuffer_S1(81),
      R => '0'
    );
\dataBuffer_S1_reg[82]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(82),
      Q => dataBuffer_S1(82),
      R => '0'
    );
\dataBuffer_S1_reg[83]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(83),
      Q => dataBuffer_S1(83),
      R => '0'
    );
\dataBuffer_S1_reg[84]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(84),
      Q => dataBuffer_S1(84),
      R => '0'
    );
\dataBuffer_S1_reg[85]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(85),
      Q => dataBuffer_S1(85),
      R => '0'
    );
\dataBuffer_S1_reg[86]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(86),
      Q => dataBuffer_S1(86),
      R => '0'
    );
\dataBuffer_S1_reg[87]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(87),
      Q => dataBuffer_S1(87),
      R => '0'
    );
\dataBuffer_S1_reg[88]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(88),
      Q => dataBuffer_S1(88),
      R => '0'
    );
\dataBuffer_S1_reg[89]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(89),
      Q => dataBuffer_S1(89),
      R => '0'
    );
\dataBuffer_S1_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(8),
      Q => dataBuffer_S1(8),
      R => '0'
    );
\dataBuffer_S1_reg[90]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(90),
      Q => dataBuffer_S1(90),
      R => '0'
    );
\dataBuffer_S1_reg[91]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(91),
      Q => dataBuffer_S1(91),
      R => '0'
    );
\dataBuffer_S1_reg[92]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(92),
      Q => dataBuffer_S1(92),
      R => '0'
    );
\dataBuffer_S1_reg[93]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(93),
      Q => dataBuffer_S1(93),
      R => '0'
    );
\dataBuffer_S1_reg[94]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(94),
      Q => dataBuffer_S1(94),
      R => '0'
    );
\dataBuffer_S1_reg[95]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(95),
      Q => dataBuffer_S1(95),
      R => '0'
    );
\dataBuffer_S1_reg[96]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(96),
      Q => dataBuffer_S1(96),
      R => '0'
    );
\dataBuffer_S1_reg[97]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(97),
      Q => dataBuffer_S1(97),
      R => '0'
    );
\dataBuffer_S1_reg[98]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(98),
      Q => dataBuffer_S1(98),
      R => '0'
    );
\dataBuffer_S1_reg[99]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(99),
      Q => dataBuffer_S1(99),
      R => '0'
    );
\dataBuffer_S1_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => D(9),
      Q => dataBuffer_S1(9),
      R => '0'
    );
\dataBuffer_S2[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(0),
      I1 => dataBuffer_S2(0),
      O => \dataBuffer_S2[0]_i_1_n_0\
    );
\dataBuffer_S2[100]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(100),
      I1 => dataBuffer_S2(100),
      O => \dataBuffer_S2[100]_i_1_n_0\
    );
\dataBuffer_S2[101]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(101),
      I1 => dataBuffer_S2(101),
      O => \dataBuffer_S2[101]_i_1_n_0\
    );
\dataBuffer_S2[102]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(102),
      I1 => dataBuffer_S2(102),
      O => \dataBuffer_S2[102]_i_1_n_0\
    );
\dataBuffer_S2[103]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(103),
      I1 => dataBuffer_S2(103),
      O => \dataBuffer_S2[103]_i_1_n_0\
    );
\dataBuffer_S2[104]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(104),
      I1 => dataBuffer_S2(104),
      O => \dataBuffer_S2[104]_i_1_n_0\
    );
\dataBuffer_S2[105]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(105),
      I1 => dataBuffer_S2(105),
      O => \dataBuffer_S2[105]_i_1_n_0\
    );
\dataBuffer_S2[106]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(106),
      I1 => dataBuffer_S2(106),
      O => \dataBuffer_S2[106]_i_1_n_0\
    );
\dataBuffer_S2[107]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(107),
      I1 => dataBuffer_S2(107),
      O => \dataBuffer_S2[107]_i_1_n_0\
    );
\dataBuffer_S2[108]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(108),
      I1 => dataBuffer_S2(108),
      O => \dataBuffer_S2[108]_i_1_n_0\
    );
\dataBuffer_S2[109]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(109),
      I1 => dataBuffer_S2(109),
      O => \dataBuffer_S2[109]_i_1_n_0\
    );
\dataBuffer_S2[10]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(10),
      I1 => dataBuffer_S2(10),
      O => \dataBuffer_S2[10]_i_1_n_0\
    );
\dataBuffer_S2[110]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(110),
      I1 => dataBuffer_S2(110),
      O => \dataBuffer_S2[110]_i_1_n_0\
    );
\dataBuffer_S2[111]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(111),
      I1 => dataBuffer_S2(111),
      O => \dataBuffer_S2[111]_i_1_n_0\
    );
\dataBuffer_S2[112]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(112),
      I1 => dataBuffer_S2(112),
      O => \dataBuffer_S2[112]_i_1_n_0\
    );
\dataBuffer_S2[113]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(113),
      I1 => dataBuffer_S2(113),
      O => \dataBuffer_S2[113]_i_1_n_0\
    );
\dataBuffer_S2[114]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(114),
      I1 => dataBuffer_S2(114),
      O => \dataBuffer_S2[114]_i_1_n_0\
    );
\dataBuffer_S2[115]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(115),
      I1 => dataBuffer_S2(115),
      O => \dataBuffer_S2[115]_i_1_n_0\
    );
\dataBuffer_S2[116]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(116),
      I1 => dataBuffer_S2(116),
      O => \dataBuffer_S2[116]_i_1_n_0\
    );
\dataBuffer_S2[117]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(117),
      I1 => dataBuffer_S2(117),
      O => \dataBuffer_S2[117]_i_1_n_0\
    );
\dataBuffer_S2[118]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(118),
      I1 => dataBuffer_S2(118),
      O => \dataBuffer_S2[118]_i_1_n_0\
    );
\dataBuffer_S2[119]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(119),
      I1 => dataBuffer_S2(119),
      O => \dataBuffer_S2[119]_i_1_n_0\
    );
\dataBuffer_S2[11]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(11),
      I1 => dataBuffer_S2(11),
      O => \dataBuffer_S2[11]_i_1_n_0\
    );
\dataBuffer_S2[120]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(120),
      I1 => dataBuffer_S2(120),
      O => \dataBuffer_S2[120]_i_1_n_0\
    );
\dataBuffer_S2[121]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(121),
      I1 => dataBuffer_S2(121),
      O => \dataBuffer_S2[121]_i_1_n_0\
    );
\dataBuffer_S2[122]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(122),
      I1 => dataBuffer_S2(122),
      O => \dataBuffer_S2[122]_i_1_n_0\
    );
\dataBuffer_S2[123]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(123),
      I1 => dataBuffer_S2(123),
      O => \dataBuffer_S2[123]_i_1_n_0\
    );
\dataBuffer_S2[124]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(124),
      I1 => dataBuffer_S2(124),
      O => \dataBuffer_S2[124]_i_1_n_0\
    );
\dataBuffer_S2[125]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(125),
      I1 => dataBuffer_S2(125),
      O => \dataBuffer_S2[125]_i_1_n_0\
    );
\dataBuffer_S2[126]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(126),
      I1 => dataBuffer_S2(126),
      O => \dataBuffer_S2[126]_i_1_n_0\
    );
\dataBuffer_S2[127]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(127),
      I1 => dataBuffer_S2(127),
      O => \dataBuffer_S2[127]_i_1_n_0\
    );
\dataBuffer_S2[12]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(12),
      I1 => dataBuffer_S2(12),
      O => \dataBuffer_S2[12]_i_1_n_0\
    );
\dataBuffer_S2[13]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(13),
      I1 => dataBuffer_S2(13),
      O => \dataBuffer_S2[13]_i_1_n_0\
    );
\dataBuffer_S2[14]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(14),
      I1 => dataBuffer_S2(14),
      O => \dataBuffer_S2[14]_i_1_n_0\
    );
\dataBuffer_S2[15]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(15),
      I1 => dataBuffer_S2(15),
      O => \dataBuffer_S2[15]_i_1_n_0\
    );
\dataBuffer_S2[16]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(16),
      I1 => dataBuffer_S2(16),
      O => \dataBuffer_S2[16]_i_1_n_0\
    );
\dataBuffer_S2[17]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(17),
      I1 => dataBuffer_S2(17),
      O => \dataBuffer_S2[17]_i_1_n_0\
    );
\dataBuffer_S2[18]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(18),
      I1 => dataBuffer_S2(18),
      O => \dataBuffer_S2[18]_i_1_n_0\
    );
\dataBuffer_S2[19]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(19),
      I1 => dataBuffer_S2(19),
      O => \dataBuffer_S2[19]_i_1_n_0\
    );
\dataBuffer_S2[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(1),
      I1 => dataBuffer_S2(1),
      O => \dataBuffer_S2[1]_i_1_n_0\
    );
\dataBuffer_S2[20]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(20),
      I1 => dataBuffer_S2(20),
      O => \dataBuffer_S2[20]_i_1_n_0\
    );
\dataBuffer_S2[21]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(21),
      I1 => dataBuffer_S2(21),
      O => \dataBuffer_S2[21]_i_1_n_0\
    );
\dataBuffer_S2[22]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(22),
      I1 => dataBuffer_S2(22),
      O => \dataBuffer_S2[22]_i_1_n_0\
    );
\dataBuffer_S2[23]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(23),
      I1 => dataBuffer_S2(23),
      O => \dataBuffer_S2[23]_i_1_n_0\
    );
\dataBuffer_S2[24]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(24),
      I1 => dataBuffer_S2(24),
      O => \dataBuffer_S2[24]_i_1_n_0\
    );
\dataBuffer_S2[25]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(25),
      I1 => dataBuffer_S2(25),
      O => \dataBuffer_S2[25]_i_1_n_0\
    );
\dataBuffer_S2[26]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(26),
      I1 => dataBuffer_S2(26),
      O => \dataBuffer_S2[26]_i_1_n_0\
    );
\dataBuffer_S2[27]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(27),
      I1 => dataBuffer_S2(27),
      O => \dataBuffer_S2[27]_i_1_n_0\
    );
\dataBuffer_S2[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(28),
      I1 => dataBuffer_S2(28),
      O => \dataBuffer_S2[28]_i_1_n_0\
    );
\dataBuffer_S2[29]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(29),
      I1 => dataBuffer_S2(29),
      O => \dataBuffer_S2[29]_i_1_n_0\
    );
\dataBuffer_S2[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(2),
      I1 => dataBuffer_S2(2),
      O => \dataBuffer_S2[2]_i_1_n_0\
    );
\dataBuffer_S2[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(30),
      I1 => dataBuffer_S2(30),
      O => \dataBuffer_S2[30]_i_1_n_0\
    );
\dataBuffer_S2[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(31),
      I1 => dataBuffer_S2(31),
      O => \dataBuffer_S2[31]_i_1_n_0\
    );
\dataBuffer_S2[32]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(32),
      I1 => dataBuffer_S2(32),
      O => \dataBuffer_S2[32]_i_1_n_0\
    );
\dataBuffer_S2[33]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(33),
      I1 => dataBuffer_S2(33),
      O => \dataBuffer_S2[33]_i_1_n_0\
    );
\dataBuffer_S2[34]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(34),
      I1 => dataBuffer_S2(34),
      O => \dataBuffer_S2[34]_i_1_n_0\
    );
\dataBuffer_S2[35]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(35),
      I1 => dataBuffer_S2(35),
      O => \dataBuffer_S2[35]_i_1_n_0\
    );
\dataBuffer_S2[36]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(36),
      I1 => dataBuffer_S2(36),
      O => \dataBuffer_S2[36]_i_1_n_0\
    );
\dataBuffer_S2[37]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(37),
      I1 => dataBuffer_S2(37),
      O => \dataBuffer_S2[37]_i_1_n_0\
    );
\dataBuffer_S2[38]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(38),
      I1 => dataBuffer_S2(38),
      O => \dataBuffer_S2[38]_i_1_n_0\
    );
\dataBuffer_S2[39]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(39),
      I1 => dataBuffer_S2(39),
      O => \dataBuffer_S2[39]_i_1_n_0\
    );
\dataBuffer_S2[3]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(3),
      I1 => dataBuffer_S2(3),
      O => \dataBuffer_S2[3]_i_1_n_0\
    );
\dataBuffer_S2[40]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(40),
      I1 => dataBuffer_S2(40),
      O => \dataBuffer_S2[40]_i_1_n_0\
    );
\dataBuffer_S2[41]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(41),
      I1 => dataBuffer_S2(41),
      O => \dataBuffer_S2[41]_i_1_n_0\
    );
\dataBuffer_S2[42]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(42),
      I1 => dataBuffer_S2(42),
      O => \dataBuffer_S2[42]_i_1_n_0\
    );
\dataBuffer_S2[43]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(43),
      I1 => dataBuffer_S2(43),
      O => \dataBuffer_S2[43]_i_1_n_0\
    );
\dataBuffer_S2[44]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(44),
      I1 => dataBuffer_S2(44),
      O => \dataBuffer_S2[44]_i_1_n_0\
    );
\dataBuffer_S2[45]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(45),
      I1 => dataBuffer_S2(45),
      O => \dataBuffer_S2[45]_i_1_n_0\
    );
\dataBuffer_S2[46]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(46),
      I1 => dataBuffer_S2(46),
      O => \dataBuffer_S2[46]_i_1_n_0\
    );
\dataBuffer_S2[47]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(47),
      I1 => dataBuffer_S2(47),
      O => \dataBuffer_S2[47]_i_1_n_0\
    );
\dataBuffer_S2[48]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(48),
      I1 => dataBuffer_S2(48),
      O => \dataBuffer_S2[48]_i_1_n_0\
    );
\dataBuffer_S2[49]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(49),
      I1 => dataBuffer_S2(49),
      O => \dataBuffer_S2[49]_i_1_n_0\
    );
\dataBuffer_S2[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(4),
      I1 => dataBuffer_S2(4),
      O => \dataBuffer_S2[4]_i_1_n_0\
    );
\dataBuffer_S2[50]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(50),
      I1 => dataBuffer_S2(50),
      O => \dataBuffer_S2[50]_i_1_n_0\
    );
\dataBuffer_S2[51]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(51),
      I1 => dataBuffer_S2(51),
      O => \dataBuffer_S2[51]_i_1_n_0\
    );
\dataBuffer_S2[52]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(52),
      I1 => dataBuffer_S2(52),
      O => \dataBuffer_S2[52]_i_1_n_0\
    );
\dataBuffer_S2[53]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(53),
      I1 => dataBuffer_S2(53),
      O => \dataBuffer_S2[53]_i_1_n_0\
    );
\dataBuffer_S2[54]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(54),
      I1 => dataBuffer_S2(54),
      O => \dataBuffer_S2[54]_i_1_n_0\
    );
\dataBuffer_S2[55]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(55),
      I1 => dataBuffer_S2(55),
      O => \dataBuffer_S2[55]_i_1_n_0\
    );
\dataBuffer_S2[56]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(56),
      I1 => dataBuffer_S2(56),
      O => \dataBuffer_S2[56]_i_1_n_0\
    );
\dataBuffer_S2[57]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(57),
      I1 => dataBuffer_S2(57),
      O => \dataBuffer_S2[57]_i_1_n_0\
    );
\dataBuffer_S2[58]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(58),
      I1 => dataBuffer_S2(58),
      O => \dataBuffer_S2[58]_i_1_n_0\
    );
\dataBuffer_S2[59]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(59),
      I1 => dataBuffer_S2(59),
      O => \dataBuffer_S2[59]_i_1_n_0\
    );
\dataBuffer_S2[5]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(5),
      I1 => dataBuffer_S2(5),
      O => \dataBuffer_S2[5]_i_1_n_0\
    );
\dataBuffer_S2[60]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(60),
      I1 => dataBuffer_S2(60),
      O => \dataBuffer_S2[60]_i_1_n_0\
    );
\dataBuffer_S2[61]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(61),
      I1 => dataBuffer_S2(61),
      O => \dataBuffer_S2[61]_i_1_n_0\
    );
\dataBuffer_S2[62]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(62),
      I1 => dataBuffer_S2(62),
      O => \dataBuffer_S2[62]_i_1_n_0\
    );
\dataBuffer_S2[63]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(63),
      I1 => dataBuffer_S2(63),
      O => \dataBuffer_S2[63]_i_1_n_0\
    );
\dataBuffer_S2[64]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(64),
      I1 => dataBuffer_S2(64),
      O => \dataBuffer_S2[64]_i_1_n_0\
    );
\dataBuffer_S2[65]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(65),
      I1 => dataBuffer_S2(65),
      O => \dataBuffer_S2[65]_i_1_n_0\
    );
\dataBuffer_S2[66]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(66),
      I1 => dataBuffer_S2(66),
      O => \dataBuffer_S2[66]_i_1_n_0\
    );
\dataBuffer_S2[67]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(67),
      I1 => dataBuffer_S2(67),
      O => \dataBuffer_S2[67]_i_1_n_0\
    );
\dataBuffer_S2[68]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(68),
      I1 => dataBuffer_S2(68),
      O => \dataBuffer_S2[68]_i_1_n_0\
    );
\dataBuffer_S2[69]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(69),
      I1 => dataBuffer_S2(69),
      O => \dataBuffer_S2[69]_i_1_n_0\
    );
\dataBuffer_S2[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(6),
      I1 => dataBuffer_S2(6),
      O => \dataBuffer_S2[6]_i_1_n_0\
    );
\dataBuffer_S2[70]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(70),
      I1 => dataBuffer_S2(70),
      O => \dataBuffer_S2[70]_i_1_n_0\
    );
\dataBuffer_S2[71]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(71),
      I1 => dataBuffer_S2(71),
      O => \dataBuffer_S2[71]_i_1_n_0\
    );
\dataBuffer_S2[72]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(72),
      I1 => dataBuffer_S2(72),
      O => \dataBuffer_S2[72]_i_1_n_0\
    );
\dataBuffer_S2[73]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(73),
      I1 => dataBuffer_S2(73),
      O => \dataBuffer_S2[73]_i_1_n_0\
    );
\dataBuffer_S2[74]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(74),
      I1 => dataBuffer_S2(74),
      O => \dataBuffer_S2[74]_i_1_n_0\
    );
\dataBuffer_S2[75]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(75),
      I1 => dataBuffer_S2(75),
      O => \dataBuffer_S2[75]_i_1_n_0\
    );
\dataBuffer_S2[76]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(76),
      I1 => dataBuffer_S2(76),
      O => \dataBuffer_S2[76]_i_1_n_0\
    );
\dataBuffer_S2[77]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(77),
      I1 => dataBuffer_S2(77),
      O => \dataBuffer_S2[77]_i_1_n_0\
    );
\dataBuffer_S2[78]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(78),
      I1 => dataBuffer_S2(78),
      O => \dataBuffer_S2[78]_i_1_n_0\
    );
\dataBuffer_S2[79]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(79),
      I1 => dataBuffer_S2(79),
      O => \dataBuffer_S2[79]_i_1_n_0\
    );
\dataBuffer_S2[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => dataBuffer_S1(7),
      I1 => dataBuffer_S2(7),
      O => \dataBuffer_S2[7]_i_1_n_0\
    );
\dataBuffer_S2[80]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(80),
      I1 => dataBuffer_S2(80),
      O => \dataBuffer_S2[80]_i_1_n_0\
    );
\dataBuffer_S2[81]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(81),
      I1 => dataBuffer_S2(81),
      O => \dataBuffer_S2[81]_i_1_n_0\
    );
\dataBuffer_S2[82]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(82),
      I1 => dataBuffer_S2(82),
      O => \dataBuffer_S2[82]_i_1_n_0\
    );
\dataBuffer_S2[83]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(83),
      I1 => dataBuffer_S2(83),
      O => \dataBuffer_S2[83]_i_1_n_0\
    );
\dataBuffer_S2[84]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(84),
      I1 => dataBuffer_S2(84),
      O => \dataBuffer_S2[84]_i_1_n_0\
    );
\dataBuffer_S2[85]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(85),
      I1 => dataBuffer_S2(85),
      O => \dataBuffer_S2[85]_i_1_n_0\
    );
\dataBuffer_S2[86]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(86),
      I1 => dataBuffer_S2(86),
      O => \dataBuffer_S2[86]_i_1_n_0\
    );
\dataBuffer_S2[87]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(87),
      I1 => dataBuffer_S2(87),
      O => \dataBuffer_S2[87]_i_1_n_0\
    );
\dataBuffer_S2[88]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(88),
      I1 => dataBuffer_S2(88),
      O => \dataBuffer_S2[88]_i_1_n_0\
    );
\dataBuffer_S2[89]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(89),
      I1 => dataBuffer_S2(89),
      O => \dataBuffer_S2[89]_i_1_n_0\
    );
\dataBuffer_S2[8]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(8),
      I1 => dataBuffer_S2(8),
      O => \dataBuffer_S2[8]_i_1_n_0\
    );
\dataBuffer_S2[90]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(90),
      I1 => dataBuffer_S2(90),
      O => \dataBuffer_S2[90]_i_1_n_0\
    );
\dataBuffer_S2[91]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(91),
      I1 => dataBuffer_S2(91),
      O => \dataBuffer_S2[91]_i_1_n_0\
    );
\dataBuffer_S2[92]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(92),
      I1 => dataBuffer_S2(92),
      O => \dataBuffer_S2[92]_i_1_n_0\
    );
\dataBuffer_S2[93]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(93),
      I1 => dataBuffer_S2(93),
      O => \dataBuffer_S2[93]_i_1_n_0\
    );
\dataBuffer_S2[94]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(94),
      I1 => dataBuffer_S2(94),
      O => \dataBuffer_S2[94]_i_1_n_0\
    );
\dataBuffer_S2[95]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(95),
      I1 => dataBuffer_S2(95),
      O => \dataBuffer_S2[95]_i_1_n_0\
    );
\dataBuffer_S2[96]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(96),
      I1 => dataBuffer_S2(96),
      O => \dataBuffer_S2[96]_i_1_n_0\
    );
\dataBuffer_S2[97]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(97),
      I1 => dataBuffer_S2(97),
      O => \dataBuffer_S2[97]_i_1_n_0\
    );
\dataBuffer_S2[98]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(98),
      I1 => dataBuffer_S2(98),
      O => \dataBuffer_S2[98]_i_1_n_0\
    );
\dataBuffer_S2[99]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(99),
      I1 => dataBuffer_S2(99),
      O => \dataBuffer_S2[99]_i_1_n_0\
    );
\dataBuffer_S2[9]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => dataBuffer_S1(9),
      I1 => dataBuffer_S2(9),
      O => \dataBuffer_S2[9]_i_1_n_0\
    );
\dataBuffer_S2_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[0]_i_1_n_0\,
      Q => dataBuffer_S2(0),
      R => '0'
    );
\dataBuffer_S2_reg[100]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[100]_i_1_n_0\,
      Q => dataBuffer_S2(100),
      R => '0'
    );
\dataBuffer_S2_reg[101]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[101]_i_1_n_0\,
      Q => dataBuffer_S2(101),
      R => '0'
    );
\dataBuffer_S2_reg[102]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[102]_i_1_n_0\,
      Q => dataBuffer_S2(102),
      R => '0'
    );
\dataBuffer_S2_reg[103]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[103]_i_1_n_0\,
      Q => dataBuffer_S2(103),
      R => '0'
    );
\dataBuffer_S2_reg[104]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[104]_i_1_n_0\,
      Q => dataBuffer_S2(104),
      R => '0'
    );
\dataBuffer_S2_reg[105]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[105]_i_1_n_0\,
      Q => dataBuffer_S2(105),
      R => '0'
    );
\dataBuffer_S2_reg[106]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[106]_i_1_n_0\,
      Q => dataBuffer_S2(106),
      R => '0'
    );
\dataBuffer_S2_reg[107]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[107]_i_1_n_0\,
      Q => dataBuffer_S2(107),
      R => '0'
    );
\dataBuffer_S2_reg[108]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[108]_i_1_n_0\,
      Q => dataBuffer_S2(108),
      R => '0'
    );
\dataBuffer_S2_reg[109]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[109]_i_1_n_0\,
      Q => dataBuffer_S2(109),
      R => '0'
    );
\dataBuffer_S2_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[10]_i_1_n_0\,
      Q => dataBuffer_S2(10),
      R => '0'
    );
\dataBuffer_S2_reg[110]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[110]_i_1_n_0\,
      Q => dataBuffer_S2(110),
      R => '0'
    );
\dataBuffer_S2_reg[111]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[111]_i_1_n_0\,
      Q => dataBuffer_S2(111),
      R => '0'
    );
\dataBuffer_S2_reg[112]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[112]_i_1_n_0\,
      Q => dataBuffer_S2(112),
      R => '0'
    );
\dataBuffer_S2_reg[113]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[113]_i_1_n_0\,
      Q => dataBuffer_S2(113),
      R => '0'
    );
\dataBuffer_S2_reg[114]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[114]_i_1_n_0\,
      Q => dataBuffer_S2(114),
      R => '0'
    );
\dataBuffer_S2_reg[115]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[115]_i_1_n_0\,
      Q => dataBuffer_S2(115),
      R => '0'
    );
\dataBuffer_S2_reg[116]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[116]_i_1_n_0\,
      Q => dataBuffer_S2(116),
      R => '0'
    );
\dataBuffer_S2_reg[117]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[117]_i_1_n_0\,
      Q => dataBuffer_S2(117),
      R => '0'
    );
\dataBuffer_S2_reg[118]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[118]_i_1_n_0\,
      Q => dataBuffer_S2(118),
      R => '0'
    );
\dataBuffer_S2_reg[119]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[119]_i_1_n_0\,
      Q => dataBuffer_S2(119),
      R => '0'
    );
\dataBuffer_S2_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[11]_i_1_n_0\,
      Q => dataBuffer_S2(11),
      R => '0'
    );
\dataBuffer_S2_reg[120]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[120]_i_1_n_0\,
      Q => dataBuffer_S2(120),
      R => '0'
    );
\dataBuffer_S2_reg[121]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[121]_i_1_n_0\,
      Q => dataBuffer_S2(121),
      R => '0'
    );
\dataBuffer_S2_reg[122]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[122]_i_1_n_0\,
      Q => dataBuffer_S2(122),
      R => '0'
    );
\dataBuffer_S2_reg[123]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[123]_i_1_n_0\,
      Q => dataBuffer_S2(123),
      R => '0'
    );
\dataBuffer_S2_reg[124]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[124]_i_1_n_0\,
      Q => dataBuffer_S2(124),
      R => '0'
    );
\dataBuffer_S2_reg[125]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[125]_i_1_n_0\,
      Q => dataBuffer_S2(125),
      R => '0'
    );
\dataBuffer_S2_reg[126]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[126]_i_1_n_0\,
      Q => dataBuffer_S2(126),
      R => '0'
    );
\dataBuffer_S2_reg[127]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[127]_i_1_n_0\,
      Q => dataBuffer_S2(127),
      R => '0'
    );
\dataBuffer_S2_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[12]_i_1_n_0\,
      Q => dataBuffer_S2(12),
      R => '0'
    );
\dataBuffer_S2_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[13]_i_1_n_0\,
      Q => dataBuffer_S2(13),
      R => '0'
    );
\dataBuffer_S2_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[14]_i_1_n_0\,
      Q => dataBuffer_S2(14),
      R => '0'
    );
\dataBuffer_S2_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[15]_i_1_n_0\,
      Q => dataBuffer_S2(15),
      R => '0'
    );
\dataBuffer_S2_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[16]_i_1_n_0\,
      Q => dataBuffer_S2(16),
      R => '0'
    );
\dataBuffer_S2_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[17]_i_1_n_0\,
      Q => dataBuffer_S2(17),
      R => '0'
    );
\dataBuffer_S2_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[18]_i_1_n_0\,
      Q => dataBuffer_S2(18),
      R => '0'
    );
\dataBuffer_S2_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[19]_i_1_n_0\,
      Q => dataBuffer_S2(19),
      R => '0'
    );
\dataBuffer_S2_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[1]_i_1_n_0\,
      Q => dataBuffer_S2(1),
      R => '0'
    );
\dataBuffer_S2_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[20]_i_1_n_0\,
      Q => dataBuffer_S2(20),
      R => '0'
    );
\dataBuffer_S2_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[21]_i_1_n_0\,
      Q => dataBuffer_S2(21),
      R => '0'
    );
\dataBuffer_S2_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[22]_i_1_n_0\,
      Q => dataBuffer_S2(22),
      R => '0'
    );
\dataBuffer_S2_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[23]_i_1_n_0\,
      Q => dataBuffer_S2(23),
      R => '0'
    );
\dataBuffer_S2_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[24]_i_1_n_0\,
      Q => dataBuffer_S2(24),
      R => '0'
    );
\dataBuffer_S2_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[25]_i_1_n_0\,
      Q => dataBuffer_S2(25),
      R => '0'
    );
\dataBuffer_S2_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[26]_i_1_n_0\,
      Q => dataBuffer_S2(26),
      R => '0'
    );
\dataBuffer_S2_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[27]_i_1_n_0\,
      Q => dataBuffer_S2(27),
      R => '0'
    );
\dataBuffer_S2_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[28]_i_1_n_0\,
      Q => dataBuffer_S2(28),
      R => '0'
    );
\dataBuffer_S2_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[29]_i_1_n_0\,
      Q => dataBuffer_S2(29),
      R => '0'
    );
\dataBuffer_S2_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[2]_i_1_n_0\,
      Q => dataBuffer_S2(2),
      R => '0'
    );
\dataBuffer_S2_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[30]_i_1_n_0\,
      Q => dataBuffer_S2(30),
      R => '0'
    );
\dataBuffer_S2_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[31]_i_1_n_0\,
      Q => dataBuffer_S2(31),
      R => '0'
    );
\dataBuffer_S2_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[32]_i_1_n_0\,
      Q => dataBuffer_S2(32),
      R => '0'
    );
\dataBuffer_S2_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[33]_i_1_n_0\,
      Q => dataBuffer_S2(33),
      R => '0'
    );
\dataBuffer_S2_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[34]_i_1_n_0\,
      Q => dataBuffer_S2(34),
      R => '0'
    );
\dataBuffer_S2_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[35]_i_1_n_0\,
      Q => dataBuffer_S2(35),
      R => '0'
    );
\dataBuffer_S2_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[36]_i_1_n_0\,
      Q => dataBuffer_S2(36),
      R => '0'
    );
\dataBuffer_S2_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[37]_i_1_n_0\,
      Q => dataBuffer_S2(37),
      R => '0'
    );
\dataBuffer_S2_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[38]_i_1_n_0\,
      Q => dataBuffer_S2(38),
      R => '0'
    );
\dataBuffer_S2_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[39]_i_1_n_0\,
      Q => dataBuffer_S2(39),
      R => '0'
    );
\dataBuffer_S2_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[3]_i_1_n_0\,
      Q => dataBuffer_S2(3),
      R => '0'
    );
\dataBuffer_S2_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[40]_i_1_n_0\,
      Q => dataBuffer_S2(40),
      R => '0'
    );
\dataBuffer_S2_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[41]_i_1_n_0\,
      Q => dataBuffer_S2(41),
      R => '0'
    );
\dataBuffer_S2_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[42]_i_1_n_0\,
      Q => dataBuffer_S2(42),
      R => '0'
    );
\dataBuffer_S2_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[43]_i_1_n_0\,
      Q => dataBuffer_S2(43),
      R => '0'
    );
\dataBuffer_S2_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[44]_i_1_n_0\,
      Q => dataBuffer_S2(44),
      R => '0'
    );
\dataBuffer_S2_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[45]_i_1_n_0\,
      Q => dataBuffer_S2(45),
      R => '0'
    );
\dataBuffer_S2_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[46]_i_1_n_0\,
      Q => dataBuffer_S2(46),
      R => '0'
    );
\dataBuffer_S2_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[47]_i_1_n_0\,
      Q => dataBuffer_S2(47),
      R => '0'
    );
\dataBuffer_S2_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[48]_i_1_n_0\,
      Q => dataBuffer_S2(48),
      R => '0'
    );
\dataBuffer_S2_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[49]_i_1_n_0\,
      Q => dataBuffer_S2(49),
      R => '0'
    );
\dataBuffer_S2_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[4]_i_1_n_0\,
      Q => dataBuffer_S2(4),
      R => '0'
    );
\dataBuffer_S2_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[50]_i_1_n_0\,
      Q => dataBuffer_S2(50),
      R => '0'
    );
\dataBuffer_S2_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[51]_i_1_n_0\,
      Q => dataBuffer_S2(51),
      R => '0'
    );
\dataBuffer_S2_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[52]_i_1_n_0\,
      Q => dataBuffer_S2(52),
      R => '0'
    );
\dataBuffer_S2_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[53]_i_1_n_0\,
      Q => dataBuffer_S2(53),
      R => '0'
    );
\dataBuffer_S2_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[54]_i_1_n_0\,
      Q => dataBuffer_S2(54),
      R => '0'
    );
\dataBuffer_S2_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[55]_i_1_n_0\,
      Q => dataBuffer_S2(55),
      R => '0'
    );
\dataBuffer_S2_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[56]_i_1_n_0\,
      Q => dataBuffer_S2(56),
      R => '0'
    );
\dataBuffer_S2_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[57]_i_1_n_0\,
      Q => dataBuffer_S2(57),
      R => '0'
    );
\dataBuffer_S2_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[58]_i_1_n_0\,
      Q => dataBuffer_S2(58),
      R => '0'
    );
\dataBuffer_S2_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[59]_i_1_n_0\,
      Q => dataBuffer_S2(59),
      R => '0'
    );
\dataBuffer_S2_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[5]_i_1_n_0\,
      Q => dataBuffer_S2(5),
      R => '0'
    );
\dataBuffer_S2_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[60]_i_1_n_0\,
      Q => dataBuffer_S2(60),
      R => '0'
    );
\dataBuffer_S2_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[61]_i_1_n_0\,
      Q => dataBuffer_S2(61),
      R => '0'
    );
\dataBuffer_S2_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[62]_i_1_n_0\,
      Q => dataBuffer_S2(62),
      R => '0'
    );
\dataBuffer_S2_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[63]_i_1_n_0\,
      Q => dataBuffer_S2(63),
      R => '0'
    );
\dataBuffer_S2_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[64]_i_1_n_0\,
      Q => dataBuffer_S2(64),
      R => '0'
    );
\dataBuffer_S2_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[65]_i_1_n_0\,
      Q => dataBuffer_S2(65),
      R => '0'
    );
\dataBuffer_S2_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[66]_i_1_n_0\,
      Q => dataBuffer_S2(66),
      R => '0'
    );
\dataBuffer_S2_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[67]_i_1_n_0\,
      Q => dataBuffer_S2(67),
      R => '0'
    );
\dataBuffer_S2_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[68]_i_1_n_0\,
      Q => dataBuffer_S2(68),
      R => '0'
    );
\dataBuffer_S2_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[69]_i_1_n_0\,
      Q => dataBuffer_S2(69),
      R => '0'
    );
\dataBuffer_S2_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[6]_i_1_n_0\,
      Q => dataBuffer_S2(6),
      R => '0'
    );
\dataBuffer_S2_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[70]_i_1_n_0\,
      Q => dataBuffer_S2(70),
      R => '0'
    );
\dataBuffer_S2_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[71]_i_1_n_0\,
      Q => dataBuffer_S2(71),
      R => '0'
    );
\dataBuffer_S2_reg[72]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[72]_i_1_n_0\,
      Q => dataBuffer_S2(72),
      R => '0'
    );
\dataBuffer_S2_reg[73]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[73]_i_1_n_0\,
      Q => dataBuffer_S2(73),
      R => '0'
    );
\dataBuffer_S2_reg[74]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[74]_i_1_n_0\,
      Q => dataBuffer_S2(74),
      R => '0'
    );
\dataBuffer_S2_reg[75]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[75]_i_1_n_0\,
      Q => dataBuffer_S2(75),
      R => '0'
    );
\dataBuffer_S2_reg[76]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[76]_i_1_n_0\,
      Q => dataBuffer_S2(76),
      R => '0'
    );
\dataBuffer_S2_reg[77]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[77]_i_1_n_0\,
      Q => dataBuffer_S2(77),
      R => '0'
    );
\dataBuffer_S2_reg[78]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[78]_i_1_n_0\,
      Q => dataBuffer_S2(78),
      R => '0'
    );
\dataBuffer_S2_reg[79]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[79]_i_1_n_0\,
      Q => dataBuffer_S2(79),
      R => '0'
    );
\dataBuffer_S2_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[7]_i_1_n_0\,
      Q => dataBuffer_S2(7),
      R => '0'
    );
\dataBuffer_S2_reg[80]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[80]_i_1_n_0\,
      Q => dataBuffer_S2(80),
      R => '0'
    );
\dataBuffer_S2_reg[81]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[81]_i_1_n_0\,
      Q => dataBuffer_S2(81),
      R => '0'
    );
\dataBuffer_S2_reg[82]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[82]_i_1_n_0\,
      Q => dataBuffer_S2(82),
      R => '0'
    );
\dataBuffer_S2_reg[83]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[83]_i_1_n_0\,
      Q => dataBuffer_S2(83),
      R => '0'
    );
\dataBuffer_S2_reg[84]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[84]_i_1_n_0\,
      Q => dataBuffer_S2(84),
      R => '0'
    );
\dataBuffer_S2_reg[85]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[85]_i_1_n_0\,
      Q => dataBuffer_S2(85),
      R => '0'
    );
\dataBuffer_S2_reg[86]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[86]_i_1_n_0\,
      Q => dataBuffer_S2(86),
      R => '0'
    );
\dataBuffer_S2_reg[87]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[87]_i_1_n_0\,
      Q => dataBuffer_S2(87),
      R => '0'
    );
\dataBuffer_S2_reg[88]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[88]_i_1_n_0\,
      Q => dataBuffer_S2(88),
      R => '0'
    );
\dataBuffer_S2_reg[89]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[89]_i_1_n_0\,
      Q => dataBuffer_S2(89),
      R => '0'
    );
\dataBuffer_S2_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[8]_i_1_n_0\,
      Q => dataBuffer_S2(8),
      R => '0'
    );
\dataBuffer_S2_reg[90]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[90]_i_1_n_0\,
      Q => dataBuffer_S2(90),
      R => '0'
    );
\dataBuffer_S2_reg[91]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[91]_i_1_n_0\,
      Q => dataBuffer_S2(91),
      R => '0'
    );
\dataBuffer_S2_reg[92]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[92]_i_1_n_0\,
      Q => dataBuffer_S2(92),
      R => '0'
    );
\dataBuffer_S2_reg[93]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[93]_i_1_n_0\,
      Q => dataBuffer_S2(93),
      R => '0'
    );
\dataBuffer_S2_reg[94]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[94]_i_1_n_0\,
      Q => dataBuffer_S2(94),
      R => '0'
    );
\dataBuffer_S2_reg[95]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[95]_i_1_n_0\,
      Q => dataBuffer_S2(95),
      R => '0'
    );
\dataBuffer_S2_reg[96]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[96]_i_1_n_0\,
      Q => dataBuffer_S2(96),
      R => '0'
    );
\dataBuffer_S2_reg[97]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[97]_i_1_n_0\,
      Q => dataBuffer_S2(97),
      R => '0'
    );
\dataBuffer_S2_reg[98]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[98]_i_1_n_0\,
      Q => dataBuffer_S2(98),
      R => '0'
    );
\dataBuffer_S2_reg[99]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[99]_i_1_n_0\,
      Q => dataBuffer_S2(99),
      R => '0'
    );
\dataBuffer_S2_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \dataBuffer_S2[9]_i_1_n_0\,
      Q => dataBuffer_S2(9),
      R => '0'
    );
data_read_in_this_test_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A8FC"
    )
        port map (
      I0 => data_read_in_this_test_i_2_n_0,
      I1 => data_read_in_this_test,
      I2 => readDataValid,
      I3 => reset_cmd,
      O => data_read_in_this_test_i_1_n_0
    );
data_read_in_this_test_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => active_runtime0,
      I1 => active_runtime1,
      I2 => active_blocking,
      I3 => \countDataReceived[39]_i_7_n_0\,
      I4 => active_runtime2,
      I5 => active_runtime3,
      O => data_read_in_this_test_i_2_n_0
    );
data_read_in_this_test_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => data_read_in_this_test_i_1_n_0,
      Q => data_read_in_this_test,
      R => '0'
    );
\debug_axi_control_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(0),
      Q => \^q\(0),
      R => '0'
    );
\debug_axi_control_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(10),
      Q => \^q\(10),
      R => '0'
    );
\debug_axi_control_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(11),
      Q => \^q\(11),
      R => '0'
    );
\debug_axi_control_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(12),
      Q => \^q\(12),
      R => '0'
    );
\debug_axi_control_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(13),
      Q => \^q\(13),
      R => '0'
    );
\debug_axi_control_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(14),
      Q => \^q\(14),
      R => '0'
    );
\debug_axi_control_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(15),
      Q => \^q\(15),
      R => '0'
    );
\debug_axi_control_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(16),
      Q => \^q\(16),
      R => '0'
    );
\debug_axi_control_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(17),
      Q => \^q\(17),
      R => '0'
    );
\debug_axi_control_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(18),
      Q => \^q\(18),
      R => '0'
    );
\debug_axi_control_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(19),
      Q => \^q\(19),
      R => '0'
    );
\debug_axi_control_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(1),
      Q => \^q\(1),
      R => '0'
    );
\debug_axi_control_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(20),
      Q => \^q\(20),
      R => '0'
    );
\debug_axi_control_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(21),
      Q => \^q\(21),
      R => '0'
    );
\debug_axi_control_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(22),
      Q => \debug_axi_control_reg_n_0_\(22),
      R => '0'
    );
\debug_axi_control_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(23),
      Q => \debug_axi_control_reg_n_0_\(23),
      R => '0'
    );
\debug_axi_control_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(24),
      Q => \debug_axi_control_reg_n_0_\(24),
      R => '0'
    );
\debug_axi_control_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(25),
      Q => \debug_axi_control_reg_n_0_\(25),
      R => '0'
    );
\debug_axi_control_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(26),
      Q => \debug_axi_control_reg_n_0_\(26),
      R => '0'
    );
\debug_axi_control_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(27),
      Q => \debug_axi_control_reg_n_0_\(27),
      R => '0'
    );
\debug_axi_control_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(28),
      Q => \debug_axi_control_reg_n_0_\(28),
      R => '0'
    );
\debug_axi_control_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(29),
      Q => \debug_axi_control_reg_n_0_\(29),
      R => '0'
    );
\debug_axi_control_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(2),
      Q => \^q\(2),
      R => '0'
    );
\debug_axi_control_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(30),
      Q => \debug_axi_control_reg_n_0_\(30),
      R => '0'
    );
\debug_axi_control_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(31),
      Q => \debug_axi_control_reg_n_0_\(31),
      R => '0'
    );
\debug_axi_control_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(3),
      Q => \^q\(3),
      R => '0'
    );
\debug_axi_control_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(4),
      Q => \^q\(4),
      R => '0'
    );
\debug_axi_control_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(5),
      Q => \^q\(5),
      R => '0'
    );
\debug_axi_control_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(6),
      Q => \^q\(6),
      R => '0'
    );
\debug_axi_control_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(7),
      Q => \^q\(7),
      R => '0'
    );
\debug_axi_control_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(8),
      Q => \^q\(8),
      R => '0'
    );
\debug_axi_control_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_68,
      D => axi_c_write_data(9),
      Q => \^q\(9),
      R => '0'
    );
\debug_axi_r_control_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(0),
      Q => \^m_ddr_axi_arsize[2]\(0),
      R => '0'
    );
\debug_axi_r_control_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(10),
      Q => \^m_ddr_axi_arsize[2]\(10),
      R => '0'
    );
\debug_axi_r_control_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(11),
      Q => \^m_ddr_axi_arsize[2]\(11),
      R => '0'
    );
\debug_axi_r_control_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(12),
      Q => \^m_ddr_axi_arsize[2]\(12),
      R => '0'
    );
\debug_axi_r_control_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(13),
      Q => \^m_ddr_axi_arsize[2]\(13),
      R => '0'
    );
\debug_axi_r_control_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(14),
      Q => \^m_ddr_axi_arsize[2]\(14),
      R => '0'
    );
\debug_axi_r_control_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(15),
      Q => \^m_ddr_axi_arsize[2]\(15),
      R => '0'
    );
\debug_axi_r_control_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(16),
      Q => \^m_ddr_axi_arsize[2]\(16),
      R => '0'
    );
\debug_axi_r_control_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(17),
      Q => \^m_ddr_axi_arsize[2]\(17),
      R => '0'
    );
\debug_axi_r_control_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(18),
      Q => \^m_ddr_axi_arsize[2]\(18),
      R => '0'
    );
\debug_axi_r_control_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(19),
      Q => \^m_ddr_axi_arsize[2]\(19),
      R => '0'
    );
\debug_axi_r_control_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(1),
      Q => \^m_ddr_axi_arsize[2]\(1),
      R => '0'
    );
\debug_axi_r_control_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(20),
      Q => \^m_ddr_axi_arsize[2]\(20),
      R => '0'
    );
\debug_axi_r_control_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(21),
      Q => \^m_ddr_axi_arsize[2]\(21),
      R => '0'
    );
\debug_axi_r_control_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(22),
      Q => \debug_axi_r_control_reg_n_0_\(22),
      R => '0'
    );
\debug_axi_r_control_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(23),
      Q => \debug_axi_r_control_reg_n_0_\(23),
      R => '0'
    );
\debug_axi_r_control_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(24),
      Q => \debug_axi_r_control_reg_n_0_\(24),
      R => '0'
    );
\debug_axi_r_control_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(25),
      Q => \debug_axi_r_control_reg_n_0_\(25),
      R => '0'
    );
\debug_axi_r_control_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(26),
      Q => \debug_axi_r_control_reg_n_0_\(26),
      R => '0'
    );
\debug_axi_r_control_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(27),
      Q => \debug_axi_r_control_reg_n_0_\(27),
      R => '0'
    );
\debug_axi_r_control_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(28),
      Q => \debug_axi_r_control_reg_n_0_\(28),
      R => '0'
    );
\debug_axi_r_control_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(29),
      Q => \debug_axi_r_control_reg_n_0_\(29),
      R => '0'
    );
\debug_axi_r_control_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(2),
      Q => \^m_ddr_axi_arsize[2]\(2),
      R => '0'
    );
\debug_axi_r_control_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(30),
      Q => \debug_axi_r_control_reg_n_0_\(30),
      R => '0'
    );
\debug_axi_r_control_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(31),
      Q => \debug_axi_r_control_reg_n_0_\(31),
      R => '0'
    );
\debug_axi_r_control_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(3),
      Q => \^m_ddr_axi_arsize[2]\(3),
      R => '0'
    );
\debug_axi_r_control_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(4),
      Q => \^m_ddr_axi_arsize[2]\(4),
      R => '0'
    );
\debug_axi_r_control_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(5),
      Q => \^m_ddr_axi_arsize[2]\(5),
      R => '0'
    );
\debug_axi_r_control_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(6),
      Q => \^m_ddr_axi_arsize[2]\(6),
      R => '0'
    );
\debug_axi_r_control_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(7),
      Q => \^m_ddr_axi_arsize[2]\(7),
      R => '0'
    );
\debug_axi_r_control_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(8),
      Q => \^m_ddr_axi_arsize[2]\(8),
      R => '0'
    );
\debug_axi_r_control_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => sactn_n_69,
      D => axi_c_write_data(9),
      Q => \^m_ddr_axi_arsize[2]\(9),
      R => '0'
    );
\latency[15]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(15),
      I1 => countDataToBeReceived_reg(15),
      I2 => latency(15),
      I3 => \latency[15]_i_2_n_0\,
      O => \latency[15]_i_10_n_0\
    );
\latency[15]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(14),
      I1 => countDataToBeReceived_reg(14),
      I2 => latency(14),
      I3 => \latency[15]_i_3_n_0\,
      O => \latency[15]_i_11_n_0\
    );
\latency[15]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(13),
      I1 => countDataToBeReceived_reg(13),
      I2 => latency(13),
      I3 => \latency[15]_i_4_n_0\,
      O => \latency[15]_i_12_n_0\
    );
\latency[15]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(12),
      I1 => countDataToBeReceived_reg(12),
      I2 => latency(12),
      I3 => \latency[15]_i_5_n_0\,
      O => \latency[15]_i_13_n_0\
    );
\latency[15]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(11),
      I1 => countDataToBeReceived_reg(11),
      I2 => latency(11),
      I3 => \latency[15]_i_6_n_0\,
      O => \latency[15]_i_14_n_0\
    );
\latency[15]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(10),
      I1 => countDataToBeReceived_reg(10),
      I2 => latency(10),
      I3 => \latency[15]_i_7_n_0\,
      O => \latency[15]_i_15_n_0\
    );
\latency[15]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(9),
      I1 => countDataToBeReceived_reg(9),
      I2 => latency(9),
      I3 => \latency[15]_i_8_n_0\,
      O => \latency[15]_i_16_n_0\
    );
\latency[15]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(8),
      I1 => countDataToBeReceived_reg(8),
      I2 => latency(8),
      I3 => \latency[15]_i_9_n_0\,
      O => \latency[15]_i_17_n_0\
    );
\latency[15]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(14),
      I1 => countDataToBeReceived_reg(14),
      I2 => latency(14),
      O => \latency[15]_i_2_n_0\
    );
\latency[15]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(13),
      I1 => countDataToBeReceived_reg(13),
      I2 => latency(13),
      O => \latency[15]_i_3_n_0\
    );
\latency[15]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(12),
      I1 => countDataToBeReceived_reg(12),
      I2 => latency(12),
      O => \latency[15]_i_4_n_0\
    );
\latency[15]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(11),
      I1 => countDataToBeReceived_reg(11),
      I2 => latency(11),
      O => \latency[15]_i_5_n_0\
    );
\latency[15]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(10),
      I1 => countDataToBeReceived_reg(10),
      I2 => latency(10),
      O => \latency[15]_i_6_n_0\
    );
\latency[15]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(9),
      I1 => countDataToBeReceived_reg(9),
      I2 => latency(9),
      O => \latency[15]_i_7_n_0\
    );
\latency[15]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(8),
      I1 => countDataToBeReceived_reg(8),
      I2 => latency(8),
      O => \latency[15]_i_8_n_0\
    );
\latency[15]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(7),
      I1 => countDataToBeReceived_reg(7),
      I2 => latency(7),
      O => \latency[15]_i_9_n_0\
    );
\latency[23]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(23),
      I1 => countDataToBeReceived_reg(23),
      I2 => latency(23),
      I3 => \latency[23]_i_2_n_0\,
      O => \latency[23]_i_10_n_0\
    );
\latency[23]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(22),
      I1 => countDataToBeReceived_reg(22),
      I2 => latency(22),
      I3 => \latency[23]_i_3_n_0\,
      O => \latency[23]_i_11_n_0\
    );
\latency[23]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(21),
      I1 => countDataToBeReceived_reg(21),
      I2 => latency(21),
      I3 => \latency[23]_i_4_n_0\,
      O => \latency[23]_i_12_n_0\
    );
\latency[23]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(20),
      I1 => countDataToBeReceived_reg(20),
      I2 => latency(20),
      I3 => \latency[23]_i_5_n_0\,
      O => \latency[23]_i_13_n_0\
    );
\latency[23]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(19),
      I1 => countDataToBeReceived_reg(19),
      I2 => latency(19),
      I3 => \latency[23]_i_6_n_0\,
      O => \latency[23]_i_14_n_0\
    );
\latency[23]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(18),
      I1 => countDataToBeReceived_reg(18),
      I2 => latency(18),
      I3 => \latency[23]_i_7_n_0\,
      O => \latency[23]_i_15_n_0\
    );
\latency[23]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(17),
      I1 => countDataToBeReceived_reg(17),
      I2 => latency(17),
      I3 => \latency[23]_i_8_n_0\,
      O => \latency[23]_i_16_n_0\
    );
\latency[23]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(16),
      I1 => countDataToBeReceived_reg(16),
      I2 => latency(16),
      I3 => \latency[23]_i_9_n_0\,
      O => \latency[23]_i_17_n_0\
    );
\latency[23]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(22),
      I1 => countDataToBeReceived_reg(22),
      I2 => latency(22),
      O => \latency[23]_i_2_n_0\
    );
\latency[23]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(21),
      I1 => countDataToBeReceived_reg(21),
      I2 => latency(21),
      O => \latency[23]_i_3_n_0\
    );
\latency[23]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(20),
      I1 => countDataToBeReceived_reg(20),
      I2 => latency(20),
      O => \latency[23]_i_4_n_0\
    );
\latency[23]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(19),
      I1 => countDataToBeReceived_reg(19),
      I2 => latency(19),
      O => \latency[23]_i_5_n_0\
    );
\latency[23]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(18),
      I1 => countDataToBeReceived_reg(18),
      I2 => latency(18),
      O => \latency[23]_i_6_n_0\
    );
\latency[23]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(17),
      I1 => countDataToBeReceived_reg(17),
      I2 => latency(17),
      O => \latency[23]_i_7_n_0\
    );
\latency[23]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(16),
      I1 => countDataToBeReceived_reg(16),
      I2 => latency(16),
      O => \latency[23]_i_8_n_0\
    );
\latency[23]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(15),
      I1 => countDataToBeReceived_reg(15),
      I2 => latency(15),
      O => \latency[23]_i_9_n_0\
    );
\latency[31]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(31),
      I1 => countDataToBeReceived_reg(31),
      I2 => latency(31),
      I3 => \latency[31]_i_2_n_0\,
      O => \latency[31]_i_10_n_0\
    );
\latency[31]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(30),
      I1 => countDataToBeReceived_reg(30),
      I2 => latency(30),
      I3 => \latency[31]_i_3_n_0\,
      O => \latency[31]_i_11_n_0\
    );
\latency[31]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(29),
      I1 => countDataToBeReceived_reg(29),
      I2 => latency(29),
      I3 => \latency[31]_i_4_n_0\,
      O => \latency[31]_i_12_n_0\
    );
\latency[31]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(28),
      I1 => countDataToBeReceived_reg(28),
      I2 => latency(28),
      I3 => \latency[31]_i_5_n_0\,
      O => \latency[31]_i_13_n_0\
    );
\latency[31]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(27),
      I1 => countDataToBeReceived_reg(27),
      I2 => latency(27),
      I3 => \latency[31]_i_6_n_0\,
      O => \latency[31]_i_14_n_0\
    );
\latency[31]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(26),
      I1 => countDataToBeReceived_reg(26),
      I2 => latency(26),
      I3 => \latency[31]_i_7_n_0\,
      O => \latency[31]_i_15_n_0\
    );
\latency[31]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(25),
      I1 => countDataToBeReceived_reg(25),
      I2 => latency(25),
      I3 => \latency[31]_i_8_n_0\,
      O => \latency[31]_i_16_n_0\
    );
\latency[31]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(24),
      I1 => countDataToBeReceived_reg(24),
      I2 => latency(24),
      I3 => \latency[31]_i_9_n_0\,
      O => \latency[31]_i_17_n_0\
    );
\latency[31]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(30),
      I1 => countDataToBeReceived_reg(30),
      I2 => latency(30),
      O => \latency[31]_i_2_n_0\
    );
\latency[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(29),
      I1 => countDataToBeReceived_reg(29),
      I2 => latency(29),
      O => \latency[31]_i_3_n_0\
    );
\latency[31]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(28),
      I1 => countDataToBeReceived_reg(28),
      I2 => latency(28),
      O => \latency[31]_i_4_n_0\
    );
\latency[31]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(27),
      I1 => countDataToBeReceived_reg(27),
      I2 => latency(27),
      O => \latency[31]_i_5_n_0\
    );
\latency[31]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(26),
      I1 => countDataToBeReceived_reg(26),
      I2 => latency(26),
      O => \latency[31]_i_6_n_0\
    );
\latency[31]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(25),
      I1 => countDataToBeReceived_reg(25),
      I2 => latency(25),
      O => \latency[31]_i_7_n_0\
    );
\latency[31]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(24),
      I1 => countDataToBeReceived_reg(24),
      I2 => latency(24),
      O => \latency[31]_i_8_n_0\
    );
\latency[31]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(23),
      I1 => countDataToBeReceived_reg(23),
      I2 => latency(23),
      O => \latency[31]_i_9_n_0\
    );
\latency[39]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => \latency[39]_i_2_n_0\,
      I1 => countDataToBeReceived_reg(39),
      I2 => countDataReceived(39),
      I3 => latency(39),
      O => \latency[39]_i_10_n_0\
    );
\latency[39]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(38),
      I1 => countDataToBeReceived_reg(38),
      I2 => latency(38),
      I3 => \latency[39]_i_3_n_0\,
      O => \latency[39]_i_11_n_0\
    );
\latency[39]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(37),
      I1 => countDataToBeReceived_reg(37),
      I2 => latency(37),
      I3 => \latency[39]_i_4_n_0\,
      O => \latency[39]_i_12_n_0\
    );
\latency[39]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(36),
      I1 => countDataToBeReceived_reg(36),
      I2 => latency(36),
      I3 => \latency[39]_i_5_n_0\,
      O => \latency[39]_i_13_n_0\
    );
\latency[39]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(35),
      I1 => countDataToBeReceived_reg(35),
      I2 => latency(35),
      I3 => \latency[39]_i_6_n_0\,
      O => \latency[39]_i_14_n_0\
    );
\latency[39]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(34),
      I1 => countDataToBeReceived_reg(34),
      I2 => latency(34),
      I3 => \latency[39]_i_7_n_0\,
      O => \latency[39]_i_15_n_0\
    );
\latency[39]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(33),
      I1 => countDataToBeReceived_reg(33),
      I2 => latency(33),
      I3 => \latency[39]_i_8_n_0\,
      O => \latency[39]_i_16_n_0\
    );
\latency[39]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(32),
      I1 => countDataToBeReceived_reg(32),
      I2 => latency(32),
      I3 => \latency[39]_i_9_n_0\,
      O => \latency[39]_i_17_n_0\
    );
\latency[39]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(38),
      I1 => countDataToBeReceived_reg(38),
      I2 => latency(38),
      O => \latency[39]_i_2_n_0\
    );
\latency[39]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(37),
      I1 => countDataToBeReceived_reg(37),
      I2 => latency(37),
      O => \latency[39]_i_3_n_0\
    );
\latency[39]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(36),
      I1 => countDataToBeReceived_reg(36),
      I2 => latency(36),
      O => \latency[39]_i_4_n_0\
    );
\latency[39]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(35),
      I1 => countDataToBeReceived_reg(35),
      I2 => latency(35),
      O => \latency[39]_i_5_n_0\
    );
\latency[39]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(34),
      I1 => countDataToBeReceived_reg(34),
      I2 => latency(34),
      O => \latency[39]_i_6_n_0\
    );
\latency[39]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(33),
      I1 => countDataToBeReceived_reg(33),
      I2 => latency(33),
      O => \latency[39]_i_7_n_0\
    );
\latency[39]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(32),
      I1 => countDataToBeReceived_reg(32),
      I2 => latency(32),
      O => \latency[39]_i_8_n_0\
    );
\latency[39]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(31),
      I1 => countDataToBeReceived_reg(31),
      I2 => latency(31),
      O => \latency[39]_i_9_n_0\
    );
\latency[47]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8E71"
    )
        port map (
      I0 => latency(39),
      I1 => countDataToBeReceived_reg(39),
      I2 => countDataReceived(39),
      I3 => latency(40),
      O => \latency[47]_i_10_n_0\
    );
\latency[47]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(39),
      I1 => countDataToBeReceived_reg(39),
      I2 => latency(39),
      O => \latency[47]_i_2_n_0\
    );
\latency[47]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(46),
      I1 => latency(47),
      O => \latency[47]_i_3_n_0\
    );
\latency[47]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(45),
      I1 => latency(46),
      O => \latency[47]_i_4_n_0\
    );
\latency[47]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(44),
      I1 => latency(45),
      O => \latency[47]_i_5_n_0\
    );
\latency[47]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(43),
      I1 => latency(44),
      O => \latency[47]_i_6_n_0\
    );
\latency[47]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(42),
      I1 => latency(43),
      O => \latency[47]_i_7_n_0\
    );
\latency[47]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(41),
      I1 => latency(42),
      O => \latency[47]_i_8_n_0\
    );
\latency[47]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(40),
      I1 => latency(41),
      O => \latency[47]_i_9_n_0\
    );
\latency[55]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(54),
      I1 => latency(55),
      O => \latency[55]_i_2_n_0\
    );
\latency[55]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(53),
      I1 => latency(54),
      O => \latency[55]_i_3_n_0\
    );
\latency[55]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(52),
      I1 => latency(53),
      O => \latency[55]_i_4_n_0\
    );
\latency[55]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(51),
      I1 => latency(52),
      O => \latency[55]_i_5_n_0\
    );
\latency[55]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(50),
      I1 => latency(51),
      O => \latency[55]_i_6_n_0\
    );
\latency[55]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(49),
      I1 => latency(50),
      O => \latency[55]_i_7_n_0\
    );
\latency[55]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(48),
      I1 => latency(49),
      O => \latency[55]_i_8_n_0\
    );
\latency[55]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(47),
      I1 => latency(48),
      O => \latency[55]_i_9_n_0\
    );
\latency[63]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(62),
      I1 => latency(63),
      O => \latency[63]_i_2_n_0\
    );
\latency[63]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(61),
      I1 => latency(62),
      O => \latency[63]_i_3_n_0\
    );
\latency[63]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(60),
      I1 => latency(61),
      O => \latency[63]_i_4_n_0\
    );
\latency[63]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(59),
      I1 => latency(60),
      O => \latency[63]_i_5_n_0\
    );
\latency[63]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(58),
      I1 => latency(59),
      O => \latency[63]_i_6_n_0\
    );
\latency[63]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(57),
      I1 => latency(58),
      O => \latency[63]_i_7_n_0\
    );
\latency[63]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(56),
      I1 => latency(57),
      O => \latency[63]_i_8_n_0\
    );
\latency[63]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => latency(55),
      I1 => latency(56),
      O => \latency[63]_i_9_n_0\
    );
\latency[7]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(6),
      I1 => countDataToBeReceived_reg(6),
      I2 => latency(6),
      I3 => \latency[7]_i_3_n_0\,
      O => \latency[7]_i_10_n_0\
    );
\latency[7]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(5),
      I1 => countDataToBeReceived_reg(5),
      I2 => latency(5),
      I3 => \latency[7]_i_4_n_0\,
      O => \latency[7]_i_11_n_0\
    );
\latency[7]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(4),
      I1 => countDataToBeReceived_reg(4),
      I2 => latency(4),
      I3 => \latency[7]_i_5_n_0\,
      O => \latency[7]_i_12_n_0\
    );
\latency[7]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(3),
      I1 => countDataToBeReceived_reg(3),
      I2 => latency(3),
      I3 => \latency[7]_i_6_n_0\,
      O => \latency[7]_i_13_n_0\
    );
\latency[7]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(2),
      I1 => countDataToBeReceived_reg(2),
      I2 => latency(2),
      I3 => \latency[7]_i_7_n_0\,
      O => \latency[7]_i_14_n_0\
    );
\latency[7]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(1),
      I1 => countDataToBeReceived_reg(1),
      I2 => latency(1),
      I3 => \latency[7]_i_8_n_0\,
      O => \latency[7]_i_15_n_0\
    );
\latency[7]_i_16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => countDataToBeReceived_reg(0),
      I1 => countDataReceived(0),
      I2 => latency(0),
      O => \latency[7]_i_16_n_0\
    );
\latency[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(6),
      I1 => countDataToBeReceived_reg(6),
      I2 => latency(6),
      O => \latency[7]_i_2_n_0\
    );
\latency[7]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(5),
      I1 => countDataToBeReceived_reg(5),
      I2 => latency(5),
      O => \latency[7]_i_3_n_0\
    );
\latency[7]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(4),
      I1 => countDataToBeReceived_reg(4),
      I2 => latency(4),
      O => \latency[7]_i_4_n_0\
    );
\latency[7]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(3),
      I1 => countDataToBeReceived_reg(3),
      I2 => latency(3),
      O => \latency[7]_i_5_n_0\
    );
\latency[7]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(2),
      I1 => countDataToBeReceived_reg(2),
      I2 => latency(2),
      O => \latency[7]_i_6_n_0\
    );
\latency[7]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"D4"
    )
        port map (
      I0 => countDataReceived(1),
      I1 => countDataToBeReceived_reg(1),
      I2 => latency(1),
      O => \latency[7]_i_7_n_0\
    );
\latency[7]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => countDataToBeReceived_reg(0),
      I1 => countDataReceived(0),
      O => \latency[7]_i_8_n_0\
    );
\latency[7]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9669"
    )
        port map (
      I0 => countDataReceived(7),
      I1 => countDataToBeReceived_reg(7),
      I2 => latency(7),
      I3 => \latency[7]_i_2_n_0\,
      O => \latency[7]_i_9_n_0\
    );
\latency_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_15\,
      Q => latency(0),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_13\,
      Q => latency(10),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_12\,
      Q => latency(11),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_11\,
      Q => latency(12),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_10\,
      Q => latency(13),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_9\,
      Q => latency(14),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_8\,
      Q => latency(15),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[15]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \latency_reg[7]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \latency_reg[15]_i_1_n_0\,
      CO(6) => \latency_reg[15]_i_1_n_1\,
      CO(5) => \latency_reg[15]_i_1_n_2\,
      CO(4) => \latency_reg[15]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[15]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[15]_i_1_n_5\,
      CO(1) => \latency_reg[15]_i_1_n_6\,
      CO(0) => \latency_reg[15]_i_1_n_7\,
      DI(7) => \latency[15]_i_2_n_0\,
      DI(6) => \latency[15]_i_3_n_0\,
      DI(5) => \latency[15]_i_4_n_0\,
      DI(4) => \latency[15]_i_5_n_0\,
      DI(3) => \latency[15]_i_6_n_0\,
      DI(2) => \latency[15]_i_7_n_0\,
      DI(1) => \latency[15]_i_8_n_0\,
      DI(0) => \latency[15]_i_9_n_0\,
      O(7) => \latency_reg[15]_i_1_n_8\,
      O(6) => \latency_reg[15]_i_1_n_9\,
      O(5) => \latency_reg[15]_i_1_n_10\,
      O(4) => \latency_reg[15]_i_1_n_11\,
      O(3) => \latency_reg[15]_i_1_n_12\,
      O(2) => \latency_reg[15]_i_1_n_13\,
      O(1) => \latency_reg[15]_i_1_n_14\,
      O(0) => \latency_reg[15]_i_1_n_15\,
      S(7) => \latency[15]_i_10_n_0\,
      S(6) => \latency[15]_i_11_n_0\,
      S(5) => \latency[15]_i_12_n_0\,
      S(4) => \latency[15]_i_13_n_0\,
      S(3) => \latency[15]_i_14_n_0\,
      S(2) => \latency[15]_i_15_n_0\,
      S(1) => \latency[15]_i_16_n_0\,
      S(0) => \latency[15]_i_17_n_0\
    );
\latency_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_15\,
      Q => latency(16),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_14\,
      Q => latency(17),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_13\,
      Q => latency(18),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_12\,
      Q => latency(19),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_14\,
      Q => latency(1),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_11\,
      Q => latency(20),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_10\,
      Q => latency(21),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_9\,
      Q => latency(22),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[23]_i_1_n_8\,
      Q => latency(23),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[23]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \latency_reg[15]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \latency_reg[23]_i_1_n_0\,
      CO(6) => \latency_reg[23]_i_1_n_1\,
      CO(5) => \latency_reg[23]_i_1_n_2\,
      CO(4) => \latency_reg[23]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[23]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[23]_i_1_n_5\,
      CO(1) => \latency_reg[23]_i_1_n_6\,
      CO(0) => \latency_reg[23]_i_1_n_7\,
      DI(7) => \latency[23]_i_2_n_0\,
      DI(6) => \latency[23]_i_3_n_0\,
      DI(5) => \latency[23]_i_4_n_0\,
      DI(4) => \latency[23]_i_5_n_0\,
      DI(3) => \latency[23]_i_6_n_0\,
      DI(2) => \latency[23]_i_7_n_0\,
      DI(1) => \latency[23]_i_8_n_0\,
      DI(0) => \latency[23]_i_9_n_0\,
      O(7) => \latency_reg[23]_i_1_n_8\,
      O(6) => \latency_reg[23]_i_1_n_9\,
      O(5) => \latency_reg[23]_i_1_n_10\,
      O(4) => \latency_reg[23]_i_1_n_11\,
      O(3) => \latency_reg[23]_i_1_n_12\,
      O(2) => \latency_reg[23]_i_1_n_13\,
      O(1) => \latency_reg[23]_i_1_n_14\,
      O(0) => \latency_reg[23]_i_1_n_15\,
      S(7) => \latency[23]_i_10_n_0\,
      S(6) => \latency[23]_i_11_n_0\,
      S(5) => \latency[23]_i_12_n_0\,
      S(4) => \latency[23]_i_13_n_0\,
      S(3) => \latency[23]_i_14_n_0\,
      S(2) => \latency[23]_i_15_n_0\,
      S(1) => \latency[23]_i_16_n_0\,
      S(0) => \latency[23]_i_17_n_0\
    );
\latency_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_15\,
      Q => latency(24),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_14\,
      Q => latency(25),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_13\,
      Q => latency(26),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_12\,
      Q => latency(27),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_11\,
      Q => latency(28),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_10\,
      Q => latency(29),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_13\,
      Q => latency(2),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_9\,
      Q => latency(30),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[31]_i_1_n_8\,
      Q => latency(31),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[31]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \latency_reg[23]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \latency_reg[31]_i_1_n_0\,
      CO(6) => \latency_reg[31]_i_1_n_1\,
      CO(5) => \latency_reg[31]_i_1_n_2\,
      CO(4) => \latency_reg[31]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[31]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[31]_i_1_n_5\,
      CO(1) => \latency_reg[31]_i_1_n_6\,
      CO(0) => \latency_reg[31]_i_1_n_7\,
      DI(7) => \latency[31]_i_2_n_0\,
      DI(6) => \latency[31]_i_3_n_0\,
      DI(5) => \latency[31]_i_4_n_0\,
      DI(4) => \latency[31]_i_5_n_0\,
      DI(3) => \latency[31]_i_6_n_0\,
      DI(2) => \latency[31]_i_7_n_0\,
      DI(1) => \latency[31]_i_8_n_0\,
      DI(0) => \latency[31]_i_9_n_0\,
      O(7) => \latency_reg[31]_i_1_n_8\,
      O(6) => \latency_reg[31]_i_1_n_9\,
      O(5) => \latency_reg[31]_i_1_n_10\,
      O(4) => \latency_reg[31]_i_1_n_11\,
      O(3) => \latency_reg[31]_i_1_n_12\,
      O(2) => \latency_reg[31]_i_1_n_13\,
      O(1) => \latency_reg[31]_i_1_n_14\,
      O(0) => \latency_reg[31]_i_1_n_15\,
      S(7) => \latency[31]_i_10_n_0\,
      S(6) => \latency[31]_i_11_n_0\,
      S(5) => \latency[31]_i_12_n_0\,
      S(4) => \latency[31]_i_13_n_0\,
      S(3) => \latency[31]_i_14_n_0\,
      S(2) => \latency[31]_i_15_n_0\,
      S(1) => \latency[31]_i_16_n_0\,
      S(0) => \latency[31]_i_17_n_0\
    );
\latency_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_15\,
      Q => latency(32),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_14\,
      Q => latency(33),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_13\,
      Q => latency(34),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_12\,
      Q => latency(35),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_11\,
      Q => latency(36),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_10\,
      Q => latency(37),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_9\,
      Q => latency(38),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[39]_i_1_n_8\,
      Q => latency(39),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[39]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \latency_reg[31]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \latency_reg[39]_i_1_n_0\,
      CO(6) => \latency_reg[39]_i_1_n_1\,
      CO(5) => \latency_reg[39]_i_1_n_2\,
      CO(4) => \latency_reg[39]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[39]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[39]_i_1_n_5\,
      CO(1) => \latency_reg[39]_i_1_n_6\,
      CO(0) => \latency_reg[39]_i_1_n_7\,
      DI(7) => \latency[39]_i_2_n_0\,
      DI(6) => \latency[39]_i_3_n_0\,
      DI(5) => \latency[39]_i_4_n_0\,
      DI(4) => \latency[39]_i_5_n_0\,
      DI(3) => \latency[39]_i_6_n_0\,
      DI(2) => \latency[39]_i_7_n_0\,
      DI(1) => \latency[39]_i_8_n_0\,
      DI(0) => \latency[39]_i_9_n_0\,
      O(7) => \latency_reg[39]_i_1_n_8\,
      O(6) => \latency_reg[39]_i_1_n_9\,
      O(5) => \latency_reg[39]_i_1_n_10\,
      O(4) => \latency_reg[39]_i_1_n_11\,
      O(3) => \latency_reg[39]_i_1_n_12\,
      O(2) => \latency_reg[39]_i_1_n_13\,
      O(1) => \latency_reg[39]_i_1_n_14\,
      O(0) => \latency_reg[39]_i_1_n_15\,
      S(7) => \latency[39]_i_10_n_0\,
      S(6) => \latency[39]_i_11_n_0\,
      S(5) => \latency[39]_i_12_n_0\,
      S(4) => \latency[39]_i_13_n_0\,
      S(3) => \latency[39]_i_14_n_0\,
      S(2) => \latency[39]_i_15_n_0\,
      S(1) => \latency[39]_i_16_n_0\,
      S(0) => \latency[39]_i_17_n_0\
    );
\latency_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_12\,
      Q => latency(3),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_15\,
      Q => latency(40),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_14\,
      Q => latency(41),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_13\,
      Q => latency(42),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_12\,
      Q => latency(43),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_11\,
      Q => latency(44),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_10\,
      Q => latency(45),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_9\,
      Q => latency(46),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[47]_i_1_n_8\,
      Q => latency(47),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[47]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \latency_reg[39]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \latency_reg[47]_i_1_n_0\,
      CO(6) => \latency_reg[47]_i_1_n_1\,
      CO(5) => \latency_reg[47]_i_1_n_2\,
      CO(4) => \latency_reg[47]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[47]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[47]_i_1_n_5\,
      CO(1) => \latency_reg[47]_i_1_n_6\,
      CO(0) => \latency_reg[47]_i_1_n_7\,
      DI(7 downto 1) => latency(46 downto 40),
      DI(0) => \latency[47]_i_2_n_0\,
      O(7) => \latency_reg[47]_i_1_n_8\,
      O(6) => \latency_reg[47]_i_1_n_9\,
      O(5) => \latency_reg[47]_i_1_n_10\,
      O(4) => \latency_reg[47]_i_1_n_11\,
      O(3) => \latency_reg[47]_i_1_n_12\,
      O(2) => \latency_reg[47]_i_1_n_13\,
      O(1) => \latency_reg[47]_i_1_n_14\,
      O(0) => \latency_reg[47]_i_1_n_15\,
      S(7) => \latency[47]_i_3_n_0\,
      S(6) => \latency[47]_i_4_n_0\,
      S(5) => \latency[47]_i_5_n_0\,
      S(4) => \latency[47]_i_6_n_0\,
      S(3) => \latency[47]_i_7_n_0\,
      S(2) => \latency[47]_i_8_n_0\,
      S(1) => \latency[47]_i_9_n_0\,
      S(0) => \latency[47]_i_10_n_0\
    );
\latency_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_15\,
      Q => latency(48),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_14\,
      Q => latency(49),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_11\,
      Q => latency(4),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_13\,
      Q => latency(50),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_12\,
      Q => latency(51),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_11\,
      Q => latency(52),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_10\,
      Q => latency(53),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_9\,
      Q => latency(54),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[55]_i_1_n_8\,
      Q => latency(55),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[55]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \latency_reg[47]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \latency_reg[55]_i_1_n_0\,
      CO(6) => \latency_reg[55]_i_1_n_1\,
      CO(5) => \latency_reg[55]_i_1_n_2\,
      CO(4) => \latency_reg[55]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[55]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[55]_i_1_n_5\,
      CO(1) => \latency_reg[55]_i_1_n_6\,
      CO(0) => \latency_reg[55]_i_1_n_7\,
      DI(7 downto 0) => latency(54 downto 47),
      O(7) => \latency_reg[55]_i_1_n_8\,
      O(6) => \latency_reg[55]_i_1_n_9\,
      O(5) => \latency_reg[55]_i_1_n_10\,
      O(4) => \latency_reg[55]_i_1_n_11\,
      O(3) => \latency_reg[55]_i_1_n_12\,
      O(2) => \latency_reg[55]_i_1_n_13\,
      O(1) => \latency_reg[55]_i_1_n_14\,
      O(0) => \latency_reg[55]_i_1_n_15\,
      S(7) => \latency[55]_i_2_n_0\,
      S(6) => \latency[55]_i_3_n_0\,
      S(5) => \latency[55]_i_4_n_0\,
      S(4) => \latency[55]_i_5_n_0\,
      S(3) => \latency[55]_i_6_n_0\,
      S(2) => \latency[55]_i_7_n_0\,
      S(1) => \latency[55]_i_8_n_0\,
      S(0) => \latency[55]_i_9_n_0\
    );
\latency_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_15\,
      Q => latency(56),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_14\,
      Q => latency(57),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_13\,
      Q => latency(58),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_12\,
      Q => latency(59),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_10\,
      Q => latency(5),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_11\,
      Q => latency(60),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_10\,
      Q => latency(61),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_9\,
      Q => latency(62),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[63]_i_1_n_8\,
      Q => latency(63),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[63]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \latency_reg[55]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_latency_reg[63]_i_1_CO_UNCONNECTED\(7),
      CO(6) => \latency_reg[63]_i_1_n_1\,
      CO(5) => \latency_reg[63]_i_1_n_2\,
      CO(4) => \latency_reg[63]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[63]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[63]_i_1_n_5\,
      CO(1) => \latency_reg[63]_i_1_n_6\,
      CO(0) => \latency_reg[63]_i_1_n_7\,
      DI(7) => '0',
      DI(6 downto 0) => latency(61 downto 55),
      O(7) => \latency_reg[63]_i_1_n_8\,
      O(6) => \latency_reg[63]_i_1_n_9\,
      O(5) => \latency_reg[63]_i_1_n_10\,
      O(4) => \latency_reg[63]_i_1_n_11\,
      O(3) => \latency_reg[63]_i_1_n_12\,
      O(2) => \latency_reg[63]_i_1_n_13\,
      O(1) => \latency_reg[63]_i_1_n_14\,
      O(0) => \latency_reg[63]_i_1_n_15\,
      S(7) => \latency[63]_i_2_n_0\,
      S(6) => \latency[63]_i_3_n_0\,
      S(5) => \latency[63]_i_4_n_0\,
      S(4) => \latency[63]_i_5_n_0\,
      S(3) => \latency[63]_i_6_n_0\,
      S(2) => \latency[63]_i_7_n_0\,
      S(1) => \latency[63]_i_8_n_0\,
      S(0) => \latency[63]_i_9_n_0\
    );
\latency_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_9\,
      Q => latency(6),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[7]_i_1_n_8\,
      Q => latency(7),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[7]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \latency_reg[7]_i_1_n_0\,
      CO(6) => \latency_reg[7]_i_1_n_1\,
      CO(5) => \latency_reg[7]_i_1_n_2\,
      CO(4) => \latency_reg[7]_i_1_n_3\,
      CO(3) => \NLW_latency_reg[7]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \latency_reg[7]_i_1_n_5\,
      CO(1) => \latency_reg[7]_i_1_n_6\,
      CO(0) => \latency_reg[7]_i_1_n_7\,
      DI(7) => \latency[7]_i_2_n_0\,
      DI(6) => \latency[7]_i_3_n_0\,
      DI(5) => \latency[7]_i_4_n_0\,
      DI(4) => \latency[7]_i_5_n_0\,
      DI(3) => \latency[7]_i_6_n_0\,
      DI(2) => \latency[7]_i_7_n_0\,
      DI(1) => \latency[7]_i_8_n_0\,
      DI(0) => latency(0),
      O(7) => \latency_reg[7]_i_1_n_8\,
      O(6) => \latency_reg[7]_i_1_n_9\,
      O(5) => \latency_reg[7]_i_1_n_10\,
      O(4) => \latency_reg[7]_i_1_n_11\,
      O(3) => \latency_reg[7]_i_1_n_12\,
      O(2) => \latency_reg[7]_i_1_n_13\,
      O(1) => \latency_reg[7]_i_1_n_14\,
      O(0) => \latency_reg[7]_i_1_n_15\,
      S(7) => \latency[7]_i_9_n_0\,
      S(6) => \latency[7]_i_10_n_0\,
      S(5) => \latency[7]_i_11_n_0\,
      S(4) => \latency[7]_i_12_n_0\,
      S(3) => \latency[7]_i_13_n_0\,
      S(2) => \latency[7]_i_14_n_0\,
      S(1) => \latency[7]_i_15_n_0\,
      S(0) => \latency[7]_i_16_n_0\
    );
\latency_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_15\,
      Q => latency(8),
      R => \runtime[63]_i_1_n_0\
    );
\latency_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \latency_reg[15]_i_1_n_14\,
      Q => latency(9),
      R => \runtime[63]_i_1_n_0\
    );
\max_cycles_with_no_data_read[31]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(54),
      I1 => current_cycles_with_no_data_read(55),
      O => \max_cycles_with_no_data_read[31]_i_10_n_0\
    );
\max_cycles_with_no_data_read[31]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(52),
      I1 => current_cycles_with_no_data_read(53),
      O => \max_cycles_with_no_data_read[31]_i_11_n_0\
    );
\max_cycles_with_no_data_read[31]_i_12\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(50),
      I1 => current_cycles_with_no_data_read(51),
      O => \max_cycles_with_no_data_read[31]_i_12_n_0\
    );
\max_cycles_with_no_data_read[31]_i_13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(48),
      I1 => current_cycles_with_no_data_read(49),
      O => \max_cycles_with_no_data_read[31]_i_13_n_0\
    );
\max_cycles_with_no_data_read[31]_i_14\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(62),
      I1 => current_cycles_with_no_data_read(63),
      O => \max_cycles_with_no_data_read[31]_i_14_n_0\
    );
\max_cycles_with_no_data_read[31]_i_15\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(60),
      I1 => current_cycles_with_no_data_read(61),
      O => \max_cycles_with_no_data_read[31]_i_15_n_0\
    );
\max_cycles_with_no_data_read[31]_i_16\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(58),
      I1 => current_cycles_with_no_data_read(59),
      O => \max_cycles_with_no_data_read[31]_i_16_n_0\
    );
\max_cycles_with_no_data_read[31]_i_17\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(56),
      I1 => current_cycles_with_no_data_read(57),
      O => \max_cycles_with_no_data_read[31]_i_17_n_0\
    );
\max_cycles_with_no_data_read[31]_i_18\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(54),
      I1 => current_cycles_with_no_data_read(55),
      O => \max_cycles_with_no_data_read[31]_i_18_n_0\
    );
\max_cycles_with_no_data_read[31]_i_19\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(52),
      I1 => current_cycles_with_no_data_read(53),
      O => \max_cycles_with_no_data_read[31]_i_19_n_0\
    );
\max_cycles_with_no_data_read[31]_i_20\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(50),
      I1 => current_cycles_with_no_data_read(51),
      O => \max_cycles_with_no_data_read[31]_i_20_n_0\
    );
\max_cycles_with_no_data_read[31]_i_21\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(48),
      I1 => current_cycles_with_no_data_read(49),
      O => \max_cycles_with_no_data_read[31]_i_21_n_0\
    );
\max_cycles_with_no_data_read[31]_i_23\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(46),
      I1 => current_cycles_with_no_data_read(47),
      O => \max_cycles_with_no_data_read[31]_i_23_n_0\
    );
\max_cycles_with_no_data_read[31]_i_24\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(44),
      I1 => current_cycles_with_no_data_read(45),
      O => \max_cycles_with_no_data_read[31]_i_24_n_0\
    );
\max_cycles_with_no_data_read[31]_i_25\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(42),
      I1 => current_cycles_with_no_data_read(43),
      O => \max_cycles_with_no_data_read[31]_i_25_n_0\
    );
\max_cycles_with_no_data_read[31]_i_26\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(40),
      I1 => current_cycles_with_no_data_read(41),
      O => \max_cycles_with_no_data_read[31]_i_26_n_0\
    );
\max_cycles_with_no_data_read[31]_i_27\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(38),
      I1 => current_cycles_with_no_data_read(39),
      O => \max_cycles_with_no_data_read[31]_i_27_n_0\
    );
\max_cycles_with_no_data_read[31]_i_28\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(36),
      I1 => current_cycles_with_no_data_read(37),
      O => \max_cycles_with_no_data_read[31]_i_28_n_0\
    );
\max_cycles_with_no_data_read[31]_i_29\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(34),
      I1 => current_cycles_with_no_data_read(35),
      O => \max_cycles_with_no_data_read[31]_i_29_n_0\
    );
\max_cycles_with_no_data_read[31]_i_30\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(32),
      I1 => current_cycles_with_no_data_read(33),
      O => \max_cycles_with_no_data_read[31]_i_30_n_0\
    );
\max_cycles_with_no_data_read[31]_i_31\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(46),
      I1 => current_cycles_with_no_data_read(47),
      O => \max_cycles_with_no_data_read[31]_i_31_n_0\
    );
\max_cycles_with_no_data_read[31]_i_32\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(44),
      I1 => current_cycles_with_no_data_read(45),
      O => \max_cycles_with_no_data_read[31]_i_32_n_0\
    );
\max_cycles_with_no_data_read[31]_i_33\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(42),
      I1 => current_cycles_with_no_data_read(43),
      O => \max_cycles_with_no_data_read[31]_i_33_n_0\
    );
\max_cycles_with_no_data_read[31]_i_34\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(40),
      I1 => current_cycles_with_no_data_read(41),
      O => \max_cycles_with_no_data_read[31]_i_34_n_0\
    );
\max_cycles_with_no_data_read[31]_i_35\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(38),
      I1 => current_cycles_with_no_data_read(39),
      O => \max_cycles_with_no_data_read[31]_i_35_n_0\
    );
\max_cycles_with_no_data_read[31]_i_36\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(36),
      I1 => current_cycles_with_no_data_read(37),
      O => \max_cycles_with_no_data_read[31]_i_36_n_0\
    );
\max_cycles_with_no_data_read[31]_i_37\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(34),
      I1 => current_cycles_with_no_data_read(35),
      O => \max_cycles_with_no_data_read[31]_i_37_n_0\
    );
\max_cycles_with_no_data_read[31]_i_38\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => current_cycles_with_no_data_read(32),
      I1 => current_cycles_with_no_data_read(33),
      O => \max_cycles_with_no_data_read[31]_i_38_n_0\
    );
\max_cycles_with_no_data_read[31]_i_40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(30),
      I1 => max_cycles_with_no_data_read(30),
      I2 => max_cycles_with_no_data_read(31),
      I3 => current_cycles_with_no_data_read(31),
      O => \max_cycles_with_no_data_read[31]_i_40_n_0\
    );
\max_cycles_with_no_data_read[31]_i_41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(28),
      I1 => max_cycles_with_no_data_read(28),
      I2 => max_cycles_with_no_data_read(29),
      I3 => current_cycles_with_no_data_read(29),
      O => \max_cycles_with_no_data_read[31]_i_41_n_0\
    );
\max_cycles_with_no_data_read[31]_i_42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(26),
      I1 => max_cycles_with_no_data_read(26),
      I2 => max_cycles_with_no_data_read(27),
      I3 => current_cycles_with_no_data_read(27),
      O => \max_cycles_with_no_data_read[31]_i_42_n_0\
    );
\max_cycles_with_no_data_read[31]_i_43\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(24),
      I1 => max_cycles_with_no_data_read(24),
      I2 => max_cycles_with_no_data_read(25),
      I3 => current_cycles_with_no_data_read(25),
      O => \max_cycles_with_no_data_read[31]_i_43_n_0\
    );
\max_cycles_with_no_data_read[31]_i_44\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(22),
      I1 => max_cycles_with_no_data_read(22),
      I2 => max_cycles_with_no_data_read(23),
      I3 => current_cycles_with_no_data_read(23),
      O => \max_cycles_with_no_data_read[31]_i_44_n_0\
    );
\max_cycles_with_no_data_read[31]_i_45\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(20),
      I1 => max_cycles_with_no_data_read(20),
      I2 => max_cycles_with_no_data_read(21),
      I3 => current_cycles_with_no_data_read(21),
      O => \max_cycles_with_no_data_read[31]_i_45_n_0\
    );
\max_cycles_with_no_data_read[31]_i_46\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(18),
      I1 => max_cycles_with_no_data_read(18),
      I2 => max_cycles_with_no_data_read(19),
      I3 => current_cycles_with_no_data_read(19),
      O => \max_cycles_with_no_data_read[31]_i_46_n_0\
    );
\max_cycles_with_no_data_read[31]_i_47\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(16),
      I1 => max_cycles_with_no_data_read(16),
      I2 => max_cycles_with_no_data_read(17),
      I3 => current_cycles_with_no_data_read(17),
      O => \max_cycles_with_no_data_read[31]_i_47_n_0\
    );
\max_cycles_with_no_data_read[31]_i_48\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(30),
      I1 => max_cycles_with_no_data_read(30),
      I2 => current_cycles_with_no_data_read(31),
      I3 => max_cycles_with_no_data_read(31),
      O => \max_cycles_with_no_data_read[31]_i_48_n_0\
    );
\max_cycles_with_no_data_read[31]_i_49\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(28),
      I1 => max_cycles_with_no_data_read(28),
      I2 => current_cycles_with_no_data_read(29),
      I3 => max_cycles_with_no_data_read(29),
      O => \max_cycles_with_no_data_read[31]_i_49_n_0\
    );
\max_cycles_with_no_data_read[31]_i_50\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(26),
      I1 => max_cycles_with_no_data_read(26),
      I2 => current_cycles_with_no_data_read(27),
      I3 => max_cycles_with_no_data_read(27),
      O => \max_cycles_with_no_data_read[31]_i_50_n_0\
    );
\max_cycles_with_no_data_read[31]_i_51\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(24),
      I1 => max_cycles_with_no_data_read(24),
      I2 => current_cycles_with_no_data_read(25),
      I3 => max_cycles_with_no_data_read(25),
      O => \max_cycles_with_no_data_read[31]_i_51_n_0\
    );
\max_cycles_with_no_data_read[31]_i_52\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(22),
      I1 => max_cycles_with_no_data_read(22),
      I2 => current_cycles_with_no_data_read(23),
      I3 => max_cycles_with_no_data_read(23),
      O => \max_cycles_with_no_data_read[31]_i_52_n_0\
    );
\max_cycles_with_no_data_read[31]_i_53\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(20),
      I1 => max_cycles_with_no_data_read(20),
      I2 => current_cycles_with_no_data_read(21),
      I3 => max_cycles_with_no_data_read(21),
      O => \max_cycles_with_no_data_read[31]_i_53_n_0\
    );
\max_cycles_with_no_data_read[31]_i_54\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(18),
      I1 => max_cycles_with_no_data_read(18),
      I2 => current_cycles_with_no_data_read(19),
      I3 => max_cycles_with_no_data_read(19),
      O => \max_cycles_with_no_data_read[31]_i_54_n_0\
    );
\max_cycles_with_no_data_read[31]_i_55\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(16),
      I1 => max_cycles_with_no_data_read(16),
      I2 => current_cycles_with_no_data_read(17),
      I3 => max_cycles_with_no_data_read(17),
      O => \max_cycles_with_no_data_read[31]_i_55_n_0\
    );
\max_cycles_with_no_data_read[31]_i_56\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(14),
      I1 => max_cycles_with_no_data_read(14),
      I2 => max_cycles_with_no_data_read(15),
      I3 => current_cycles_with_no_data_read(15),
      O => \max_cycles_with_no_data_read[31]_i_56_n_0\
    );
\max_cycles_with_no_data_read[31]_i_57\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(12),
      I1 => max_cycles_with_no_data_read(12),
      I2 => max_cycles_with_no_data_read(13),
      I3 => current_cycles_with_no_data_read(13),
      O => \max_cycles_with_no_data_read[31]_i_57_n_0\
    );
\max_cycles_with_no_data_read[31]_i_58\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(10),
      I1 => max_cycles_with_no_data_read(10),
      I2 => max_cycles_with_no_data_read(11),
      I3 => current_cycles_with_no_data_read(11),
      O => \max_cycles_with_no_data_read[31]_i_58_n_0\
    );
\max_cycles_with_no_data_read[31]_i_59\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(8),
      I1 => max_cycles_with_no_data_read(8),
      I2 => max_cycles_with_no_data_read(9),
      I3 => current_cycles_with_no_data_read(9),
      O => \max_cycles_with_no_data_read[31]_i_59_n_0\
    );
\max_cycles_with_no_data_read[31]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(62),
      I1 => current_cycles_with_no_data_read(63),
      O => \max_cycles_with_no_data_read[31]_i_6_n_0\
    );
\max_cycles_with_no_data_read[31]_i_60\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(6),
      I1 => max_cycles_with_no_data_read(6),
      I2 => max_cycles_with_no_data_read(7),
      I3 => current_cycles_with_no_data_read(7),
      O => \max_cycles_with_no_data_read[31]_i_60_n_0\
    );
\max_cycles_with_no_data_read[31]_i_61\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(4),
      I1 => max_cycles_with_no_data_read(4),
      I2 => max_cycles_with_no_data_read(5),
      I3 => current_cycles_with_no_data_read(5),
      O => \max_cycles_with_no_data_read[31]_i_61_n_0\
    );
\max_cycles_with_no_data_read[31]_i_62\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(2),
      I1 => max_cycles_with_no_data_read(2),
      I2 => max_cycles_with_no_data_read(3),
      I3 => current_cycles_with_no_data_read(3),
      O => \max_cycles_with_no_data_read[31]_i_62_n_0\
    );
\max_cycles_with_no_data_read[31]_i_63\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => current_cycles_with_no_data_read(0),
      I1 => max_cycles_with_no_data_read(0),
      I2 => max_cycles_with_no_data_read(1),
      I3 => current_cycles_with_no_data_read(1),
      O => \max_cycles_with_no_data_read[31]_i_63_n_0\
    );
\max_cycles_with_no_data_read[31]_i_64\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(14),
      I1 => max_cycles_with_no_data_read(14),
      I2 => current_cycles_with_no_data_read(15),
      I3 => max_cycles_with_no_data_read(15),
      O => \max_cycles_with_no_data_read[31]_i_64_n_0\
    );
\max_cycles_with_no_data_read[31]_i_65\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(12),
      I1 => max_cycles_with_no_data_read(12),
      I2 => current_cycles_with_no_data_read(13),
      I3 => max_cycles_with_no_data_read(13),
      O => \max_cycles_with_no_data_read[31]_i_65_n_0\
    );
\max_cycles_with_no_data_read[31]_i_66\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(10),
      I1 => max_cycles_with_no_data_read(10),
      I2 => current_cycles_with_no_data_read(11),
      I3 => max_cycles_with_no_data_read(11),
      O => \max_cycles_with_no_data_read[31]_i_66_n_0\
    );
\max_cycles_with_no_data_read[31]_i_67\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(8),
      I1 => max_cycles_with_no_data_read(8),
      I2 => current_cycles_with_no_data_read(9),
      I3 => max_cycles_with_no_data_read(9),
      O => \max_cycles_with_no_data_read[31]_i_67_n_0\
    );
\max_cycles_with_no_data_read[31]_i_68\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(6),
      I1 => max_cycles_with_no_data_read(6),
      I2 => current_cycles_with_no_data_read(7),
      I3 => max_cycles_with_no_data_read(7),
      O => \max_cycles_with_no_data_read[31]_i_68_n_0\
    );
\max_cycles_with_no_data_read[31]_i_69\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(4),
      I1 => max_cycles_with_no_data_read(4),
      I2 => current_cycles_with_no_data_read(5),
      I3 => max_cycles_with_no_data_read(5),
      O => \max_cycles_with_no_data_read[31]_i_69_n_0\
    );
\max_cycles_with_no_data_read[31]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(60),
      I1 => current_cycles_with_no_data_read(61),
      O => \max_cycles_with_no_data_read[31]_i_7_n_0\
    );
\max_cycles_with_no_data_read[31]_i_70\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(2),
      I1 => max_cycles_with_no_data_read(2),
      I2 => current_cycles_with_no_data_read(3),
      I3 => max_cycles_with_no_data_read(3),
      O => \max_cycles_with_no_data_read[31]_i_70_n_0\
    );
\max_cycles_with_no_data_read[31]_i_71\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => current_cycles_with_no_data_read(0),
      I1 => max_cycles_with_no_data_read(0),
      I2 => current_cycles_with_no_data_read(1),
      I3 => max_cycles_with_no_data_read(1),
      O => \max_cycles_with_no_data_read[31]_i_71_n_0\
    );
\max_cycles_with_no_data_read[31]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(58),
      I1 => current_cycles_with_no_data_read(59),
      O => \max_cycles_with_no_data_read[31]_i_8_n_0\
    );
\max_cycles_with_no_data_read[31]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => current_cycles_with_no_data_read(56),
      I1 => current_cycles_with_no_data_read(57),
      O => \max_cycles_with_no_data_read[31]_i_9_n_0\
    );
\max_cycles_with_no_data_read_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_618,
      Q => max_cycles_with_no_data_read(0),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_608,
      Q => max_cycles_with_no_data_read(10),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_607,
      Q => max_cycles_with_no_data_read(11),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_606,
      Q => max_cycles_with_no_data_read(12),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_605,
      Q => max_cycles_with_no_data_read(13),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_604,
      Q => max_cycles_with_no_data_read(14),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_603,
      Q => max_cycles_with_no_data_read(15),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_602,
      Q => max_cycles_with_no_data_read(16),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_601,
      Q => max_cycles_with_no_data_read(17),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_600,
      Q => max_cycles_with_no_data_read(18),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_599,
      Q => max_cycles_with_no_data_read(19),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_617,
      Q => max_cycles_with_no_data_read(1),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_598,
      Q => max_cycles_with_no_data_read(20),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_597,
      Q => max_cycles_with_no_data_read(21),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_596,
      Q => max_cycles_with_no_data_read(22),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_595,
      Q => max_cycles_with_no_data_read(23),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_594,
      Q => max_cycles_with_no_data_read(24),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_593,
      Q => max_cycles_with_no_data_read(25),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_592,
      Q => max_cycles_with_no_data_read(26),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_591,
      Q => max_cycles_with_no_data_read(27),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_590,
      Q => max_cycles_with_no_data_read(28),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_589,
      Q => max_cycles_with_no_data_read(29),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_616,
      Q => max_cycles_with_no_data_read(2),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_588,
      Q => max_cycles_with_no_data_read(30),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_587,
      Q => max_cycles_with_no_data_read(31),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[31]_i_22\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \max_cycles_with_no_data_read_reg[31]_i_39_n_0\,
      CI_TOP => '0',
      CO(7) => \max_cycles_with_no_data_read_reg[31]_i_22_n_0\,
      CO(6) => \max_cycles_with_no_data_read_reg[31]_i_22_n_1\,
      CO(5) => \max_cycles_with_no_data_read_reg[31]_i_22_n_2\,
      CO(4) => \max_cycles_with_no_data_read_reg[31]_i_22_n_3\,
      CO(3) => \NLW_max_cycles_with_no_data_read_reg[31]_i_22_CO_UNCONNECTED\(3),
      CO(2) => \max_cycles_with_no_data_read_reg[31]_i_22_n_5\,
      CO(1) => \max_cycles_with_no_data_read_reg[31]_i_22_n_6\,
      CO(0) => \max_cycles_with_no_data_read_reg[31]_i_22_n_7\,
      DI(7) => \max_cycles_with_no_data_read[31]_i_40_n_0\,
      DI(6) => \max_cycles_with_no_data_read[31]_i_41_n_0\,
      DI(5) => \max_cycles_with_no_data_read[31]_i_42_n_0\,
      DI(4) => \max_cycles_with_no_data_read[31]_i_43_n_0\,
      DI(3) => \max_cycles_with_no_data_read[31]_i_44_n_0\,
      DI(2) => \max_cycles_with_no_data_read[31]_i_45_n_0\,
      DI(1) => \max_cycles_with_no_data_read[31]_i_46_n_0\,
      DI(0) => \max_cycles_with_no_data_read[31]_i_47_n_0\,
      O(7 downto 0) => \NLW_max_cycles_with_no_data_read_reg[31]_i_22_O_UNCONNECTED\(7 downto 0),
      S(7) => \max_cycles_with_no_data_read[31]_i_48_n_0\,
      S(6) => \max_cycles_with_no_data_read[31]_i_49_n_0\,
      S(5) => \max_cycles_with_no_data_read[31]_i_50_n_0\,
      S(4) => \max_cycles_with_no_data_read[31]_i_51_n_0\,
      S(3) => \max_cycles_with_no_data_read[31]_i_52_n_0\,
      S(2) => \max_cycles_with_no_data_read[31]_i_53_n_0\,
      S(1) => \max_cycles_with_no_data_read[31]_i_54_n_0\,
      S(0) => \max_cycles_with_no_data_read[31]_i_55_n_0\
    );
\max_cycles_with_no_data_read_reg[31]_i_39\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \max_cycles_with_no_data_read_reg[31]_i_39_n_0\,
      CO(6) => \max_cycles_with_no_data_read_reg[31]_i_39_n_1\,
      CO(5) => \max_cycles_with_no_data_read_reg[31]_i_39_n_2\,
      CO(4) => \max_cycles_with_no_data_read_reg[31]_i_39_n_3\,
      CO(3) => \NLW_max_cycles_with_no_data_read_reg[31]_i_39_CO_UNCONNECTED\(3),
      CO(2) => \max_cycles_with_no_data_read_reg[31]_i_39_n_5\,
      CO(1) => \max_cycles_with_no_data_read_reg[31]_i_39_n_6\,
      CO(0) => \max_cycles_with_no_data_read_reg[31]_i_39_n_7\,
      DI(7) => \max_cycles_with_no_data_read[31]_i_56_n_0\,
      DI(6) => \max_cycles_with_no_data_read[31]_i_57_n_0\,
      DI(5) => \max_cycles_with_no_data_read[31]_i_58_n_0\,
      DI(4) => \max_cycles_with_no_data_read[31]_i_59_n_0\,
      DI(3) => \max_cycles_with_no_data_read[31]_i_60_n_0\,
      DI(2) => \max_cycles_with_no_data_read[31]_i_61_n_0\,
      DI(1) => \max_cycles_with_no_data_read[31]_i_62_n_0\,
      DI(0) => \max_cycles_with_no_data_read[31]_i_63_n_0\,
      O(7 downto 0) => \NLW_max_cycles_with_no_data_read_reg[31]_i_39_O_UNCONNECTED\(7 downto 0),
      S(7) => \max_cycles_with_no_data_read[31]_i_64_n_0\,
      S(6) => \max_cycles_with_no_data_read[31]_i_65_n_0\,
      S(5) => \max_cycles_with_no_data_read[31]_i_66_n_0\,
      S(4) => \max_cycles_with_no_data_read[31]_i_67_n_0\,
      S(3) => \max_cycles_with_no_data_read[31]_i_68_n_0\,
      S(2) => \max_cycles_with_no_data_read[31]_i_69_n_0\,
      S(1) => \max_cycles_with_no_data_read[31]_i_70_n_0\,
      S(0) => \max_cycles_with_no_data_read[31]_i_71_n_0\
    );
\max_cycles_with_no_data_read_reg[31]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \max_cycles_with_no_data_read_reg[31]_i_5_n_0\,
      CI_TOP => '0',
      CO(7) => \max_cycles_with_no_data_read_reg[31]_i_4_n_0\,
      CO(6) => \max_cycles_with_no_data_read_reg[31]_i_4_n_1\,
      CO(5) => \max_cycles_with_no_data_read_reg[31]_i_4_n_2\,
      CO(4) => \max_cycles_with_no_data_read_reg[31]_i_4_n_3\,
      CO(3) => \NLW_max_cycles_with_no_data_read_reg[31]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \max_cycles_with_no_data_read_reg[31]_i_4_n_5\,
      CO(1) => \max_cycles_with_no_data_read_reg[31]_i_4_n_6\,
      CO(0) => \max_cycles_with_no_data_read_reg[31]_i_4_n_7\,
      DI(7) => \max_cycles_with_no_data_read[31]_i_6_n_0\,
      DI(6) => \max_cycles_with_no_data_read[31]_i_7_n_0\,
      DI(5) => \max_cycles_with_no_data_read[31]_i_8_n_0\,
      DI(4) => \max_cycles_with_no_data_read[31]_i_9_n_0\,
      DI(3) => \max_cycles_with_no_data_read[31]_i_10_n_0\,
      DI(2) => \max_cycles_with_no_data_read[31]_i_11_n_0\,
      DI(1) => \max_cycles_with_no_data_read[31]_i_12_n_0\,
      DI(0) => \max_cycles_with_no_data_read[31]_i_13_n_0\,
      O(7 downto 0) => \NLW_max_cycles_with_no_data_read_reg[31]_i_4_O_UNCONNECTED\(7 downto 0),
      S(7) => \max_cycles_with_no_data_read[31]_i_14_n_0\,
      S(6) => \max_cycles_with_no_data_read[31]_i_15_n_0\,
      S(5) => \max_cycles_with_no_data_read[31]_i_16_n_0\,
      S(4) => \max_cycles_with_no_data_read[31]_i_17_n_0\,
      S(3) => \max_cycles_with_no_data_read[31]_i_18_n_0\,
      S(2) => \max_cycles_with_no_data_read[31]_i_19_n_0\,
      S(1) => \max_cycles_with_no_data_read[31]_i_20_n_0\,
      S(0) => \max_cycles_with_no_data_read[31]_i_21_n_0\
    );
\max_cycles_with_no_data_read_reg[31]_i_5\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \max_cycles_with_no_data_read_reg[31]_i_22_n_0\,
      CI_TOP => '0',
      CO(7) => \max_cycles_with_no_data_read_reg[31]_i_5_n_0\,
      CO(6) => \max_cycles_with_no_data_read_reg[31]_i_5_n_1\,
      CO(5) => \max_cycles_with_no_data_read_reg[31]_i_5_n_2\,
      CO(4) => \max_cycles_with_no_data_read_reg[31]_i_5_n_3\,
      CO(3) => \NLW_max_cycles_with_no_data_read_reg[31]_i_5_CO_UNCONNECTED\(3),
      CO(2) => \max_cycles_with_no_data_read_reg[31]_i_5_n_5\,
      CO(1) => \max_cycles_with_no_data_read_reg[31]_i_5_n_6\,
      CO(0) => \max_cycles_with_no_data_read_reg[31]_i_5_n_7\,
      DI(7) => \max_cycles_with_no_data_read[31]_i_23_n_0\,
      DI(6) => \max_cycles_with_no_data_read[31]_i_24_n_0\,
      DI(5) => \max_cycles_with_no_data_read[31]_i_25_n_0\,
      DI(4) => \max_cycles_with_no_data_read[31]_i_26_n_0\,
      DI(3) => \max_cycles_with_no_data_read[31]_i_27_n_0\,
      DI(2) => \max_cycles_with_no_data_read[31]_i_28_n_0\,
      DI(1) => \max_cycles_with_no_data_read[31]_i_29_n_0\,
      DI(0) => \max_cycles_with_no_data_read[31]_i_30_n_0\,
      O(7 downto 0) => \NLW_max_cycles_with_no_data_read_reg[31]_i_5_O_UNCONNECTED\(7 downto 0),
      S(7) => \max_cycles_with_no_data_read[31]_i_31_n_0\,
      S(6) => \max_cycles_with_no_data_read[31]_i_32_n_0\,
      S(5) => \max_cycles_with_no_data_read[31]_i_33_n_0\,
      S(4) => \max_cycles_with_no_data_read[31]_i_34_n_0\,
      S(3) => \max_cycles_with_no_data_read[31]_i_35_n_0\,
      S(2) => \max_cycles_with_no_data_read[31]_i_36_n_0\,
      S(1) => \max_cycles_with_no_data_read[31]_i_37_n_0\,
      S(0) => \max_cycles_with_no_data_read[31]_i_38_n_0\
    );
\max_cycles_with_no_data_read_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_615,
      Q => max_cycles_with_no_data_read(3),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_614,
      Q => max_cycles_with_no_data_read(4),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_613,
      Q => max_cycles_with_no_data_read(5),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_612,
      Q => max_cycles_with_no_data_read(6),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_611,
      Q => max_cycles_with_no_data_read(7),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_610,
      Q => max_cycles_with_no_data_read(8),
      R => '0'
    );
\max_cycles_with_no_data_read_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => sactn_n_70,
      D => sactn_n_609,
      Q => max_cycles_with_no_data_read(9),
      R => '0'
    );
\read_blocking_ratio_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(0),
      Q => read_blocking_ratio(0),
      R => '0'
    );
\read_blocking_ratio_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(10),
      Q => read_blocking_ratio(10),
      R => '0'
    );
\read_blocking_ratio_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(11),
      Q => read_blocking_ratio(11),
      R => '0'
    );
\read_blocking_ratio_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(12),
      Q => read_blocking_ratio(12),
      R => '0'
    );
\read_blocking_ratio_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(13),
      Q => read_blocking_ratio(13),
      R => '0'
    );
\read_blocking_ratio_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(14),
      Q => read_blocking_ratio(14),
      R => '0'
    );
\read_blocking_ratio_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(15),
      Q => read_blocking_ratio(15),
      R => '0'
    );
\read_blocking_ratio_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(16),
      Q => read_blocking_ratio(16),
      R => '0'
    );
\read_blocking_ratio_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(17),
      Q => read_blocking_ratio(17),
      R => '0'
    );
\read_blocking_ratio_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(18),
      Q => read_blocking_ratio(18),
      R => '0'
    );
\read_blocking_ratio_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(19),
      Q => read_blocking_ratio(19),
      R => '0'
    );
\read_blocking_ratio_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(1),
      Q => read_blocking_ratio(1),
      R => '0'
    );
\read_blocking_ratio_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(20),
      Q => read_blocking_ratio(20),
      R => '0'
    );
\read_blocking_ratio_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(21),
      Q => read_blocking_ratio(21),
      R => '0'
    );
\read_blocking_ratio_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(22),
      Q => read_blocking_ratio(22),
      R => '0'
    );
\read_blocking_ratio_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(23),
      Q => read_blocking_ratio(23),
      R => '0'
    );
\read_blocking_ratio_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(24),
      Q => read_blocking_ratio(24),
      R => '0'
    );
\read_blocking_ratio_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(25),
      Q => read_blocking_ratio(25),
      R => '0'
    );
\read_blocking_ratio_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(26),
      Q => read_blocking_ratio(26),
      R => '0'
    );
\read_blocking_ratio_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(27),
      Q => read_blocking_ratio(27),
      R => '0'
    );
\read_blocking_ratio_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(28),
      Q => read_blocking_ratio(28),
      R => '0'
    );
\read_blocking_ratio_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(29),
      Q => read_blocking_ratio(29),
      R => '0'
    );
\read_blocking_ratio_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(2),
      Q => read_blocking_ratio(2),
      R => '0'
    );
\read_blocking_ratio_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(30),
      Q => read_blocking_ratio(30),
      R => '0'
    );
\read_blocking_ratio_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(31),
      Q => read_blocking_ratio(31),
      R => '0'
    );
\read_blocking_ratio_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(3),
      Q => read_blocking_ratio(3),
      R => '0'
    );
\read_blocking_ratio_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(4),
      Q => read_blocking_ratio(4),
      R => '0'
    );
\read_blocking_ratio_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(5),
      Q => read_blocking_ratio(5),
      R => '0'
    );
\read_blocking_ratio_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(6),
      Q => read_blocking_ratio(6),
      R => '0'
    );
\read_blocking_ratio_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(7),
      Q => read_blocking_ratio(7),
      R => '0'
    );
\read_blocking_ratio_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(8),
      Q => read_blocking_ratio(8),
      R => '0'
    );
\read_blocking_ratio_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_blocking_ratio__0\(9),
      Q => read_blocking_ratio(9),
      R => '0'
    );
\read_burst_size_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(0),
      Q => read_burst_size(0),
      R => '0'
    );
\read_burst_size_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(10),
      Q => read_burst_size(10),
      R => '0'
    );
\read_burst_size_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(11),
      Q => read_burst_size(11),
      R => '0'
    );
\read_burst_size_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(12),
      Q => read_burst_size(12),
      R => '0'
    );
\read_burst_size_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(13),
      Q => read_burst_size(13),
      R => '0'
    );
\read_burst_size_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(14),
      Q => read_burst_size(14),
      R => '0'
    );
\read_burst_size_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(15),
      Q => read_burst_size(15),
      R => '0'
    );
\read_burst_size_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(16),
      Q => read_burst_size(16),
      R => '0'
    );
\read_burst_size_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(17),
      Q => read_burst_size(17),
      R => '0'
    );
\read_burst_size_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(18),
      Q => read_burst_size(18),
      R => '0'
    );
\read_burst_size_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(19),
      Q => read_burst_size(19),
      R => '0'
    );
\read_burst_size_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(1),
      Q => read_burst_size(1),
      R => '0'
    );
\read_burst_size_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(20),
      Q => read_burst_size(20),
      R => '0'
    );
\read_burst_size_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(21),
      Q => read_burst_size(21),
      R => '0'
    );
\read_burst_size_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(22),
      Q => read_burst_size(22),
      R => '0'
    );
\read_burst_size_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(23),
      Q => read_burst_size(23),
      R => '0'
    );
\read_burst_size_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(24),
      Q => read_burst_size(24),
      R => '0'
    );
\read_burst_size_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(25),
      Q => read_burst_size(25),
      R => '0'
    );
\read_burst_size_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(26),
      Q => read_burst_size(26),
      R => '0'
    );
\read_burst_size_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(27),
      Q => read_burst_size(27),
      R => '0'
    );
\read_burst_size_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(28),
      Q => read_burst_size(28),
      R => '0'
    );
\read_burst_size_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(29),
      Q => read_burst_size(29),
      R => '0'
    );
\read_burst_size_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(2),
      Q => read_burst_size(2),
      R => '0'
    );
\read_burst_size_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(30),
      Q => read_burst_size(30),
      R => '0'
    );
\read_burst_size_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(31),
      Q => read_burst_size(31),
      R => '0'
    );
\read_burst_size_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(3),
      Q => read_burst_size(3),
      R => '0'
    );
\read_burst_size_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(4),
      Q => read_burst_size(4),
      R => '0'
    );
\read_burst_size_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(5),
      Q => read_burst_size(5),
      R => '0'
    );
\read_burst_size_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(6),
      Q => read_burst_size(6),
      R => '0'
    );
\read_burst_size_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(7),
      Q => read_burst_size(7),
      R => '0'
    );
\read_burst_size_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(8),
      Q => read_burst_size(8),
      R => '0'
    );
\read_burst_size_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_burst_size__0\(9),
      Q => read_burst_size(9),
      R => '0'
    );
\read_count[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0203"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_count_reg_n_0_\(0),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => reset_cmd,
      O => \read_count[0]_i_1_n_0\
    );
\read_count[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_14\,
      O => \read_count[10]_i_1_n_0\
    );
\read_count[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_13\,
      O => \read_count[11]_i_1_n_0\
    );
\read_count[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_12\,
      O => \read_count[12]_i_1_n_0\
    );
\read_count[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_11\,
      O => \read_count[13]_i_1_n_0\
    );
\read_count[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_10\,
      O => \read_count[14]_i_1_n_0\
    );
\read_count[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_9\,
      O => \read_count[15]_i_1_n_0\
    );
\read_count[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_8\,
      O => \read_count[16]_i_1_n_0\
    );
\read_count[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_15\,
      O => \read_count[17]_i_1_n_0\
    );
\read_count[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_14\,
      O => \read_count[18]_i_1_n_0\
    );
\read_count[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_13\,
      O => \read_count[19]_i_1_n_0\
    );
\read_count[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_15\,
      O => \read_count[1]_i_1_n_0\
    );
\read_count[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_12\,
      O => \read_count[20]_i_1_n_0\
    );
\read_count[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_11\,
      O => \read_count[21]_i_1_n_0\
    );
\read_count[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_10\,
      O => \read_count[22]_i_1_n_0\
    );
\read_count[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_9\,
      O => \read_count[23]_i_1_n_0\
    );
\read_count[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[24]_i_2_n_8\,
      O => \read_count[24]_i_1_n_0\
    );
\read_count[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[31]_i_5_n_15\,
      O => \read_count[25]_i_1_n_0\
    );
\read_count[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[31]_i_5_n_14\,
      O => \read_count[26]_i_1_n_0\
    );
\read_count[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[31]_i_5_n_13\,
      O => \read_count[27]_i_1_n_0\
    );
\read_count[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[31]_i_5_n_12\,
      O => \read_count[28]_i_1_n_0\
    );
\read_count[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[31]_i_5_n_11\,
      O => \read_count[29]_i_1_n_0\
    );
\read_count[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_14\,
      O => \read_count[2]_i_1_n_0\
    );
\read_count[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[31]_i_5_n_10\,
      O => \read_count[30]_i_1_n_0\
    );
\read_count[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => toReadDataBusy,
      I3 => \^co\(0),
      O => read_count
    );
\read_count[31]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(32),
      I1 => countReadReqSent_reg(32),
      I2 => countReadReqSent_reg(33),
      I3 => countReadReqToBeSent(33),
      O => \read_count[31]_i_10_n_0\
    );
\read_count[31]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(38),
      I1 => countReadReqSent_reg(38),
      I2 => countReadReqToBeSent(39),
      I3 => countReadReqSent_reg(39),
      O => \read_count[31]_i_11_n_0\
    );
\read_count[31]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(36),
      I1 => countReadReqSent_reg(36),
      I2 => countReadReqToBeSent(37),
      I3 => countReadReqSent_reg(37),
      O => \read_count[31]_i_12_n_0\
    );
\read_count[31]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(34),
      I1 => countReadReqSent_reg(34),
      I2 => countReadReqToBeSent(35),
      I3 => countReadReqSent_reg(35),
      O => \read_count[31]_i_13_n_0\
    );
\read_count[31]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(32),
      I1 => countReadReqSent_reg(32),
      I2 => countReadReqToBeSent(33),
      I3 => countReadReqSent_reg(33),
      O => \read_count[31]_i_14_n_0\
    );
\read_count[31]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[31]_i_5_n_10\,
      I1 => read_count_bursts_per_reset(30),
      I2 => read_count_bursts_per_reset(31),
      I3 => \read_count_reg[31]_i_5_n_9\,
      O => \read_count[31]_i_16_n_0\
    );
\read_count[31]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[31]_i_5_n_12\,
      I1 => read_count_bursts_per_reset(28),
      I2 => read_count_bursts_per_reset(29),
      I3 => \read_count_reg[31]_i_5_n_11\,
      O => \read_count[31]_i_17_n_0\
    );
\read_count[31]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[31]_i_5_n_14\,
      I1 => read_count_bursts_per_reset(26),
      I2 => read_count_bursts_per_reset(27),
      I3 => \read_count_reg[31]_i_5_n_13\,
      O => \read_count[31]_i_18_n_0\
    );
\read_count[31]_i_19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_8\,
      I1 => read_count_bursts_per_reset(24),
      I2 => read_count_bursts_per_reset(25),
      I3 => \read_count_reg[31]_i_5_n_15\,
      O => \read_count[31]_i_19_n_0\
    );
\read_count[31]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[31]_i_5_n_9\,
      O => \read_count[31]_i_2_n_0\
    );
\read_count[31]_i_20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_10\,
      I1 => read_count_bursts_per_reset(22),
      I2 => read_count_bursts_per_reset(23),
      I3 => \read_count_reg[24]_i_2_n_9\,
      O => \read_count[31]_i_20_n_0\
    );
\read_count[31]_i_21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_12\,
      I1 => read_count_bursts_per_reset(20),
      I2 => read_count_bursts_per_reset(21),
      I3 => \read_count_reg[24]_i_2_n_11\,
      O => \read_count[31]_i_21_n_0\
    );
\read_count[31]_i_22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_14\,
      I1 => read_count_bursts_per_reset(18),
      I2 => read_count_bursts_per_reset(19),
      I3 => \read_count_reg[24]_i_2_n_13\,
      O => \read_count[31]_i_22_n_0\
    );
\read_count[31]_i_23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_8\,
      I1 => read_count_bursts_per_reset(16),
      I2 => read_count_bursts_per_reset(17),
      I3 => \read_count_reg[24]_i_2_n_15\,
      O => \read_count[31]_i_23_n_0\
    );
\read_count[31]_i_24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[31]_i_5_n_10\,
      I1 => read_count_bursts_per_reset(30),
      I2 => \read_count_reg[31]_i_5_n_9\,
      I3 => read_count_bursts_per_reset(31),
      O => \read_count[31]_i_24_n_0\
    );
\read_count[31]_i_25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[31]_i_5_n_12\,
      I1 => read_count_bursts_per_reset(28),
      I2 => \read_count_reg[31]_i_5_n_11\,
      I3 => read_count_bursts_per_reset(29),
      O => \read_count[31]_i_25_n_0\
    );
\read_count[31]_i_26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[31]_i_5_n_14\,
      I1 => read_count_bursts_per_reset(26),
      I2 => \read_count_reg[31]_i_5_n_13\,
      I3 => read_count_bursts_per_reset(27),
      O => \read_count[31]_i_26_n_0\
    );
\read_count[31]_i_27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_8\,
      I1 => read_count_bursts_per_reset(24),
      I2 => \read_count_reg[31]_i_5_n_15\,
      I3 => read_count_bursts_per_reset(25),
      O => \read_count[31]_i_27_n_0\
    );
\read_count[31]_i_28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_10\,
      I1 => read_count_bursts_per_reset(22),
      I2 => \read_count_reg[24]_i_2_n_9\,
      I3 => read_count_bursts_per_reset(23),
      O => \read_count[31]_i_28_n_0\
    );
\read_count[31]_i_29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_12\,
      I1 => read_count_bursts_per_reset(20),
      I2 => \read_count_reg[24]_i_2_n_11\,
      I3 => read_count_bursts_per_reset(21),
      O => \read_count[31]_i_29_n_0\
    );
\read_count[31]_i_30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[24]_i_2_n_14\,
      I1 => read_count_bursts_per_reset(18),
      I2 => \read_count_reg[24]_i_2_n_13\,
      I3 => read_count_bursts_per_reset(19),
      O => \read_count[31]_i_30_n_0\
    );
\read_count[31]_i_31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_8\,
      I1 => read_count_bursts_per_reset(16),
      I2 => \read_count_reg[24]_i_2_n_15\,
      I3 => read_count_bursts_per_reset(17),
      O => \read_count[31]_i_31_n_0\
    );
\read_count[31]_i_33\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(30),
      I1 => countReadReqSent_reg(30),
      I2 => countReadReqSent_reg(31),
      I3 => countReadReqToBeSent(31),
      O => \read_count[31]_i_33_n_0\
    );
\read_count[31]_i_34\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(28),
      I1 => countReadReqSent_reg(28),
      I2 => countReadReqSent_reg(29),
      I3 => countReadReqToBeSent(29),
      O => \read_count[31]_i_34_n_0\
    );
\read_count[31]_i_35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(26),
      I1 => countReadReqSent_reg(26),
      I2 => countReadReqSent_reg(27),
      I3 => countReadReqToBeSent(27),
      O => \read_count[31]_i_35_n_0\
    );
\read_count[31]_i_36\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(24),
      I1 => countReadReqSent_reg(24),
      I2 => countReadReqSent_reg(25),
      I3 => countReadReqToBeSent(25),
      O => \read_count[31]_i_36_n_0\
    );
\read_count[31]_i_37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(22),
      I1 => countReadReqSent_reg(22),
      I2 => countReadReqSent_reg(23),
      I3 => countReadReqToBeSent(23),
      O => \read_count[31]_i_37_n_0\
    );
\read_count[31]_i_38\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(20),
      I1 => countReadReqSent_reg(20),
      I2 => countReadReqSent_reg(21),
      I3 => countReadReqToBeSent(21),
      O => \read_count[31]_i_38_n_0\
    );
\read_count[31]_i_39\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(18),
      I1 => countReadReqSent_reg(18),
      I2 => countReadReqSent_reg(19),
      I3 => countReadReqToBeSent(19),
      O => \read_count[31]_i_39_n_0\
    );
\read_count[31]_i_40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(16),
      I1 => countReadReqSent_reg(16),
      I2 => countReadReqSent_reg(17),
      I3 => countReadReqToBeSent(17),
      O => \read_count[31]_i_40_n_0\
    );
\read_count[31]_i_41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(30),
      I1 => countReadReqSent_reg(30),
      I2 => countReadReqToBeSent(31),
      I3 => countReadReqSent_reg(31),
      O => \read_count[31]_i_41_n_0\
    );
\read_count[31]_i_42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(28),
      I1 => countReadReqSent_reg(28),
      I2 => countReadReqToBeSent(29),
      I3 => countReadReqSent_reg(29),
      O => \read_count[31]_i_42_n_0\
    );
\read_count[31]_i_43\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(26),
      I1 => countReadReqSent_reg(26),
      I2 => countReadReqToBeSent(27),
      I3 => countReadReqSent_reg(27),
      O => \read_count[31]_i_43_n_0\
    );
\read_count[31]_i_44\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(24),
      I1 => countReadReqSent_reg(24),
      I2 => countReadReqToBeSent(25),
      I3 => countReadReqSent_reg(25),
      O => \read_count[31]_i_44_n_0\
    );
\read_count[31]_i_45\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(22),
      I1 => countReadReqSent_reg(22),
      I2 => countReadReqToBeSent(23),
      I3 => countReadReqSent_reg(23),
      O => \read_count[31]_i_45_n_0\
    );
\read_count[31]_i_46\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(20),
      I1 => countReadReqSent_reg(20),
      I2 => countReadReqToBeSent(21),
      I3 => countReadReqSent_reg(21),
      O => \read_count[31]_i_46_n_0\
    );
\read_count[31]_i_47\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(18),
      I1 => countReadReqSent_reg(18),
      I2 => countReadReqToBeSent(19),
      I3 => countReadReqSent_reg(19),
      O => \read_count[31]_i_47_n_0\
    );
\read_count[31]_i_48\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(16),
      I1 => countReadReqSent_reg(16),
      I2 => countReadReqToBeSent(17),
      I3 => countReadReqSent_reg(17),
      O => \read_count[31]_i_48_n_0\
    );
\read_count[31]_i_49\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_10\,
      I1 => read_count_bursts_per_reset(14),
      I2 => read_count_bursts_per_reset(15),
      I3 => \read_count_reg[16]_i_2_n_9\,
      O => \read_count[31]_i_49_n_0\
    );
\read_count[31]_i_50\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_12\,
      I1 => read_count_bursts_per_reset(12),
      I2 => read_count_bursts_per_reset(13),
      I3 => \read_count_reg[16]_i_2_n_11\,
      O => \read_count[31]_i_50_n_0\
    );
\read_count[31]_i_51\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_14\,
      I1 => read_count_bursts_per_reset(10),
      I2 => read_count_bursts_per_reset(11),
      I3 => \read_count_reg[16]_i_2_n_13\,
      O => \read_count[31]_i_51_n_0\
    );
\read_count[31]_i_52\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_8\,
      I1 => read_count_bursts_per_reset(8),
      I2 => read_count_bursts_per_reset(9),
      I3 => \read_count_reg[16]_i_2_n_15\,
      O => \read_count[31]_i_52_n_0\
    );
\read_count[31]_i_53\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_10\,
      I1 => read_count_bursts_per_reset(6),
      I2 => read_count_bursts_per_reset(7),
      I3 => \read_count_reg[8]_i_2_n_9\,
      O => \read_count[31]_i_53_n_0\
    );
\read_count[31]_i_54\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_12\,
      I1 => read_count_bursts_per_reset(4),
      I2 => read_count_bursts_per_reset(5),
      I3 => \read_count_reg[8]_i_2_n_11\,
      O => \read_count[31]_i_54_n_0\
    );
\read_count[31]_i_55\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_14\,
      I1 => read_count_bursts_per_reset(2),
      I2 => read_count_bursts_per_reset(3),
      I3 => \read_count_reg[8]_i_2_n_13\,
      O => \read_count[31]_i_55_n_0\
    );
\read_count[31]_i_56\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1F01"
    )
        port map (
      I0 => read_count_bursts_per_reset(0),
      I1 => \read_count_reg_n_0_\(0),
      I2 => read_count_bursts_per_reset(1),
      I3 => \read_count_reg[8]_i_2_n_15\,
      O => \read_count[31]_i_56_n_0\
    );
\read_count[31]_i_57\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_10\,
      I1 => read_count_bursts_per_reset(14),
      I2 => \read_count_reg[16]_i_2_n_9\,
      I3 => read_count_bursts_per_reset(15),
      O => \read_count[31]_i_57_n_0\
    );
\read_count[31]_i_58\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_12\,
      I1 => read_count_bursts_per_reset(12),
      I2 => \read_count_reg[16]_i_2_n_11\,
      I3 => read_count_bursts_per_reset(13),
      O => \read_count[31]_i_58_n_0\
    );
\read_count[31]_i_59\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[16]_i_2_n_14\,
      I1 => read_count_bursts_per_reset(10),
      I2 => \read_count_reg[16]_i_2_n_13\,
      I3 => read_count_bursts_per_reset(11),
      O => \read_count[31]_i_59_n_0\
    );
\read_count[31]_i_60\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_8\,
      I1 => read_count_bursts_per_reset(8),
      I2 => \read_count_reg[16]_i_2_n_15\,
      I3 => read_count_bursts_per_reset(9),
      O => \read_count[31]_i_60_n_0\
    );
\read_count[31]_i_61\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_10\,
      I1 => read_count_bursts_per_reset(6),
      I2 => \read_count_reg[8]_i_2_n_9\,
      I3 => read_count_bursts_per_reset(7),
      O => \read_count[31]_i_61_n_0\
    );
\read_count[31]_i_62\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_12\,
      I1 => read_count_bursts_per_reset(4),
      I2 => \read_count_reg[8]_i_2_n_11\,
      I3 => read_count_bursts_per_reset(5),
      O => \read_count[31]_i_62_n_0\
    );
\read_count[31]_i_63\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \read_count_reg[8]_i_2_n_14\,
      I1 => read_count_bursts_per_reset(2),
      I2 => \read_count_reg[8]_i_2_n_13\,
      I3 => read_count_bursts_per_reset(3),
      O => \read_count[31]_i_63_n_0\
    );
\read_count[31]_i_64\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6006"
    )
        port map (
      I0 => \read_count_reg_n_0_\(0),
      I1 => read_count_bursts_per_reset(0),
      I2 => \read_count_reg[8]_i_2_n_15\,
      I3 => read_count_bursts_per_reset(1),
      O => \read_count[31]_i_64_n_0\
    );
\read_count[31]_i_65\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(14),
      I1 => countReadReqSent_reg(14),
      I2 => countReadReqSent_reg(15),
      I3 => countReadReqToBeSent(15),
      O => \read_count[31]_i_65_n_0\
    );
\read_count[31]_i_66\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(12),
      I1 => countReadReqSent_reg(12),
      I2 => countReadReqSent_reg(13),
      I3 => countReadReqToBeSent(13),
      O => \read_count[31]_i_66_n_0\
    );
\read_count[31]_i_67\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(10),
      I1 => countReadReqSent_reg(10),
      I2 => countReadReqSent_reg(11),
      I3 => countReadReqToBeSent(11),
      O => \read_count[31]_i_67_n_0\
    );
\read_count[31]_i_68\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(8),
      I1 => countReadReqSent_reg(8),
      I2 => countReadReqSent_reg(9),
      I3 => countReadReqToBeSent(9),
      O => \read_count[31]_i_68_n_0\
    );
\read_count[31]_i_69\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(6),
      I1 => countReadReqSent_reg(6),
      I2 => countReadReqSent_reg(7),
      I3 => countReadReqToBeSent(7),
      O => \read_count[31]_i_69_n_0\
    );
\read_count[31]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(38),
      I1 => countReadReqSent_reg(38),
      I2 => countReadReqSent_reg(39),
      I3 => countReadReqToBeSent(39),
      O => \read_count[31]_i_7_n_0\
    );
\read_count[31]_i_70\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(4),
      I1 => countReadReqSent_reg(4),
      I2 => countReadReqSent_reg(5),
      I3 => countReadReqToBeSent(5),
      O => \read_count[31]_i_70_n_0\
    );
\read_count[31]_i_71\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(2),
      I1 => countReadReqSent_reg(2),
      I2 => countReadReqSent_reg(3),
      I3 => countReadReqToBeSent(3),
      O => \read_count[31]_i_71_n_0\
    );
\read_count[31]_i_72\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(0),
      I1 => countReadReqSent_reg(0),
      I2 => countReadReqSent_reg(1),
      I3 => countReadReqToBeSent(1),
      O => \read_count[31]_i_72_n_0\
    );
\read_count[31]_i_73\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(14),
      I1 => countReadReqSent_reg(14),
      I2 => countReadReqToBeSent(15),
      I3 => countReadReqSent_reg(15),
      O => \read_count[31]_i_73_n_0\
    );
\read_count[31]_i_74\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(12),
      I1 => countReadReqSent_reg(12),
      I2 => countReadReqToBeSent(13),
      I3 => countReadReqSent_reg(13),
      O => \read_count[31]_i_74_n_0\
    );
\read_count[31]_i_75\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(10),
      I1 => countReadReqSent_reg(10),
      I2 => countReadReqToBeSent(11),
      I3 => countReadReqSent_reg(11),
      O => \read_count[31]_i_75_n_0\
    );
\read_count[31]_i_76\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(8),
      I1 => countReadReqSent_reg(8),
      I2 => countReadReqToBeSent(9),
      I3 => countReadReqSent_reg(9),
      O => \read_count[31]_i_76_n_0\
    );
\read_count[31]_i_77\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(6),
      I1 => countReadReqSent_reg(6),
      I2 => countReadReqToBeSent(7),
      I3 => countReadReqSent_reg(7),
      O => \read_count[31]_i_77_n_0\
    );
\read_count[31]_i_78\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(4),
      I1 => countReadReqSent_reg(4),
      I2 => countReadReqToBeSent(5),
      I3 => countReadReqSent_reg(5),
      O => \read_count[31]_i_78_n_0\
    );
\read_count[31]_i_79\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(2),
      I1 => countReadReqSent_reg(2),
      I2 => countReadReqToBeSent(3),
      I3 => countReadReqSent_reg(3),
      O => \read_count[31]_i_79_n_0\
    );
\read_count[31]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(36),
      I1 => countReadReqSent_reg(36),
      I2 => countReadReqSent_reg(37),
      I3 => countReadReqToBeSent(37),
      O => \read_count[31]_i_8_n_0\
    );
\read_count[31]_i_80\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countReadReqToBeSent(0),
      I1 => countReadReqSent_reg(0),
      I2 => countReadReqToBeSent(1),
      I3 => countReadReqSent_reg(1),
      O => \read_count[31]_i_80_n_0\
    );
\read_count[31]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countReadReqToBeSent(34),
      I1 => countReadReqSent_reg(34),
      I2 => countReadReqSent_reg(35),
      I3 => countReadReqToBeSent(35),
      O => \read_count[31]_i_9_n_0\
    );
\read_count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_13\,
      O => \read_count[3]_i_1_n_0\
    );
\read_count[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_12\,
      O => \read_count[4]_i_1_n_0\
    );
\read_count[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_11\,
      O => \read_count[5]_i_1_n_0\
    );
\read_count[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_10\,
      O => \read_count[6]_i_1_n_0\
    );
\read_count[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_9\,
      O => \read_count[7]_i_1_n_0\
    );
\read_count[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[8]_i_2_n_8\,
      O => \read_count[8]_i_1_n_0\
    );
\read_count[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[31]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => \read_count_reg[16]_i_2_n_15\,
      O => \read_count[9]_i_1_n_0\
    );
\read_count_bursts_per_reset_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(0),
      Q => read_count_bursts_per_reset(0),
      R => '0'
    );
\read_count_bursts_per_reset_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(10),
      Q => read_count_bursts_per_reset(10),
      R => '0'
    );
\read_count_bursts_per_reset_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(11),
      Q => read_count_bursts_per_reset(11),
      R => '0'
    );
\read_count_bursts_per_reset_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(12),
      Q => read_count_bursts_per_reset(12),
      R => '0'
    );
\read_count_bursts_per_reset_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(13),
      Q => read_count_bursts_per_reset(13),
      R => '0'
    );
\read_count_bursts_per_reset_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(14),
      Q => read_count_bursts_per_reset(14),
      R => '0'
    );
\read_count_bursts_per_reset_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(15),
      Q => read_count_bursts_per_reset(15),
      R => '0'
    );
\read_count_bursts_per_reset_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(16),
      Q => read_count_bursts_per_reset(16),
      R => '0'
    );
\read_count_bursts_per_reset_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(17),
      Q => read_count_bursts_per_reset(17),
      R => '0'
    );
\read_count_bursts_per_reset_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(18),
      Q => read_count_bursts_per_reset(18),
      R => '0'
    );
\read_count_bursts_per_reset_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(19),
      Q => read_count_bursts_per_reset(19),
      R => '0'
    );
\read_count_bursts_per_reset_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(1),
      Q => read_count_bursts_per_reset(1),
      R => '0'
    );
\read_count_bursts_per_reset_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(20),
      Q => read_count_bursts_per_reset(20),
      R => '0'
    );
\read_count_bursts_per_reset_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(21),
      Q => read_count_bursts_per_reset(21),
      R => '0'
    );
\read_count_bursts_per_reset_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(22),
      Q => read_count_bursts_per_reset(22),
      R => '0'
    );
\read_count_bursts_per_reset_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(23),
      Q => read_count_bursts_per_reset(23),
      R => '0'
    );
\read_count_bursts_per_reset_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(24),
      Q => read_count_bursts_per_reset(24),
      R => '0'
    );
\read_count_bursts_per_reset_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(25),
      Q => read_count_bursts_per_reset(25),
      R => '0'
    );
\read_count_bursts_per_reset_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(26),
      Q => read_count_bursts_per_reset(26),
      R => '0'
    );
\read_count_bursts_per_reset_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(27),
      Q => read_count_bursts_per_reset(27),
      R => '0'
    );
\read_count_bursts_per_reset_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(28),
      Q => read_count_bursts_per_reset(28),
      R => '0'
    );
\read_count_bursts_per_reset_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(29),
      Q => read_count_bursts_per_reset(29),
      R => '0'
    );
\read_count_bursts_per_reset_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(2),
      Q => read_count_bursts_per_reset(2),
      R => '0'
    );
\read_count_bursts_per_reset_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(30),
      Q => read_count_bursts_per_reset(30),
      R => '0'
    );
\read_count_bursts_per_reset_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(31),
      Q => read_count_bursts_per_reset(31),
      R => '0'
    );
\read_count_bursts_per_reset_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(3),
      Q => read_count_bursts_per_reset(3),
      R => '0'
    );
\read_count_bursts_per_reset_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(4),
      Q => read_count_bursts_per_reset(4),
      R => '0'
    );
\read_count_bursts_per_reset_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(5),
      Q => read_count_bursts_per_reset(5),
      R => '0'
    );
\read_count_bursts_per_reset_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(6),
      Q => read_count_bursts_per_reset(6),
      R => '0'
    );
\read_count_bursts_per_reset_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(7),
      Q => read_count_bursts_per_reset(7),
      R => '0'
    );
\read_count_bursts_per_reset_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(8),
      Q => read_count_bursts_per_reset(8),
      R => '0'
    );
\read_count_bursts_per_reset_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_count_bursts_per_reset__0\(9),
      Q => read_count_bursts_per_reset(9),
      R => '0'
    );
\read_count_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[0]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(0),
      R => '0'
    );
\read_count_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[10]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(10),
      R => '0'
    );
\read_count_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[11]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(11),
      R => '0'
    );
\read_count_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[12]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(12),
      R => '0'
    );
\read_count_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[13]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(13),
      R => '0'
    );
\read_count_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[14]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(14),
      R => '0'
    );
\read_count_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[15]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(15),
      R => '0'
    );
\read_count_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[16]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(16),
      R => '0'
    );
\read_count_reg[16]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_count_reg[8]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \read_count_reg[16]_i_2_n_0\,
      CO(6) => \read_count_reg[16]_i_2_n_1\,
      CO(5) => \read_count_reg[16]_i_2_n_2\,
      CO(4) => \read_count_reg[16]_i_2_n_3\,
      CO(3) => \NLW_read_count_reg[16]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[16]_i_2_n_5\,
      CO(1) => \read_count_reg[16]_i_2_n_6\,
      CO(0) => \read_count_reg[16]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \read_count_reg[16]_i_2_n_8\,
      O(6) => \read_count_reg[16]_i_2_n_9\,
      O(5) => \read_count_reg[16]_i_2_n_10\,
      O(4) => \read_count_reg[16]_i_2_n_11\,
      O(3) => \read_count_reg[16]_i_2_n_12\,
      O(2) => \read_count_reg[16]_i_2_n_13\,
      O(1) => \read_count_reg[16]_i_2_n_14\,
      O(0) => \read_count_reg[16]_i_2_n_15\,
      S(7 downto 0) => \read_count_reg_n_0_\(16 downto 9)
    );
\read_count_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[17]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(17),
      R => '0'
    );
\read_count_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[18]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(18),
      R => '0'
    );
\read_count_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[19]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(19),
      R => '0'
    );
\read_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[1]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(1),
      R => '0'
    );
\read_count_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[20]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(20),
      R => '0'
    );
\read_count_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[21]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(21),
      R => '0'
    );
\read_count_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[22]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(22),
      R => '0'
    );
\read_count_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[23]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(23),
      R => '0'
    );
\read_count_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[24]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(24),
      R => '0'
    );
\read_count_reg[24]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_count_reg[16]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \read_count_reg[24]_i_2_n_0\,
      CO(6) => \read_count_reg[24]_i_2_n_1\,
      CO(5) => \read_count_reg[24]_i_2_n_2\,
      CO(4) => \read_count_reg[24]_i_2_n_3\,
      CO(3) => \NLW_read_count_reg[24]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[24]_i_2_n_5\,
      CO(1) => \read_count_reg[24]_i_2_n_6\,
      CO(0) => \read_count_reg[24]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \read_count_reg[24]_i_2_n_8\,
      O(6) => \read_count_reg[24]_i_2_n_9\,
      O(5) => \read_count_reg[24]_i_2_n_10\,
      O(4) => \read_count_reg[24]_i_2_n_11\,
      O(3) => \read_count_reg[24]_i_2_n_12\,
      O(2) => \read_count_reg[24]_i_2_n_13\,
      O(1) => \read_count_reg[24]_i_2_n_14\,
      O(0) => \read_count_reg[24]_i_2_n_15\,
      S(7 downto 0) => \read_count_reg_n_0_\(24 downto 17)
    );
\read_count_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[25]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(25),
      R => '0'
    );
\read_count_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[26]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(26),
      R => '0'
    );
\read_count_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[27]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(27),
      R => '0'
    );
\read_count_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[28]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(28),
      R => '0'
    );
\read_count_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[29]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(29),
      R => '0'
    );
\read_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[2]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(2),
      R => '0'
    );
\read_count_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[30]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(30),
      R => '0'
    );
\read_count_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[31]_i_2_n_0\,
      Q => \read_count_reg_n_0_\(31),
      R => '0'
    );
\read_count_reg[31]_i_15\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \read_count_reg[31]_i_15_n_0\,
      CO(6) => \read_count_reg[31]_i_15_n_1\,
      CO(5) => \read_count_reg[31]_i_15_n_2\,
      CO(4) => \read_count_reg[31]_i_15_n_3\,
      CO(3) => \NLW_read_count_reg[31]_i_15_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[31]_i_15_n_5\,
      CO(1) => \read_count_reg[31]_i_15_n_6\,
      CO(0) => \read_count_reg[31]_i_15_n_7\,
      DI(7) => \read_count[31]_i_49_n_0\,
      DI(6) => \read_count[31]_i_50_n_0\,
      DI(5) => \read_count[31]_i_51_n_0\,
      DI(4) => \read_count[31]_i_52_n_0\,
      DI(3) => \read_count[31]_i_53_n_0\,
      DI(2) => \read_count[31]_i_54_n_0\,
      DI(1) => \read_count[31]_i_55_n_0\,
      DI(0) => \read_count[31]_i_56_n_0\,
      O(7 downto 0) => \NLW_read_count_reg[31]_i_15_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_count[31]_i_57_n_0\,
      S(6) => \read_count[31]_i_58_n_0\,
      S(5) => \read_count[31]_i_59_n_0\,
      S(4) => \read_count[31]_i_60_n_0\,
      S(3) => \read_count[31]_i_61_n_0\,
      S(2) => \read_count[31]_i_62_n_0\,
      S(1) => \read_count[31]_i_63_n_0\,
      S(0) => \read_count[31]_i_64_n_0\
    );
\read_count_reg[31]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_count_reg[31]_i_6_n_0\,
      CI_TOP => '0',
      CO(7 downto 4) => \NLW_read_count_reg[31]_i_3_CO_UNCONNECTED\(7 downto 4),
      CO(3) => \^co\(0),
      CO(2) => \read_count_reg[31]_i_3_n_5\,
      CO(1) => \read_count_reg[31]_i_3_n_6\,
      CO(0) => \read_count_reg[31]_i_3_n_7\,
      DI(7 downto 4) => B"0000",
      DI(3) => \read_count[31]_i_7_n_0\,
      DI(2) => \read_count[31]_i_8_n_0\,
      DI(1) => \read_count[31]_i_9_n_0\,
      DI(0) => \read_count[31]_i_10_n_0\,
      O(7 downto 0) => \NLW_read_count_reg[31]_i_3_O_UNCONNECTED\(7 downto 0),
      S(7 downto 4) => B"0000",
      S(3) => \read_count[31]_i_11_n_0\,
      S(2) => \read_count[31]_i_12_n_0\,
      S(1) => \read_count[31]_i_13_n_0\,
      S(0) => \read_count[31]_i_14_n_0\
    );
\read_count_reg[31]_i_32\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \read_count_reg[31]_i_32_n_0\,
      CO(6) => \read_count_reg[31]_i_32_n_1\,
      CO(5) => \read_count_reg[31]_i_32_n_2\,
      CO(4) => \read_count_reg[31]_i_32_n_3\,
      CO(3) => \NLW_read_count_reg[31]_i_32_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[31]_i_32_n_5\,
      CO(1) => \read_count_reg[31]_i_32_n_6\,
      CO(0) => \read_count_reg[31]_i_32_n_7\,
      DI(7) => \read_count[31]_i_65_n_0\,
      DI(6) => \read_count[31]_i_66_n_0\,
      DI(5) => \read_count[31]_i_67_n_0\,
      DI(4) => \read_count[31]_i_68_n_0\,
      DI(3) => \read_count[31]_i_69_n_0\,
      DI(2) => \read_count[31]_i_70_n_0\,
      DI(1) => \read_count[31]_i_71_n_0\,
      DI(0) => \read_count[31]_i_72_n_0\,
      O(7 downto 0) => \NLW_read_count_reg[31]_i_32_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_count[31]_i_73_n_0\,
      S(6) => \read_count[31]_i_74_n_0\,
      S(5) => \read_count[31]_i_75_n_0\,
      S(4) => \read_count[31]_i_76_n_0\,
      S(3) => \read_count[31]_i_77_n_0\,
      S(2) => \read_count[31]_i_78_n_0\,
      S(1) => \read_count[31]_i_79_n_0\,
      S(0) => \read_count[31]_i_80_n_0\
    );
\read_count_reg[31]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_count_reg[31]_i_15_n_0\,
      CI_TOP => '0',
      CO(7) => \read_count_reg[31]_i_4_n_0\,
      CO(6) => \read_count_reg[31]_i_4_n_1\,
      CO(5) => \read_count_reg[31]_i_4_n_2\,
      CO(4) => \read_count_reg[31]_i_4_n_3\,
      CO(3) => \NLW_read_count_reg[31]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[31]_i_4_n_5\,
      CO(1) => \read_count_reg[31]_i_4_n_6\,
      CO(0) => \read_count_reg[31]_i_4_n_7\,
      DI(7) => \read_count[31]_i_16_n_0\,
      DI(6) => \read_count[31]_i_17_n_0\,
      DI(5) => \read_count[31]_i_18_n_0\,
      DI(4) => \read_count[31]_i_19_n_0\,
      DI(3) => \read_count[31]_i_20_n_0\,
      DI(2) => \read_count[31]_i_21_n_0\,
      DI(1) => \read_count[31]_i_22_n_0\,
      DI(0) => \read_count[31]_i_23_n_0\,
      O(7 downto 0) => \NLW_read_count_reg[31]_i_4_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_count[31]_i_24_n_0\,
      S(6) => \read_count[31]_i_25_n_0\,
      S(5) => \read_count[31]_i_26_n_0\,
      S(4) => \read_count[31]_i_27_n_0\,
      S(3) => \read_count[31]_i_28_n_0\,
      S(2) => \read_count[31]_i_29_n_0\,
      S(1) => \read_count[31]_i_30_n_0\,
      S(0) => \read_count[31]_i_31_n_0\
    );
\read_count_reg[31]_i_5\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_count_reg[24]_i_2_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_read_count_reg[31]_i_5_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \read_count_reg[31]_i_5_n_2\,
      CO(4) => \read_count_reg[31]_i_5_n_3\,
      CO(3) => \NLW_read_count_reg[31]_i_5_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[31]_i_5_n_5\,
      CO(1) => \read_count_reg[31]_i_5_n_6\,
      CO(0) => \read_count_reg[31]_i_5_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_read_count_reg[31]_i_5_O_UNCONNECTED\(7),
      O(6) => \read_count_reg[31]_i_5_n_9\,
      O(5) => \read_count_reg[31]_i_5_n_10\,
      O(4) => \read_count_reg[31]_i_5_n_11\,
      O(3) => \read_count_reg[31]_i_5_n_12\,
      O(2) => \read_count_reg[31]_i_5_n_13\,
      O(1) => \read_count_reg[31]_i_5_n_14\,
      O(0) => \read_count_reg[31]_i_5_n_15\,
      S(7) => '0',
      S(6 downto 0) => \read_count_reg_n_0_\(31 downto 25)
    );
\read_count_reg[31]_i_6\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_count_reg[31]_i_32_n_0\,
      CI_TOP => '0',
      CO(7) => \read_count_reg[31]_i_6_n_0\,
      CO(6) => \read_count_reg[31]_i_6_n_1\,
      CO(5) => \read_count_reg[31]_i_6_n_2\,
      CO(4) => \read_count_reg[31]_i_6_n_3\,
      CO(3) => \NLW_read_count_reg[31]_i_6_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[31]_i_6_n_5\,
      CO(1) => \read_count_reg[31]_i_6_n_6\,
      CO(0) => \read_count_reg[31]_i_6_n_7\,
      DI(7) => \read_count[31]_i_33_n_0\,
      DI(6) => \read_count[31]_i_34_n_0\,
      DI(5) => \read_count[31]_i_35_n_0\,
      DI(4) => \read_count[31]_i_36_n_0\,
      DI(3) => \read_count[31]_i_37_n_0\,
      DI(2) => \read_count[31]_i_38_n_0\,
      DI(1) => \read_count[31]_i_39_n_0\,
      DI(0) => \read_count[31]_i_40_n_0\,
      O(7 downto 0) => \NLW_read_count_reg[31]_i_6_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_count[31]_i_41_n_0\,
      S(6) => \read_count[31]_i_42_n_0\,
      S(5) => \read_count[31]_i_43_n_0\,
      S(4) => \read_count[31]_i_44_n_0\,
      S(3) => \read_count[31]_i_45_n_0\,
      S(2) => \read_count[31]_i_46_n_0\,
      S(1) => \read_count[31]_i_47_n_0\,
      S(0) => \read_count[31]_i_48_n_0\
    );
\read_count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[3]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(3),
      R => '0'
    );
\read_count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[4]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(4),
      R => '0'
    );
\read_count_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[5]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(5),
      R => '0'
    );
\read_count_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[6]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(6),
      R => '0'
    );
\read_count_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[7]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(7),
      R => '0'
    );
\read_count_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[8]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(8),
      R => '0'
    );
\read_count_reg[8]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_count_reg_n_0_\(0),
      CI_TOP => '0',
      CO(7) => \read_count_reg[8]_i_2_n_0\,
      CO(6) => \read_count_reg[8]_i_2_n_1\,
      CO(5) => \read_count_reg[8]_i_2_n_2\,
      CO(4) => \read_count_reg[8]_i_2_n_3\,
      CO(3) => \NLW_read_count_reg[8]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \read_count_reg[8]_i_2_n_5\,
      CO(1) => \read_count_reg[8]_i_2_n_6\,
      CO(0) => \read_count_reg[8]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \read_count_reg[8]_i_2_n_8\,
      O(6) => \read_count_reg[8]_i_2_n_9\,
      O(5) => \read_count_reg[8]_i_2_n_10\,
      O(4) => \read_count_reg[8]_i_2_n_11\,
      O(3) => \read_count_reg[8]_i_2_n_12\,
      O(2) => \read_count_reg[8]_i_2_n_13\,
      O(1) => \read_count_reg[8]_i_2_n_14\,
      O(0) => \read_count_reg[8]_i_2_n_15\,
      S(7 downto 0) => \read_count_reg_n_0_\(8 downto 1)
    );
\read_count_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => read_count,
      D => \read_count[9]_i_1_n_0\,
      Q => \read_count_reg_n_0_\(9),
      R => '0'
    );
\read_max_queue_size_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(0),
      Q => read_max_queue_size(0),
      R => '0'
    );
\read_max_queue_size_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(10),
      Q => read_max_queue_size(10),
      R => '0'
    );
\read_max_queue_size_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(11),
      Q => read_max_queue_size(11),
      R => '0'
    );
\read_max_queue_size_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(12),
      Q => read_max_queue_size(12),
      R => '0'
    );
\read_max_queue_size_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(13),
      Q => read_max_queue_size(13),
      R => '0'
    );
\read_max_queue_size_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(14),
      Q => read_max_queue_size(14),
      R => '0'
    );
\read_max_queue_size_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(15),
      Q => read_max_queue_size(15),
      R => '0'
    );
\read_max_queue_size_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(16),
      Q => read_max_queue_size(16),
      R => '0'
    );
\read_max_queue_size_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(17),
      Q => read_max_queue_size(17),
      R => '0'
    );
\read_max_queue_size_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(18),
      Q => read_max_queue_size(18),
      R => '0'
    );
\read_max_queue_size_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(19),
      Q => read_max_queue_size(19),
      R => '0'
    );
\read_max_queue_size_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(1),
      Q => read_max_queue_size(1),
      R => '0'
    );
\read_max_queue_size_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(20),
      Q => read_max_queue_size(20),
      R => '0'
    );
\read_max_queue_size_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(21),
      Q => read_max_queue_size(21),
      R => '0'
    );
\read_max_queue_size_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(22),
      Q => read_max_queue_size(22),
      R => '0'
    );
\read_max_queue_size_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(23),
      Q => read_max_queue_size(23),
      R => '0'
    );
\read_max_queue_size_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(24),
      Q => read_max_queue_size(24),
      R => '0'
    );
\read_max_queue_size_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(25),
      Q => read_max_queue_size(25),
      R => '0'
    );
\read_max_queue_size_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(26),
      Q => read_max_queue_size(26),
      R => '0'
    );
\read_max_queue_size_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(27),
      Q => read_max_queue_size(27),
      R => '0'
    );
\read_max_queue_size_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(28),
      Q => read_max_queue_size(28),
      R => '0'
    );
\read_max_queue_size_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(29),
      Q => read_max_queue_size(29),
      R => '0'
    );
\read_max_queue_size_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(2),
      Q => read_max_queue_size(2),
      R => '0'
    );
\read_max_queue_size_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(30),
      Q => read_max_queue_size(30),
      R => '0'
    );
\read_max_queue_size_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(31),
      Q => read_max_queue_size(31),
      R => '0'
    );
\read_max_queue_size_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(3),
      Q => read_max_queue_size(3),
      R => '0'
    );
\read_max_queue_size_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(4),
      Q => read_max_queue_size(4),
      R => '0'
    );
\read_max_queue_size_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(5),
      Q => read_max_queue_size(5),
      R => '0'
    );
\read_max_queue_size_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(6),
      Q => read_max_queue_size(6),
      R => '0'
    );
\read_max_queue_size_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(7),
      Q => read_max_queue_size(7),
      R => '0'
    );
\read_max_queue_size_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(8),
      Q => read_max_queue_size(8),
      R => '0'
    );
\read_max_queue_size_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_max_queue_size__0\(9),
      Q => read_max_queue_size(9),
      R => '0'
    );
\read_start_DDR_address_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(0),
      Q => read_start_DDR_address(0),
      R => '0'
    );
\read_start_DDR_address_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(10),
      Q => read_start_DDR_address(10),
      R => '0'
    );
\read_start_DDR_address_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(11),
      Q => read_start_DDR_address(11),
      R => '0'
    );
\read_start_DDR_address_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(12),
      Q => read_start_DDR_address(12),
      R => '0'
    );
\read_start_DDR_address_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(13),
      Q => read_start_DDR_address(13),
      R => '0'
    );
\read_start_DDR_address_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(14),
      Q => read_start_DDR_address(14),
      R => '0'
    );
\read_start_DDR_address_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(15),
      Q => read_start_DDR_address(15),
      R => '0'
    );
\read_start_DDR_address_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(16),
      Q => read_start_DDR_address(16),
      R => '0'
    );
\read_start_DDR_address_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(17),
      Q => read_start_DDR_address(17),
      R => '0'
    );
\read_start_DDR_address_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(18),
      Q => read_start_DDR_address(18),
      R => '0'
    );
\read_start_DDR_address_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(19),
      Q => read_start_DDR_address(19),
      R => '0'
    );
\read_start_DDR_address_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(1),
      Q => read_start_DDR_address(1),
      R => '0'
    );
\read_start_DDR_address_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(20),
      Q => read_start_DDR_address(20),
      R => '0'
    );
\read_start_DDR_address_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(21),
      Q => read_start_DDR_address(21),
      R => '0'
    );
\read_start_DDR_address_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(22),
      Q => read_start_DDR_address(22),
      R => '0'
    );
\read_start_DDR_address_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(23),
      Q => read_start_DDR_address(23),
      R => '0'
    );
\read_start_DDR_address_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(24),
      Q => read_start_DDR_address(24),
      R => '0'
    );
\read_start_DDR_address_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(25),
      Q => read_start_DDR_address(25),
      R => '0'
    );
\read_start_DDR_address_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(26),
      Q => read_start_DDR_address(26),
      R => '0'
    );
\read_start_DDR_address_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(27),
      Q => read_start_DDR_address(27),
      R => '0'
    );
\read_start_DDR_address_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(28),
      Q => read_start_DDR_address(28),
      R => '0'
    );
\read_start_DDR_address_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(29),
      Q => read_start_DDR_address(29),
      R => '0'
    );
\read_start_DDR_address_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(2),
      Q => read_start_DDR_address(2),
      R => '0'
    );
\read_start_DDR_address_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(30),
      Q => read_start_DDR_address(30),
      R => '0'
    );
\read_start_DDR_address_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(31),
      Q => read_start_DDR_address(31),
      R => '0'
    );
\read_start_DDR_address_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(32),
      Q => read_start_DDR_address(32),
      R => '0'
    );
\read_start_DDR_address_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(33),
      Q => read_start_DDR_address(33),
      R => '0'
    );
\read_start_DDR_address_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(34),
      Q => read_start_DDR_address(34),
      R => '0'
    );
\read_start_DDR_address_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(35),
      Q => read_start_DDR_address(35),
      R => '0'
    );
\read_start_DDR_address_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(36),
      Q => read_start_DDR_address(36),
      R => '0'
    );
\read_start_DDR_address_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(37),
      Q => read_start_DDR_address(37),
      R => '0'
    );
\read_start_DDR_address_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(38),
      Q => read_start_DDR_address(38),
      R => '0'
    );
\read_start_DDR_address_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(39),
      Q => read_start_DDR_address(39),
      R => '0'
    );
\read_start_DDR_address_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(3),
      Q => read_start_DDR_address(3),
      R => '0'
    );
\read_start_DDR_address_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(40),
      Q => read_start_DDR_address(40),
      R => '0'
    );
\read_start_DDR_address_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(41),
      Q => read_start_DDR_address(41),
      R => '0'
    );
\read_start_DDR_address_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(42),
      Q => read_start_DDR_address(42),
      R => '0'
    );
\read_start_DDR_address_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(43),
      Q => read_start_DDR_address(43),
      R => '0'
    );
\read_start_DDR_address_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(44),
      Q => read_start_DDR_address(44),
      R => '0'
    );
\read_start_DDR_address_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(45),
      Q => read_start_DDR_address(45),
      R => '0'
    );
\read_start_DDR_address_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(46),
      Q => read_start_DDR_address(46),
      R => '0'
    );
\read_start_DDR_address_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(47),
      Q => read_start_DDR_address(47),
      R => '0'
    );
\read_start_DDR_address_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(48),
      Q => read_start_DDR_address(48),
      R => '0'
    );
\read_start_DDR_address_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(49),
      Q => read_start_DDR_address(49),
      R => '0'
    );
\read_start_DDR_address_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(4),
      Q => read_start_DDR_address(4),
      R => '0'
    );
\read_start_DDR_address_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(50),
      Q => read_start_DDR_address(50),
      R => '0'
    );
\read_start_DDR_address_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(51),
      Q => read_start_DDR_address(51),
      R => '0'
    );
\read_start_DDR_address_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(52),
      Q => read_start_DDR_address(52),
      R => '0'
    );
\read_start_DDR_address_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(53),
      Q => read_start_DDR_address(53),
      R => '0'
    );
\read_start_DDR_address_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(54),
      Q => read_start_DDR_address(54),
      R => '0'
    );
\read_start_DDR_address_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(55),
      Q => read_start_DDR_address(55),
      R => '0'
    );
\read_start_DDR_address_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(56),
      Q => read_start_DDR_address(56),
      R => '0'
    );
\read_start_DDR_address_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(57),
      Q => read_start_DDR_address(57),
      R => '0'
    );
\read_start_DDR_address_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(58),
      Q => read_start_DDR_address(58),
      R => '0'
    );
\read_start_DDR_address_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(59),
      Q => read_start_DDR_address(59),
      R => '0'
    );
\read_start_DDR_address_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(5),
      Q => read_start_DDR_address(5),
      R => '0'
    );
\read_start_DDR_address_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(60),
      Q => read_start_DDR_address(60),
      R => '0'
    );
\read_start_DDR_address_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(61),
      Q => read_start_DDR_address(61),
      R => '0'
    );
\read_start_DDR_address_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(62),
      Q => read_start_DDR_address(62),
      R => '0'
    );
\read_start_DDR_address_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(63),
      Q => read_start_DDR_address(63),
      R => '0'
    );
\read_start_DDR_address_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(6),
      Q => read_start_DDR_address(6),
      R => '0'
    );
\read_start_DDR_address_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(7),
      Q => read_start_DDR_address(7),
      R => '0'
    );
\read_start_DDR_address_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(8),
      Q => read_start_DDR_address(8),
      R => '0'
    );
\read_start_DDR_address_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_start_DDR_address__0\(9),
      Q => read_start_DDR_address(9),
      R => '0'
    );
\read_step_DDR_address_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(0),
      Q => read_step_DDR_address(0),
      R => '0'
    );
\read_step_DDR_address_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(10),
      Q => read_step_DDR_address(10),
      R => '0'
    );
\read_step_DDR_address_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(11),
      Q => read_step_DDR_address(11),
      R => '0'
    );
\read_step_DDR_address_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(12),
      Q => read_step_DDR_address(12),
      R => '0'
    );
\read_step_DDR_address_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(13),
      Q => read_step_DDR_address(13),
      R => '0'
    );
\read_step_DDR_address_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(14),
      Q => read_step_DDR_address(14),
      R => '0'
    );
\read_step_DDR_address_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(15),
      Q => read_step_DDR_address(15),
      R => '0'
    );
\read_step_DDR_address_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(16),
      Q => read_step_DDR_address(16),
      R => '0'
    );
\read_step_DDR_address_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(17),
      Q => read_step_DDR_address(17),
      R => '0'
    );
\read_step_DDR_address_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(18),
      Q => read_step_DDR_address(18),
      R => '0'
    );
\read_step_DDR_address_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(19),
      Q => read_step_DDR_address(19),
      R => '0'
    );
\read_step_DDR_address_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(1),
      Q => read_step_DDR_address(1),
      R => '0'
    );
\read_step_DDR_address_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(20),
      Q => read_step_DDR_address(20),
      R => '0'
    );
\read_step_DDR_address_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(21),
      Q => read_step_DDR_address(21),
      R => '0'
    );
\read_step_DDR_address_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(22),
      Q => read_step_DDR_address(22),
      R => '0'
    );
\read_step_DDR_address_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(23),
      Q => read_step_DDR_address(23),
      R => '0'
    );
\read_step_DDR_address_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(24),
      Q => read_step_DDR_address(24),
      R => '0'
    );
\read_step_DDR_address_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(25),
      Q => read_step_DDR_address(25),
      R => '0'
    );
\read_step_DDR_address_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(26),
      Q => read_step_DDR_address(26),
      R => '0'
    );
\read_step_DDR_address_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(27),
      Q => read_step_DDR_address(27),
      R => '0'
    );
\read_step_DDR_address_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(28),
      Q => read_step_DDR_address(28),
      R => '0'
    );
\read_step_DDR_address_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(29),
      Q => read_step_DDR_address(29),
      R => '0'
    );
\read_step_DDR_address_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(2),
      Q => read_step_DDR_address(2),
      R => '0'
    );
\read_step_DDR_address_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(30),
      Q => read_step_DDR_address(30),
      R => '0'
    );
\read_step_DDR_address_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(31),
      Q => read_step_DDR_address(31),
      R => '0'
    );
\read_step_DDR_address_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(3),
      Q => read_step_DDR_address(3),
      R => '0'
    );
\read_step_DDR_address_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(4),
      Q => read_step_DDR_address(4),
      R => '0'
    );
\read_step_DDR_address_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(5),
      Q => read_step_DDR_address(5),
      R => '0'
    );
\read_step_DDR_address_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(6),
      Q => read_step_DDR_address(6),
      R => '0'
    );
\read_step_DDR_address_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(7),
      Q => read_step_DDR_address(7),
      R => '0'
    );
\read_step_DDR_address_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(8),
      Q => read_step_DDR_address(8),
      R => '0'
    );
\read_step_DDR_address_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_step_DDR_address__0\(9),
      Q => read_step_DDR_address(9),
      R => '0'
    );
\read_ticks[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[0]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[0]_i_1_n_0\
    );
\read_ticks[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"007F"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks(0),
      O => \read_ticks[0]_i_2_n_0\
    );
\read_ticks[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[10]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[10]_i_1_n_0\
    );
\read_ticks[10]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(10),
      O => \read_ticks[10]_i_2_n_0\
    );
\read_ticks[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[11]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[11]_i_1_n_0\
    );
\read_ticks[11]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(11),
      O => \read_ticks[11]_i_2_n_0\
    );
\read_ticks[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[12]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[12]_i_1_n_0\
    );
\read_ticks[12]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(12),
      O => \read_ticks[12]_i_2_n_0\
    );
\read_ticks[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[13]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[13]_i_1_n_0\
    );
\read_ticks[13]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(13),
      O => \read_ticks[13]_i_2_n_0\
    );
\read_ticks[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[14]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[14]_i_1_n_0\
    );
\read_ticks[14]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(14),
      O => \read_ticks[14]_i_2_n_0\
    );
\read_ticks[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[15]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[15]_i_1_n_0\
    );
\read_ticks[15]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(15),
      O => \read_ticks[15]_i_2_n_0\
    );
\read_ticks[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[16]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[16]_i_1_n_0\
    );
\read_ticks[16]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(16),
      O => \read_ticks[16]_i_2_n_0\
    );
\read_ticks[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[17]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[17]_i_1_n_0\
    );
\read_ticks[17]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(17),
      O => \read_ticks[17]_i_2_n_0\
    );
\read_ticks[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[18]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[18]_i_1_n_0\
    );
\read_ticks[18]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(18),
      O => \read_ticks[18]_i_2_n_0\
    );
\read_ticks[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[19]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[19]_i_1_n_0\
    );
\read_ticks[19]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(19),
      O => \read_ticks[19]_i_2_n_0\
    );
\read_ticks[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[1]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[1]_i_1_n_0\
    );
\read_ticks[1]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(1),
      O => \read_ticks[1]_i_2_n_0\
    );
\read_ticks[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[20]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[20]_i_1_n_0\
    );
\read_ticks[20]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(20),
      O => \read_ticks[20]_i_2_n_0\
    );
\read_ticks[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[21]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[21]_i_1_n_0\
    );
\read_ticks[21]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(21),
      O => \read_ticks[21]_i_2_n_0\
    );
\read_ticks[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[22]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[22]_i_1_n_0\
    );
\read_ticks[22]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(22),
      O => \read_ticks[22]_i_2_n_0\
    );
\read_ticks[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[23]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[23]_i_1_n_0\
    );
\read_ticks[23]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(23),
      O => \read_ticks[23]_i_2_n_0\
    );
\read_ticks[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[24]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[24]_i_1_n_0\
    );
\read_ticks[24]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(24),
      O => \read_ticks[24]_i_2_n_0\
    );
\read_ticks[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[25]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[25]_i_1_n_0\
    );
\read_ticks[25]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(25),
      O => \read_ticks[25]_i_2_n_0\
    );
\read_ticks[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[26]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[26]_i_1_n_0\
    );
\read_ticks[26]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(26),
      O => \read_ticks[26]_i_2_n_0\
    );
\read_ticks[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[27]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[27]_i_1_n_0\
    );
\read_ticks[27]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(27),
      O => \read_ticks[27]_i_2_n_0\
    );
\read_ticks[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[28]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[28]_i_1_n_0\
    );
\read_ticks[28]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(28),
      O => \read_ticks[28]_i_2_n_0\
    );
\read_ticks[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[29]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[29]_i_1_n_0\
    );
\read_ticks[29]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(29),
      O => \read_ticks[29]_i_2_n_0\
    );
\read_ticks[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[2]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[2]_i_1_n_0\
    );
\read_ticks[2]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(2),
      O => \read_ticks[2]_i_2_n_0\
    );
\read_ticks[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[30]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[30]_i_1_n_0\
    );
\read_ticks[30]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(30),
      O => \read_ticks[30]_i_2_n_0\
    );
\read_ticks[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[31]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[31]_i_1_n_0\
    );
\read_ticks[31]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_ticks20_out(32),
      I1 => read_ticks20_out(33),
      O => \read_ticks[31]_i_10_n_0\
    );
\read_ticks[31]_i_100\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(21),
      I1 => countDataReceived(21),
      O => \read_ticks[31]_i_100_n_0\
    );
\read_ticks[31]_i_101\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(20),
      I1 => countDataReceived(20),
      O => \read_ticks[31]_i_101_n_0\
    );
\read_ticks[31]_i_102\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(19),
      I1 => countDataReceived(19),
      O => \read_ticks[31]_i_102_n_0\
    );
\read_ticks[31]_i_103\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(18),
      I1 => countDataReceived(18),
      O => \read_ticks[31]_i_103_n_0\
    );
\read_ticks[31]_i_104\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(17),
      I1 => countDataReceived(17),
      O => \read_ticks[31]_i_104_n_0\
    );
\read_ticks[31]_i_105\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(16),
      I1 => countDataReceived(16),
      O => \read_ticks[31]_i_105_n_0\
    );
\read_ticks[31]_i_106\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(15),
      I1 => countDataReceived(15),
      O => \read_ticks[31]_i_106_n_0\
    );
\read_ticks[31]_i_107\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(14),
      I1 => countDataReceived(14),
      O => \read_ticks[31]_i_107_n_0\
    );
\read_ticks[31]_i_108\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(13),
      I1 => countDataReceived(13),
      O => \read_ticks[31]_i_108_n_0\
    );
\read_ticks[31]_i_109\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(12),
      I1 => countDataReceived(12),
      O => \read_ticks[31]_i_109_n_0\
    );
\read_ticks[31]_i_110\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(11),
      I1 => countDataReceived(11),
      O => \read_ticks[31]_i_110_n_0\
    );
\read_ticks[31]_i_111\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(10),
      I1 => countDataReceived(10),
      O => \read_ticks[31]_i_111_n_0\
    );
\read_ticks[31]_i_112\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(9),
      I1 => countDataReceived(9),
      O => \read_ticks[31]_i_112_n_0\
    );
\read_ticks[31]_i_113\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(8),
      I1 => countDataReceived(8),
      O => \read_ticks[31]_i_113_n_0\
    );
\read_ticks[31]_i_114\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(7),
      I1 => countDataReceived(7),
      O => \read_ticks[31]_i_114_n_0\
    );
\read_ticks[31]_i_115\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(6),
      I1 => countDataReceived(6),
      O => \read_ticks[31]_i_115_n_0\
    );
\read_ticks[31]_i_116\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(5),
      I1 => countDataReceived(5),
      O => \read_ticks[31]_i_116_n_0\
    );
\read_ticks[31]_i_117\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(4),
      I1 => countDataReceived(4),
      O => \read_ticks[31]_i_117_n_0\
    );
\read_ticks[31]_i_118\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(3),
      I1 => countDataReceived(3),
      O => \read_ticks[31]_i_118_n_0\
    );
\read_ticks[31]_i_119\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(2),
      I1 => countDataReceived(2),
      O => \read_ticks[31]_i_119_n_0\
    );
\read_ticks[31]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(30),
      I1 => read_ticks_per_burst(30),
      I2 => read_ticks_per_burst(31),
      I3 => read_ticks2(31),
      O => \read_ticks[31]_i_12_n_0\
    );
\read_ticks[31]_i_120\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(1),
      I1 => countDataReceived(1),
      O => \read_ticks[31]_i_120_n_0\
    );
\read_ticks[31]_i_121\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(0),
      I1 => countDataReceived(0),
      O => \read_ticks[31]_i_121_n_0\
    );
\read_ticks[31]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(28),
      I1 => read_ticks_per_burst(28),
      I2 => read_ticks_per_burst(29),
      I3 => read_ticks2(29),
      O => \read_ticks[31]_i_13_n_0\
    );
\read_ticks[31]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(26),
      I1 => read_ticks_per_burst(26),
      I2 => read_ticks_per_burst(27),
      I3 => read_ticks2(27),
      O => \read_ticks[31]_i_14_n_0\
    );
\read_ticks[31]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(24),
      I1 => read_ticks_per_burst(24),
      I2 => read_ticks_per_burst(25),
      I3 => read_ticks2(25),
      O => \read_ticks[31]_i_15_n_0\
    );
\read_ticks[31]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(22),
      I1 => read_ticks_per_burst(22),
      I2 => read_ticks_per_burst(23),
      I3 => read_ticks2(23),
      O => \read_ticks[31]_i_16_n_0\
    );
\read_ticks[31]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(20),
      I1 => read_ticks_per_burst(20),
      I2 => read_ticks_per_burst(21),
      I3 => read_ticks2(21),
      O => \read_ticks[31]_i_17_n_0\
    );
\read_ticks[31]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(18),
      I1 => read_ticks_per_burst(18),
      I2 => read_ticks_per_burst(19),
      I3 => read_ticks2(19),
      O => \read_ticks[31]_i_18_n_0\
    );
\read_ticks[31]_i_19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(16),
      I1 => read_ticks_per_burst(16),
      I2 => read_ticks_per_burst(17),
      I3 => read_ticks2(17),
      O => \read_ticks[31]_i_19_n_0\
    );
\read_ticks[31]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(31),
      O => \read_ticks[31]_i_2_n_0\
    );
\read_ticks[31]_i_20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(30),
      I1 => read_ticks_per_burst(30),
      I2 => read_ticks2(31),
      I3 => read_ticks_per_burst(31),
      O => \read_ticks[31]_i_20_n_0\
    );
\read_ticks[31]_i_21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(28),
      I1 => read_ticks_per_burst(28),
      I2 => read_ticks2(29),
      I3 => read_ticks_per_burst(29),
      O => \read_ticks[31]_i_21_n_0\
    );
\read_ticks[31]_i_22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(26),
      I1 => read_ticks_per_burst(26),
      I2 => read_ticks2(27),
      I3 => read_ticks_per_burst(27),
      O => \read_ticks[31]_i_22_n_0\
    );
\read_ticks[31]_i_23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(24),
      I1 => read_ticks_per_burst(24),
      I2 => read_ticks2(25),
      I3 => read_ticks_per_burst(25),
      O => \read_ticks[31]_i_23_n_0\
    );
\read_ticks[31]_i_24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(22),
      I1 => read_ticks_per_burst(22),
      I2 => read_ticks2(23),
      I3 => read_ticks_per_burst(23),
      O => \read_ticks[31]_i_24_n_0\
    );
\read_ticks[31]_i_25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(20),
      I1 => read_ticks_per_burst(20),
      I2 => read_ticks2(21),
      I3 => read_ticks_per_burst(21),
      O => \read_ticks[31]_i_25_n_0\
    );
\read_ticks[31]_i_26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(18),
      I1 => read_ticks_per_burst(18),
      I2 => read_ticks2(19),
      I3 => read_ticks_per_burst(19),
      O => \read_ticks[31]_i_26_n_0\
    );
\read_ticks[31]_i_27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(16),
      I1 => read_ticks_per_burst(16),
      I2 => read_ticks2(17),
      I3 => read_ticks_per_burst(17),
      O => \read_ticks[31]_i_27_n_0\
    );
\read_ticks[31]_i_29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(30),
      I1 => read_ticks20_out(30),
      I2 => read_ticks20_out(31),
      I3 => read_max_queue_size(31),
      O => \read_ticks[31]_i_29_n_0\
    );
\read_ticks[31]_i_30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(28),
      I1 => read_ticks20_out(28),
      I2 => read_ticks20_out(29),
      I3 => read_max_queue_size(29),
      O => \read_ticks[31]_i_30_n_0\
    );
\read_ticks[31]_i_31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(26),
      I1 => read_ticks20_out(26),
      I2 => read_ticks20_out(27),
      I3 => read_max_queue_size(27),
      O => \read_ticks[31]_i_31_n_0\
    );
\read_ticks[31]_i_32\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(24),
      I1 => read_ticks20_out(24),
      I2 => read_ticks20_out(25),
      I3 => read_max_queue_size(25),
      O => \read_ticks[31]_i_32_n_0\
    );
\read_ticks[31]_i_33\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(22),
      I1 => read_ticks20_out(22),
      I2 => read_ticks20_out(23),
      I3 => read_max_queue_size(23),
      O => \read_ticks[31]_i_33_n_0\
    );
\read_ticks[31]_i_34\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(20),
      I1 => read_ticks20_out(20),
      I2 => read_ticks20_out(21),
      I3 => read_max_queue_size(21),
      O => \read_ticks[31]_i_34_n_0\
    );
\read_ticks[31]_i_35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(18),
      I1 => read_ticks20_out(18),
      I2 => read_ticks20_out(19),
      I3 => read_max_queue_size(19),
      O => \read_ticks[31]_i_35_n_0\
    );
\read_ticks[31]_i_36\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(16),
      I1 => read_ticks20_out(16),
      I2 => read_ticks20_out(17),
      I3 => read_max_queue_size(17),
      O => \read_ticks[31]_i_36_n_0\
    );
\read_ticks[31]_i_37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(30),
      I1 => read_ticks20_out(30),
      I2 => read_max_queue_size(31),
      I3 => read_ticks20_out(31),
      O => \read_ticks[31]_i_37_n_0\
    );
\read_ticks[31]_i_38\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(28),
      I1 => read_ticks20_out(28),
      I2 => read_max_queue_size(29),
      I3 => read_ticks20_out(29),
      O => \read_ticks[31]_i_38_n_0\
    );
\read_ticks[31]_i_39\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(26),
      I1 => read_ticks20_out(26),
      I2 => read_max_queue_size(27),
      I3 => read_ticks20_out(27),
      O => \read_ticks[31]_i_39_n_0\
    );
\read_ticks[31]_i_40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(24),
      I1 => read_ticks20_out(24),
      I2 => read_max_queue_size(25),
      I3 => read_ticks20_out(25),
      O => \read_ticks[31]_i_40_n_0\
    );
\read_ticks[31]_i_41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(22),
      I1 => read_ticks20_out(22),
      I2 => read_max_queue_size(23),
      I3 => read_ticks20_out(23),
      O => \read_ticks[31]_i_41_n_0\
    );
\read_ticks[31]_i_42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(20),
      I1 => read_ticks20_out(20),
      I2 => read_max_queue_size(21),
      I3 => read_ticks20_out(21),
      O => \read_ticks[31]_i_42_n_0\
    );
\read_ticks[31]_i_43\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(18),
      I1 => read_ticks20_out(18),
      I2 => read_max_queue_size(19),
      I3 => read_ticks20_out(19),
      O => \read_ticks[31]_i_43_n_0\
    );
\read_ticks[31]_i_44\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(16),
      I1 => read_ticks20_out(16),
      I2 => read_max_queue_size(17),
      I3 => read_ticks20_out(17),
      O => \read_ticks[31]_i_44_n_0\
    );
\read_ticks[31]_i_46\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(14),
      I1 => read_ticks_per_burst(14),
      I2 => read_ticks_per_burst(15),
      I3 => read_ticks2(15),
      O => \read_ticks[31]_i_46_n_0\
    );
\read_ticks[31]_i_47\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(12),
      I1 => read_ticks_per_burst(12),
      I2 => read_ticks_per_burst(13),
      I3 => read_ticks2(13),
      O => \read_ticks[31]_i_47_n_0\
    );
\read_ticks[31]_i_48\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(10),
      I1 => read_ticks_per_burst(10),
      I2 => read_ticks_per_burst(11),
      I3 => read_ticks2(11),
      O => \read_ticks[31]_i_48_n_0\
    );
\read_ticks[31]_i_49\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(8),
      I1 => read_ticks_per_burst(8),
      I2 => read_ticks_per_burst(9),
      I3 => read_ticks2(9),
      O => \read_ticks[31]_i_49_n_0\
    );
\read_ticks[31]_i_50\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(6),
      I1 => read_ticks_per_burst(6),
      I2 => read_ticks_per_burst(7),
      I3 => read_ticks2(7),
      O => \read_ticks[31]_i_50_n_0\
    );
\read_ticks[31]_i_51\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(4),
      I1 => read_ticks_per_burst(4),
      I2 => read_ticks_per_burst(5),
      I3 => read_ticks2(5),
      O => \read_ticks[31]_i_51_n_0\
    );
\read_ticks[31]_i_52\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_ticks2(2),
      I1 => read_ticks_per_burst(2),
      I2 => read_ticks_per_burst(3),
      I3 => read_ticks2(3),
      O => \read_ticks[31]_i_52_n_0\
    );
\read_ticks[31]_i_53\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1F01"
    )
        port map (
      I0 => read_ticks_per_burst(0),
      I1 => read_ticks(0),
      I2 => read_ticks_per_burst(1),
      I3 => read_ticks2(1),
      O => \read_ticks[31]_i_53_n_0\
    );
\read_ticks[31]_i_54\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(14),
      I1 => read_ticks_per_burst(14),
      I2 => read_ticks2(15),
      I3 => read_ticks_per_burst(15),
      O => \read_ticks[31]_i_54_n_0\
    );
\read_ticks[31]_i_55\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(12),
      I1 => read_ticks_per_burst(12),
      I2 => read_ticks2(13),
      I3 => read_ticks_per_burst(13),
      O => \read_ticks[31]_i_55_n_0\
    );
\read_ticks[31]_i_56\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(10),
      I1 => read_ticks_per_burst(10),
      I2 => read_ticks2(11),
      I3 => read_ticks_per_burst(11),
      O => \read_ticks[31]_i_56_n_0\
    );
\read_ticks[31]_i_57\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(8),
      I1 => read_ticks_per_burst(8),
      I2 => read_ticks2(9),
      I3 => read_ticks_per_burst(9),
      O => \read_ticks[31]_i_57_n_0\
    );
\read_ticks[31]_i_58\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(6),
      I1 => read_ticks_per_burst(6),
      I2 => read_ticks2(7),
      I3 => read_ticks_per_burst(7),
      O => \read_ticks[31]_i_58_n_0\
    );
\read_ticks[31]_i_59\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(4),
      I1 => read_ticks_per_burst(4),
      I2 => read_ticks2(5),
      I3 => read_ticks_per_burst(5),
      O => \read_ticks[31]_i_59_n_0\
    );
\read_ticks[31]_i_60\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_ticks2(2),
      I1 => read_ticks_per_burst(2),
      I2 => read_ticks2(3),
      I3 => read_ticks_per_burst(3),
      O => \read_ticks[31]_i_60_n_0\
    );
\read_ticks[31]_i_61\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6006"
    )
        port map (
      I0 => read_ticks(0),
      I1 => read_ticks_per_burst(0),
      I2 => read_ticks2(1),
      I3 => read_ticks_per_burst(1),
      O => \read_ticks[31]_i_61_n_0\
    );
\read_ticks[31]_i_62\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(14),
      I1 => read_ticks20_out(14),
      I2 => read_ticks20_out(15),
      I3 => read_max_queue_size(15),
      O => \read_ticks[31]_i_62_n_0\
    );
\read_ticks[31]_i_63\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(12),
      I1 => read_ticks20_out(12),
      I2 => read_ticks20_out(13),
      I3 => read_max_queue_size(13),
      O => \read_ticks[31]_i_63_n_0\
    );
\read_ticks[31]_i_64\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(10),
      I1 => read_ticks20_out(10),
      I2 => read_ticks20_out(11),
      I3 => read_max_queue_size(11),
      O => \read_ticks[31]_i_64_n_0\
    );
\read_ticks[31]_i_65\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(8),
      I1 => read_ticks20_out(8),
      I2 => read_ticks20_out(9),
      I3 => read_max_queue_size(9),
      O => \read_ticks[31]_i_65_n_0\
    );
\read_ticks[31]_i_66\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(6),
      I1 => read_ticks20_out(6),
      I2 => read_ticks20_out(7),
      I3 => read_max_queue_size(7),
      O => \read_ticks[31]_i_66_n_0\
    );
\read_ticks[31]_i_67\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(4),
      I1 => read_ticks20_out(4),
      I2 => read_ticks20_out(5),
      I3 => read_max_queue_size(5),
      O => \read_ticks[31]_i_67_n_0\
    );
\read_ticks[31]_i_68\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(2),
      I1 => read_ticks20_out(2),
      I2 => read_ticks20_out(3),
      I3 => read_max_queue_size(3),
      O => \read_ticks[31]_i_68_n_0\
    );
\read_ticks[31]_i_69\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => read_max_queue_size(0),
      I1 => read_ticks20_out(0),
      I2 => read_ticks20_out(1),
      I3 => read_max_queue_size(1),
      O => \read_ticks[31]_i_69_n_0\
    );
\read_ticks[31]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_ticks20_out(38),
      I1 => read_ticks20_out(39),
      O => \read_ticks[31]_i_7_n_0\
    );
\read_ticks[31]_i_70\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(14),
      I1 => read_ticks20_out(14),
      I2 => read_max_queue_size(15),
      I3 => read_ticks20_out(15),
      O => \read_ticks[31]_i_70_n_0\
    );
\read_ticks[31]_i_71\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(12),
      I1 => read_ticks20_out(12),
      I2 => read_max_queue_size(13),
      I3 => read_ticks20_out(13),
      O => \read_ticks[31]_i_71_n_0\
    );
\read_ticks[31]_i_72\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(10),
      I1 => read_ticks20_out(10),
      I2 => read_max_queue_size(11),
      I3 => read_ticks20_out(11),
      O => \read_ticks[31]_i_72_n_0\
    );
\read_ticks[31]_i_73\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(8),
      I1 => read_ticks20_out(8),
      I2 => read_max_queue_size(9),
      I3 => read_ticks20_out(9),
      O => \read_ticks[31]_i_73_n_0\
    );
\read_ticks[31]_i_74\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(6),
      I1 => read_ticks20_out(6),
      I2 => read_max_queue_size(7),
      I3 => read_ticks20_out(7),
      O => \read_ticks[31]_i_74_n_0\
    );
\read_ticks[31]_i_75\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(4),
      I1 => read_ticks20_out(4),
      I2 => read_max_queue_size(5),
      I3 => read_ticks20_out(5),
      O => \read_ticks[31]_i_75_n_0\
    );
\read_ticks[31]_i_76\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(2),
      I1 => read_ticks20_out(2),
      I2 => read_max_queue_size(3),
      I3 => read_ticks20_out(3),
      O => \read_ticks[31]_i_76_n_0\
    );
\read_ticks[31]_i_77\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => read_max_queue_size(0),
      I1 => read_ticks20_out(0),
      I2 => read_max_queue_size(1),
      I3 => read_ticks20_out(1),
      O => \read_ticks[31]_i_77_n_0\
    );
\read_ticks[31]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_ticks20_out(36),
      I1 => read_ticks20_out(37),
      O => \read_ticks[31]_i_8_n_0\
    );
\read_ticks[31]_i_80\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(39),
      I1 => countDataReceived(39),
      O => \read_ticks[31]_i_80_n_0\
    );
\read_ticks[31]_i_81\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(38),
      I1 => countDataReceived(38),
      O => \read_ticks[31]_i_81_n_0\
    );
\read_ticks[31]_i_82\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(37),
      I1 => countDataReceived(37),
      O => \read_ticks[31]_i_82_n_0\
    );
\read_ticks[31]_i_83\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(36),
      I1 => countDataReceived(36),
      O => \read_ticks[31]_i_83_n_0\
    );
\read_ticks[31]_i_84\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(35),
      I1 => countDataReceived(35),
      O => \read_ticks[31]_i_84_n_0\
    );
\read_ticks[31]_i_85\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(34),
      I1 => countDataReceived(34),
      O => \read_ticks[31]_i_85_n_0\
    );
\read_ticks[31]_i_86\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(33),
      I1 => countDataReceived(33),
      O => \read_ticks[31]_i_86_n_0\
    );
\read_ticks[31]_i_87\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(32),
      I1 => countDataReceived(32),
      O => \read_ticks[31]_i_87_n_0\
    );
\read_ticks[31]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_ticks20_out(34),
      I1 => read_ticks20_out(35),
      O => \read_ticks[31]_i_9_n_0\
    );
\read_ticks[31]_i_90\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(31),
      I1 => countDataReceived(31),
      O => \read_ticks[31]_i_90_n_0\
    );
\read_ticks[31]_i_91\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(30),
      I1 => countDataReceived(30),
      O => \read_ticks[31]_i_91_n_0\
    );
\read_ticks[31]_i_92\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(29),
      I1 => countDataReceived(29),
      O => \read_ticks[31]_i_92_n_0\
    );
\read_ticks[31]_i_93\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(28),
      I1 => countDataReceived(28),
      O => \read_ticks[31]_i_93_n_0\
    );
\read_ticks[31]_i_94\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(27),
      I1 => countDataReceived(27),
      O => \read_ticks[31]_i_94_n_0\
    );
\read_ticks[31]_i_95\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(26),
      I1 => countDataReceived(26),
      O => \read_ticks[31]_i_95_n_0\
    );
\read_ticks[31]_i_96\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(25),
      I1 => countDataReceived(25),
      O => \read_ticks[31]_i_96_n_0\
    );
\read_ticks[31]_i_97\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(24),
      I1 => countDataReceived(24),
      O => \read_ticks[31]_i_97_n_0\
    );
\read_ticks[31]_i_98\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(23),
      I1 => countDataReceived(23),
      O => \read_ticks[31]_i_98_n_0\
    );
\read_ticks[31]_i_99\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => countReadReqToBeSent(22),
      I1 => countDataReceived(22),
      O => \read_ticks[31]_i_99_n_0\
    );
\read_ticks[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[3]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[3]_i_1_n_0\
    );
\read_ticks[3]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(3),
      O => \read_ticks[3]_i_2_n_0\
    );
\read_ticks[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[4]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[4]_i_1_n_0\
    );
\read_ticks[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(4),
      O => \read_ticks[4]_i_2_n_0\
    );
\read_ticks[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[5]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[5]_i_1_n_0\
    );
\read_ticks[5]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(5),
      O => \read_ticks[5]_i_2_n_0\
    );
\read_ticks[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[6]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[6]_i_1_n_0\
    );
\read_ticks[6]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(6),
      O => \read_ticks[6]_i_2_n_0\
    );
\read_ticks[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[7]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[7]_i_1_n_0\
    );
\read_ticks[7]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(7),
      O => \read_ticks[7]_i_2_n_0\
    );
\read_ticks[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[8]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[8]_i_1_n_0\
    );
\read_ticks[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(8),
      O => \read_ticks[8]_i_2_n_0\
    );
\read_ticks[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => \countDataReceived[39]_i_3_n_0\,
      I1 => \read_ticks[9]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \read_ticks_reg[31]_i_3_n_4\,
      I4 => \read_ticks_reg[31]_i_4_n_0\,
      I5 => reset_cmd,
      O => \read_ticks[9]_i_1_n_0\
    );
\read_ticks[9]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \read_ticks_reg[31]_i_4_n_0\,
      I1 => \read_ticks_reg[31]_i_3_n_4\,
      I2 => active_read,
      I3 => read_ticks2(9),
      O => \read_ticks[9]_i_2_n_0\
    );
\read_ticks_per_burst_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(0),
      Q => read_ticks_per_burst(0),
      R => '0'
    );
\read_ticks_per_burst_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(10),
      Q => read_ticks_per_burst(10),
      R => '0'
    );
\read_ticks_per_burst_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(11),
      Q => read_ticks_per_burst(11),
      R => '0'
    );
\read_ticks_per_burst_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(12),
      Q => read_ticks_per_burst(12),
      R => '0'
    );
\read_ticks_per_burst_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(13),
      Q => read_ticks_per_burst(13),
      R => '0'
    );
\read_ticks_per_burst_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(14),
      Q => read_ticks_per_burst(14),
      R => '0'
    );
\read_ticks_per_burst_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(15),
      Q => read_ticks_per_burst(15),
      R => '0'
    );
\read_ticks_per_burst_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(16),
      Q => read_ticks_per_burst(16),
      R => '0'
    );
\read_ticks_per_burst_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(17),
      Q => read_ticks_per_burst(17),
      R => '0'
    );
\read_ticks_per_burst_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(18),
      Q => read_ticks_per_burst(18),
      R => '0'
    );
\read_ticks_per_burst_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(19),
      Q => read_ticks_per_burst(19),
      R => '0'
    );
\read_ticks_per_burst_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(1),
      Q => read_ticks_per_burst(1),
      R => '0'
    );
\read_ticks_per_burst_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(20),
      Q => read_ticks_per_burst(20),
      R => '0'
    );
\read_ticks_per_burst_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(21),
      Q => read_ticks_per_burst(21),
      R => '0'
    );
\read_ticks_per_burst_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(22),
      Q => read_ticks_per_burst(22),
      R => '0'
    );
\read_ticks_per_burst_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(23),
      Q => read_ticks_per_burst(23),
      R => '0'
    );
\read_ticks_per_burst_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(24),
      Q => read_ticks_per_burst(24),
      R => '0'
    );
\read_ticks_per_burst_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(25),
      Q => read_ticks_per_burst(25),
      R => '0'
    );
\read_ticks_per_burst_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(26),
      Q => read_ticks_per_burst(26),
      R => '0'
    );
\read_ticks_per_burst_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(27),
      Q => read_ticks_per_burst(27),
      R => '0'
    );
\read_ticks_per_burst_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(28),
      Q => read_ticks_per_burst(28),
      R => '0'
    );
\read_ticks_per_burst_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(29),
      Q => read_ticks_per_burst(29),
      R => '0'
    );
\read_ticks_per_burst_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(2),
      Q => read_ticks_per_burst(2),
      R => '0'
    );
\read_ticks_per_burst_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(30),
      Q => read_ticks_per_burst(30),
      R => '0'
    );
\read_ticks_per_burst_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(31),
      Q => read_ticks_per_burst(31),
      R => '0'
    );
\read_ticks_per_burst_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(3),
      Q => read_ticks_per_burst(3),
      R => '0'
    );
\read_ticks_per_burst_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(4),
      Q => read_ticks_per_burst(4),
      R => '0'
    );
\read_ticks_per_burst_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(5),
      Q => read_ticks_per_burst(5),
      R => '0'
    );
\read_ticks_per_burst_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(6),
      Q => read_ticks_per_burst(6),
      R => '0'
    );
\read_ticks_per_burst_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(7),
      Q => read_ticks_per_burst(7),
      R => '0'
    );
\read_ticks_per_burst_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(8),
      Q => read_ticks_per_burst(8),
      R => '0'
    );
\read_ticks_per_burst_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \read_ticks_per_burst__0\(9),
      Q => read_ticks_per_burst(9),
      R => '0'
    );
\read_ticks_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[0]_i_1_n_0\,
      Q => read_ticks(0),
      R => '0'
    );
\read_ticks_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[10]_i_1_n_0\,
      Q => read_ticks(10),
      R => '0'
    );
\read_ticks_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[11]_i_1_n_0\,
      Q => read_ticks(11),
      R => '0'
    );
\read_ticks_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[12]_i_1_n_0\,
      Q => read_ticks(12),
      R => '0'
    );
\read_ticks_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[13]_i_1_n_0\,
      Q => read_ticks(13),
      R => '0'
    );
\read_ticks_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[14]_i_1_n_0\,
      Q => read_ticks(14),
      R => '0'
    );
\read_ticks_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[15]_i_1_n_0\,
      Q => read_ticks(15),
      R => '0'
    );
\read_ticks_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[16]_i_1_n_0\,
      Q => read_ticks(16),
      R => '0'
    );
\read_ticks_reg[16]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[8]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[16]_i_3_n_0\,
      CO(6) => \read_ticks_reg[16]_i_3_n_1\,
      CO(5) => \read_ticks_reg[16]_i_3_n_2\,
      CO(4) => \read_ticks_reg[16]_i_3_n_3\,
      CO(3) => \NLW_read_ticks_reg[16]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[16]_i_3_n_5\,
      CO(1) => \read_ticks_reg[16]_i_3_n_6\,
      CO(0) => \read_ticks_reg[16]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => read_ticks2(16 downto 9),
      S(7 downto 0) => read_ticks(16 downto 9)
    );
\read_ticks_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[17]_i_1_n_0\,
      Q => read_ticks(17),
      R => '0'
    );
\read_ticks_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[18]_i_1_n_0\,
      Q => read_ticks(18),
      R => '0'
    );
\read_ticks_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[19]_i_1_n_0\,
      Q => read_ticks(19),
      R => '0'
    );
\read_ticks_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[1]_i_1_n_0\,
      Q => read_ticks(1),
      R => '0'
    );
\read_ticks_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[20]_i_1_n_0\,
      Q => read_ticks(20),
      R => '0'
    );
\read_ticks_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[21]_i_1_n_0\,
      Q => read_ticks(21),
      R => '0'
    );
\read_ticks_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[22]_i_1_n_0\,
      Q => read_ticks(22),
      R => '0'
    );
\read_ticks_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[23]_i_1_n_0\,
      Q => read_ticks(23),
      R => '0'
    );
\read_ticks_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[24]_i_1_n_0\,
      Q => read_ticks(24),
      R => '0'
    );
\read_ticks_reg[24]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[16]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[24]_i_3_n_0\,
      CO(6) => \read_ticks_reg[24]_i_3_n_1\,
      CO(5) => \read_ticks_reg[24]_i_3_n_2\,
      CO(4) => \read_ticks_reg[24]_i_3_n_3\,
      CO(3) => \NLW_read_ticks_reg[24]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[24]_i_3_n_5\,
      CO(1) => \read_ticks_reg[24]_i_3_n_6\,
      CO(0) => \read_ticks_reg[24]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => read_ticks2(24 downto 17),
      S(7 downto 0) => read_ticks(24 downto 17)
    );
\read_ticks_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[25]_i_1_n_0\,
      Q => read_ticks(25),
      R => '0'
    );
\read_ticks_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[26]_i_1_n_0\,
      Q => read_ticks(26),
      R => '0'
    );
\read_ticks_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[27]_i_1_n_0\,
      Q => read_ticks(27),
      R => '0'
    );
\read_ticks_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[28]_i_1_n_0\,
      Q => read_ticks(28),
      R => '0'
    );
\read_ticks_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[29]_i_1_n_0\,
      Q => read_ticks(29),
      R => '0'
    );
\read_ticks_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[2]_i_1_n_0\,
      Q => read_ticks(2),
      R => '0'
    );
\read_ticks_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[30]_i_1_n_0\,
      Q => read_ticks(30),
      R => '0'
    );
\read_ticks_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[31]_i_1_n_0\,
      Q => read_ticks(31),
      R => '0'
    );
\read_ticks_reg[31]_i_11\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_11_n_0\,
      CO(6) => \read_ticks_reg[31]_i_11_n_1\,
      CO(5) => \read_ticks_reg[31]_i_11_n_2\,
      CO(4) => \read_ticks_reg[31]_i_11_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_11_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_11_n_5\,
      CO(1) => \read_ticks_reg[31]_i_11_n_6\,
      CO(0) => \read_ticks_reg[31]_i_11_n_7\,
      DI(7) => \read_ticks[31]_i_46_n_0\,
      DI(6) => \read_ticks[31]_i_47_n_0\,
      DI(5) => \read_ticks[31]_i_48_n_0\,
      DI(4) => \read_ticks[31]_i_49_n_0\,
      DI(3) => \read_ticks[31]_i_50_n_0\,
      DI(2) => \read_ticks[31]_i_51_n_0\,
      DI(1) => \read_ticks[31]_i_52_n_0\,
      DI(0) => \read_ticks[31]_i_53_n_0\,
      O(7 downto 0) => \NLW_read_ticks_reg[31]_i_11_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_ticks[31]_i_54_n_0\,
      S(6) => \read_ticks[31]_i_55_n_0\,
      S(5) => \read_ticks[31]_i_56_n_0\,
      S(4) => \read_ticks[31]_i_57_n_0\,
      S(3) => \read_ticks[31]_i_58_n_0\,
      S(2) => \read_ticks[31]_i_59_n_0\,
      S(1) => \read_ticks[31]_i_60_n_0\,
      S(0) => \read_ticks[31]_i_61_n_0\
    );
\read_ticks_reg[31]_i_28\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_28_n_0\,
      CO(6) => \read_ticks_reg[31]_i_28_n_1\,
      CO(5) => \read_ticks_reg[31]_i_28_n_2\,
      CO(4) => \read_ticks_reg[31]_i_28_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_28_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_28_n_5\,
      CO(1) => \read_ticks_reg[31]_i_28_n_6\,
      CO(0) => \read_ticks_reg[31]_i_28_n_7\,
      DI(7) => \read_ticks[31]_i_62_n_0\,
      DI(6) => \read_ticks[31]_i_63_n_0\,
      DI(5) => \read_ticks[31]_i_64_n_0\,
      DI(4) => \read_ticks[31]_i_65_n_0\,
      DI(3) => \read_ticks[31]_i_66_n_0\,
      DI(2) => \read_ticks[31]_i_67_n_0\,
      DI(1) => \read_ticks[31]_i_68_n_0\,
      DI(0) => \read_ticks[31]_i_69_n_0\,
      O(7 downto 0) => \NLW_read_ticks_reg[31]_i_28_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_ticks[31]_i_70_n_0\,
      S(6) => \read_ticks[31]_i_71_n_0\,
      S(5) => \read_ticks[31]_i_72_n_0\,
      S(4) => \read_ticks[31]_i_73_n_0\,
      S(3) => \read_ticks[31]_i_74_n_0\,
      S(2) => \read_ticks[31]_i_75_n_0\,
      S(1) => \read_ticks[31]_i_76_n_0\,
      S(0) => \read_ticks[31]_i_77_n_0\
    );
\read_ticks_reg[31]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[31]_i_6_n_0\,
      CI_TOP => '0',
      CO(7 downto 4) => \NLW_read_ticks_reg[31]_i_3_CO_UNCONNECTED\(7 downto 4),
      CO(3) => \read_ticks_reg[31]_i_3_n_4\,
      CO(2) => \read_ticks_reg[31]_i_3_n_5\,
      CO(1) => \read_ticks_reg[31]_i_3_n_6\,
      CO(0) => \read_ticks_reg[31]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => \NLW_read_ticks_reg[31]_i_3_O_UNCONNECTED\(7 downto 0),
      S(7 downto 4) => B"0000",
      S(3) => \read_ticks[31]_i_7_n_0\,
      S(2) => \read_ticks[31]_i_8_n_0\,
      S(1) => \read_ticks[31]_i_9_n_0\,
      S(0) => \read_ticks[31]_i_10_n_0\
    );
\read_ticks_reg[31]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[31]_i_11_n_0\,
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_4_n_0\,
      CO(6) => \read_ticks_reg[31]_i_4_n_1\,
      CO(5) => \read_ticks_reg[31]_i_4_n_2\,
      CO(4) => \read_ticks_reg[31]_i_4_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_4_n_5\,
      CO(1) => \read_ticks_reg[31]_i_4_n_6\,
      CO(0) => \read_ticks_reg[31]_i_4_n_7\,
      DI(7) => \read_ticks[31]_i_12_n_0\,
      DI(6) => \read_ticks[31]_i_13_n_0\,
      DI(5) => \read_ticks[31]_i_14_n_0\,
      DI(4) => \read_ticks[31]_i_15_n_0\,
      DI(3) => \read_ticks[31]_i_16_n_0\,
      DI(2) => \read_ticks[31]_i_17_n_0\,
      DI(1) => \read_ticks[31]_i_18_n_0\,
      DI(0) => \read_ticks[31]_i_19_n_0\,
      O(7 downto 0) => \NLW_read_ticks_reg[31]_i_4_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_ticks[31]_i_20_n_0\,
      S(6) => \read_ticks[31]_i_21_n_0\,
      S(5) => \read_ticks[31]_i_22_n_0\,
      S(4) => \read_ticks[31]_i_23_n_0\,
      S(3) => \read_ticks[31]_i_24_n_0\,
      S(2) => \read_ticks[31]_i_25_n_0\,
      S(1) => \read_ticks[31]_i_26_n_0\,
      S(0) => \read_ticks[31]_i_27_n_0\
    );
\read_ticks_reg[31]_i_45\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[31]_i_78_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_read_ticks_reg[31]_i_45_CO_UNCONNECTED\(7),
      CO(6) => \read_ticks_reg[31]_i_45_n_1\,
      CO(5) => \read_ticks_reg[31]_i_45_n_2\,
      CO(4) => \read_ticks_reg[31]_i_45_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_45_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_45_n_5\,
      CO(1) => \read_ticks_reg[31]_i_45_n_6\,
      CO(0) => \read_ticks_reg[31]_i_45_n_7\,
      DI(7) => '0',
      DI(6 downto 0) => countReadReqToBeSent(38 downto 32),
      O(7 downto 0) => read_ticks20_out(39 downto 32),
      S(7) => \read_ticks[31]_i_80_n_0\,
      S(6) => \read_ticks[31]_i_81_n_0\,
      S(5) => \read_ticks[31]_i_82_n_0\,
      S(4) => \read_ticks[31]_i_83_n_0\,
      S(3) => \read_ticks[31]_i_84_n_0\,
      S(2) => \read_ticks[31]_i_85_n_0\,
      S(1) => \read_ticks[31]_i_86_n_0\,
      S(0) => \read_ticks[31]_i_87_n_0\
    );
\read_ticks_reg[31]_i_5\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[24]_i_3_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_read_ticks_reg[31]_i_5_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \read_ticks_reg[31]_i_5_n_2\,
      CO(4) => \read_ticks_reg[31]_i_5_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_5_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_5_n_5\,
      CO(1) => \read_ticks_reg[31]_i_5_n_6\,
      CO(0) => \read_ticks_reg[31]_i_5_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_read_ticks_reg[31]_i_5_O_UNCONNECTED\(7),
      O(6 downto 0) => read_ticks2(31 downto 25),
      S(7) => '0',
      S(6 downto 0) => read_ticks(31 downto 25)
    );
\read_ticks_reg[31]_i_6\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[31]_i_28_n_0\,
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_6_n_0\,
      CO(6) => \read_ticks_reg[31]_i_6_n_1\,
      CO(5) => \read_ticks_reg[31]_i_6_n_2\,
      CO(4) => \read_ticks_reg[31]_i_6_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_6_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_6_n_5\,
      CO(1) => \read_ticks_reg[31]_i_6_n_6\,
      CO(0) => \read_ticks_reg[31]_i_6_n_7\,
      DI(7) => \read_ticks[31]_i_29_n_0\,
      DI(6) => \read_ticks[31]_i_30_n_0\,
      DI(5) => \read_ticks[31]_i_31_n_0\,
      DI(4) => \read_ticks[31]_i_32_n_0\,
      DI(3) => \read_ticks[31]_i_33_n_0\,
      DI(2) => \read_ticks[31]_i_34_n_0\,
      DI(1) => \read_ticks[31]_i_35_n_0\,
      DI(0) => \read_ticks[31]_i_36_n_0\,
      O(7 downto 0) => \NLW_read_ticks_reg[31]_i_6_O_UNCONNECTED\(7 downto 0),
      S(7) => \read_ticks[31]_i_37_n_0\,
      S(6) => \read_ticks[31]_i_38_n_0\,
      S(5) => \read_ticks[31]_i_39_n_0\,
      S(4) => \read_ticks[31]_i_40_n_0\,
      S(3) => \read_ticks[31]_i_41_n_0\,
      S(2) => \read_ticks[31]_i_42_n_0\,
      S(1) => \read_ticks[31]_i_43_n_0\,
      S(0) => \read_ticks[31]_i_44_n_0\
    );
\read_ticks_reg[31]_i_78\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[31]_i_79_n_0\,
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_78_n_0\,
      CO(6) => \read_ticks_reg[31]_i_78_n_1\,
      CO(5) => \read_ticks_reg[31]_i_78_n_2\,
      CO(4) => \read_ticks_reg[31]_i_78_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_78_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_78_n_5\,
      CO(1) => \read_ticks_reg[31]_i_78_n_6\,
      CO(0) => \read_ticks_reg[31]_i_78_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(31 downto 24),
      O(7 downto 0) => read_ticks20_out(31 downto 24),
      S(7) => \read_ticks[31]_i_90_n_0\,
      S(6) => \read_ticks[31]_i_91_n_0\,
      S(5) => \read_ticks[31]_i_92_n_0\,
      S(4) => \read_ticks[31]_i_93_n_0\,
      S(3) => \read_ticks[31]_i_94_n_0\,
      S(2) => \read_ticks[31]_i_95_n_0\,
      S(1) => \read_ticks[31]_i_96_n_0\,
      S(0) => \read_ticks[31]_i_97_n_0\
    );
\read_ticks_reg[31]_i_79\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[31]_i_88_n_0\,
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_79_n_0\,
      CO(6) => \read_ticks_reg[31]_i_79_n_1\,
      CO(5) => \read_ticks_reg[31]_i_79_n_2\,
      CO(4) => \read_ticks_reg[31]_i_79_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_79_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_79_n_5\,
      CO(1) => \read_ticks_reg[31]_i_79_n_6\,
      CO(0) => \read_ticks_reg[31]_i_79_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(23 downto 16),
      O(7 downto 0) => read_ticks20_out(23 downto 16),
      S(7) => \read_ticks[31]_i_98_n_0\,
      S(6) => \read_ticks[31]_i_99_n_0\,
      S(5) => \read_ticks[31]_i_100_n_0\,
      S(4) => \read_ticks[31]_i_101_n_0\,
      S(3) => \read_ticks[31]_i_102_n_0\,
      S(2) => \read_ticks[31]_i_103_n_0\,
      S(1) => \read_ticks[31]_i_104_n_0\,
      S(0) => \read_ticks[31]_i_105_n_0\
    );
\read_ticks_reg[31]_i_88\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \read_ticks_reg[31]_i_89_n_0\,
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_88_n_0\,
      CO(6) => \read_ticks_reg[31]_i_88_n_1\,
      CO(5) => \read_ticks_reg[31]_i_88_n_2\,
      CO(4) => \read_ticks_reg[31]_i_88_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_88_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_88_n_5\,
      CO(1) => \read_ticks_reg[31]_i_88_n_6\,
      CO(0) => \read_ticks_reg[31]_i_88_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(15 downto 8),
      O(7 downto 0) => read_ticks20_out(15 downto 8),
      S(7) => \read_ticks[31]_i_106_n_0\,
      S(6) => \read_ticks[31]_i_107_n_0\,
      S(5) => \read_ticks[31]_i_108_n_0\,
      S(4) => \read_ticks[31]_i_109_n_0\,
      S(3) => \read_ticks[31]_i_110_n_0\,
      S(2) => \read_ticks[31]_i_111_n_0\,
      S(1) => \read_ticks[31]_i_112_n_0\,
      S(0) => \read_ticks[31]_i_113_n_0\
    );
\read_ticks_reg[31]_i_89\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[31]_i_89_n_0\,
      CO(6) => \read_ticks_reg[31]_i_89_n_1\,
      CO(5) => \read_ticks_reg[31]_i_89_n_2\,
      CO(4) => \read_ticks_reg[31]_i_89_n_3\,
      CO(3) => \NLW_read_ticks_reg[31]_i_89_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[31]_i_89_n_5\,
      CO(1) => \read_ticks_reg[31]_i_89_n_6\,
      CO(0) => \read_ticks_reg[31]_i_89_n_7\,
      DI(7 downto 0) => countReadReqToBeSent(7 downto 0),
      O(7 downto 0) => read_ticks20_out(7 downto 0),
      S(7) => \read_ticks[31]_i_114_n_0\,
      S(6) => \read_ticks[31]_i_115_n_0\,
      S(5) => \read_ticks[31]_i_116_n_0\,
      S(4) => \read_ticks[31]_i_117_n_0\,
      S(3) => \read_ticks[31]_i_118_n_0\,
      S(2) => \read_ticks[31]_i_119_n_0\,
      S(1) => \read_ticks[31]_i_120_n_0\,
      S(0) => \read_ticks[31]_i_121_n_0\
    );
\read_ticks_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[3]_i_1_n_0\,
      Q => read_ticks(3),
      R => '0'
    );
\read_ticks_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[4]_i_1_n_0\,
      Q => read_ticks(4),
      R => '0'
    );
\read_ticks_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[5]_i_1_n_0\,
      Q => read_ticks(5),
      R => '0'
    );
\read_ticks_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[6]_i_1_n_0\,
      Q => read_ticks(6),
      R => '0'
    );
\read_ticks_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[7]_i_1_n_0\,
      Q => read_ticks(7),
      R => '0'
    );
\read_ticks_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[8]_i_1_n_0\,
      Q => read_ticks(8),
      R => '0'
    );
\read_ticks_reg[8]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => read_ticks(0),
      CI_TOP => '0',
      CO(7) => \read_ticks_reg[8]_i_3_n_0\,
      CO(6) => \read_ticks_reg[8]_i_3_n_1\,
      CO(5) => \read_ticks_reg[8]_i_3_n_2\,
      CO(4) => \read_ticks_reg[8]_i_3_n_3\,
      CO(3) => \NLW_read_ticks_reg[8]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \read_ticks_reg[8]_i_3_n_5\,
      CO(1) => \read_ticks_reg[8]_i_3_n_6\,
      CO(0) => \read_ticks_reg[8]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => read_ticks2(8 downto 1),
      S(7 downto 0) => read_ticks(8 downto 1)
    );
\read_ticks_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \read_ticks[9]_i_1_n_0\,
      Q => read_ticks(9),
      R => '0'
    );
reset_cmd_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_1,
      Q => reset_cmd,
      R => '0'
    );
\runtime[63]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => reset_cmd,
      I1 => \runtime[63]_i_3_n_0\,
      O => \runtime[63]_i_1_n_0\
    );
\runtime[63]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => active_runtime0,
      I1 => active_runtime1,
      I2 => active_blocking,
      I3 => \countDataReceived[39]_i_7_n_0\,
      I4 => active_runtime2,
      I5 => active_runtime3,
      O => \runtime[63]_i_3_n_0\
    );
\runtime_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_66,
      Q => runtime(0),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_56,
      Q => runtime(10),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_55,
      Q => runtime(11),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_54,
      Q => runtime(12),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_53,
      Q => runtime(13),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_52,
      Q => runtime(14),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_51,
      Q => runtime(15),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_50,
      Q => runtime(16),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[16]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \runtime_reg[8]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \runtime_reg[16]_i_2_n_0\,
      CO(6) => \runtime_reg[16]_i_2_n_1\,
      CO(5) => \runtime_reg[16]_i_2_n_2\,
      CO(4) => \runtime_reg[16]_i_2_n_3\,
      CO(3) => \NLW_runtime_reg[16]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[16]_i_2_n_5\,
      CO(1) => \runtime_reg[16]_i_2_n_6\,
      CO(0) => \runtime_reg[16]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => runtime0(16 downto 9),
      S(7 downto 0) => runtime(16 downto 9)
    );
\runtime_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_49,
      Q => runtime(17),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_48,
      Q => runtime(18),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_47,
      Q => runtime(19),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_65,
      Q => runtime(1),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_46,
      Q => runtime(20),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_45,
      Q => runtime(21),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_44,
      Q => runtime(22),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_43,
      Q => runtime(23),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_42,
      Q => runtime(24),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[24]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \runtime_reg[16]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \runtime_reg[24]_i_2_n_0\,
      CO(6) => \runtime_reg[24]_i_2_n_1\,
      CO(5) => \runtime_reg[24]_i_2_n_2\,
      CO(4) => \runtime_reg[24]_i_2_n_3\,
      CO(3) => \NLW_runtime_reg[24]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[24]_i_2_n_5\,
      CO(1) => \runtime_reg[24]_i_2_n_6\,
      CO(0) => \runtime_reg[24]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => runtime0(24 downto 17),
      S(7 downto 0) => runtime(24 downto 17)
    );
\runtime_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_41,
      Q => runtime(25),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_40,
      Q => runtime(26),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_39,
      Q => runtime(27),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_38,
      Q => runtime(28),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_37,
      Q => runtime(29),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_64,
      Q => runtime(2),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_36,
      Q => runtime(30),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_35,
      Q => runtime(31),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_34,
      Q => runtime(32),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[32]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \runtime_reg[24]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \runtime_reg[32]_i_2_n_0\,
      CO(6) => \runtime_reg[32]_i_2_n_1\,
      CO(5) => \runtime_reg[32]_i_2_n_2\,
      CO(4) => \runtime_reg[32]_i_2_n_3\,
      CO(3) => \NLW_runtime_reg[32]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[32]_i_2_n_5\,
      CO(1) => \runtime_reg[32]_i_2_n_6\,
      CO(0) => \runtime_reg[32]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => runtime0(32 downto 25),
      S(7 downto 0) => runtime(32 downto 25)
    );
\runtime_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_33,
      Q => runtime(33),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_32,
      Q => runtime(34),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_31,
      Q => runtime(35),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_30,
      Q => runtime(36),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_29,
      Q => runtime(37),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_28,
      Q => runtime(38),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_27,
      Q => runtime(39),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_63,
      Q => runtime(3),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_26,
      Q => runtime(40),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[40]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \runtime_reg[32]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \runtime_reg[40]_i_2_n_0\,
      CO(6) => \runtime_reg[40]_i_2_n_1\,
      CO(5) => \runtime_reg[40]_i_2_n_2\,
      CO(4) => \runtime_reg[40]_i_2_n_3\,
      CO(3) => \NLW_runtime_reg[40]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[40]_i_2_n_5\,
      CO(1) => \runtime_reg[40]_i_2_n_6\,
      CO(0) => \runtime_reg[40]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => runtime0(40 downto 33),
      S(7 downto 0) => runtime(40 downto 33)
    );
\runtime_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_25,
      Q => runtime(41),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_24,
      Q => runtime(42),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_23,
      Q => runtime(43),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_22,
      Q => runtime(44),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_21,
      Q => runtime(45),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_20,
      Q => runtime(46),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_19,
      Q => runtime(47),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_18,
      Q => runtime(48),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[48]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \runtime_reg[40]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \runtime_reg[48]_i_2_n_0\,
      CO(6) => \runtime_reg[48]_i_2_n_1\,
      CO(5) => \runtime_reg[48]_i_2_n_2\,
      CO(4) => \runtime_reg[48]_i_2_n_3\,
      CO(3) => \NLW_runtime_reg[48]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[48]_i_2_n_5\,
      CO(1) => \runtime_reg[48]_i_2_n_6\,
      CO(0) => \runtime_reg[48]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => runtime0(48 downto 41),
      S(7 downto 0) => runtime(48 downto 41)
    );
\runtime_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_17,
      Q => runtime(49),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_62,
      Q => runtime(4),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_16,
      Q => runtime(50),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_15,
      Q => runtime(51),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_14,
      Q => runtime(52),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_13,
      Q => runtime(53),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_12,
      Q => runtime(54),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_11,
      Q => runtime(55),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_10,
      Q => runtime(56),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[56]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \runtime_reg[48]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \runtime_reg[56]_i_2_n_0\,
      CO(6) => \runtime_reg[56]_i_2_n_1\,
      CO(5) => \runtime_reg[56]_i_2_n_2\,
      CO(4) => \runtime_reg[56]_i_2_n_3\,
      CO(3) => \NLW_runtime_reg[56]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[56]_i_2_n_5\,
      CO(1) => \runtime_reg[56]_i_2_n_6\,
      CO(0) => \runtime_reg[56]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => runtime0(56 downto 49),
      S(7 downto 0) => runtime(56 downto 49)
    );
\runtime_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_9,
      Q => runtime(57),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_8,
      Q => runtime(58),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_7,
      Q => runtime(59),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_61,
      Q => runtime(5),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_6,
      Q => runtime(60),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_5,
      Q => runtime(61),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_4,
      Q => runtime(62),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_3,
      Q => runtime(63),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[63]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \runtime_reg[56]_i_2_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_runtime_reg[63]_i_4_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \runtime_reg[63]_i_4_n_2\,
      CO(4) => \runtime_reg[63]_i_4_n_3\,
      CO(3) => \NLW_runtime_reg[63]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[63]_i_4_n_5\,
      CO(1) => \runtime_reg[63]_i_4_n_6\,
      CO(0) => \runtime_reg[63]_i_4_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_runtime_reg[63]_i_4_O_UNCONNECTED\(7),
      O(6 downto 0) => runtime0(63 downto 57),
      S(7) => '0',
      S(6 downto 0) => runtime(63 downto 57)
    );
\runtime_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_60,
      Q => runtime(6),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_59,
      Q => runtime(7),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_58,
      Q => runtime(8),
      R => \runtime[63]_i_1_n_0\
    );
\runtime_reg[8]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => runtime(0),
      CI_TOP => '0',
      CO(7) => \runtime_reg[8]_i_2_n_0\,
      CO(6) => \runtime_reg[8]_i_2_n_1\,
      CO(5) => \runtime_reg[8]_i_2_n_2\,
      CO(4) => \runtime_reg[8]_i_2_n_3\,
      CO(3) => \NLW_runtime_reg[8]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \runtime_reg[8]_i_2_n_5\,
      CO(1) => \runtime_reg[8]_i_2_n_6\,
      CO(0) => \runtime_reg[8]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => runtime0(8 downto 1),
      S(7 downto 0) => runtime(8 downto 1)
    );
\runtime_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => sactn_n_57,
      Q => runtime(9),
      R => \runtime[63]_i_1_n_0\
    );
sactn: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_s_axi_control_to_native
     port map (
      CO(0) => \max_cycles_with_no_data_read_reg[31]_i_4_n_0\,
      D(63) => sactn_n_3,
      D(62) => sactn_n_4,
      D(61) => sactn_n_5,
      D(60) => sactn_n_6,
      D(59) => sactn_n_7,
      D(58) => sactn_n_8,
      D(57) => sactn_n_9,
      D(56) => sactn_n_10,
      D(55) => sactn_n_11,
      D(54) => sactn_n_12,
      D(53) => sactn_n_13,
      D(52) => sactn_n_14,
      D(51) => sactn_n_15,
      D(50) => sactn_n_16,
      D(49) => sactn_n_17,
      D(48) => sactn_n_18,
      D(47) => sactn_n_19,
      D(46) => sactn_n_20,
      D(45) => sactn_n_21,
      D(44) => sactn_n_22,
      D(43) => sactn_n_23,
      D(42) => sactn_n_24,
      D(41) => sactn_n_25,
      D(40) => sactn_n_26,
      D(39) => sactn_n_27,
      D(38) => sactn_n_28,
      D(37) => sactn_n_29,
      D(36) => sactn_n_30,
      D(35) => sactn_n_31,
      D(34) => sactn_n_32,
      D(33) => sactn_n_33,
      D(32) => sactn_n_34,
      D(31) => sactn_n_35,
      D(30) => sactn_n_36,
      D(29) => sactn_n_37,
      D(28) => sactn_n_38,
      D(27) => sactn_n_39,
      D(26) => sactn_n_40,
      D(25) => sactn_n_41,
      D(24) => sactn_n_42,
      D(23) => sactn_n_43,
      D(22) => sactn_n_44,
      D(21) => sactn_n_45,
      D(20) => sactn_n_46,
      D(19) => sactn_n_47,
      D(18) => sactn_n_48,
      D(17) => sactn_n_49,
      D(16) => sactn_n_50,
      D(15) => sactn_n_51,
      D(14) => sactn_n_52,
      D(13) => sactn_n_53,
      D(12) => sactn_n_54,
      D(11) => sactn_n_55,
      D(10) => sactn_n_56,
      D(9) => sactn_n_57,
      D(8) => sactn_n_58,
      D(7) => sactn_n_59,
      D(6) => sactn_n_60,
      D(5) => sactn_n_61,
      D(4) => sactn_n_62,
      D(3) => sactn_n_63,
      D(2) => sactn_n_64,
      D(1) => sactn_n_65,
      D(0) => sactn_n_66,
      E(0) => sactn_n_67,
      Q(31 downto 0) => countDataReceived(31 downto 0),
      SR(0) => srst,
      \active_blocking__0\ => \active_blocking__0\,
      active_blocking_reg => \runtime[63]_i_3_n_0\,
      active_blocking_reg_0 => \countDataReceived[39]_i_3_n_0\,
      active_blocking_reg_1 => data_read_in_this_test_i_2_n_0,
      active_blocking_reg_2 => \countAddrSent[31]_i_3_n_0\,
      active_blocking_reg_3 => \countAddrSent[39]_i_3_n_0\,
      active_blocking_reg_4 => active_blocking,
      \active_read__0\ => \active_read__0\,
      active_read_reg => active_read,
      active_runtime => active_runtime,
      \active_write__0\ => \active_write__0\,
      active_write_reg => active_write,
      \axi_c_read_data_reg[31]\(31 downto 0) => axi_c_read_data(31 downto 0),
      \axi_c_read_data_reg[31]_0\(31 downto 0) => \axi_c_read_data_reg_n_0_\(31 downto 0),
      axi_c_read_data_valid_reg(0) => axi_c_read_valid,
      axi_c_write_valid => axi_c_write_valid,
      clk => clk,
      countAddrSent0(30 downto 0) => countAddrSent0(31 downto 1),
      \countAddrSent_reg[31]\(0) => sactn_n_71,
      \countAddrSent_reg[31]_0\(31) => sactn_n_264,
      \countAddrSent_reg[31]_0\(30) => sactn_n_265,
      \countAddrSent_reg[31]_0\(29) => sactn_n_266,
      \countAddrSent_reg[31]_0\(28) => sactn_n_267,
      \countAddrSent_reg[31]_0\(27) => sactn_n_268,
      \countAddrSent_reg[31]_0\(26) => sactn_n_269,
      \countAddrSent_reg[31]_0\(25) => sactn_n_270,
      \countAddrSent_reg[31]_0\(24) => sactn_n_271,
      \countAddrSent_reg[31]_0\(23) => sactn_n_272,
      \countAddrSent_reg[31]_0\(22) => sactn_n_273,
      \countAddrSent_reg[31]_0\(21) => sactn_n_274,
      \countAddrSent_reg[31]_0\(20) => sactn_n_275,
      \countAddrSent_reg[31]_0\(19) => sactn_n_276,
      \countAddrSent_reg[31]_0\(18) => sactn_n_277,
      \countAddrSent_reg[31]_0\(17) => sactn_n_278,
      \countAddrSent_reg[31]_0\(16) => sactn_n_279,
      \countAddrSent_reg[31]_0\(15) => sactn_n_280,
      \countAddrSent_reg[31]_0\(14) => sactn_n_281,
      \countAddrSent_reg[31]_0\(13) => sactn_n_282,
      \countAddrSent_reg[31]_0\(12) => sactn_n_283,
      \countAddrSent_reg[31]_0\(11) => sactn_n_284,
      \countAddrSent_reg[31]_0\(10) => sactn_n_285,
      \countAddrSent_reg[31]_0\(9) => sactn_n_286,
      \countAddrSent_reg[31]_0\(8) => sactn_n_287,
      \countAddrSent_reg[31]_0\(7) => sactn_n_288,
      \countAddrSent_reg[31]_0\(6) => sactn_n_289,
      \countAddrSent_reg[31]_0\(5) => sactn_n_290,
      \countAddrSent_reg[31]_0\(4) => sactn_n_291,
      \countAddrSent_reg[31]_0\(3) => sactn_n_292,
      \countAddrSent_reg[31]_0\(2) => sactn_n_293,
      \countAddrSent_reg[31]_0\(1) => sactn_n_294,
      \countAddrSent_reg[31]_0\(0) => sactn_n_295,
      \countAddrSent_reg[31]_1\(31 downto 0) => countAddrSent(31 downto 0),
      \countAddrToBeSent_reg[38]\(0) => \^countaddrsent_reg[1]_0\(0),
      countDataReceived0(30 downto 0) => countDataReceived0(31 downto 1),
      \countDataReceived_reg[31]\(31 downto 0) => \p_1_in__0\(31 downto 0),
      \current_cycles_with_no_data_read_reg[31]\(31 downto 0) => current_cycles_with_no_data_read(31 downto 0),
      \debug_axi_control_reg[0]\(0) => sactn_n_68,
      \debug_axi_control_reg[31]\(31 downto 22) => \debug_axi_control_reg_n_0_\(31 downto 22),
      \debug_axi_control_reg[31]\(21 downto 0) => \^q\(21 downto 0),
      \debug_axi_r_control_reg[0]\(0) => sactn_n_69,
      \debug_axi_r_control_reg[31]\(31 downto 22) => \debug_axi_r_control_reg_n_0_\(31 downto 22),
      \debug_axi_r_control_reg[31]\(21 downto 0) => \^m_ddr_axi_arsize[2]\(21 downto 0),
      \latency_reg[63]\(63 downto 0) => latency(63 downto 0),
      \max_cycles_with_no_data_read_reg[0]\(0) => sactn_n_70,
      \max_cycles_with_no_data_read_reg[31]\(31) => sactn_n_587,
      \max_cycles_with_no_data_read_reg[31]\(30) => sactn_n_588,
      \max_cycles_with_no_data_read_reg[31]\(29) => sactn_n_589,
      \max_cycles_with_no_data_read_reg[31]\(28) => sactn_n_590,
      \max_cycles_with_no_data_read_reg[31]\(27) => sactn_n_591,
      \max_cycles_with_no_data_read_reg[31]\(26) => sactn_n_592,
      \max_cycles_with_no_data_read_reg[31]\(25) => sactn_n_593,
      \max_cycles_with_no_data_read_reg[31]\(24) => sactn_n_594,
      \max_cycles_with_no_data_read_reg[31]\(23) => sactn_n_595,
      \max_cycles_with_no_data_read_reg[31]\(22) => sactn_n_596,
      \max_cycles_with_no_data_read_reg[31]\(21) => sactn_n_597,
      \max_cycles_with_no_data_read_reg[31]\(20) => sactn_n_598,
      \max_cycles_with_no_data_read_reg[31]\(19) => sactn_n_599,
      \max_cycles_with_no_data_read_reg[31]\(18) => sactn_n_600,
      \max_cycles_with_no_data_read_reg[31]\(17) => sactn_n_601,
      \max_cycles_with_no_data_read_reg[31]\(16) => sactn_n_602,
      \max_cycles_with_no_data_read_reg[31]\(15) => sactn_n_603,
      \max_cycles_with_no_data_read_reg[31]\(14) => sactn_n_604,
      \max_cycles_with_no_data_read_reg[31]\(13) => sactn_n_605,
      \max_cycles_with_no_data_read_reg[31]\(12) => sactn_n_606,
      \max_cycles_with_no_data_read_reg[31]\(11) => sactn_n_607,
      \max_cycles_with_no_data_read_reg[31]\(10) => sactn_n_608,
      \max_cycles_with_no_data_read_reg[31]\(9) => sactn_n_609,
      \max_cycles_with_no_data_read_reg[31]\(8) => sactn_n_610,
      \max_cycles_with_no_data_read_reg[31]\(7) => sactn_n_611,
      \max_cycles_with_no_data_read_reg[31]\(6) => sactn_n_612,
      \max_cycles_with_no_data_read_reg[31]\(5) => sactn_n_613,
      \max_cycles_with_no_data_read_reg[31]\(4) => sactn_n_614,
      \max_cycles_with_no_data_read_reg[31]\(3) => sactn_n_615,
      \max_cycles_with_no_data_read_reg[31]\(2) => sactn_n_616,
      \max_cycles_with_no_data_read_reg[31]\(1) => sactn_n_617,
      \max_cycles_with_no_data_read_reg[31]\(0) => sactn_n_618,
      \max_cycles_with_no_data_read_reg[31]_0\(31 downto 0) => max_cycles_with_no_data_read(31 downto 0),
      \out\ => reset_cmd,
      readDataLast => readDataLast,
      readDataValid => readDataValid,
      \read_blocking_ratio_reg[31]\(31 downto 0) => \read_blocking_ratio__0\(31 downto 0),
      \read_blocking_ratio_reg[31]_0\(31 downto 0) => read_blocking_ratio(31 downto 0),
      \read_burst_size_reg[31]\(31 downto 0) => \read_burst_size__0\(31 downto 0),
      \read_burst_size_reg[31]_0\(31 downto 0) => read_burst_size(31 downto 0),
      \read_count_bursts_per_reset_reg[31]\(31 downto 0) => \read_count_bursts_per_reset__0\(31 downto 0),
      \read_count_bursts_per_reset_reg[31]_0\(31 downto 0) => read_count_bursts_per_reset(31 downto 0),
      read_data_valid => axi_c_read_data_valid,
      \read_max_queue_size_reg[31]\(31 downto 0) => \read_max_queue_size__0\(31 downto 0),
      \read_max_queue_size_reg[31]_0\(31 downto 0) => read_max_queue_size(31 downto 0),
      \read_start_DDR_address_reg[63]\(63 downto 0) => \read_start_DDR_address__0\(63 downto 0),
      \read_start_DDR_address_reg[63]_0\(63 downto 0) => read_start_DDR_address(63 downto 0),
      \read_step_DDR_address_reg[31]\(31 downto 0) => \read_step_DDR_address__0\(31 downto 0),
      \read_step_DDR_address_reg[31]_0\(31 downto 0) => read_step_DDR_address(31 downto 0),
      \read_ticks_per_burst_reg[31]\(31 downto 0) => \read_ticks_per_burst__0\(31 downto 0),
      \read_ticks_per_burst_reg[31]_0\(31 downto 0) => read_ticks_per_burst(31 downto 0),
      reset_cmd_reg => sactn_n_1,
      rstn => rstn,
      runtime0(62 downto 0) => runtime0(63 downto 1),
      \runtime_reg[63]\(63 downto 0) => runtime(63 downto 0),
      s_axi_control_ARADDR(6 downto 0) => s_axi_control_ARADDR(6 downto 0),
      s_axi_control_ARREADY => s_axi_control_ARREADY,
      s_axi_control_ARVALID => s_axi_control_ARVALID,
      s_axi_control_AWADDR(6 downto 0) => s_axi_control_AWADDR(6 downto 0),
      s_axi_control_AWREADY => s_axi_control_AWREADY,
      s_axi_control_AWVALID => s_axi_control_AWVALID,
      s_axi_control_BREADY => s_axi_control_BREADY,
      s_axi_control_BVALID => s_axi_control_BVALID,
      s_axi_control_RDATA(31 downto 0) => s_axi_control_RDATA(31 downto 0),
      s_axi_control_RREADY => s_axi_control_RREADY,
      s_axi_control_RVALID => s_axi_control_RVALID,
      s_axi_control_WDATA(31 downto 0) => s_axi_control_WDATA(31 downto 0),
      s_axi_control_WREADY => s_axi_control_WREADY,
      s_axi_control_WVALID => s_axi_control_WVALID,
      writeAbusy => writeAbusy,
      \write_blocking_ratio_reg[31]\(31 downto 0) => \write_blocking_ratio__0\(31 downto 0),
      \write_blocking_ratio_reg[31]_0\(31 downto 0) => write_blocking_ratio(31 downto 0),
      \write_burst_size_reg[31]\(31 downto 0) => \write_burst_size__0\(31 downto 0),
      \write_burst_size_reg[31]_0\(31 downto 0) => write_burst_size(31 downto 0),
      \write_count_bursts_per_reset_reg[31]\(31 downto 0) => \write_count_bursts_per_reset__0\(31 downto 0),
      \write_count_bursts_per_reset_reg[31]_0\(31 downto 0) => write_count_bursts_per_reset(31 downto 0),
      write_data(31 downto 0) => axi_c_write_data(31 downto 0),
      \write_max_queue_size_reg[31]\(31 downto 0) => \write_max_queue_size__0\(31 downto 0),
      \write_max_queue_size_reg[31]_0\(31 downto 0) => write_max_queue_size(31 downto 0),
      \write_start_DDR_address_reg[63]\(63 downto 0) => \write_start_DDR_address__0\(63 downto 0),
      \write_start_DDR_address_reg[63]_0\(63 downto 0) => write_start_DDR_address(63 downto 0),
      \write_step_DDR_address_reg[31]\(31 downto 0) => \write_step_DDR_address__0\(31 downto 0),
      \write_step_DDR_address_reg[31]_0\(31 downto 0) => write_step_DDR_address(31 downto 0),
      \write_ticks_per_burst_reg[31]\(31 downto 0) => \write_ticks_per_burst__0\(31 downto 0),
      \write_ticks_per_burst_reg[31]_0\(31 downto 0) => write_ticks_per_burst(31 downto 0)
    );
\toReadDataAddress[0]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(7),
      I1 => \^toreaddataaddress\(7),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(7),
      O => \toReadDataAddress[0]_i_10_n_0\
    );
\toReadDataAddress[0]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(6),
      I1 => \^toreaddataaddress\(6),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(6),
      O => \toReadDataAddress[0]_i_11_n_0\
    );
\toReadDataAddress[0]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(5),
      I1 => \^toreaddataaddress\(5),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(5),
      O => \toReadDataAddress[0]_i_12_n_0\
    );
\toReadDataAddress[0]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(4),
      I1 => \^toreaddataaddress\(4),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(4),
      O => \toReadDataAddress[0]_i_13_n_0\
    );
\toReadDataAddress[0]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(3),
      I1 => \^toreaddataaddress\(3),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(3),
      O => \toReadDataAddress[0]_i_14_n_0\
    );
\toReadDataAddress[0]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(2),
      I1 => \^toreaddataaddress\(2),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(2),
      O => \toReadDataAddress[0]_i_15_n_0\
    );
\toReadDataAddress[0]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(1),
      I1 => \^toreaddataaddress\(1),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(1),
      O => \toReadDataAddress[0]_i_16_n_0\
    );
\toReadDataAddress[0]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(0),
      I1 => \^toreaddataaddress\(0),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(0),
      O => \toReadDataAddress[0]_i_17_n_0\
    );
\toReadDataAddress[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(7),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_2_n_0\
    );
\toReadDataAddress[0]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(6),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_3_n_0\
    );
\toReadDataAddress[0]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(5),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_4_n_0\
    );
\toReadDataAddress[0]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(4),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_5_n_0\
    );
\toReadDataAddress[0]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(3),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_6_n_0\
    );
\toReadDataAddress[0]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(2),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_7_n_0\
    );
\toReadDataAddress[0]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(1),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_8_n_0\
    );
\toReadDataAddress[0]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(0),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[0]_i_9_n_0\
    );
\toReadDataAddress[16]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(23),
      I1 => \^toreaddataaddress\(23),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(23),
      O => \toReadDataAddress[16]_i_10_n_0\
    );
\toReadDataAddress[16]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(22),
      I1 => \^toreaddataaddress\(22),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(22),
      O => \toReadDataAddress[16]_i_11_n_0\
    );
\toReadDataAddress[16]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(21),
      I1 => \^toreaddataaddress\(21),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(21),
      O => \toReadDataAddress[16]_i_12_n_0\
    );
\toReadDataAddress[16]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(20),
      I1 => \^toreaddataaddress\(20),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(20),
      O => \toReadDataAddress[16]_i_13_n_0\
    );
\toReadDataAddress[16]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(19),
      I1 => \^toreaddataaddress\(19),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(19),
      O => \toReadDataAddress[16]_i_14_n_0\
    );
\toReadDataAddress[16]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(18),
      I1 => \^toreaddataaddress\(18),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(18),
      O => \toReadDataAddress[16]_i_15_n_0\
    );
\toReadDataAddress[16]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(17),
      I1 => \^toreaddataaddress\(17),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(17),
      O => \toReadDataAddress[16]_i_16_n_0\
    );
\toReadDataAddress[16]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(16),
      I1 => \^toreaddataaddress\(16),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(16),
      O => \toReadDataAddress[16]_i_17_n_0\
    );
\toReadDataAddress[16]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(23),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_2_n_0\
    );
\toReadDataAddress[16]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(22),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_3_n_0\
    );
\toReadDataAddress[16]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(21),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_4_n_0\
    );
\toReadDataAddress[16]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(20),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_5_n_0\
    );
\toReadDataAddress[16]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(19),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_6_n_0\
    );
\toReadDataAddress[16]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(18),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_7_n_0\
    );
\toReadDataAddress[16]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(17),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_8_n_0\
    );
\toReadDataAddress[16]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(16),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[16]_i_9_n_0\
    );
\toReadDataAddress[24]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(31),
      I1 => \^toreaddataaddress\(31),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(31),
      O => \toReadDataAddress[24]_i_10_n_0\
    );
\toReadDataAddress[24]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(30),
      I1 => \^toreaddataaddress\(30),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(30),
      O => \toReadDataAddress[24]_i_11_n_0\
    );
\toReadDataAddress[24]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(29),
      I1 => \^toreaddataaddress\(29),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(29),
      O => \toReadDataAddress[24]_i_12_n_0\
    );
\toReadDataAddress[24]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(28),
      I1 => \^toreaddataaddress\(28),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(28),
      O => \toReadDataAddress[24]_i_13_n_0\
    );
\toReadDataAddress[24]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(27),
      I1 => \^toreaddataaddress\(27),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(27),
      O => \toReadDataAddress[24]_i_14_n_0\
    );
\toReadDataAddress[24]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(26),
      I1 => \^toreaddataaddress\(26),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(26),
      O => \toReadDataAddress[24]_i_15_n_0\
    );
\toReadDataAddress[24]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(25),
      I1 => \^toreaddataaddress\(25),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(25),
      O => \toReadDataAddress[24]_i_16_n_0\
    );
\toReadDataAddress[24]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(24),
      I1 => \^toreaddataaddress\(24),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(24),
      O => \toReadDataAddress[24]_i_17_n_0\
    );
\toReadDataAddress[24]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(31),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_2_n_0\
    );
\toReadDataAddress[24]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(30),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_3_n_0\
    );
\toReadDataAddress[24]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(29),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_4_n_0\
    );
\toReadDataAddress[24]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(28),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_5_n_0\
    );
\toReadDataAddress[24]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(27),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_6_n_0\
    );
\toReadDataAddress[24]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(26),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_7_n_0\
    );
\toReadDataAddress[24]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(25),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_8_n_0\
    );
\toReadDataAddress[24]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(24),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[24]_i_9_n_0\
    );
\toReadDataAddress[32]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(39),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(39),
      O => \toReadDataAddress[32]_i_2_n_0\
    );
\toReadDataAddress[32]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(38),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(38),
      O => \toReadDataAddress[32]_i_3_n_0\
    );
\toReadDataAddress[32]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(37),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(37),
      O => \toReadDataAddress[32]_i_4_n_0\
    );
\toReadDataAddress[32]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(36),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(36),
      O => \toReadDataAddress[32]_i_5_n_0\
    );
\toReadDataAddress[32]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(35),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(35),
      O => \toReadDataAddress[32]_i_6_n_0\
    );
\toReadDataAddress[32]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(34),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(34),
      O => \toReadDataAddress[32]_i_7_n_0\
    );
\toReadDataAddress[32]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(33),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(33),
      O => \toReadDataAddress[32]_i_8_n_0\
    );
\toReadDataAddress[32]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(32),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(32),
      O => \toReadDataAddress[32]_i_9_n_0\
    );
\toReadDataAddress[40]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(47),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(47),
      O => \toReadDataAddress[40]_i_2_n_0\
    );
\toReadDataAddress[40]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(46),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(46),
      O => \toReadDataAddress[40]_i_3_n_0\
    );
\toReadDataAddress[40]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(45),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(45),
      O => \toReadDataAddress[40]_i_4_n_0\
    );
\toReadDataAddress[40]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(44),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(44),
      O => \toReadDataAddress[40]_i_5_n_0\
    );
\toReadDataAddress[40]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(43),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(43),
      O => \toReadDataAddress[40]_i_6_n_0\
    );
\toReadDataAddress[40]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(42),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(42),
      O => \toReadDataAddress[40]_i_7_n_0\
    );
\toReadDataAddress[40]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(41),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(41),
      O => \toReadDataAddress[40]_i_8_n_0\
    );
\toReadDataAddress[40]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(40),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(40),
      O => \toReadDataAddress[40]_i_9_n_0\
    );
\toReadDataAddress[48]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(55),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(55),
      O => \toReadDataAddress[48]_i_2_n_0\
    );
\toReadDataAddress[48]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(54),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(54),
      O => \toReadDataAddress[48]_i_3_n_0\
    );
\toReadDataAddress[48]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(53),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(53),
      O => \toReadDataAddress[48]_i_4_n_0\
    );
\toReadDataAddress[48]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(52),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(52),
      O => \toReadDataAddress[48]_i_5_n_0\
    );
\toReadDataAddress[48]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(51),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(51),
      O => \toReadDataAddress[48]_i_6_n_0\
    );
\toReadDataAddress[48]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(50),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(50),
      O => \toReadDataAddress[48]_i_7_n_0\
    );
\toReadDataAddress[48]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(49),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(49),
      O => \toReadDataAddress[48]_i_8_n_0\
    );
\toReadDataAddress[48]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(48),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(48),
      O => \toReadDataAddress[48]_i_9_n_0\
    );
\toReadDataAddress[56]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(63),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(63),
      O => \toReadDataAddress[56]_i_2_n_0\
    );
\toReadDataAddress[56]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(62),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(62),
      O => \toReadDataAddress[56]_i_3_n_0\
    );
\toReadDataAddress[56]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(61),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(61),
      O => \toReadDataAddress[56]_i_4_n_0\
    );
\toReadDataAddress[56]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(60),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(60),
      O => \toReadDataAddress[56]_i_5_n_0\
    );
\toReadDataAddress[56]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(59),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(59),
      O => \toReadDataAddress[56]_i_6_n_0\
    );
\toReadDataAddress[56]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(58),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(58),
      O => \toReadDataAddress[56]_i_7_n_0\
    );
\toReadDataAddress[56]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(57),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(57),
      O => \toReadDataAddress[56]_i_8_n_0\
    );
\toReadDataAddress[56]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => read_start_DDR_address(56),
      I1 => \read_count_reg[31]_i_4_n_0\,
      I2 => \^toreaddataaddress\(56),
      O => \toReadDataAddress[56]_i_9_n_0\
    );
\toReadDataAddress[8]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(15),
      I1 => \^toreaddataaddress\(15),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(15),
      O => \toReadDataAddress[8]_i_10_n_0\
    );
\toReadDataAddress[8]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(14),
      I1 => \^toreaddataaddress\(14),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(14),
      O => \toReadDataAddress[8]_i_11_n_0\
    );
\toReadDataAddress[8]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(13),
      I1 => \^toreaddataaddress\(13),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(13),
      O => \toReadDataAddress[8]_i_12_n_0\
    );
\toReadDataAddress[8]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(12),
      I1 => \^toreaddataaddress\(12),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(12),
      O => \toReadDataAddress[8]_i_13_n_0\
    );
\toReadDataAddress[8]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(11),
      I1 => \^toreaddataaddress\(11),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(11),
      O => \toReadDataAddress[8]_i_14_n_0\
    );
\toReadDataAddress[8]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(10),
      I1 => \^toreaddataaddress\(10),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(10),
      O => \toReadDataAddress[8]_i_15_n_0\
    );
\toReadDataAddress[8]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(9),
      I1 => \^toreaddataaddress\(9),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(9),
      O => \toReadDataAddress[8]_i_16_n_0\
    );
\toReadDataAddress[8]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => read_step_DDR_address(8),
      I1 => \^toreaddataaddress\(8),
      I2 => \read_count_reg[31]_i_4_n_0\,
      I3 => read_start_DDR_address(8),
      O => \toReadDataAddress[8]_i_17_n_0\
    );
\toReadDataAddress[8]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(15),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_2_n_0\
    );
\toReadDataAddress[8]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(14),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_3_n_0\
    );
\toReadDataAddress[8]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(13),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_4_n_0\
    );
\toReadDataAddress[8]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(12),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_5_n_0\
    );
\toReadDataAddress[8]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(11),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_6_n_0\
    );
\toReadDataAddress[8]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(10),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_7_n_0\
    );
\toReadDataAddress[8]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(9),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_8_n_0\
    );
\toReadDataAddress[8]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => read_step_DDR_address(8),
      I1 => \read_count_reg[31]_i_4_n_0\,
      O => \toReadDataAddress[8]_i_9_n_0\
    );
\toReadDataAddress_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_15\,
      Q => \^toreaddataaddress\(0),
      R => '0'
    );
\toReadDataAddress_reg[0]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \toReadDataAddress_reg[0]_i_1_n_0\,
      CO(6) => \toReadDataAddress_reg[0]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[0]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[0]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[0]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[0]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[0]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[0]_i_1_n_7\,
      DI(7) => \toReadDataAddress[0]_i_2_n_0\,
      DI(6) => \toReadDataAddress[0]_i_3_n_0\,
      DI(5) => \toReadDataAddress[0]_i_4_n_0\,
      DI(4) => \toReadDataAddress[0]_i_5_n_0\,
      DI(3) => \toReadDataAddress[0]_i_6_n_0\,
      DI(2) => \toReadDataAddress[0]_i_7_n_0\,
      DI(1) => \toReadDataAddress[0]_i_8_n_0\,
      DI(0) => \toReadDataAddress[0]_i_9_n_0\,
      O(7) => \toReadDataAddress_reg[0]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[0]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[0]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[0]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[0]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[0]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[0]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[0]_i_1_n_15\,
      S(7) => \toReadDataAddress[0]_i_10_n_0\,
      S(6) => \toReadDataAddress[0]_i_11_n_0\,
      S(5) => \toReadDataAddress[0]_i_12_n_0\,
      S(4) => \toReadDataAddress[0]_i_13_n_0\,
      S(3) => \toReadDataAddress[0]_i_14_n_0\,
      S(2) => \toReadDataAddress[0]_i_15_n_0\,
      S(1) => \toReadDataAddress[0]_i_16_n_0\,
      S(0) => \toReadDataAddress[0]_i_17_n_0\
    );
\toReadDataAddress_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_13\,
      Q => \^toreaddataaddress\(10),
      R => '0'
    );
\toReadDataAddress_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_12\,
      Q => \^toreaddataaddress\(11),
      R => '0'
    );
\toReadDataAddress_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_11\,
      Q => \^toreaddataaddress\(12),
      R => '0'
    );
\toReadDataAddress_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_10\,
      Q => \^toreaddataaddress\(13),
      R => '0'
    );
\toReadDataAddress_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_9\,
      Q => \^toreaddataaddress\(14),
      R => '0'
    );
\toReadDataAddress_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_8\,
      Q => \^toreaddataaddress\(15),
      R => '0'
    );
\toReadDataAddress_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_15\,
      Q => \^toreaddataaddress\(16),
      R => '0'
    );
\toReadDataAddress_reg[16]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \toReadDataAddress_reg[8]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \toReadDataAddress_reg[16]_i_1_n_0\,
      CO(6) => \toReadDataAddress_reg[16]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[16]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[16]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[16]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[16]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[16]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[16]_i_1_n_7\,
      DI(7) => \toReadDataAddress[16]_i_2_n_0\,
      DI(6) => \toReadDataAddress[16]_i_3_n_0\,
      DI(5) => \toReadDataAddress[16]_i_4_n_0\,
      DI(4) => \toReadDataAddress[16]_i_5_n_0\,
      DI(3) => \toReadDataAddress[16]_i_6_n_0\,
      DI(2) => \toReadDataAddress[16]_i_7_n_0\,
      DI(1) => \toReadDataAddress[16]_i_8_n_0\,
      DI(0) => \toReadDataAddress[16]_i_9_n_0\,
      O(7) => \toReadDataAddress_reg[16]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[16]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[16]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[16]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[16]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[16]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[16]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[16]_i_1_n_15\,
      S(7) => \toReadDataAddress[16]_i_10_n_0\,
      S(6) => \toReadDataAddress[16]_i_11_n_0\,
      S(5) => \toReadDataAddress[16]_i_12_n_0\,
      S(4) => \toReadDataAddress[16]_i_13_n_0\,
      S(3) => \toReadDataAddress[16]_i_14_n_0\,
      S(2) => \toReadDataAddress[16]_i_15_n_0\,
      S(1) => \toReadDataAddress[16]_i_16_n_0\,
      S(0) => \toReadDataAddress[16]_i_17_n_0\
    );
\toReadDataAddress_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_14\,
      Q => \^toreaddataaddress\(17),
      R => '0'
    );
\toReadDataAddress_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_13\,
      Q => \^toreaddataaddress\(18),
      R => '0'
    );
\toReadDataAddress_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_12\,
      Q => \^toreaddataaddress\(19),
      R => '0'
    );
\toReadDataAddress_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_14\,
      Q => \^toreaddataaddress\(1),
      R => '0'
    );
\toReadDataAddress_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_11\,
      Q => \^toreaddataaddress\(20),
      R => '0'
    );
\toReadDataAddress_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_10\,
      Q => \^toreaddataaddress\(21),
      R => '0'
    );
\toReadDataAddress_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_9\,
      Q => \^toreaddataaddress\(22),
      R => '0'
    );
\toReadDataAddress_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[16]_i_1_n_8\,
      Q => \^toreaddataaddress\(23),
      R => '0'
    );
\toReadDataAddress_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_15\,
      Q => \^toreaddataaddress\(24),
      R => '0'
    );
\toReadDataAddress_reg[24]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \toReadDataAddress_reg[16]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \toReadDataAddress_reg[24]_i_1_n_0\,
      CO(6) => \toReadDataAddress_reg[24]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[24]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[24]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[24]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[24]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[24]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[24]_i_1_n_7\,
      DI(7) => \toReadDataAddress[24]_i_2_n_0\,
      DI(6) => \toReadDataAddress[24]_i_3_n_0\,
      DI(5) => \toReadDataAddress[24]_i_4_n_0\,
      DI(4) => \toReadDataAddress[24]_i_5_n_0\,
      DI(3) => \toReadDataAddress[24]_i_6_n_0\,
      DI(2) => \toReadDataAddress[24]_i_7_n_0\,
      DI(1) => \toReadDataAddress[24]_i_8_n_0\,
      DI(0) => \toReadDataAddress[24]_i_9_n_0\,
      O(7) => \toReadDataAddress_reg[24]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[24]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[24]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[24]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[24]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[24]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[24]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[24]_i_1_n_15\,
      S(7) => \toReadDataAddress[24]_i_10_n_0\,
      S(6) => \toReadDataAddress[24]_i_11_n_0\,
      S(5) => \toReadDataAddress[24]_i_12_n_0\,
      S(4) => \toReadDataAddress[24]_i_13_n_0\,
      S(3) => \toReadDataAddress[24]_i_14_n_0\,
      S(2) => \toReadDataAddress[24]_i_15_n_0\,
      S(1) => \toReadDataAddress[24]_i_16_n_0\,
      S(0) => \toReadDataAddress[24]_i_17_n_0\
    );
\toReadDataAddress_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_14\,
      Q => \^toreaddataaddress\(25),
      R => '0'
    );
\toReadDataAddress_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_13\,
      Q => \^toreaddataaddress\(26),
      R => '0'
    );
\toReadDataAddress_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_12\,
      Q => \^toreaddataaddress\(27),
      R => '0'
    );
\toReadDataAddress_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_11\,
      Q => \^toreaddataaddress\(28),
      R => '0'
    );
\toReadDataAddress_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_10\,
      Q => \^toreaddataaddress\(29),
      R => '0'
    );
\toReadDataAddress_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_13\,
      Q => \^toreaddataaddress\(2),
      R => '0'
    );
\toReadDataAddress_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_9\,
      Q => \^toreaddataaddress\(30),
      R => '0'
    );
\toReadDataAddress_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[24]_i_1_n_8\,
      Q => \^toreaddataaddress\(31),
      R => '0'
    );
\toReadDataAddress_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_15\,
      Q => \^toreaddataaddress\(32),
      R => '0'
    );
\toReadDataAddress_reg[32]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \toReadDataAddress_reg[24]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \toReadDataAddress_reg[32]_i_1_n_0\,
      CO(6) => \toReadDataAddress_reg[32]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[32]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[32]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[32]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[32]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[32]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[32]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \toReadDataAddress_reg[32]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[32]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[32]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[32]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[32]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[32]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[32]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[32]_i_1_n_15\,
      S(7) => \toReadDataAddress[32]_i_2_n_0\,
      S(6) => \toReadDataAddress[32]_i_3_n_0\,
      S(5) => \toReadDataAddress[32]_i_4_n_0\,
      S(4) => \toReadDataAddress[32]_i_5_n_0\,
      S(3) => \toReadDataAddress[32]_i_6_n_0\,
      S(2) => \toReadDataAddress[32]_i_7_n_0\,
      S(1) => \toReadDataAddress[32]_i_8_n_0\,
      S(0) => \toReadDataAddress[32]_i_9_n_0\
    );
\toReadDataAddress_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_14\,
      Q => \^toreaddataaddress\(33),
      R => '0'
    );
\toReadDataAddress_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_13\,
      Q => \^toreaddataaddress\(34),
      R => '0'
    );
\toReadDataAddress_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_12\,
      Q => \^toreaddataaddress\(35),
      R => '0'
    );
\toReadDataAddress_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_11\,
      Q => \^toreaddataaddress\(36),
      R => '0'
    );
\toReadDataAddress_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_10\,
      Q => \^toreaddataaddress\(37),
      R => '0'
    );
\toReadDataAddress_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_9\,
      Q => \^toreaddataaddress\(38),
      R => '0'
    );
\toReadDataAddress_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[32]_i_1_n_8\,
      Q => \^toreaddataaddress\(39),
      R => '0'
    );
\toReadDataAddress_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_12\,
      Q => \^toreaddataaddress\(3),
      R => '0'
    );
\toReadDataAddress_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_15\,
      Q => \^toreaddataaddress\(40),
      R => '0'
    );
\toReadDataAddress_reg[40]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \toReadDataAddress_reg[32]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \toReadDataAddress_reg[40]_i_1_n_0\,
      CO(6) => \toReadDataAddress_reg[40]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[40]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[40]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[40]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[40]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[40]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[40]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \toReadDataAddress_reg[40]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[40]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[40]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[40]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[40]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[40]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[40]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[40]_i_1_n_15\,
      S(7) => \toReadDataAddress[40]_i_2_n_0\,
      S(6) => \toReadDataAddress[40]_i_3_n_0\,
      S(5) => \toReadDataAddress[40]_i_4_n_0\,
      S(4) => \toReadDataAddress[40]_i_5_n_0\,
      S(3) => \toReadDataAddress[40]_i_6_n_0\,
      S(2) => \toReadDataAddress[40]_i_7_n_0\,
      S(1) => \toReadDataAddress[40]_i_8_n_0\,
      S(0) => \toReadDataAddress[40]_i_9_n_0\
    );
\toReadDataAddress_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_14\,
      Q => \^toreaddataaddress\(41),
      R => '0'
    );
\toReadDataAddress_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_13\,
      Q => \^toreaddataaddress\(42),
      R => '0'
    );
\toReadDataAddress_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_12\,
      Q => \^toreaddataaddress\(43),
      R => '0'
    );
\toReadDataAddress_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_11\,
      Q => \^toreaddataaddress\(44),
      R => '0'
    );
\toReadDataAddress_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_10\,
      Q => \^toreaddataaddress\(45),
      R => '0'
    );
\toReadDataAddress_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_9\,
      Q => \^toreaddataaddress\(46),
      R => '0'
    );
\toReadDataAddress_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[40]_i_1_n_8\,
      Q => \^toreaddataaddress\(47),
      R => '0'
    );
\toReadDataAddress_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_15\,
      Q => \^toreaddataaddress\(48),
      R => '0'
    );
\toReadDataAddress_reg[48]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \toReadDataAddress_reg[40]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \toReadDataAddress_reg[48]_i_1_n_0\,
      CO(6) => \toReadDataAddress_reg[48]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[48]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[48]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[48]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[48]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[48]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[48]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \toReadDataAddress_reg[48]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[48]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[48]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[48]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[48]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[48]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[48]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[48]_i_1_n_15\,
      S(7) => \toReadDataAddress[48]_i_2_n_0\,
      S(6) => \toReadDataAddress[48]_i_3_n_0\,
      S(5) => \toReadDataAddress[48]_i_4_n_0\,
      S(4) => \toReadDataAddress[48]_i_5_n_0\,
      S(3) => \toReadDataAddress[48]_i_6_n_0\,
      S(2) => \toReadDataAddress[48]_i_7_n_0\,
      S(1) => \toReadDataAddress[48]_i_8_n_0\,
      S(0) => \toReadDataAddress[48]_i_9_n_0\
    );
\toReadDataAddress_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_14\,
      Q => \^toreaddataaddress\(49),
      R => '0'
    );
\toReadDataAddress_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_11\,
      Q => \^toreaddataaddress\(4),
      R => '0'
    );
\toReadDataAddress_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_13\,
      Q => \^toreaddataaddress\(50),
      R => '0'
    );
\toReadDataAddress_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_12\,
      Q => \^toreaddataaddress\(51),
      R => '0'
    );
\toReadDataAddress_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_11\,
      Q => \^toreaddataaddress\(52),
      R => '0'
    );
\toReadDataAddress_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_10\,
      Q => \^toreaddataaddress\(53),
      R => '0'
    );
\toReadDataAddress_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_9\,
      Q => \^toreaddataaddress\(54),
      R => '0'
    );
\toReadDataAddress_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[48]_i_1_n_8\,
      Q => \^toreaddataaddress\(55),
      R => '0'
    );
\toReadDataAddress_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_15\,
      Q => \^toreaddataaddress\(56),
      R => '0'
    );
\toReadDataAddress_reg[56]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \toReadDataAddress_reg[48]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_toReadDataAddress_reg[56]_i_1_CO_UNCONNECTED\(7),
      CO(6) => \toReadDataAddress_reg[56]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[56]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[56]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[56]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[56]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[56]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[56]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \toReadDataAddress_reg[56]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[56]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[56]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[56]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[56]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[56]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[56]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[56]_i_1_n_15\,
      S(7) => \toReadDataAddress[56]_i_2_n_0\,
      S(6) => \toReadDataAddress[56]_i_3_n_0\,
      S(5) => \toReadDataAddress[56]_i_4_n_0\,
      S(4) => \toReadDataAddress[56]_i_5_n_0\,
      S(3) => \toReadDataAddress[56]_i_6_n_0\,
      S(2) => \toReadDataAddress[56]_i_7_n_0\,
      S(1) => \toReadDataAddress[56]_i_8_n_0\,
      S(0) => \toReadDataAddress[56]_i_9_n_0\
    );
\toReadDataAddress_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_14\,
      Q => \^toreaddataaddress\(57),
      R => '0'
    );
\toReadDataAddress_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_13\,
      Q => \^toreaddataaddress\(58),
      R => '0'
    );
\toReadDataAddress_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_12\,
      Q => \^toreaddataaddress\(59),
      R => '0'
    );
\toReadDataAddress_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_10\,
      Q => \^toreaddataaddress\(5),
      R => '0'
    );
\toReadDataAddress_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_11\,
      Q => \^toreaddataaddress\(60),
      R => '0'
    );
\toReadDataAddress_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_10\,
      Q => \^toreaddataaddress\(61),
      R => '0'
    );
\toReadDataAddress_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_9\,
      Q => \^toreaddataaddress\(62),
      R => '0'
    );
\toReadDataAddress_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[56]_i_1_n_8\,
      Q => \^toreaddataaddress\(63),
      R => '0'
    );
\toReadDataAddress_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_9\,
      Q => \^toreaddataaddress\(6),
      R => '0'
    );
\toReadDataAddress_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[0]_i_1_n_8\,
      Q => \^toreaddataaddress\(7),
      R => '0'
    );
\toReadDataAddress_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_15\,
      Q => \^toreaddataaddress\(8),
      R => '0'
    );
\toReadDataAddress_reg[8]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \toReadDataAddress_reg[0]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \toReadDataAddress_reg[8]_i_1_n_0\,
      CO(6) => \toReadDataAddress_reg[8]_i_1_n_1\,
      CO(5) => \toReadDataAddress_reg[8]_i_1_n_2\,
      CO(4) => \toReadDataAddress_reg[8]_i_1_n_3\,
      CO(3) => \NLW_toReadDataAddress_reg[8]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \toReadDataAddress_reg[8]_i_1_n_5\,
      CO(1) => \toReadDataAddress_reg[8]_i_1_n_6\,
      CO(0) => \toReadDataAddress_reg[8]_i_1_n_7\,
      DI(7) => \toReadDataAddress[8]_i_2_n_0\,
      DI(6) => \toReadDataAddress[8]_i_3_n_0\,
      DI(5) => \toReadDataAddress[8]_i_4_n_0\,
      DI(4) => \toReadDataAddress[8]_i_5_n_0\,
      DI(3) => \toReadDataAddress[8]_i_6_n_0\,
      DI(2) => \toReadDataAddress[8]_i_7_n_0\,
      DI(1) => \toReadDataAddress[8]_i_8_n_0\,
      DI(0) => \toReadDataAddress[8]_i_9_n_0\,
      O(7) => \toReadDataAddress_reg[8]_i_1_n_8\,
      O(6) => \toReadDataAddress_reg[8]_i_1_n_9\,
      O(5) => \toReadDataAddress_reg[8]_i_1_n_10\,
      O(4) => \toReadDataAddress_reg[8]_i_1_n_11\,
      O(3) => \toReadDataAddress_reg[8]_i_1_n_12\,
      O(2) => \toReadDataAddress_reg[8]_i_1_n_13\,
      O(1) => \toReadDataAddress_reg[8]_i_1_n_14\,
      O(0) => \toReadDataAddress_reg[8]_i_1_n_15\,
      S(7) => \toReadDataAddress[8]_i_10_n_0\,
      S(6) => \toReadDataAddress[8]_i_11_n_0\,
      S(5) => \toReadDataAddress[8]_i_12_n_0\,
      S(4) => \toReadDataAddress[8]_i_13_n_0\,
      S(3) => \toReadDataAddress[8]_i_14_n_0\,
      S(2) => \toReadDataAddress[8]_i_15_n_0\,
      S(1) => \toReadDataAddress[8]_i_16_n_0\,
      S(0) => \toReadDataAddress[8]_i_17_n_0\
    );
\toReadDataAddress_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataAddress_reg[8]_i_1_n_14\,
      Q => \^toreaddataaddress\(9),
      R => '0'
    );
\toReadDataSize[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => read_burst_size(0),
      O => toReadDataSize0(0)
    );
\toReadDataSize[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => read_burst_size(0),
      I1 => read_burst_size(1),
      O => \toReadDataSize[1]_i_1_n_0\
    );
\toReadDataSize[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E1"
    )
        port map (
      I0 => read_burst_size(1),
      I1 => read_burst_size(0),
      I2 => read_burst_size(2),
      O => \toReadDataSize[2]_i_1_n_0\
    );
\toReadDataSize[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FE01"
    )
        port map (
      I0 => read_burst_size(2),
      I1 => read_burst_size(0),
      I2 => read_burst_size(1),
      I3 => read_burst_size(3),
      O => \toReadDataSize[3]_i_1_n_0\
    );
\toReadDataSize[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFE0001"
    )
        port map (
      I0 => read_burst_size(3),
      I1 => read_burst_size(1),
      I2 => read_burst_size(0),
      I3 => read_burst_size(2),
      I4 => read_burst_size(4),
      O => \toReadDataSize[4]_i_1_n_0\
    );
\toReadDataSize[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFE00000001"
    )
        port map (
      I0 => read_burst_size(4),
      I1 => read_burst_size(2),
      I2 => read_burst_size(0),
      I3 => read_burst_size(1),
      I4 => read_burst_size(3),
      I5 => read_burst_size(5),
      O => \toReadDataSize[5]_i_1_n_0\
    );
\toReadDataSize[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \toReadDataSize[7]_i_3_n_0\,
      I1 => read_burst_size(6),
      O => \toReadDataSize[6]_i_1_n_0\
    );
\toReadDataSize[7]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E1"
    )
        port map (
      I0 => read_burst_size(6),
      I1 => \toReadDataSize[7]_i_3_n_0\,
      I2 => read_burst_size(7),
      O => \toReadDataSize[7]_i_2_n_0\
    );
\toReadDataSize[7]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => read_burst_size(4),
      I1 => read_burst_size(2),
      I2 => read_burst_size(0),
      I3 => read_burst_size(1),
      I4 => read_burst_size(3),
      I5 => read_burst_size(5),
      O => \toReadDataSize[7]_i_3_n_0\
    );
\toReadDataSize_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => toReadDataSize0(0),
      Q => \axi_ARID_reg[0]\(0),
      R => '0'
    );
\toReadDataSize_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataSize[1]_i_1_n_0\,
      Q => \axi_ARID_reg[0]\(1),
      R => '0'
    );
\toReadDataSize_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataSize[2]_i_1_n_0\,
      Q => \axi_ARID_reg[0]\(2),
      R => '0'
    );
\toReadDataSize_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataSize[3]_i_1_n_0\,
      Q => \axi_ARID_reg[0]\(3),
      R => '0'
    );
\toReadDataSize_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataSize[4]_i_1_n_0\,
      Q => \axi_ARID_reg[0]\(4),
      R => '0'
    );
\toReadDataSize_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataSize[5]_i_1_n_0\,
      Q => \axi_ARID_reg[0]\(5),
      R => '0'
    );
\toReadDataSize_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataSize[6]_i_1_n_0\,
      Q => \axi_ARID_reg[0]\(6),
      R => '0'
    );
\toReadDataSize_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => E(0),
      D => \toReadDataSize[7]_i_2_n_0\,
      Q => \axi_ARID_reg[0]\(7),
      R => '0'
    );
toReadDataValid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => E(0),
      Q => toReadDataValid,
      R => '0'
    );
\writeAddress[0]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(0),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_10_n_0\
    );
\writeAddress[0]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(7),
      I1 => \^writeaddress\(7),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(7),
      O => \writeAddress[0]_i_11_n_0\
    );
\writeAddress[0]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(6),
      I1 => \^writeaddress\(6),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(6),
      O => \writeAddress[0]_i_12_n_0\
    );
\writeAddress[0]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(5),
      I1 => \^writeaddress\(5),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(5),
      O => \writeAddress[0]_i_13_n_0\
    );
\writeAddress[0]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(4),
      I1 => \^writeaddress\(4),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(4),
      O => \writeAddress[0]_i_14_n_0\
    );
\writeAddress[0]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(3),
      I1 => \^writeaddress\(3),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(3),
      O => \writeAddress[0]_i_15_n_0\
    );
\writeAddress[0]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(2),
      I1 => \^writeaddress\(2),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(2),
      O => \writeAddress[0]_i_16_n_0\
    );
\writeAddress[0]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(1),
      I1 => \^writeaddress\(1),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(1),
      O => \writeAddress[0]_i_17_n_0\
    );
\writeAddress[0]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(0),
      I1 => \^writeaddress\(0),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(0),
      O => \writeAddress[0]_i_18_n_0\
    );
\writeAddress[0]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(7),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_3_n_0\
    );
\writeAddress[0]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(6),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_4_n_0\
    );
\writeAddress[0]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(5),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_5_n_0\
    );
\writeAddress[0]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(4),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_6_n_0\
    );
\writeAddress[0]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(3),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_7_n_0\
    );
\writeAddress[0]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(2),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_8_n_0\
    );
\writeAddress[0]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(1),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[0]_i_9_n_0\
    );
\writeAddress[16]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(23),
      I1 => \^writeaddress\(23),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(23),
      O => \writeAddress[16]_i_10_n_0\
    );
\writeAddress[16]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(22),
      I1 => \^writeaddress\(22),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(22),
      O => \writeAddress[16]_i_11_n_0\
    );
\writeAddress[16]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(21),
      I1 => \^writeaddress\(21),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(21),
      O => \writeAddress[16]_i_12_n_0\
    );
\writeAddress[16]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(20),
      I1 => \^writeaddress\(20),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(20),
      O => \writeAddress[16]_i_13_n_0\
    );
\writeAddress[16]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(19),
      I1 => \^writeaddress\(19),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(19),
      O => \writeAddress[16]_i_14_n_0\
    );
\writeAddress[16]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(18),
      I1 => \^writeaddress\(18),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(18),
      O => \writeAddress[16]_i_15_n_0\
    );
\writeAddress[16]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(17),
      I1 => \^writeaddress\(17),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(17),
      O => \writeAddress[16]_i_16_n_0\
    );
\writeAddress[16]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(16),
      I1 => \^writeaddress\(16),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(16),
      O => \writeAddress[16]_i_17_n_0\
    );
\writeAddress[16]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(23),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_2_n_0\
    );
\writeAddress[16]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(22),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_3_n_0\
    );
\writeAddress[16]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(21),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_4_n_0\
    );
\writeAddress[16]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(20),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_5_n_0\
    );
\writeAddress[16]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(19),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_6_n_0\
    );
\writeAddress[16]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(18),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_7_n_0\
    );
\writeAddress[16]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(17),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_8_n_0\
    );
\writeAddress[16]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(16),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[16]_i_9_n_0\
    );
\writeAddress[24]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(31),
      I1 => \^writeaddress\(31),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(31),
      O => \writeAddress[24]_i_10_n_0\
    );
\writeAddress[24]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(30),
      I1 => \^writeaddress\(30),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(30),
      O => \writeAddress[24]_i_11_n_0\
    );
\writeAddress[24]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(29),
      I1 => \^writeaddress\(29),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(29),
      O => \writeAddress[24]_i_12_n_0\
    );
\writeAddress[24]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(28),
      I1 => \^writeaddress\(28),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(28),
      O => \writeAddress[24]_i_13_n_0\
    );
\writeAddress[24]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(27),
      I1 => \^writeaddress\(27),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(27),
      O => \writeAddress[24]_i_14_n_0\
    );
\writeAddress[24]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(26),
      I1 => \^writeaddress\(26),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(26),
      O => \writeAddress[24]_i_15_n_0\
    );
\writeAddress[24]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(25),
      I1 => \^writeaddress\(25),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(25),
      O => \writeAddress[24]_i_16_n_0\
    );
\writeAddress[24]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(24),
      I1 => \^writeaddress\(24),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(24),
      O => \writeAddress[24]_i_17_n_0\
    );
\writeAddress[24]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(31),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_2_n_0\
    );
\writeAddress[24]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(30),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_3_n_0\
    );
\writeAddress[24]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(29),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_4_n_0\
    );
\writeAddress[24]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(28),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_5_n_0\
    );
\writeAddress[24]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(27),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_6_n_0\
    );
\writeAddress[24]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(26),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_7_n_0\
    );
\writeAddress[24]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(25),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_8_n_0\
    );
\writeAddress[24]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(24),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[24]_i_9_n_0\
    );
\writeAddress[32]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(39),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(39),
      O => \writeAddress[32]_i_2_n_0\
    );
\writeAddress[32]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(38),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(38),
      O => \writeAddress[32]_i_3_n_0\
    );
\writeAddress[32]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(37),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(37),
      O => \writeAddress[32]_i_4_n_0\
    );
\writeAddress[32]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(36),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(36),
      O => \writeAddress[32]_i_5_n_0\
    );
\writeAddress[32]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(35),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(35),
      O => \writeAddress[32]_i_6_n_0\
    );
\writeAddress[32]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(34),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(34),
      O => \writeAddress[32]_i_7_n_0\
    );
\writeAddress[32]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(33),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(33),
      O => \writeAddress[32]_i_8_n_0\
    );
\writeAddress[32]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(32),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(32),
      O => \writeAddress[32]_i_9_n_0\
    );
\writeAddress[40]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(47),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(47),
      O => \writeAddress[40]_i_2_n_0\
    );
\writeAddress[40]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(46),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(46),
      O => \writeAddress[40]_i_3_n_0\
    );
\writeAddress[40]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(45),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(45),
      O => \writeAddress[40]_i_4_n_0\
    );
\writeAddress[40]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(44),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(44),
      O => \writeAddress[40]_i_5_n_0\
    );
\writeAddress[40]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(43),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(43),
      O => \writeAddress[40]_i_6_n_0\
    );
\writeAddress[40]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(42),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(42),
      O => \writeAddress[40]_i_7_n_0\
    );
\writeAddress[40]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(41),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(41),
      O => \writeAddress[40]_i_8_n_0\
    );
\writeAddress[40]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(40),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(40),
      O => \writeAddress[40]_i_9_n_0\
    );
\writeAddress[48]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(55),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(55),
      O => \writeAddress[48]_i_2_n_0\
    );
\writeAddress[48]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(54),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(54),
      O => \writeAddress[48]_i_3_n_0\
    );
\writeAddress[48]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(53),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(53),
      O => \writeAddress[48]_i_4_n_0\
    );
\writeAddress[48]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(52),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(52),
      O => \writeAddress[48]_i_5_n_0\
    );
\writeAddress[48]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(51),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(51),
      O => \writeAddress[48]_i_6_n_0\
    );
\writeAddress[48]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(50),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(50),
      O => \writeAddress[48]_i_7_n_0\
    );
\writeAddress[48]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(49),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(49),
      O => \writeAddress[48]_i_8_n_0\
    );
\writeAddress[48]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(48),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(48),
      O => \writeAddress[48]_i_9_n_0\
    );
\writeAddress[56]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(63),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(63),
      O => \writeAddress[56]_i_2_n_0\
    );
\writeAddress[56]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(62),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(62),
      O => \writeAddress[56]_i_3_n_0\
    );
\writeAddress[56]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(61),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(61),
      O => \writeAddress[56]_i_4_n_0\
    );
\writeAddress[56]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(60),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(60),
      O => \writeAddress[56]_i_5_n_0\
    );
\writeAddress[56]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(59),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(59),
      O => \writeAddress[56]_i_6_n_0\
    );
\writeAddress[56]_i_7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(58),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(58),
      O => \writeAddress[56]_i_7_n_0\
    );
\writeAddress[56]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(57),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(57),
      O => \writeAddress[56]_i_8_n_0\
    );
\writeAddress[56]_i_9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => write_start_DDR_address(56),
      I1 => \write_count_reg[31]_i_2_n_0\,
      I2 => \^writeaddress\(56),
      O => \writeAddress[56]_i_9_n_0\
    );
\writeAddress[8]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(15),
      I1 => \^writeaddress\(15),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(15),
      O => \writeAddress[8]_i_10_n_0\
    );
\writeAddress[8]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(14),
      I1 => \^writeaddress\(14),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(14),
      O => \writeAddress[8]_i_11_n_0\
    );
\writeAddress[8]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(13),
      I1 => \^writeaddress\(13),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(13),
      O => \writeAddress[8]_i_12_n_0\
    );
\writeAddress[8]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(12),
      I1 => \^writeaddress\(12),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(12),
      O => \writeAddress[8]_i_13_n_0\
    );
\writeAddress[8]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(11),
      I1 => \^writeaddress\(11),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(11),
      O => \writeAddress[8]_i_14_n_0\
    );
\writeAddress[8]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(10),
      I1 => \^writeaddress\(10),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(10),
      O => \writeAddress[8]_i_15_n_0\
    );
\writeAddress[8]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(9),
      I1 => \^writeaddress\(9),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(9),
      O => \writeAddress[8]_i_16_n_0\
    );
\writeAddress[8]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F606"
    )
        port map (
      I0 => write_step_DDR_address(8),
      I1 => \^writeaddress\(8),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => write_start_DDR_address(8),
      O => \writeAddress[8]_i_17_n_0\
    );
\writeAddress[8]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(15),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_2_n_0\
    );
\writeAddress[8]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(14),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_3_n_0\
    );
\writeAddress[8]_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(13),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_4_n_0\
    );
\writeAddress[8]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(12),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_5_n_0\
    );
\writeAddress[8]_i_6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(11),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_6_n_0\
    );
\writeAddress[8]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(10),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_7_n_0\
    );
\writeAddress[8]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(9),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_8_n_0\
    );
\writeAddress[8]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => write_step_DDR_address(8),
      I1 => \write_count_reg[31]_i_2_n_0\,
      O => \writeAddress[8]_i_9_n_0\
    );
\writeAddress_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_15\,
      Q => \^writeaddress\(0),
      R => '0'
    );
\writeAddress_reg[0]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => \writeAddress_reg[0]_i_2_n_0\,
      CO(6) => \writeAddress_reg[0]_i_2_n_1\,
      CO(5) => \writeAddress_reg[0]_i_2_n_2\,
      CO(4) => \writeAddress_reg[0]_i_2_n_3\,
      CO(3) => \NLW_writeAddress_reg[0]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[0]_i_2_n_5\,
      CO(1) => \writeAddress_reg[0]_i_2_n_6\,
      CO(0) => \writeAddress_reg[0]_i_2_n_7\,
      DI(7) => \writeAddress[0]_i_3_n_0\,
      DI(6) => \writeAddress[0]_i_4_n_0\,
      DI(5) => \writeAddress[0]_i_5_n_0\,
      DI(4) => \writeAddress[0]_i_6_n_0\,
      DI(3) => \writeAddress[0]_i_7_n_0\,
      DI(2) => \writeAddress[0]_i_8_n_0\,
      DI(1) => \writeAddress[0]_i_9_n_0\,
      DI(0) => \writeAddress[0]_i_10_n_0\,
      O(7) => \writeAddress_reg[0]_i_2_n_8\,
      O(6) => \writeAddress_reg[0]_i_2_n_9\,
      O(5) => \writeAddress_reg[0]_i_2_n_10\,
      O(4) => \writeAddress_reg[0]_i_2_n_11\,
      O(3) => \writeAddress_reg[0]_i_2_n_12\,
      O(2) => \writeAddress_reg[0]_i_2_n_13\,
      O(1) => \writeAddress_reg[0]_i_2_n_14\,
      O(0) => \writeAddress_reg[0]_i_2_n_15\,
      S(7) => \writeAddress[0]_i_11_n_0\,
      S(6) => \writeAddress[0]_i_12_n_0\,
      S(5) => \writeAddress[0]_i_13_n_0\,
      S(4) => \writeAddress[0]_i_14_n_0\,
      S(3) => \writeAddress[0]_i_15_n_0\,
      S(2) => \writeAddress[0]_i_16_n_0\,
      S(1) => \writeAddress[0]_i_17_n_0\,
      S(0) => \writeAddress[0]_i_18_n_0\
    );
\writeAddress_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_13\,
      Q => \^writeaddress\(10),
      R => '0'
    );
\writeAddress_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_12\,
      Q => \^writeaddress\(11),
      R => '0'
    );
\writeAddress_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_11\,
      Q => \^writeaddress\(12),
      R => '0'
    );
\writeAddress_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_10\,
      Q => \^writeaddress\(13),
      R => '0'
    );
\writeAddress_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_9\,
      Q => \^writeaddress\(14),
      R => '0'
    );
\writeAddress_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_8\,
      Q => \^writeaddress\(15),
      R => '0'
    );
\writeAddress_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_15\,
      Q => \^writeaddress\(16),
      R => '0'
    );
\writeAddress_reg[16]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \writeAddress_reg[8]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \writeAddress_reg[16]_i_1_n_0\,
      CO(6) => \writeAddress_reg[16]_i_1_n_1\,
      CO(5) => \writeAddress_reg[16]_i_1_n_2\,
      CO(4) => \writeAddress_reg[16]_i_1_n_3\,
      CO(3) => \NLW_writeAddress_reg[16]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[16]_i_1_n_5\,
      CO(1) => \writeAddress_reg[16]_i_1_n_6\,
      CO(0) => \writeAddress_reg[16]_i_1_n_7\,
      DI(7) => \writeAddress[16]_i_2_n_0\,
      DI(6) => \writeAddress[16]_i_3_n_0\,
      DI(5) => \writeAddress[16]_i_4_n_0\,
      DI(4) => \writeAddress[16]_i_5_n_0\,
      DI(3) => \writeAddress[16]_i_6_n_0\,
      DI(2) => \writeAddress[16]_i_7_n_0\,
      DI(1) => \writeAddress[16]_i_8_n_0\,
      DI(0) => \writeAddress[16]_i_9_n_0\,
      O(7) => \writeAddress_reg[16]_i_1_n_8\,
      O(6) => \writeAddress_reg[16]_i_1_n_9\,
      O(5) => \writeAddress_reg[16]_i_1_n_10\,
      O(4) => \writeAddress_reg[16]_i_1_n_11\,
      O(3) => \writeAddress_reg[16]_i_1_n_12\,
      O(2) => \writeAddress_reg[16]_i_1_n_13\,
      O(1) => \writeAddress_reg[16]_i_1_n_14\,
      O(0) => \writeAddress_reg[16]_i_1_n_15\,
      S(7) => \writeAddress[16]_i_10_n_0\,
      S(6) => \writeAddress[16]_i_11_n_0\,
      S(5) => \writeAddress[16]_i_12_n_0\,
      S(4) => \writeAddress[16]_i_13_n_0\,
      S(3) => \writeAddress[16]_i_14_n_0\,
      S(2) => \writeAddress[16]_i_15_n_0\,
      S(1) => \writeAddress[16]_i_16_n_0\,
      S(0) => \writeAddress[16]_i_17_n_0\
    );
\writeAddress_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_14\,
      Q => \^writeaddress\(17),
      R => '0'
    );
\writeAddress_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_13\,
      Q => \^writeaddress\(18),
      R => '0'
    );
\writeAddress_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_12\,
      Q => \^writeaddress\(19),
      R => '0'
    );
\writeAddress_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_14\,
      Q => \^writeaddress\(1),
      R => '0'
    );
\writeAddress_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_11\,
      Q => \^writeaddress\(20),
      R => '0'
    );
\writeAddress_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_10\,
      Q => \^writeaddress\(21),
      R => '0'
    );
\writeAddress_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_9\,
      Q => \^writeaddress\(22),
      R => '0'
    );
\writeAddress_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[16]_i_1_n_8\,
      Q => \^writeaddress\(23),
      R => '0'
    );
\writeAddress_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_15\,
      Q => \^writeaddress\(24),
      R => '0'
    );
\writeAddress_reg[24]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \writeAddress_reg[16]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \writeAddress_reg[24]_i_1_n_0\,
      CO(6) => \writeAddress_reg[24]_i_1_n_1\,
      CO(5) => \writeAddress_reg[24]_i_1_n_2\,
      CO(4) => \writeAddress_reg[24]_i_1_n_3\,
      CO(3) => \NLW_writeAddress_reg[24]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[24]_i_1_n_5\,
      CO(1) => \writeAddress_reg[24]_i_1_n_6\,
      CO(0) => \writeAddress_reg[24]_i_1_n_7\,
      DI(7) => \writeAddress[24]_i_2_n_0\,
      DI(6) => \writeAddress[24]_i_3_n_0\,
      DI(5) => \writeAddress[24]_i_4_n_0\,
      DI(4) => \writeAddress[24]_i_5_n_0\,
      DI(3) => \writeAddress[24]_i_6_n_0\,
      DI(2) => \writeAddress[24]_i_7_n_0\,
      DI(1) => \writeAddress[24]_i_8_n_0\,
      DI(0) => \writeAddress[24]_i_9_n_0\,
      O(7) => \writeAddress_reg[24]_i_1_n_8\,
      O(6) => \writeAddress_reg[24]_i_1_n_9\,
      O(5) => \writeAddress_reg[24]_i_1_n_10\,
      O(4) => \writeAddress_reg[24]_i_1_n_11\,
      O(3) => \writeAddress_reg[24]_i_1_n_12\,
      O(2) => \writeAddress_reg[24]_i_1_n_13\,
      O(1) => \writeAddress_reg[24]_i_1_n_14\,
      O(0) => \writeAddress_reg[24]_i_1_n_15\,
      S(7) => \writeAddress[24]_i_10_n_0\,
      S(6) => \writeAddress[24]_i_11_n_0\,
      S(5) => \writeAddress[24]_i_12_n_0\,
      S(4) => \writeAddress[24]_i_13_n_0\,
      S(3) => \writeAddress[24]_i_14_n_0\,
      S(2) => \writeAddress[24]_i_15_n_0\,
      S(1) => \writeAddress[24]_i_16_n_0\,
      S(0) => \writeAddress[24]_i_17_n_0\
    );
\writeAddress_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_14\,
      Q => \^writeaddress\(25),
      R => '0'
    );
\writeAddress_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_13\,
      Q => \^writeaddress\(26),
      R => '0'
    );
\writeAddress_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_12\,
      Q => \^writeaddress\(27),
      R => '0'
    );
\writeAddress_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_11\,
      Q => \^writeaddress\(28),
      R => '0'
    );
\writeAddress_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_10\,
      Q => \^writeaddress\(29),
      R => '0'
    );
\writeAddress_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_13\,
      Q => \^writeaddress\(2),
      R => '0'
    );
\writeAddress_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_9\,
      Q => \^writeaddress\(30),
      R => '0'
    );
\writeAddress_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[24]_i_1_n_8\,
      Q => \^writeaddress\(31),
      R => '0'
    );
\writeAddress_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_15\,
      Q => \^writeaddress\(32),
      R => '0'
    );
\writeAddress_reg[32]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \writeAddress_reg[24]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \writeAddress_reg[32]_i_1_n_0\,
      CO(6) => \writeAddress_reg[32]_i_1_n_1\,
      CO(5) => \writeAddress_reg[32]_i_1_n_2\,
      CO(4) => \writeAddress_reg[32]_i_1_n_3\,
      CO(3) => \NLW_writeAddress_reg[32]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[32]_i_1_n_5\,
      CO(1) => \writeAddress_reg[32]_i_1_n_6\,
      CO(0) => \writeAddress_reg[32]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \writeAddress_reg[32]_i_1_n_8\,
      O(6) => \writeAddress_reg[32]_i_1_n_9\,
      O(5) => \writeAddress_reg[32]_i_1_n_10\,
      O(4) => \writeAddress_reg[32]_i_1_n_11\,
      O(3) => \writeAddress_reg[32]_i_1_n_12\,
      O(2) => \writeAddress_reg[32]_i_1_n_13\,
      O(1) => \writeAddress_reg[32]_i_1_n_14\,
      O(0) => \writeAddress_reg[32]_i_1_n_15\,
      S(7) => \writeAddress[32]_i_2_n_0\,
      S(6) => \writeAddress[32]_i_3_n_0\,
      S(5) => \writeAddress[32]_i_4_n_0\,
      S(4) => \writeAddress[32]_i_5_n_0\,
      S(3) => \writeAddress[32]_i_6_n_0\,
      S(2) => \writeAddress[32]_i_7_n_0\,
      S(1) => \writeAddress[32]_i_8_n_0\,
      S(0) => \writeAddress[32]_i_9_n_0\
    );
\writeAddress_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_14\,
      Q => \^writeaddress\(33),
      R => '0'
    );
\writeAddress_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_13\,
      Q => \^writeaddress\(34),
      R => '0'
    );
\writeAddress_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_12\,
      Q => \^writeaddress\(35),
      R => '0'
    );
\writeAddress_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_11\,
      Q => \^writeaddress\(36),
      R => '0'
    );
\writeAddress_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_10\,
      Q => \^writeaddress\(37),
      R => '0'
    );
\writeAddress_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_9\,
      Q => \^writeaddress\(38),
      R => '0'
    );
\writeAddress_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[32]_i_1_n_8\,
      Q => \^writeaddress\(39),
      R => '0'
    );
\writeAddress_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_12\,
      Q => \^writeaddress\(3),
      R => '0'
    );
\writeAddress_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_15\,
      Q => \^writeaddress\(40),
      R => '0'
    );
\writeAddress_reg[40]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \writeAddress_reg[32]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \writeAddress_reg[40]_i_1_n_0\,
      CO(6) => \writeAddress_reg[40]_i_1_n_1\,
      CO(5) => \writeAddress_reg[40]_i_1_n_2\,
      CO(4) => \writeAddress_reg[40]_i_1_n_3\,
      CO(3) => \NLW_writeAddress_reg[40]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[40]_i_1_n_5\,
      CO(1) => \writeAddress_reg[40]_i_1_n_6\,
      CO(0) => \writeAddress_reg[40]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \writeAddress_reg[40]_i_1_n_8\,
      O(6) => \writeAddress_reg[40]_i_1_n_9\,
      O(5) => \writeAddress_reg[40]_i_1_n_10\,
      O(4) => \writeAddress_reg[40]_i_1_n_11\,
      O(3) => \writeAddress_reg[40]_i_1_n_12\,
      O(2) => \writeAddress_reg[40]_i_1_n_13\,
      O(1) => \writeAddress_reg[40]_i_1_n_14\,
      O(0) => \writeAddress_reg[40]_i_1_n_15\,
      S(7) => \writeAddress[40]_i_2_n_0\,
      S(6) => \writeAddress[40]_i_3_n_0\,
      S(5) => \writeAddress[40]_i_4_n_0\,
      S(4) => \writeAddress[40]_i_5_n_0\,
      S(3) => \writeAddress[40]_i_6_n_0\,
      S(2) => \writeAddress[40]_i_7_n_0\,
      S(1) => \writeAddress[40]_i_8_n_0\,
      S(0) => \writeAddress[40]_i_9_n_0\
    );
\writeAddress_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_14\,
      Q => \^writeaddress\(41),
      R => '0'
    );
\writeAddress_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_13\,
      Q => \^writeaddress\(42),
      R => '0'
    );
\writeAddress_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_12\,
      Q => \^writeaddress\(43),
      R => '0'
    );
\writeAddress_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_11\,
      Q => \^writeaddress\(44),
      R => '0'
    );
\writeAddress_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_10\,
      Q => \^writeaddress\(45),
      R => '0'
    );
\writeAddress_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_9\,
      Q => \^writeaddress\(46),
      R => '0'
    );
\writeAddress_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[40]_i_1_n_8\,
      Q => \^writeaddress\(47),
      R => '0'
    );
\writeAddress_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_15\,
      Q => \^writeaddress\(48),
      R => '0'
    );
\writeAddress_reg[48]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \writeAddress_reg[40]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \writeAddress_reg[48]_i_1_n_0\,
      CO(6) => \writeAddress_reg[48]_i_1_n_1\,
      CO(5) => \writeAddress_reg[48]_i_1_n_2\,
      CO(4) => \writeAddress_reg[48]_i_1_n_3\,
      CO(3) => \NLW_writeAddress_reg[48]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[48]_i_1_n_5\,
      CO(1) => \writeAddress_reg[48]_i_1_n_6\,
      CO(0) => \writeAddress_reg[48]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \writeAddress_reg[48]_i_1_n_8\,
      O(6) => \writeAddress_reg[48]_i_1_n_9\,
      O(5) => \writeAddress_reg[48]_i_1_n_10\,
      O(4) => \writeAddress_reg[48]_i_1_n_11\,
      O(3) => \writeAddress_reg[48]_i_1_n_12\,
      O(2) => \writeAddress_reg[48]_i_1_n_13\,
      O(1) => \writeAddress_reg[48]_i_1_n_14\,
      O(0) => \writeAddress_reg[48]_i_1_n_15\,
      S(7) => \writeAddress[48]_i_2_n_0\,
      S(6) => \writeAddress[48]_i_3_n_0\,
      S(5) => \writeAddress[48]_i_4_n_0\,
      S(4) => \writeAddress[48]_i_5_n_0\,
      S(3) => \writeAddress[48]_i_6_n_0\,
      S(2) => \writeAddress[48]_i_7_n_0\,
      S(1) => \writeAddress[48]_i_8_n_0\,
      S(0) => \writeAddress[48]_i_9_n_0\
    );
\writeAddress_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_14\,
      Q => \^writeaddress\(49),
      R => '0'
    );
\writeAddress_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_11\,
      Q => \^writeaddress\(4),
      R => '0'
    );
\writeAddress_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_13\,
      Q => \^writeaddress\(50),
      R => '0'
    );
\writeAddress_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_12\,
      Q => \^writeaddress\(51),
      R => '0'
    );
\writeAddress_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_11\,
      Q => \^writeaddress\(52),
      R => '0'
    );
\writeAddress_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_10\,
      Q => \^writeaddress\(53),
      R => '0'
    );
\writeAddress_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_9\,
      Q => \^writeaddress\(54),
      R => '0'
    );
\writeAddress_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[48]_i_1_n_8\,
      Q => \^writeaddress\(55),
      R => '0'
    );
\writeAddress_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_15\,
      Q => \^writeaddress\(56),
      R => '0'
    );
\writeAddress_reg[56]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \writeAddress_reg[48]_i_1_n_0\,
      CI_TOP => '0',
      CO(7) => \NLW_writeAddress_reg[56]_i_1_CO_UNCONNECTED\(7),
      CO(6) => \writeAddress_reg[56]_i_1_n_1\,
      CO(5) => \writeAddress_reg[56]_i_1_n_2\,
      CO(4) => \writeAddress_reg[56]_i_1_n_3\,
      CO(3) => \NLW_writeAddress_reg[56]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[56]_i_1_n_5\,
      CO(1) => \writeAddress_reg[56]_i_1_n_6\,
      CO(0) => \writeAddress_reg[56]_i_1_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \writeAddress_reg[56]_i_1_n_8\,
      O(6) => \writeAddress_reg[56]_i_1_n_9\,
      O(5) => \writeAddress_reg[56]_i_1_n_10\,
      O(4) => \writeAddress_reg[56]_i_1_n_11\,
      O(3) => \writeAddress_reg[56]_i_1_n_12\,
      O(2) => \writeAddress_reg[56]_i_1_n_13\,
      O(1) => \writeAddress_reg[56]_i_1_n_14\,
      O(0) => \writeAddress_reg[56]_i_1_n_15\,
      S(7) => \writeAddress[56]_i_2_n_0\,
      S(6) => \writeAddress[56]_i_3_n_0\,
      S(5) => \writeAddress[56]_i_4_n_0\,
      S(4) => \writeAddress[56]_i_5_n_0\,
      S(3) => \writeAddress[56]_i_6_n_0\,
      S(2) => \writeAddress[56]_i_7_n_0\,
      S(1) => \writeAddress[56]_i_8_n_0\,
      S(0) => \writeAddress[56]_i_9_n_0\
    );
\writeAddress_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_14\,
      Q => \^writeaddress\(57),
      R => '0'
    );
\writeAddress_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_13\,
      Q => \^writeaddress\(58),
      R => '0'
    );
\writeAddress_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_12\,
      Q => \^writeaddress\(59),
      R => '0'
    );
\writeAddress_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_10\,
      Q => \^writeaddress\(5),
      R => '0'
    );
\writeAddress_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_11\,
      Q => \^writeaddress\(60),
      R => '0'
    );
\writeAddress_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_10\,
      Q => \^writeaddress\(61),
      R => '0'
    );
\writeAddress_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_9\,
      Q => \^writeaddress\(62),
      R => '0'
    );
\writeAddress_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[56]_i_1_n_8\,
      Q => \^writeaddress\(63),
      R => '0'
    );
\writeAddress_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_9\,
      Q => \^writeaddress\(6),
      R => '0'
    );
\writeAddress_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[0]_i_2_n_8\,
      Q => \^writeaddress\(7),
      R => '0'
    );
\writeAddress_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_15\,
      Q => \^writeaddress\(8),
      R => '0'
    );
\writeAddress_reg[8]_i_1\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \writeAddress_reg[0]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \writeAddress_reg[8]_i_1_n_0\,
      CO(6) => \writeAddress_reg[8]_i_1_n_1\,
      CO(5) => \writeAddress_reg[8]_i_1_n_2\,
      CO(4) => \writeAddress_reg[8]_i_1_n_3\,
      CO(3) => \NLW_writeAddress_reg[8]_i_1_CO_UNCONNECTED\(3),
      CO(2) => \writeAddress_reg[8]_i_1_n_5\,
      CO(1) => \writeAddress_reg[8]_i_1_n_6\,
      CO(0) => \writeAddress_reg[8]_i_1_n_7\,
      DI(7) => \writeAddress[8]_i_2_n_0\,
      DI(6) => \writeAddress[8]_i_3_n_0\,
      DI(5) => \writeAddress[8]_i_4_n_0\,
      DI(4) => \writeAddress[8]_i_5_n_0\,
      DI(3) => \writeAddress[8]_i_6_n_0\,
      DI(2) => \writeAddress[8]_i_7_n_0\,
      DI(1) => \writeAddress[8]_i_8_n_0\,
      DI(0) => \writeAddress[8]_i_9_n_0\,
      O(7) => \writeAddress_reg[8]_i_1_n_8\,
      O(6) => \writeAddress_reg[8]_i_1_n_9\,
      O(5) => \writeAddress_reg[8]_i_1_n_10\,
      O(4) => \writeAddress_reg[8]_i_1_n_11\,
      O(3) => \writeAddress_reg[8]_i_1_n_12\,
      O(2) => \writeAddress_reg[8]_i_1_n_13\,
      O(1) => \writeAddress_reg[8]_i_1_n_14\,
      O(0) => \writeAddress_reg[8]_i_1_n_15\,
      S(7) => \writeAddress[8]_i_10_n_0\,
      S(6) => \writeAddress[8]_i_11_n_0\,
      S(5) => \writeAddress[8]_i_12_n_0\,
      S(4) => \writeAddress[8]_i_13_n_0\,
      S(3) => \writeAddress[8]_i_14_n_0\,
      S(2) => \writeAddress[8]_i_15_n_0\,
      S(1) => \writeAddress[8]_i_16_n_0\,
      S(0) => \writeAddress[8]_i_17_n_0\
    );
\writeAddress_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrToBeSent_reg[38]_0\,
      D => \writeAddress_reg[8]_i_1_n_14\,
      Q => \^writeaddress\(9),
      R => '0'
    );
\writeAsize[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => write_burst_size(0),
      O => writeAsize0(0)
    );
\writeAsize[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => write_burst_size(0),
      I1 => write_burst_size(1),
      O => \writeAsize[1]_i_1_n_0\
    );
\writeAsize[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E1"
    )
        port map (
      I0 => write_burst_size(1),
      I1 => write_burst_size(0),
      I2 => write_burst_size(2),
      O => \writeAsize[2]_i_1_n_0\
    );
\writeAsize[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FE01"
    )
        port map (
      I0 => write_burst_size(2),
      I1 => write_burst_size(0),
      I2 => write_burst_size(1),
      I3 => write_burst_size(3),
      O => \writeAsize[3]_i_1_n_0\
    );
\writeAsize[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFE0001"
    )
        port map (
      I0 => write_burst_size(3),
      I1 => write_burst_size(1),
      I2 => write_burst_size(0),
      I3 => write_burst_size(2),
      I4 => write_burst_size(4),
      O => \writeAsize[4]_i_1_n_0\
    );
\writeAsize[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFE00000001"
    )
        port map (
      I0 => write_burst_size(4),
      I1 => write_burst_size(2),
      I2 => write_burst_size(0),
      I3 => write_burst_size(1),
      I4 => write_burst_size(3),
      I5 => write_burst_size(5),
      O => \writeAsize[5]_i_1_n_0\
    );
\writeAsize[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \writeAsize[7]_i_2_n_0\,
      I1 => write_burst_size(6),
      O => \writeAsize[6]_i_1_n_0\
    );
\writeAsize[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E1"
    )
        port map (
      I0 => write_burst_size(6),
      I1 => \writeAsize[7]_i_2_n_0\,
      I2 => write_burst_size(7),
      O => \writeAsize[7]_i_1_n_0\
    );
\writeAsize[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => write_burst_size(4),
      I1 => write_burst_size(2),
      I2 => write_burst_size(0),
      I3 => write_burst_size(1),
      I4 => write_burst_size(3),
      I5 => write_burst_size(5),
      O => \writeAsize[7]_i_2_n_0\
    );
\writeAsize_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => writeAsize0(0),
      Q => \writeAddress_reg[63]_0\(0),
      R => '0'
    );
\writeAsize_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \writeAsize[1]_i_1_n_0\,
      Q => \writeAddress_reg[63]_0\(1),
      R => '0'
    );
\writeAsize_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \writeAsize[2]_i_1_n_0\,
      Q => \writeAddress_reg[63]_0\(2),
      R => '0'
    );
\writeAsize_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \writeAsize[3]_i_1_n_0\,
      Q => \writeAddress_reg[63]_0\(3),
      R => '0'
    );
\writeAsize_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \writeAsize[4]_i_1_n_0\,
      Q => \writeAddress_reg[63]_0\(4),
      R => '0'
    );
\writeAsize_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \writeAsize[5]_i_1_n_0\,
      Q => \writeAddress_reg[63]_0\(5),
      R => '0'
    );
\writeAsize_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \writeAsize[6]_i_1_n_0\,
      Q => \writeAddress_reg[63]_0\(6),
      R => '0'
    );
\writeAsize_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \writeAsize[7]_i_1_n_0\,
      Q => \writeAddress_reg[63]_0\(7),
      R => '0'
    );
writeAvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \countAddrToBeSent_reg[38]_0\,
      Q => writeAvalid,
      R => '0'
    );
\writeDdata_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(0),
      Q => writeDvalid_reg_0(0),
      R => '0'
    );
\writeDdata_reg[100]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(100),
      Q => writeDvalid_reg_0(100),
      R => '0'
    );
\writeDdata_reg[101]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(101),
      Q => writeDvalid_reg_0(101),
      R => '0'
    );
\writeDdata_reg[102]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(102),
      Q => writeDvalid_reg_0(102),
      R => '0'
    );
\writeDdata_reg[103]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(103),
      Q => writeDvalid_reg_0(103),
      R => '0'
    );
\writeDdata_reg[104]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(104),
      Q => writeDvalid_reg_0(104),
      R => '0'
    );
\writeDdata_reg[105]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(105),
      Q => writeDvalid_reg_0(105),
      R => '0'
    );
\writeDdata_reg[106]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(106),
      Q => writeDvalid_reg_0(106),
      R => '0'
    );
\writeDdata_reg[107]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(107),
      Q => writeDvalid_reg_0(107),
      R => '0'
    );
\writeDdata_reg[108]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(108),
      Q => writeDvalid_reg_0(108),
      R => '0'
    );
\writeDdata_reg[109]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(109),
      Q => writeDvalid_reg_0(109),
      R => '0'
    );
\writeDdata_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(10),
      Q => writeDvalid_reg_0(10),
      R => '0'
    );
\writeDdata_reg[110]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(110),
      Q => writeDvalid_reg_0(110),
      R => '0'
    );
\writeDdata_reg[111]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(111),
      Q => writeDvalid_reg_0(111),
      R => '0'
    );
\writeDdata_reg[112]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(112),
      Q => writeDvalid_reg_0(112),
      R => '0'
    );
\writeDdata_reg[113]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(113),
      Q => writeDvalid_reg_0(113),
      R => '0'
    );
\writeDdata_reg[114]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(114),
      Q => writeDvalid_reg_0(114),
      R => '0'
    );
\writeDdata_reg[115]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(115),
      Q => writeDvalid_reg_0(115),
      R => '0'
    );
\writeDdata_reg[116]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(116),
      Q => writeDvalid_reg_0(116),
      R => '0'
    );
\writeDdata_reg[117]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(117),
      Q => writeDvalid_reg_0(117),
      R => '0'
    );
\writeDdata_reg[118]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(118),
      Q => writeDvalid_reg_0(118),
      R => '0'
    );
\writeDdata_reg[119]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(119),
      Q => writeDvalid_reg_0(119),
      R => '0'
    );
\writeDdata_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(11),
      Q => writeDvalid_reg_0(11),
      R => '0'
    );
\writeDdata_reg[120]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(120),
      Q => writeDvalid_reg_0(120),
      R => '0'
    );
\writeDdata_reg[121]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(121),
      Q => writeDvalid_reg_0(121),
      R => '0'
    );
\writeDdata_reg[122]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(122),
      Q => writeDvalid_reg_0(122),
      R => '0'
    );
\writeDdata_reg[123]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(123),
      Q => writeDvalid_reg_0(123),
      R => '0'
    );
\writeDdata_reg[124]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(124),
      Q => writeDvalid_reg_0(124),
      R => '0'
    );
\writeDdata_reg[125]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(125),
      Q => writeDvalid_reg_0(125),
      R => '0'
    );
\writeDdata_reg[126]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(126),
      Q => writeDvalid_reg_0(126),
      R => '0'
    );
\writeDdata_reg[127]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(127),
      Q => writeDvalid_reg_0(127),
      R => '0'
    );
\writeDdata_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(12),
      Q => writeDvalid_reg_0(12),
      R => '0'
    );
\writeDdata_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(13),
      Q => writeDvalid_reg_0(13),
      R => '0'
    );
\writeDdata_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(14),
      Q => writeDvalid_reg_0(14),
      R => '0'
    );
\writeDdata_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(15),
      Q => writeDvalid_reg_0(15),
      R => '0'
    );
\writeDdata_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(16),
      Q => writeDvalid_reg_0(16),
      R => '0'
    );
\writeDdata_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(17),
      Q => writeDvalid_reg_0(17),
      R => '0'
    );
\writeDdata_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(18),
      Q => writeDvalid_reg_0(18),
      R => '0'
    );
\writeDdata_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(19),
      Q => writeDvalid_reg_0(19),
      R => '0'
    );
\writeDdata_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(1),
      Q => writeDvalid_reg_0(1),
      R => '0'
    );
\writeDdata_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(20),
      Q => writeDvalid_reg_0(20),
      R => '0'
    );
\writeDdata_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(21),
      Q => writeDvalid_reg_0(21),
      R => '0'
    );
\writeDdata_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(22),
      Q => writeDvalid_reg_0(22),
      R => '0'
    );
\writeDdata_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(23),
      Q => writeDvalid_reg_0(23),
      R => '0'
    );
\writeDdata_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(24),
      Q => writeDvalid_reg_0(24),
      R => '0'
    );
\writeDdata_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(25),
      Q => writeDvalid_reg_0(25),
      R => '0'
    );
\writeDdata_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(26),
      Q => writeDvalid_reg_0(26),
      R => '0'
    );
\writeDdata_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(27),
      Q => writeDvalid_reg_0(27),
      R => '0'
    );
\writeDdata_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(28),
      Q => writeDvalid_reg_0(28),
      R => '0'
    );
\writeDdata_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(29),
      Q => writeDvalid_reg_0(29),
      R => '0'
    );
\writeDdata_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(2),
      Q => writeDvalid_reg_0(2),
      R => '0'
    );
\writeDdata_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(30),
      Q => writeDvalid_reg_0(30),
      R => '0'
    );
\writeDdata_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(31),
      Q => writeDvalid_reg_0(31),
      R => '0'
    );
\writeDdata_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(32),
      Q => writeDvalid_reg_0(32),
      R => '0'
    );
\writeDdata_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(33),
      Q => writeDvalid_reg_0(33),
      R => '0'
    );
\writeDdata_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(34),
      Q => writeDvalid_reg_0(34),
      R => '0'
    );
\writeDdata_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(35),
      Q => writeDvalid_reg_0(35),
      R => '0'
    );
\writeDdata_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(36),
      Q => writeDvalid_reg_0(36),
      R => '0'
    );
\writeDdata_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(37),
      Q => writeDvalid_reg_0(37),
      R => '0'
    );
\writeDdata_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(38),
      Q => writeDvalid_reg_0(38),
      R => '0'
    );
\writeDdata_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(39),
      Q => writeDvalid_reg_0(39),
      R => '0'
    );
\writeDdata_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(3),
      Q => writeDvalid_reg_0(3),
      R => '0'
    );
\writeDdata_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(40),
      Q => writeDvalid_reg_0(40),
      R => '0'
    );
\writeDdata_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(41),
      Q => writeDvalid_reg_0(41),
      R => '0'
    );
\writeDdata_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(42),
      Q => writeDvalid_reg_0(42),
      R => '0'
    );
\writeDdata_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(43),
      Q => writeDvalid_reg_0(43),
      R => '0'
    );
\writeDdata_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(44),
      Q => writeDvalid_reg_0(44),
      R => '0'
    );
\writeDdata_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(45),
      Q => writeDvalid_reg_0(45),
      R => '0'
    );
\writeDdata_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(46),
      Q => writeDvalid_reg_0(46),
      R => '0'
    );
\writeDdata_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(47),
      Q => writeDvalid_reg_0(47),
      R => '0'
    );
\writeDdata_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(48),
      Q => writeDvalid_reg_0(48),
      R => '0'
    );
\writeDdata_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(49),
      Q => writeDvalid_reg_0(49),
      R => '0'
    );
\writeDdata_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(4),
      Q => writeDvalid_reg_0(4),
      R => '0'
    );
\writeDdata_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(50),
      Q => writeDvalid_reg_0(50),
      R => '0'
    );
\writeDdata_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(51),
      Q => writeDvalid_reg_0(51),
      R => '0'
    );
\writeDdata_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(52),
      Q => writeDvalid_reg_0(52),
      R => '0'
    );
\writeDdata_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(53),
      Q => writeDvalid_reg_0(53),
      R => '0'
    );
\writeDdata_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(54),
      Q => writeDvalid_reg_0(54),
      R => '0'
    );
\writeDdata_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(55),
      Q => writeDvalid_reg_0(55),
      R => '0'
    );
\writeDdata_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(56),
      Q => writeDvalid_reg_0(56),
      R => '0'
    );
\writeDdata_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(57),
      Q => writeDvalid_reg_0(57),
      R => '0'
    );
\writeDdata_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(58),
      Q => writeDvalid_reg_0(58),
      R => '0'
    );
\writeDdata_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(59),
      Q => writeDvalid_reg_0(59),
      R => '0'
    );
\writeDdata_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(5),
      Q => writeDvalid_reg_0(5),
      R => '0'
    );
\writeDdata_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(60),
      Q => writeDvalid_reg_0(60),
      R => '0'
    );
\writeDdata_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(61),
      Q => writeDvalid_reg_0(61),
      R => '0'
    );
\writeDdata_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(62),
      Q => writeDvalid_reg_0(62),
      R => '0'
    );
\writeDdata_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(63),
      Q => writeDvalid_reg_0(63),
      R => '0'
    );
\writeDdata_reg[64]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(64),
      Q => writeDvalid_reg_0(64),
      R => '0'
    );
\writeDdata_reg[65]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(65),
      Q => writeDvalid_reg_0(65),
      R => '0'
    );
\writeDdata_reg[66]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(66),
      Q => writeDvalid_reg_0(66),
      R => '0'
    );
\writeDdata_reg[67]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(67),
      Q => writeDvalid_reg_0(67),
      R => '0'
    );
\writeDdata_reg[68]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(68),
      Q => writeDvalid_reg_0(68),
      R => '0'
    );
\writeDdata_reg[69]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(69),
      Q => writeDvalid_reg_0(69),
      R => '0'
    );
\writeDdata_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(6),
      Q => writeDvalid_reg_0(6),
      R => '0'
    );
\writeDdata_reg[70]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(70),
      Q => writeDvalid_reg_0(70),
      R => '0'
    );
\writeDdata_reg[71]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(71),
      Q => writeDvalid_reg_0(71),
      R => '0'
    );
\writeDdata_reg[72]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(72),
      Q => writeDvalid_reg_0(72),
      R => '0'
    );
\writeDdata_reg[73]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(73),
      Q => writeDvalid_reg_0(73),
      R => '0'
    );
\writeDdata_reg[74]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(74),
      Q => writeDvalid_reg_0(74),
      R => '0'
    );
\writeDdata_reg[75]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(75),
      Q => writeDvalid_reg_0(75),
      R => '0'
    );
\writeDdata_reg[76]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(76),
      Q => writeDvalid_reg_0(76),
      R => '0'
    );
\writeDdata_reg[77]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(77),
      Q => writeDvalid_reg_0(77),
      R => '0'
    );
\writeDdata_reg[78]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(78),
      Q => writeDvalid_reg_0(78),
      R => '0'
    );
\writeDdata_reg[79]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(79),
      Q => writeDvalid_reg_0(79),
      R => '0'
    );
\writeDdata_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(7),
      Q => writeDvalid_reg_0(7),
      R => '0'
    );
\writeDdata_reg[80]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(80),
      Q => writeDvalid_reg_0(80),
      R => '0'
    );
\writeDdata_reg[81]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(81),
      Q => writeDvalid_reg_0(81),
      R => '0'
    );
\writeDdata_reg[82]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(82),
      Q => writeDvalid_reg_0(82),
      R => '0'
    );
\writeDdata_reg[83]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(83),
      Q => writeDvalid_reg_0(83),
      R => '0'
    );
\writeDdata_reg[84]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(84),
      Q => writeDvalid_reg_0(84),
      R => '0'
    );
\writeDdata_reg[85]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(85),
      Q => writeDvalid_reg_0(85),
      R => '0'
    );
\writeDdata_reg[86]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(86),
      Q => writeDvalid_reg_0(86),
      R => '0'
    );
\writeDdata_reg[87]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(87),
      Q => writeDvalid_reg_0(87),
      R => '0'
    );
\writeDdata_reg[88]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(88),
      Q => writeDvalid_reg_0(88),
      R => '0'
    );
\writeDdata_reg[89]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(89),
      Q => writeDvalid_reg_0(89),
      R => '0'
    );
\writeDdata_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(8),
      Q => writeDvalid_reg_0(8),
      R => '0'
    );
\writeDdata_reg[90]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(90),
      Q => writeDvalid_reg_0(90),
      R => '0'
    );
\writeDdata_reg[91]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(91),
      Q => writeDvalid_reg_0(91),
      R => '0'
    );
\writeDdata_reg[92]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(92),
      Q => writeDvalid_reg_0(92),
      R => '0'
    );
\writeDdata_reg[93]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(93),
      Q => writeDvalid_reg_0(93),
      R => '0'
    );
\writeDdata_reg[94]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(94),
      Q => writeDvalid_reg_0(94),
      R => '0'
    );
\writeDdata_reg[95]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(95),
      Q => writeDvalid_reg_0(95),
      R => '0'
    );
\writeDdata_reg[96]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(96),
      Q => writeDvalid_reg_0(96),
      R => '0'
    );
\writeDdata_reg[97]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(97),
      Q => writeDvalid_reg_0(97),
      R => '0'
    );
\writeDdata_reg[98]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(98),
      Q => writeDvalid_reg_0(98),
      R => '0'
    );
\writeDdata_reg[99]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(99),
      Q => writeDvalid_reg_0(99),
      R => '0'
    );
\writeDdata_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => dataBuffer_S2(9),
      Q => writeDvalid_reg_0(9),
      R => '0'
    );
writeDlast_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => writeDlast_reg_0,
      Q => writeDlast,
      R => '0'
    );
writeDvalid_i_10: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(32),
      I1 => countDataSent_reg(32),
      I2 => countDataToBeSent_reg(33),
      I3 => countDataSent_reg(33),
      O => writeDvalid_i_10_n_0
    );
writeDvalid_i_12: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(30),
      I1 => countDataSent_reg(30),
      I2 => countDataSent_reg(31),
      I3 => countDataToBeSent_reg(31),
      O => writeDvalid_i_12_n_0
    );
writeDvalid_i_13: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(28),
      I1 => countDataSent_reg(28),
      I2 => countDataSent_reg(29),
      I3 => countDataToBeSent_reg(29),
      O => writeDvalid_i_13_n_0
    );
writeDvalid_i_14: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(26),
      I1 => countDataSent_reg(26),
      I2 => countDataSent_reg(27),
      I3 => countDataToBeSent_reg(27),
      O => writeDvalid_i_14_n_0
    );
writeDvalid_i_15: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(24),
      I1 => countDataSent_reg(24),
      I2 => countDataSent_reg(25),
      I3 => countDataToBeSent_reg(25),
      O => writeDvalid_i_15_n_0
    );
writeDvalid_i_16: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(22),
      I1 => countDataSent_reg(22),
      I2 => countDataSent_reg(23),
      I3 => countDataToBeSent_reg(23),
      O => writeDvalid_i_16_n_0
    );
writeDvalid_i_17: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(20),
      I1 => countDataSent_reg(20),
      I2 => countDataSent_reg(21),
      I3 => countDataToBeSent_reg(21),
      O => writeDvalid_i_17_n_0
    );
writeDvalid_i_18: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(18),
      I1 => countDataSent_reg(18),
      I2 => countDataSent_reg(19),
      I3 => countDataToBeSent_reg(19),
      O => writeDvalid_i_18_n_0
    );
writeDvalid_i_19: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(16),
      I1 => countDataSent_reg(16),
      I2 => countDataSent_reg(17),
      I3 => countDataToBeSent_reg(17),
      O => writeDvalid_i_19_n_0
    );
writeDvalid_i_20: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(30),
      I1 => countDataSent_reg(30),
      I2 => countDataToBeSent_reg(31),
      I3 => countDataSent_reg(31),
      O => writeDvalid_i_20_n_0
    );
writeDvalid_i_21: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(28),
      I1 => countDataSent_reg(28),
      I2 => countDataToBeSent_reg(29),
      I3 => countDataSent_reg(29),
      O => writeDvalid_i_21_n_0
    );
writeDvalid_i_22: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(26),
      I1 => countDataSent_reg(26),
      I2 => countDataToBeSent_reg(27),
      I3 => countDataSent_reg(27),
      O => writeDvalid_i_22_n_0
    );
writeDvalid_i_23: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(24),
      I1 => countDataSent_reg(24),
      I2 => countDataToBeSent_reg(25),
      I3 => countDataSent_reg(25),
      O => writeDvalid_i_23_n_0
    );
writeDvalid_i_24: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(22),
      I1 => countDataSent_reg(22),
      I2 => countDataToBeSent_reg(23),
      I3 => countDataSent_reg(23),
      O => writeDvalid_i_24_n_0
    );
writeDvalid_i_25: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(20),
      I1 => countDataSent_reg(20),
      I2 => countDataToBeSent_reg(21),
      I3 => countDataSent_reg(21),
      O => writeDvalid_i_25_n_0
    );
writeDvalid_i_26: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(18),
      I1 => countDataSent_reg(18),
      I2 => countDataToBeSent_reg(19),
      I3 => countDataSent_reg(19),
      O => writeDvalid_i_26_n_0
    );
writeDvalid_i_27: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(16),
      I1 => countDataSent_reg(16),
      I2 => countDataToBeSent_reg(17),
      I3 => countDataSent_reg(17),
      O => writeDvalid_i_27_n_0
    );
writeDvalid_i_28: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(14),
      I1 => countDataSent_reg(14),
      I2 => countDataSent_reg(15),
      I3 => countDataToBeSent_reg(15),
      O => writeDvalid_i_28_n_0
    );
writeDvalid_i_29: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(12),
      I1 => countDataSent_reg(12),
      I2 => countDataSent_reg(13),
      I3 => countDataToBeSent_reg(13),
      O => writeDvalid_i_29_n_0
    );
writeDvalid_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(38),
      I1 => countDataSent_reg(38),
      I2 => countDataSent_reg(39),
      I3 => countDataToBeSent_reg(39),
      O => writeDvalid_i_3_n_0
    );
writeDvalid_i_30: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(10),
      I1 => countDataSent_reg(10),
      I2 => countDataSent_reg(11),
      I3 => countDataToBeSent_reg(11),
      O => writeDvalid_i_30_n_0
    );
writeDvalid_i_31: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(8),
      I1 => countDataSent_reg(8),
      I2 => countDataSent_reg(9),
      I3 => countDataToBeSent_reg(9),
      O => writeDvalid_i_31_n_0
    );
writeDvalid_i_32: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(6),
      I1 => countDataSent_reg(6),
      I2 => countDataSent_reg(7),
      I3 => countDataToBeSent_reg(7),
      O => writeDvalid_i_32_n_0
    );
writeDvalid_i_33: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(4),
      I1 => countDataSent_reg(4),
      I2 => countDataSent_reg(5),
      I3 => countDataToBeSent_reg(5),
      O => writeDvalid_i_33_n_0
    );
writeDvalid_i_34: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(2),
      I1 => countDataSent_reg(2),
      I2 => countDataSent_reg(3),
      I3 => countDataToBeSent_reg(3),
      O => writeDvalid_i_34_n_0
    );
writeDvalid_i_35: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(0),
      I1 => countDataSent_reg(0),
      I2 => countDataSent_reg(1),
      I3 => countDataToBeSent_reg(1),
      O => writeDvalid_i_35_n_0
    );
writeDvalid_i_36: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(14),
      I1 => countDataSent_reg(14),
      I2 => countDataToBeSent_reg(15),
      I3 => countDataSent_reg(15),
      O => writeDvalid_i_36_n_0
    );
writeDvalid_i_37: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(12),
      I1 => countDataSent_reg(12),
      I2 => countDataToBeSent_reg(13),
      I3 => countDataSent_reg(13),
      O => writeDvalid_i_37_n_0
    );
writeDvalid_i_38: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(10),
      I1 => countDataSent_reg(10),
      I2 => countDataToBeSent_reg(11),
      I3 => countDataSent_reg(11),
      O => writeDvalid_i_38_n_0
    );
writeDvalid_i_39: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(8),
      I1 => countDataSent_reg(8),
      I2 => countDataToBeSent_reg(9),
      I3 => countDataSent_reg(9),
      O => writeDvalid_i_39_n_0
    );
writeDvalid_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(36),
      I1 => countDataSent_reg(36),
      I2 => countDataSent_reg(37),
      I3 => countDataToBeSent_reg(37),
      O => writeDvalid_i_4_n_0
    );
writeDvalid_i_40: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(6),
      I1 => countDataSent_reg(6),
      I2 => countDataToBeSent_reg(7),
      I3 => countDataSent_reg(7),
      O => writeDvalid_i_40_n_0
    );
writeDvalid_i_41: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(4),
      I1 => countDataSent_reg(4),
      I2 => countDataToBeSent_reg(5),
      I3 => countDataSent_reg(5),
      O => writeDvalid_i_41_n_0
    );
writeDvalid_i_42: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(2),
      I1 => countDataSent_reg(2),
      I2 => countDataToBeSent_reg(3),
      I3 => countDataSent_reg(3),
      O => writeDvalid_i_42_n_0
    );
writeDvalid_i_43: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(0),
      I1 => countDataSent_reg(0),
      I2 => countDataToBeSent_reg(1),
      I3 => countDataSent_reg(1),
      O => writeDvalid_i_43_n_0
    );
writeDvalid_i_5: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(34),
      I1 => countDataSent_reg(34),
      I2 => countDataSent_reg(35),
      I3 => countDataToBeSent_reg(35),
      O => writeDvalid_i_5_n_0
    );
writeDvalid_i_6: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => countDataToBeSent_reg(32),
      I1 => countDataSent_reg(32),
      I2 => countDataSent_reg(33),
      I3 => countDataToBeSent_reg(33),
      O => writeDvalid_i_6_n_0
    );
writeDvalid_i_7: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(38),
      I1 => countDataSent_reg(38),
      I2 => countDataToBeSent_reg(39),
      I3 => countDataSent_reg(39),
      O => writeDvalid_i_7_n_0
    );
writeDvalid_i_8: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(36),
      I1 => countDataSent_reg(36),
      I2 => countDataToBeSent_reg(37),
      I3 => countDataSent_reg(37),
      O => writeDvalid_i_8_n_0
    );
writeDvalid_i_9: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => countDataToBeSent_reg(34),
      I1 => countDataSent_reg(34),
      I2 => countDataToBeSent_reg(35),
      I3 => countDataSent_reg(35),
      O => writeDvalid_i_9_n_0
    );
writeDvalid_reg: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \^writedvalid0\,
      Q => writeDvalid,
      R => writeDbusy
    );
writeDvalid_reg_i_1: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => writeDvalid_reg_i_2_n_0,
      CI_TOP => '0',
      CO(7 downto 4) => NLW_writeDvalid_reg_i_1_CO_UNCONNECTED(7 downto 4),
      CO(3) => \^writedvalid0\,
      CO(2) => writeDvalid_reg_i_1_n_5,
      CO(1) => writeDvalid_reg_i_1_n_6,
      CO(0) => writeDvalid_reg_i_1_n_7,
      DI(7 downto 4) => B"0000",
      DI(3) => writeDvalid_i_3_n_0,
      DI(2) => writeDvalid_i_4_n_0,
      DI(1) => writeDvalid_i_5_n_0,
      DI(0) => writeDvalid_i_6_n_0,
      O(7 downto 0) => NLW_writeDvalid_reg_i_1_O_UNCONNECTED(7 downto 0),
      S(7 downto 4) => B"0000",
      S(3) => writeDvalid_i_7_n_0,
      S(2) => writeDvalid_i_8_n_0,
      S(1) => writeDvalid_i_9_n_0,
      S(0) => writeDvalid_i_10_n_0
    );
writeDvalid_reg_i_11: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '0',
      CI_TOP => '0',
      CO(7) => writeDvalid_reg_i_11_n_0,
      CO(6) => writeDvalid_reg_i_11_n_1,
      CO(5) => writeDvalid_reg_i_11_n_2,
      CO(4) => writeDvalid_reg_i_11_n_3,
      CO(3) => NLW_writeDvalid_reg_i_11_CO_UNCONNECTED(3),
      CO(2) => writeDvalid_reg_i_11_n_5,
      CO(1) => writeDvalid_reg_i_11_n_6,
      CO(0) => writeDvalid_reg_i_11_n_7,
      DI(7) => writeDvalid_i_28_n_0,
      DI(6) => writeDvalid_i_29_n_0,
      DI(5) => writeDvalid_i_30_n_0,
      DI(4) => writeDvalid_i_31_n_0,
      DI(3) => writeDvalid_i_32_n_0,
      DI(2) => writeDvalid_i_33_n_0,
      DI(1) => writeDvalid_i_34_n_0,
      DI(0) => writeDvalid_i_35_n_0,
      O(7 downto 0) => NLW_writeDvalid_reg_i_11_O_UNCONNECTED(7 downto 0),
      S(7) => writeDvalid_i_36_n_0,
      S(6) => writeDvalid_i_37_n_0,
      S(5) => writeDvalid_i_38_n_0,
      S(4) => writeDvalid_i_39_n_0,
      S(3) => writeDvalid_i_40_n_0,
      S(2) => writeDvalid_i_41_n_0,
      S(1) => writeDvalid_i_42_n_0,
      S(0) => writeDvalid_i_43_n_0
    );
writeDvalid_reg_i_2: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => writeDvalid_reg_i_11_n_0,
      CI_TOP => '0',
      CO(7) => writeDvalid_reg_i_2_n_0,
      CO(6) => writeDvalid_reg_i_2_n_1,
      CO(5) => writeDvalid_reg_i_2_n_2,
      CO(4) => writeDvalid_reg_i_2_n_3,
      CO(3) => NLW_writeDvalid_reg_i_2_CO_UNCONNECTED(3),
      CO(2) => writeDvalid_reg_i_2_n_5,
      CO(1) => writeDvalid_reg_i_2_n_6,
      CO(0) => writeDvalid_reg_i_2_n_7,
      DI(7) => writeDvalid_i_12_n_0,
      DI(6) => writeDvalid_i_13_n_0,
      DI(5) => writeDvalid_i_14_n_0,
      DI(4) => writeDvalid_i_15_n_0,
      DI(3) => writeDvalid_i_16_n_0,
      DI(2) => writeDvalid_i_17_n_0,
      DI(1) => writeDvalid_i_18_n_0,
      DI(0) => writeDvalid_i_19_n_0,
      O(7 downto 0) => NLW_writeDvalid_reg_i_2_O_UNCONNECTED(7 downto 0),
      S(7) => writeDvalid_i_20_n_0,
      S(6) => writeDvalid_i_21_n_0,
      S(5) => writeDvalid_i_22_n_0,
      S(4) => writeDvalid_i_23_n_0,
      S(3) => writeDvalid_i_24_n_0,
      S(2) => writeDvalid_i_25_n_0,
      S(1) => writeDvalid_i_26_n_0,
      S(0) => writeDvalid_i_27_n_0
    );
\write_blocking_ratio_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(0),
      Q => write_blocking_ratio(0),
      R => '0'
    );
\write_blocking_ratio_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(10),
      Q => write_blocking_ratio(10),
      R => '0'
    );
\write_blocking_ratio_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(11),
      Q => write_blocking_ratio(11),
      R => '0'
    );
\write_blocking_ratio_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(12),
      Q => write_blocking_ratio(12),
      R => '0'
    );
\write_blocking_ratio_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(13),
      Q => write_blocking_ratio(13),
      R => '0'
    );
\write_blocking_ratio_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(14),
      Q => write_blocking_ratio(14),
      R => '0'
    );
\write_blocking_ratio_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(15),
      Q => write_blocking_ratio(15),
      R => '0'
    );
\write_blocking_ratio_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(16),
      Q => write_blocking_ratio(16),
      R => '0'
    );
\write_blocking_ratio_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(17),
      Q => write_blocking_ratio(17),
      R => '0'
    );
\write_blocking_ratio_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(18),
      Q => write_blocking_ratio(18),
      R => '0'
    );
\write_blocking_ratio_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(19),
      Q => write_blocking_ratio(19),
      R => '0'
    );
\write_blocking_ratio_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(1),
      Q => write_blocking_ratio(1),
      R => '0'
    );
\write_blocking_ratio_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(20),
      Q => write_blocking_ratio(20),
      R => '0'
    );
\write_blocking_ratio_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(21),
      Q => write_blocking_ratio(21),
      R => '0'
    );
\write_blocking_ratio_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(22),
      Q => write_blocking_ratio(22),
      R => '0'
    );
\write_blocking_ratio_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(23),
      Q => write_blocking_ratio(23),
      R => '0'
    );
\write_blocking_ratio_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(24),
      Q => write_blocking_ratio(24),
      R => '0'
    );
\write_blocking_ratio_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(25),
      Q => write_blocking_ratio(25),
      R => '0'
    );
\write_blocking_ratio_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(26),
      Q => write_blocking_ratio(26),
      R => '0'
    );
\write_blocking_ratio_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(27),
      Q => write_blocking_ratio(27),
      R => '0'
    );
\write_blocking_ratio_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(28),
      Q => write_blocking_ratio(28),
      R => '0'
    );
\write_blocking_ratio_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(29),
      Q => write_blocking_ratio(29),
      R => '0'
    );
\write_blocking_ratio_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(2),
      Q => write_blocking_ratio(2),
      R => '0'
    );
\write_blocking_ratio_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(30),
      Q => write_blocking_ratio(30),
      R => '0'
    );
\write_blocking_ratio_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(31),
      Q => write_blocking_ratio(31),
      R => '0'
    );
\write_blocking_ratio_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(3),
      Q => write_blocking_ratio(3),
      R => '0'
    );
\write_blocking_ratio_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(4),
      Q => write_blocking_ratio(4),
      R => '0'
    );
\write_blocking_ratio_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(5),
      Q => write_blocking_ratio(5),
      R => '0'
    );
\write_blocking_ratio_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(6),
      Q => write_blocking_ratio(6),
      R => '0'
    );
\write_blocking_ratio_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(7),
      Q => write_blocking_ratio(7),
      R => '0'
    );
\write_blocking_ratio_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(8),
      Q => write_blocking_ratio(8),
      R => '0'
    );
\write_blocking_ratio_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_blocking_ratio__0\(9),
      Q => write_blocking_ratio(9),
      R => '0'
    );
\write_burst_size_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(0),
      Q => write_burst_size(0),
      R => '0'
    );
\write_burst_size_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(10),
      Q => write_burst_size(10),
      R => '0'
    );
\write_burst_size_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(11),
      Q => write_burst_size(11),
      R => '0'
    );
\write_burst_size_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(12),
      Q => write_burst_size(12),
      R => '0'
    );
\write_burst_size_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(13),
      Q => write_burst_size(13),
      R => '0'
    );
\write_burst_size_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(14),
      Q => write_burst_size(14),
      R => '0'
    );
\write_burst_size_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(15),
      Q => write_burst_size(15),
      R => '0'
    );
\write_burst_size_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(16),
      Q => write_burst_size(16),
      R => '0'
    );
\write_burst_size_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(17),
      Q => write_burst_size(17),
      R => '0'
    );
\write_burst_size_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(18),
      Q => write_burst_size(18),
      R => '0'
    );
\write_burst_size_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(19),
      Q => write_burst_size(19),
      R => '0'
    );
\write_burst_size_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(1),
      Q => write_burst_size(1),
      R => '0'
    );
\write_burst_size_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(20),
      Q => write_burst_size(20),
      R => '0'
    );
\write_burst_size_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(21),
      Q => write_burst_size(21),
      R => '0'
    );
\write_burst_size_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(22),
      Q => write_burst_size(22),
      R => '0'
    );
\write_burst_size_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(23),
      Q => write_burst_size(23),
      R => '0'
    );
\write_burst_size_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(24),
      Q => write_burst_size(24),
      R => '0'
    );
\write_burst_size_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(25),
      Q => write_burst_size(25),
      R => '0'
    );
\write_burst_size_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(26),
      Q => write_burst_size(26),
      R => '0'
    );
\write_burst_size_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(27),
      Q => write_burst_size(27),
      R => '0'
    );
\write_burst_size_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(28),
      Q => write_burst_size(28),
      R => '0'
    );
\write_burst_size_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(29),
      Q => write_burst_size(29),
      R => '0'
    );
\write_burst_size_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(2),
      Q => write_burst_size(2),
      R => '0'
    );
\write_burst_size_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(30),
      Q => write_burst_size(30),
      R => '0'
    );
\write_burst_size_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(31),
      Q => write_burst_size(31),
      R => '0'
    );
\write_burst_size_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(3),
      Q => write_burst_size(3),
      R => '0'
    );
\write_burst_size_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(4),
      Q => write_burst_size(4),
      R => '0'
    );
\write_burst_size_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(5),
      Q => write_burst_size(5),
      R => '0'
    );
\write_burst_size_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(6),
      Q => write_burst_size(6),
      R => '0'
    );
\write_burst_size_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(7),
      Q => write_burst_size(7),
      R => '0'
    );
\write_burst_size_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(8),
      Q => write_burst_size(8),
      R => '0'
    );
\write_burst_size_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_burst_size__0\(9),
      Q => write_burst_size(9),
      R => '0'
    );
\write_count[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0203"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => \write_count_reg_n_0_\(0),
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => reset_cmd,
      O => \write_count[0]_i_1_n_0\
    );
\write_count[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_14\,
      O => \write_count[10]_i_1_n_0\
    );
\write_count[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_13\,
      O => \write_count[11]_i_1_n_0\
    );
\write_count[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_12\,
      O => \write_count[12]_i_1_n_0\
    );
\write_count[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_11\,
      O => \write_count[13]_i_1_n_0\
    );
\write_count[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_10\,
      O => \write_count[14]_i_1_n_0\
    );
\write_count[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_9\,
      O => \write_count[15]_i_1_n_0\
    );
\write_count[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_8\,
      O => \write_count[16]_i_1_n_0\
    );
\write_count[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_15\,
      O => \write_count[17]_i_1_n_0\
    );
\write_count[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_14\,
      O => \write_count[18]_i_1_n_0\
    );
\write_count[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_13\,
      O => \write_count[19]_i_1_n_0\
    );
\write_count[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_15\,
      O => \write_count[1]_i_1_n_0\
    );
\write_count[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_12\,
      O => \write_count[20]_i_1_n_0\
    );
\write_count[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_11\,
      O => \write_count[21]_i_1_n_0\
    );
\write_count[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_10\,
      O => \write_count[22]_i_1_n_0\
    );
\write_count[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_9\,
      O => \write_count[23]_i_1_n_0\
    );
\write_count[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[24]_i_2_n_8\,
      O => \write_count[24]_i_1_n_0\
    );
\write_count[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[31]_i_3_n_15\,
      O => \write_count[25]_i_1_n_0\
    );
\write_count[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[31]_i_3_n_14\,
      O => \write_count[26]_i_1_n_0\
    );
\write_count[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[31]_i_3_n_13\,
      O => \write_count[27]_i_1_n_0\
    );
\write_count[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[31]_i_3_n_12\,
      O => \write_count[28]_i_1_n_0\
    );
\write_count[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[31]_i_3_n_11\,
      O => \write_count[29]_i_1_n_0\
    );
\write_count[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_14\,
      O => \write_count[2]_i_1_n_0\
    );
\write_count[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[31]_i_3_n_10\,
      O => \write_count[30]_i_1_n_0\
    );
\write_count[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[31]_i_3_n_9\,
      O => \write_count[31]_i_1_n_0\
    );
\write_count[31]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_12\,
      I1 => write_count_bursts_per_reset(20),
      I2 => write_count_bursts_per_reset(21),
      I3 => \write_count_reg[24]_i_2_n_11\,
      O => \write_count[31]_i_10_n_0\
    );
\write_count[31]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_14\,
      I1 => write_count_bursts_per_reset(18),
      I2 => write_count_bursts_per_reset(19),
      I3 => \write_count_reg[24]_i_2_n_13\,
      O => \write_count[31]_i_11_n_0\
    );
\write_count[31]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_8\,
      I1 => write_count_bursts_per_reset(16),
      I2 => write_count_bursts_per_reset(17),
      I3 => \write_count_reg[24]_i_2_n_15\,
      O => \write_count[31]_i_12_n_0\
    );
\write_count[31]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[31]_i_3_n_10\,
      I1 => write_count_bursts_per_reset(30),
      I2 => \write_count_reg[31]_i_3_n_9\,
      I3 => write_count_bursts_per_reset(31),
      O => \write_count[31]_i_13_n_0\
    );
\write_count[31]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[31]_i_3_n_12\,
      I1 => write_count_bursts_per_reset(28),
      I2 => \write_count_reg[31]_i_3_n_11\,
      I3 => write_count_bursts_per_reset(29),
      O => \write_count[31]_i_14_n_0\
    );
\write_count[31]_i_15\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[31]_i_3_n_14\,
      I1 => write_count_bursts_per_reset(26),
      I2 => \write_count_reg[31]_i_3_n_13\,
      I3 => write_count_bursts_per_reset(27),
      O => \write_count[31]_i_15_n_0\
    );
\write_count[31]_i_16\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_8\,
      I1 => write_count_bursts_per_reset(24),
      I2 => \write_count_reg[31]_i_3_n_15\,
      I3 => write_count_bursts_per_reset(25),
      O => \write_count[31]_i_16_n_0\
    );
\write_count[31]_i_17\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_10\,
      I1 => write_count_bursts_per_reset(22),
      I2 => \write_count_reg[24]_i_2_n_9\,
      I3 => write_count_bursts_per_reset(23),
      O => \write_count[31]_i_17_n_0\
    );
\write_count[31]_i_18\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_12\,
      I1 => write_count_bursts_per_reset(20),
      I2 => \write_count_reg[24]_i_2_n_11\,
      I3 => write_count_bursts_per_reset(21),
      O => \write_count[31]_i_18_n_0\
    );
\write_count[31]_i_19\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_14\,
      I1 => write_count_bursts_per_reset(18),
      I2 => \write_count_reg[24]_i_2_n_13\,
      I3 => write_count_bursts_per_reset(19),
      O => \write_count[31]_i_19_n_0\
    );
\write_count[31]_i_20\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_8\,
      I1 => write_count_bursts_per_reset(16),
      I2 => \write_count_reg[24]_i_2_n_15\,
      I3 => write_count_bursts_per_reset(17),
      O => \write_count[31]_i_20_n_0\
    );
\write_count[31]_i_21\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_10\,
      I1 => write_count_bursts_per_reset(14),
      I2 => write_count_bursts_per_reset(15),
      I3 => \write_count_reg[16]_i_2_n_9\,
      O => \write_count[31]_i_21_n_0\
    );
\write_count[31]_i_22\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_12\,
      I1 => write_count_bursts_per_reset(12),
      I2 => write_count_bursts_per_reset(13),
      I3 => \write_count_reg[16]_i_2_n_11\,
      O => \write_count[31]_i_22_n_0\
    );
\write_count[31]_i_23\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_14\,
      I1 => write_count_bursts_per_reset(10),
      I2 => write_count_bursts_per_reset(11),
      I3 => \write_count_reg[16]_i_2_n_13\,
      O => \write_count[31]_i_23_n_0\
    );
\write_count[31]_i_24\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_8\,
      I1 => write_count_bursts_per_reset(8),
      I2 => write_count_bursts_per_reset(9),
      I3 => \write_count_reg[16]_i_2_n_15\,
      O => \write_count[31]_i_24_n_0\
    );
\write_count[31]_i_25\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_10\,
      I1 => write_count_bursts_per_reset(6),
      I2 => write_count_bursts_per_reset(7),
      I3 => \write_count_reg[8]_i_2_n_9\,
      O => \write_count[31]_i_25_n_0\
    );
\write_count[31]_i_26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_12\,
      I1 => write_count_bursts_per_reset(4),
      I2 => write_count_bursts_per_reset(5),
      I3 => \write_count_reg[8]_i_2_n_11\,
      O => \write_count[31]_i_26_n_0\
    );
\write_count[31]_i_27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_14\,
      I1 => write_count_bursts_per_reset(2),
      I2 => write_count_bursts_per_reset(3),
      I3 => \write_count_reg[8]_i_2_n_13\,
      O => \write_count[31]_i_27_n_0\
    );
\write_count[31]_i_28\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1F01"
    )
        port map (
      I0 => write_count_bursts_per_reset(0),
      I1 => \write_count_reg_n_0_\(0),
      I2 => write_count_bursts_per_reset(1),
      I3 => \write_count_reg[8]_i_2_n_15\,
      O => \write_count[31]_i_28_n_0\
    );
\write_count[31]_i_29\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_10\,
      I1 => write_count_bursts_per_reset(14),
      I2 => \write_count_reg[16]_i_2_n_9\,
      I3 => write_count_bursts_per_reset(15),
      O => \write_count[31]_i_29_n_0\
    );
\write_count[31]_i_30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_12\,
      I1 => write_count_bursts_per_reset(12),
      I2 => \write_count_reg[16]_i_2_n_11\,
      I3 => write_count_bursts_per_reset(13),
      O => \write_count[31]_i_30_n_0\
    );
\write_count[31]_i_31\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[16]_i_2_n_14\,
      I1 => write_count_bursts_per_reset(10),
      I2 => \write_count_reg[16]_i_2_n_13\,
      I3 => write_count_bursts_per_reset(11),
      O => \write_count[31]_i_31_n_0\
    );
\write_count[31]_i_32\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_8\,
      I1 => write_count_bursts_per_reset(8),
      I2 => \write_count_reg[16]_i_2_n_15\,
      I3 => write_count_bursts_per_reset(9),
      O => \write_count[31]_i_32_n_0\
    );
\write_count[31]_i_33\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_10\,
      I1 => write_count_bursts_per_reset(6),
      I2 => \write_count_reg[8]_i_2_n_9\,
      I3 => write_count_bursts_per_reset(7),
      O => \write_count[31]_i_33_n_0\
    );
\write_count[31]_i_34\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_12\,
      I1 => write_count_bursts_per_reset(4),
      I2 => \write_count_reg[8]_i_2_n_11\,
      I3 => write_count_bursts_per_reset(5),
      O => \write_count[31]_i_34_n_0\
    );
\write_count[31]_i_35\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_reg[8]_i_2_n_14\,
      I1 => write_count_bursts_per_reset(2),
      I2 => \write_count_reg[8]_i_2_n_13\,
      I3 => write_count_bursts_per_reset(3),
      O => \write_count[31]_i_35_n_0\
    );
\write_count[31]_i_36\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6006"
    )
        port map (
      I0 => \write_count_reg_n_0_\(0),
      I1 => write_count_bursts_per_reset(0),
      I2 => \write_count_reg[8]_i_2_n_15\,
      I3 => write_count_bursts_per_reset(1),
      O => \write_count[31]_i_36_n_0\
    );
\write_count[31]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[31]_i_3_n_10\,
      I1 => write_count_bursts_per_reset(30),
      I2 => write_count_bursts_per_reset(31),
      I3 => \write_count_reg[31]_i_3_n_9\,
      O => \write_count[31]_i_5_n_0\
    );
\write_count[31]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[31]_i_3_n_12\,
      I1 => write_count_bursts_per_reset(28),
      I2 => write_count_bursts_per_reset(29),
      I3 => \write_count_reg[31]_i_3_n_11\,
      O => \write_count[31]_i_6_n_0\
    );
\write_count[31]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[31]_i_3_n_14\,
      I1 => write_count_bursts_per_reset(26),
      I2 => write_count_bursts_per_reset(27),
      I3 => \write_count_reg[31]_i_3_n_13\,
      O => \write_count[31]_i_7_n_0\
    );
\write_count[31]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_8\,
      I1 => write_count_bursts_per_reset(24),
      I2 => write_count_bursts_per_reset(25),
      I3 => \write_count_reg[31]_i_3_n_15\,
      O => \write_count[31]_i_8_n_0\
    );
\write_count[31]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F02"
    )
        port map (
      I0 => \write_count_reg[24]_i_2_n_10\,
      I1 => write_count_bursts_per_reset(22),
      I2 => write_count_bursts_per_reset(23),
      I3 => \write_count_reg[24]_i_2_n_9\,
      O => \write_count[31]_i_9_n_0\
    );
\write_count[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_5_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_13\,
      O => \write_count[3]_i_1_n_0\
    );
\write_count[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_12\,
      O => \write_count[4]_i_1_n_0\
    );
\write_count[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_11\,
      O => \write_count[5]_i_1_n_0\
    );
\write_count[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_10\,
      O => \write_count[6]_i_1_n_0\
    );
\write_count[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_9\,
      O => \write_count[7]_i_1_n_0\
    );
\write_count[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[8]_i_2_n_8\,
      O => \write_count[8]_i_1_n_0\
    );
\write_count[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => \write_count_reg[31]_i_2_n_0\,
      I3 => \write_count_reg[16]_i_2_n_15\,
      O => \write_count[9]_i_1_n_0\
    );
\write_count_bursts_per_reset_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(0),
      Q => write_count_bursts_per_reset(0),
      R => '0'
    );
\write_count_bursts_per_reset_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(10),
      Q => write_count_bursts_per_reset(10),
      R => '0'
    );
\write_count_bursts_per_reset_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(11),
      Q => write_count_bursts_per_reset(11),
      R => '0'
    );
\write_count_bursts_per_reset_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(12),
      Q => write_count_bursts_per_reset(12),
      R => '0'
    );
\write_count_bursts_per_reset_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(13),
      Q => write_count_bursts_per_reset(13),
      R => '0'
    );
\write_count_bursts_per_reset_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(14),
      Q => write_count_bursts_per_reset(14),
      R => '0'
    );
\write_count_bursts_per_reset_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(15),
      Q => write_count_bursts_per_reset(15),
      R => '0'
    );
\write_count_bursts_per_reset_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(16),
      Q => write_count_bursts_per_reset(16),
      R => '0'
    );
\write_count_bursts_per_reset_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(17),
      Q => write_count_bursts_per_reset(17),
      R => '0'
    );
\write_count_bursts_per_reset_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(18),
      Q => write_count_bursts_per_reset(18),
      R => '0'
    );
\write_count_bursts_per_reset_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(19),
      Q => write_count_bursts_per_reset(19),
      R => '0'
    );
\write_count_bursts_per_reset_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(1),
      Q => write_count_bursts_per_reset(1),
      R => '0'
    );
\write_count_bursts_per_reset_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(20),
      Q => write_count_bursts_per_reset(20),
      R => '0'
    );
\write_count_bursts_per_reset_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(21),
      Q => write_count_bursts_per_reset(21),
      R => '0'
    );
\write_count_bursts_per_reset_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(22),
      Q => write_count_bursts_per_reset(22),
      R => '0'
    );
\write_count_bursts_per_reset_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(23),
      Q => write_count_bursts_per_reset(23),
      R => '0'
    );
\write_count_bursts_per_reset_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(24),
      Q => write_count_bursts_per_reset(24),
      R => '0'
    );
\write_count_bursts_per_reset_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(25),
      Q => write_count_bursts_per_reset(25),
      R => '0'
    );
\write_count_bursts_per_reset_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(26),
      Q => write_count_bursts_per_reset(26),
      R => '0'
    );
\write_count_bursts_per_reset_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(27),
      Q => write_count_bursts_per_reset(27),
      R => '0'
    );
\write_count_bursts_per_reset_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(28),
      Q => write_count_bursts_per_reset(28),
      R => '0'
    );
\write_count_bursts_per_reset_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(29),
      Q => write_count_bursts_per_reset(29),
      R => '0'
    );
\write_count_bursts_per_reset_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(2),
      Q => write_count_bursts_per_reset(2),
      R => '0'
    );
\write_count_bursts_per_reset_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(30),
      Q => write_count_bursts_per_reset(30),
      R => '0'
    );
\write_count_bursts_per_reset_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(31),
      Q => write_count_bursts_per_reset(31),
      R => '0'
    );
\write_count_bursts_per_reset_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(3),
      Q => write_count_bursts_per_reset(3),
      R => '0'
    );
\write_count_bursts_per_reset_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(4),
      Q => write_count_bursts_per_reset(4),
      R => '0'
    );
\write_count_bursts_per_reset_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(5),
      Q => write_count_bursts_per_reset(5),
      R => '0'
    );
\write_count_bursts_per_reset_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(6),
      Q => write_count_bursts_per_reset(6),
      R => '0'
    );
\write_count_bursts_per_reset_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(7),
      Q => write_count_bursts_per_reset(7),
      R => '0'
    );
\write_count_bursts_per_reset_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(8),
      Q => write_count_bursts_per_reset(8),
      R => '0'
    );
\write_count_bursts_per_reset_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_count_bursts_per_reset__0\(9),
      Q => write_count_bursts_per_reset(9),
      R => '0'
    );
\write_count_for_last[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0203"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \write_count_for_last_reg_n_0_\(0),
      I2 => \^o32\,
      I3 => reset_cmd,
      O => \write_count_for_last[0]_i_1_n_0\
    );
\write_count_for_last[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_14\,
      I3 => reset_cmd,
      O => \write_count_for_last[10]_i_1_n_0\
    );
\write_count_for_last[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_13\,
      I3 => reset_cmd,
      O => \write_count_for_last[11]_i_1_n_0\
    );
\write_count_for_last[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_12\,
      I3 => reset_cmd,
      O => \write_count_for_last[12]_i_1_n_0\
    );
\write_count_for_last[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_11\,
      I3 => reset_cmd,
      O => \write_count_for_last[13]_i_1_n_0\
    );
\write_count_for_last[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_10\,
      I3 => reset_cmd,
      O => \write_count_for_last[14]_i_1_n_0\
    );
\write_count_for_last[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_9\,
      I3 => reset_cmd,
      O => \write_count_for_last[15]_i_1_n_0\
    );
\write_count_for_last[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_8\,
      I3 => reset_cmd,
      O => \write_count_for_last[16]_i_1_n_0\
    );
\write_count_for_last[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_15\,
      I3 => reset_cmd,
      O => \write_count_for_last[17]_i_1_n_0\
    );
\write_count_for_last[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_14\,
      I3 => reset_cmd,
      O => \write_count_for_last[18]_i_1_n_0\
    );
\write_count_for_last[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_13\,
      I3 => reset_cmd,
      O => \write_count_for_last[19]_i_1_n_0\
    );
\write_count_for_last[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_15\,
      I3 => reset_cmd,
      O => \write_count_for_last[1]_i_1_n_0\
    );
\write_count_for_last[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_12\,
      I3 => reset_cmd,
      O => \write_count_for_last[20]_i_1_n_0\
    );
\write_count_for_last[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_11\,
      I3 => reset_cmd,
      O => \write_count_for_last[21]_i_1_n_0\
    );
\write_count_for_last[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_10\,
      I3 => reset_cmd,
      O => \write_count_for_last[22]_i_1_n_0\
    );
\write_count_for_last[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_9\,
      I3 => reset_cmd,
      O => \write_count_for_last[23]_i_1_n_0\
    );
\write_count_for_last[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[24]_i_2_n_8\,
      I3 => reset_cmd,
      O => \write_count_for_last[24]_i_1_n_0\
    );
\write_count_for_last[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[31]_i_4_n_15\,
      I3 => reset_cmd,
      O => \write_count_for_last[25]_i_1_n_0\
    );
\write_count_for_last[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[31]_i_4_n_14\,
      I3 => reset_cmd,
      O => \write_count_for_last[26]_i_1_n_0\
    );
\write_count_for_last[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[31]_i_4_n_13\,
      I3 => reset_cmd,
      O => \write_count_for_last[27]_i_1_n_0\
    );
\write_count_for_last[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[31]_i_4_n_12\,
      I3 => reset_cmd,
      O => \write_count_for_last[28]_i_1_n_0\
    );
\write_count_for_last[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[31]_i_4_n_11\,
      I3 => reset_cmd,
      O => \write_count_for_last[29]_i_1_n_0\
    );
\write_count_for_last[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_14\,
      I3 => reset_cmd,
      O => \write_count_for_last[2]_i_1_n_0\
    );
\write_count_for_last[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[31]_i_4_n_10\,
      I3 => reset_cmd,
      O => \write_count_for_last[30]_i_1_n_0\
    );
\write_count_for_last[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => reset_cmd,
      I2 => writeDbusy,
      I3 => \^writedvalid0\,
      O => write_count_for_last
    );
\write_count_for_last[31]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[24]_i_2_n_14\,
      I1 => write_burst_size(18),
      I2 => write_burst_size(20),
      I3 => \write_count_for_last_reg[24]_i_2_n_12\,
      I4 => write_burst_size(19),
      I5 => \write_count_for_last_reg[24]_i_2_n_13\,
      O => \write_count_for_last[31]_i_10_n_0\
    );
\write_count_for_last[31]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[16]_i_2_n_9\,
      I1 => write_burst_size(15),
      I2 => write_burst_size(17),
      I3 => \write_count_for_last_reg[24]_i_2_n_15\,
      I4 => write_burst_size(16),
      I5 => \write_count_for_last_reg[16]_i_2_n_8\,
      O => \write_count_for_last[31]_i_11_n_0\
    );
\write_count_for_last[31]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[16]_i_2_n_12\,
      I1 => write_burst_size(12),
      I2 => write_burst_size(14),
      I3 => \write_count_for_last_reg[16]_i_2_n_10\,
      I4 => write_burst_size(13),
      I5 => \write_count_for_last_reg[16]_i_2_n_11\,
      O => \write_count_for_last[31]_i_12_n_0\
    );
\write_count_for_last[31]_i_13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[16]_i_2_n_15\,
      I1 => write_burst_size(9),
      I2 => write_burst_size(11),
      I3 => \write_count_for_last_reg[16]_i_2_n_13\,
      I4 => write_burst_size(10),
      I5 => \write_count_for_last_reg[16]_i_2_n_14\,
      O => \write_count_for_last[31]_i_13_n_0\
    );
\write_count_for_last[31]_i_14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[8]_i_2_n_10\,
      I1 => write_burst_size(6),
      I2 => write_burst_size(8),
      I3 => \write_count_for_last_reg[8]_i_2_n_8\,
      I4 => write_burst_size(7),
      I5 => \write_count_for_last_reg[8]_i_2_n_9\,
      O => \write_count_for_last[31]_i_14_n_0\
    );
\write_count_for_last[31]_i_15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[8]_i_2_n_13\,
      I1 => write_burst_size(3),
      I2 => write_burst_size(5),
      I3 => \write_count_for_last_reg[8]_i_2_n_11\,
      I4 => write_burst_size(4),
      I5 => \write_count_for_last_reg[8]_i_2_n_12\,
      O => \write_count_for_last[31]_i_15_n_0\
    );
\write_count_for_last[31]_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6006000000006006"
    )
        port map (
      I0 => \write_count_for_last_reg_n_0_\(0),
      I1 => write_burst_size(0),
      I2 => write_burst_size(2),
      I3 => \write_count_for_last_reg[8]_i_2_n_14\,
      I4 => write_burst_size(1),
      I5 => \write_count_for_last_reg[8]_i_2_n_15\,
      O => \write_count_for_last[31]_i_16_n_0\
    );
\write_count_for_last[31]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[31]_i_4_n_9\,
      I3 => reset_cmd,
      O => \write_count_for_last[31]_i_2_n_0\
    );
\write_count_for_last[31]_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \write_count_for_last_reg[31]_i_4_n_10\,
      I1 => write_burst_size(30),
      I2 => \write_count_for_last_reg[31]_i_4_n_9\,
      I3 => write_burst_size(31),
      O => \write_count_for_last[31]_i_6_n_0\
    );
\write_count_for_last[31]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[31]_i_4_n_13\,
      I1 => write_burst_size(27),
      I2 => write_burst_size(29),
      I3 => \write_count_for_last_reg[31]_i_4_n_11\,
      I4 => write_burst_size(28),
      I5 => \write_count_for_last_reg[31]_i_4_n_12\,
      O => \write_count_for_last[31]_i_7_n_0\
    );
\write_count_for_last[31]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[24]_i_2_n_8\,
      I1 => write_burst_size(24),
      I2 => write_burst_size(26),
      I3 => \write_count_for_last_reg[31]_i_4_n_14\,
      I4 => write_burst_size(25),
      I5 => \write_count_for_last_reg[31]_i_4_n_15\,
      O => \write_count_for_last[31]_i_8_n_0\
    );
\write_count_for_last[31]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \write_count_for_last_reg[24]_i_2_n_11\,
      I1 => write_burst_size(21),
      I2 => write_burst_size(23),
      I3 => \write_count_for_last_reg[24]_i_2_n_9\,
      I4 => write_burst_size(22),
      I5 => \write_count_for_last_reg[24]_i_2_n_10\,
      O => \write_count_for_last[31]_i_9_n_0\
    );
\write_count_for_last[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_13\,
      I3 => reset_cmd,
      O => \write_count_for_last[3]_i_1_n_0\
    );
\write_count_for_last[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_12\,
      I3 => reset_cmd,
      O => \write_count_for_last[4]_i_1_n_0\
    );
\write_count_for_last[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_11\,
      I3 => reset_cmd,
      O => \write_count_for_last[5]_i_1_n_0\
    );
\write_count_for_last[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_10\,
      I3 => reset_cmd,
      O => \write_count_for_last[6]_i_1_n_0\
    );
\write_count_for_last[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_9\,
      I3 => reset_cmd,
      O => \write_count_for_last[7]_i_1_n_0\
    );
\write_count_for_last[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[8]_i_2_n_8\,
      I3 => reset_cmd,
      O => \write_count_for_last[8]_i_1_n_0\
    );
\write_count_for_last[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2030"
    )
        port map (
      I0 => \countAddrSent[39]_i_3_n_0\,
      I1 => \^o32\,
      I2 => \write_count_for_last_reg[16]_i_2_n_15\,
      I3 => reset_cmd,
      O => \write_count_for_last[9]_i_1_n_0\
    );
\write_count_for_last_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[0]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(0),
      R => '0'
    );
\write_count_for_last_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[10]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(10),
      R => '0'
    );
\write_count_for_last_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[11]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(11),
      R => '0'
    );
\write_count_for_last_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[12]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(12),
      R => '0'
    );
\write_count_for_last_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[13]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(13),
      R => '0'
    );
\write_count_for_last_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[14]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(14),
      R => '0'
    );
\write_count_for_last_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[15]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(15),
      R => '0'
    );
\write_count_for_last_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[16]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(16),
      R => '0'
    );
\write_count_for_last_reg[16]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_for_last_reg[8]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \write_count_for_last_reg[16]_i_2_n_0\,
      CO(6) => \write_count_for_last_reg[16]_i_2_n_1\,
      CO(5) => \write_count_for_last_reg[16]_i_2_n_2\,
      CO(4) => \write_count_for_last_reg[16]_i_2_n_3\,
      CO(3) => \NLW_write_count_for_last_reg[16]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \write_count_for_last_reg[16]_i_2_n_5\,
      CO(1) => \write_count_for_last_reg[16]_i_2_n_6\,
      CO(0) => \write_count_for_last_reg[16]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \write_count_for_last_reg[16]_i_2_n_8\,
      O(6) => \write_count_for_last_reg[16]_i_2_n_9\,
      O(5) => \write_count_for_last_reg[16]_i_2_n_10\,
      O(4) => \write_count_for_last_reg[16]_i_2_n_11\,
      O(3) => \write_count_for_last_reg[16]_i_2_n_12\,
      O(2) => \write_count_for_last_reg[16]_i_2_n_13\,
      O(1) => \write_count_for_last_reg[16]_i_2_n_14\,
      O(0) => \write_count_for_last_reg[16]_i_2_n_15\,
      S(7 downto 0) => \write_count_for_last_reg_n_0_\(16 downto 9)
    );
\write_count_for_last_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[17]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(17),
      R => '0'
    );
\write_count_for_last_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[18]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(18),
      R => '0'
    );
\write_count_for_last_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[19]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(19),
      R => '0'
    );
\write_count_for_last_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[1]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(1),
      R => '0'
    );
\write_count_for_last_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[20]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(20),
      R => '0'
    );
\write_count_for_last_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[21]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(21),
      R => '0'
    );
\write_count_for_last_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[22]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(22),
      R => '0'
    );
\write_count_for_last_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[23]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(23),
      R => '0'
    );
\write_count_for_last_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[24]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(24),
      R => '0'
    );
\write_count_for_last_reg[24]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_for_last_reg[16]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \write_count_for_last_reg[24]_i_2_n_0\,
      CO(6) => \write_count_for_last_reg[24]_i_2_n_1\,
      CO(5) => \write_count_for_last_reg[24]_i_2_n_2\,
      CO(4) => \write_count_for_last_reg[24]_i_2_n_3\,
      CO(3) => \NLW_write_count_for_last_reg[24]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \write_count_for_last_reg[24]_i_2_n_5\,
      CO(1) => \write_count_for_last_reg[24]_i_2_n_6\,
      CO(0) => \write_count_for_last_reg[24]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \write_count_for_last_reg[24]_i_2_n_8\,
      O(6) => \write_count_for_last_reg[24]_i_2_n_9\,
      O(5) => \write_count_for_last_reg[24]_i_2_n_10\,
      O(4) => \write_count_for_last_reg[24]_i_2_n_11\,
      O(3) => \write_count_for_last_reg[24]_i_2_n_12\,
      O(2) => \write_count_for_last_reg[24]_i_2_n_13\,
      O(1) => \write_count_for_last_reg[24]_i_2_n_14\,
      O(0) => \write_count_for_last_reg[24]_i_2_n_15\,
      S(7 downto 0) => \write_count_for_last_reg_n_0_\(24 downto 17)
    );
\write_count_for_last_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[25]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(25),
      R => '0'
    );
\write_count_for_last_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[26]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(26),
      R => '0'
    );
\write_count_for_last_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[27]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(27),
      R => '0'
    );
\write_count_for_last_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[28]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(28),
      R => '0'
    );
\write_count_for_last_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[29]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(29),
      R => '0'
    );
\write_count_for_last_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[2]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(2),
      R => '0'
    );
\write_count_for_last_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[30]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(30),
      R => '0'
    );
\write_count_for_last_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[31]_i_2_n_0\,
      Q => \write_count_for_last_reg_n_0_\(31),
      R => '0'
    );
\write_count_for_last_reg[31]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_for_last_reg[31]_i_5_n_0\,
      CI_TOP => '0',
      CO(7 downto 3) => \NLW_write_count_for_last_reg[31]_i_3_CO_UNCONNECTED\(7 downto 3),
      CO(2) => \^o32\,
      CO(1) => \write_count_for_last_reg[31]_i_3_n_6\,
      CO(0) => \write_count_for_last_reg[31]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => \NLW_write_count_for_last_reg[31]_i_3_O_UNCONNECTED\(7 downto 0),
      S(7 downto 3) => B"00000",
      S(2) => \write_count_for_last[31]_i_6_n_0\,
      S(1) => \write_count_for_last[31]_i_7_n_0\,
      S(0) => \write_count_for_last[31]_i_8_n_0\
    );
\write_count_for_last_reg[31]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_for_last_reg[24]_i_2_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_write_count_for_last_reg[31]_i_4_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \write_count_for_last_reg[31]_i_4_n_2\,
      CO(4) => \write_count_for_last_reg[31]_i_4_n_3\,
      CO(3) => \NLW_write_count_for_last_reg[31]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \write_count_for_last_reg[31]_i_4_n_5\,
      CO(1) => \write_count_for_last_reg[31]_i_4_n_6\,
      CO(0) => \write_count_for_last_reg[31]_i_4_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_write_count_for_last_reg[31]_i_4_O_UNCONNECTED\(7),
      O(6) => \write_count_for_last_reg[31]_i_4_n_9\,
      O(5) => \write_count_for_last_reg[31]_i_4_n_10\,
      O(4) => \write_count_for_last_reg[31]_i_4_n_11\,
      O(3) => \write_count_for_last_reg[31]_i_4_n_12\,
      O(2) => \write_count_for_last_reg[31]_i_4_n_13\,
      O(1) => \write_count_for_last_reg[31]_i_4_n_14\,
      O(0) => \write_count_for_last_reg[31]_i_4_n_15\,
      S(7) => '0',
      S(6 downto 0) => \write_count_for_last_reg_n_0_\(31 downto 25)
    );
\write_count_for_last_reg[31]_i_5\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \write_count_for_last_reg[31]_i_5_n_0\,
      CO(6) => \write_count_for_last_reg[31]_i_5_n_1\,
      CO(5) => \write_count_for_last_reg[31]_i_5_n_2\,
      CO(4) => \write_count_for_last_reg[31]_i_5_n_3\,
      CO(3) => \NLW_write_count_for_last_reg[31]_i_5_CO_UNCONNECTED\(3),
      CO(2) => \write_count_for_last_reg[31]_i_5_n_5\,
      CO(1) => \write_count_for_last_reg[31]_i_5_n_6\,
      CO(0) => \write_count_for_last_reg[31]_i_5_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => \NLW_write_count_for_last_reg[31]_i_5_O_UNCONNECTED\(7 downto 0),
      S(7) => \write_count_for_last[31]_i_9_n_0\,
      S(6) => \write_count_for_last[31]_i_10_n_0\,
      S(5) => \write_count_for_last[31]_i_11_n_0\,
      S(4) => \write_count_for_last[31]_i_12_n_0\,
      S(3) => \write_count_for_last[31]_i_13_n_0\,
      S(2) => \write_count_for_last[31]_i_14_n_0\,
      S(1) => \write_count_for_last[31]_i_15_n_0\,
      S(0) => \write_count_for_last[31]_i_16_n_0\
    );
\write_count_for_last_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[3]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(3),
      R => '0'
    );
\write_count_for_last_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[4]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(4),
      R => '0'
    );
\write_count_for_last_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[5]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(5),
      R => '0'
    );
\write_count_for_last_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[6]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(6),
      R => '0'
    );
\write_count_for_last_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[7]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(7),
      R => '0'
    );
\write_count_for_last_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[8]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(8),
      R => '0'
    );
\write_count_for_last_reg[8]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_for_last_reg_n_0_\(0),
      CI_TOP => '0',
      CO(7) => \write_count_for_last_reg[8]_i_2_n_0\,
      CO(6) => \write_count_for_last_reg[8]_i_2_n_1\,
      CO(5) => \write_count_for_last_reg[8]_i_2_n_2\,
      CO(4) => \write_count_for_last_reg[8]_i_2_n_3\,
      CO(3) => \NLW_write_count_for_last_reg[8]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \write_count_for_last_reg[8]_i_2_n_5\,
      CO(1) => \write_count_for_last_reg[8]_i_2_n_6\,
      CO(0) => \write_count_for_last_reg[8]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \write_count_for_last_reg[8]_i_2_n_8\,
      O(6) => \write_count_for_last_reg[8]_i_2_n_9\,
      O(5) => \write_count_for_last_reg[8]_i_2_n_10\,
      O(4) => \write_count_for_last_reg[8]_i_2_n_11\,
      O(3) => \write_count_for_last_reg[8]_i_2_n_12\,
      O(2) => \write_count_for_last_reg[8]_i_2_n_13\,
      O(1) => \write_count_for_last_reg[8]_i_2_n_14\,
      O(0) => \write_count_for_last_reg[8]_i_2_n_15\,
      S(7 downto 0) => \write_count_for_last_reg_n_0_\(8 downto 1)
    );
\write_count_for_last_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => write_count_for_last,
      D => \write_count_for_last[9]_i_1_n_0\,
      Q => \write_count_for_last_reg_n_0_\(9),
      R => '0'
    );
\write_count_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[0]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(0),
      R => '0'
    );
\write_count_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[10]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(10),
      R => '0'
    );
\write_count_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[11]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(11),
      R => '0'
    );
\write_count_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[12]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(12),
      R => '0'
    );
\write_count_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[13]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(13),
      R => '0'
    );
\write_count_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[14]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(14),
      R => '0'
    );
\write_count_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[15]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(15),
      R => '0'
    );
\write_count_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[16]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(16),
      R => '0'
    );
\write_count_reg[16]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_reg[8]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \write_count_reg[16]_i_2_n_0\,
      CO(6) => \write_count_reg[16]_i_2_n_1\,
      CO(5) => \write_count_reg[16]_i_2_n_2\,
      CO(4) => \write_count_reg[16]_i_2_n_3\,
      CO(3) => \NLW_write_count_reg[16]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \write_count_reg[16]_i_2_n_5\,
      CO(1) => \write_count_reg[16]_i_2_n_6\,
      CO(0) => \write_count_reg[16]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \write_count_reg[16]_i_2_n_8\,
      O(6) => \write_count_reg[16]_i_2_n_9\,
      O(5) => \write_count_reg[16]_i_2_n_10\,
      O(4) => \write_count_reg[16]_i_2_n_11\,
      O(3) => \write_count_reg[16]_i_2_n_12\,
      O(2) => \write_count_reg[16]_i_2_n_13\,
      O(1) => \write_count_reg[16]_i_2_n_14\,
      O(0) => \write_count_reg[16]_i_2_n_15\,
      S(7 downto 0) => \write_count_reg_n_0_\(16 downto 9)
    );
\write_count_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[17]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(17),
      R => '0'
    );
\write_count_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[18]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(18),
      R => '0'
    );
\write_count_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[19]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(19),
      R => '0'
    );
\write_count_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[1]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(1),
      R => '0'
    );
\write_count_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[20]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(20),
      R => '0'
    );
\write_count_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[21]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(21),
      R => '0'
    );
\write_count_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[22]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(22),
      R => '0'
    );
\write_count_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[23]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(23),
      R => '0'
    );
\write_count_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[24]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(24),
      R => '0'
    );
\write_count_reg[24]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_reg[16]_i_2_n_0\,
      CI_TOP => '0',
      CO(7) => \write_count_reg[24]_i_2_n_0\,
      CO(6) => \write_count_reg[24]_i_2_n_1\,
      CO(5) => \write_count_reg[24]_i_2_n_2\,
      CO(4) => \write_count_reg[24]_i_2_n_3\,
      CO(3) => \NLW_write_count_reg[24]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \write_count_reg[24]_i_2_n_5\,
      CO(1) => \write_count_reg[24]_i_2_n_6\,
      CO(0) => \write_count_reg[24]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \write_count_reg[24]_i_2_n_8\,
      O(6) => \write_count_reg[24]_i_2_n_9\,
      O(5) => \write_count_reg[24]_i_2_n_10\,
      O(4) => \write_count_reg[24]_i_2_n_11\,
      O(3) => \write_count_reg[24]_i_2_n_12\,
      O(2) => \write_count_reg[24]_i_2_n_13\,
      O(1) => \write_count_reg[24]_i_2_n_14\,
      O(0) => \write_count_reg[24]_i_2_n_15\,
      S(7 downto 0) => \write_count_reg_n_0_\(24 downto 17)
    );
\write_count_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[25]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(25),
      R => '0'
    );
\write_count_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[26]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(26),
      R => '0'
    );
\write_count_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[27]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(27),
      R => '0'
    );
\write_count_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[28]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(28),
      R => '0'
    );
\write_count_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[29]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(29),
      R => '0'
    );
\write_count_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[2]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(2),
      R => '0'
    );
\write_count_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[30]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(30),
      R => '0'
    );
\write_count_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[31]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(31),
      R => '0'
    );
\write_count_reg[31]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_reg[31]_i_4_n_0\,
      CI_TOP => '0',
      CO(7) => \write_count_reg[31]_i_2_n_0\,
      CO(6) => \write_count_reg[31]_i_2_n_1\,
      CO(5) => \write_count_reg[31]_i_2_n_2\,
      CO(4) => \write_count_reg[31]_i_2_n_3\,
      CO(3) => \NLW_write_count_reg[31]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \write_count_reg[31]_i_2_n_5\,
      CO(1) => \write_count_reg[31]_i_2_n_6\,
      CO(0) => \write_count_reg[31]_i_2_n_7\,
      DI(7) => \write_count[31]_i_5_n_0\,
      DI(6) => \write_count[31]_i_6_n_0\,
      DI(5) => \write_count[31]_i_7_n_0\,
      DI(4) => \write_count[31]_i_8_n_0\,
      DI(3) => \write_count[31]_i_9_n_0\,
      DI(2) => \write_count[31]_i_10_n_0\,
      DI(1) => \write_count[31]_i_11_n_0\,
      DI(0) => \write_count[31]_i_12_n_0\,
      O(7 downto 0) => \NLW_write_count_reg[31]_i_2_O_UNCONNECTED\(7 downto 0),
      S(7) => \write_count[31]_i_13_n_0\,
      S(6) => \write_count[31]_i_14_n_0\,
      S(5) => \write_count[31]_i_15_n_0\,
      S(4) => \write_count[31]_i_16_n_0\,
      S(3) => \write_count[31]_i_17_n_0\,
      S(2) => \write_count[31]_i_18_n_0\,
      S(1) => \write_count[31]_i_19_n_0\,
      S(0) => \write_count[31]_i_20_n_0\
    );
\write_count_reg[31]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_reg[24]_i_2_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_write_count_reg[31]_i_3_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \write_count_reg[31]_i_3_n_2\,
      CO(4) => \write_count_reg[31]_i_3_n_3\,
      CO(3) => \NLW_write_count_reg[31]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \write_count_reg[31]_i_3_n_5\,
      CO(1) => \write_count_reg[31]_i_3_n_6\,
      CO(0) => \write_count_reg[31]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_write_count_reg[31]_i_3_O_UNCONNECTED\(7),
      O(6) => \write_count_reg[31]_i_3_n_9\,
      O(5) => \write_count_reg[31]_i_3_n_10\,
      O(4) => \write_count_reg[31]_i_3_n_11\,
      O(3) => \write_count_reg[31]_i_3_n_12\,
      O(2) => \write_count_reg[31]_i_3_n_13\,
      O(1) => \write_count_reg[31]_i_3_n_14\,
      O(0) => \write_count_reg[31]_i_3_n_15\,
      S(7) => '0',
      S(6 downto 0) => \write_count_reg_n_0_\(31 downto 25)
    );
\write_count_reg[31]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => '1',
      CI_TOP => '0',
      CO(7) => \write_count_reg[31]_i_4_n_0\,
      CO(6) => \write_count_reg[31]_i_4_n_1\,
      CO(5) => \write_count_reg[31]_i_4_n_2\,
      CO(4) => \write_count_reg[31]_i_4_n_3\,
      CO(3) => \NLW_write_count_reg[31]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \write_count_reg[31]_i_4_n_5\,
      CO(1) => \write_count_reg[31]_i_4_n_6\,
      CO(0) => \write_count_reg[31]_i_4_n_7\,
      DI(7) => \write_count[31]_i_21_n_0\,
      DI(6) => \write_count[31]_i_22_n_0\,
      DI(5) => \write_count[31]_i_23_n_0\,
      DI(4) => \write_count[31]_i_24_n_0\,
      DI(3) => \write_count[31]_i_25_n_0\,
      DI(2) => \write_count[31]_i_26_n_0\,
      DI(1) => \write_count[31]_i_27_n_0\,
      DI(0) => \write_count[31]_i_28_n_0\,
      O(7 downto 0) => \NLW_write_count_reg[31]_i_4_O_UNCONNECTED\(7 downto 0),
      S(7) => \write_count[31]_i_29_n_0\,
      S(6) => \write_count[31]_i_30_n_0\,
      S(5) => \write_count[31]_i_31_n_0\,
      S(4) => \write_count[31]_i_32_n_0\,
      S(3) => \write_count[31]_i_33_n_0\,
      S(2) => \write_count[31]_i_34_n_0\,
      S(1) => \write_count[31]_i_35_n_0\,
      S(0) => \write_count[31]_i_36_n_0\
    );
\write_count_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[3]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(3),
      R => '0'
    );
\write_count_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[4]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(4),
      R => '0'
    );
\write_count_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[5]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(5),
      R => '0'
    );
\write_count_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[6]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(6),
      R => '0'
    );
\write_count_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[7]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(7),
      R => '0'
    );
\write_count_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[8]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(8),
      R => '0'
    );
\write_count_reg[8]_i_2\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_count_reg_n_0_\(0),
      CI_TOP => '0',
      CO(7) => \write_count_reg[8]_i_2_n_0\,
      CO(6) => \write_count_reg[8]_i_2_n_1\,
      CO(5) => \write_count_reg[8]_i_2_n_2\,
      CO(4) => \write_count_reg[8]_i_2_n_3\,
      CO(3) => \NLW_write_count_reg[8]_i_2_CO_UNCONNECTED\(3),
      CO(2) => \write_count_reg[8]_i_2_n_5\,
      CO(1) => \write_count_reg[8]_i_2_n_6\,
      CO(0) => \write_count_reg[8]_i_2_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \write_count_reg[8]_i_2_n_8\,
      O(6) => \write_count_reg[8]_i_2_n_9\,
      O(5) => \write_count_reg[8]_i_2_n_10\,
      O(4) => \write_count_reg[8]_i_2_n_11\,
      O(3) => \write_count_reg[8]_i_2_n_12\,
      O(2) => \write_count_reg[8]_i_2_n_13\,
      O(1) => \write_count_reg[8]_i_2_n_14\,
      O(0) => \write_count_reg[8]_i_2_n_15\,
      S(7 downto 0) => \write_count_reg_n_0_\(8 downto 1)
    );
\write_count_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => \countAddrSent[39]_i_1_n_0\,
      D => \write_count[9]_i_1_n_0\,
      Q => \write_count_reg_n_0_\(9),
      R => '0'
    );
\write_max_queue_size_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(0),
      Q => write_max_queue_size(0),
      R => '0'
    );
\write_max_queue_size_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(10),
      Q => write_max_queue_size(10),
      R => '0'
    );
\write_max_queue_size_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(11),
      Q => write_max_queue_size(11),
      R => '0'
    );
\write_max_queue_size_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(12),
      Q => write_max_queue_size(12),
      R => '0'
    );
\write_max_queue_size_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(13),
      Q => write_max_queue_size(13),
      R => '0'
    );
\write_max_queue_size_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(14),
      Q => write_max_queue_size(14),
      R => '0'
    );
\write_max_queue_size_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(15),
      Q => write_max_queue_size(15),
      R => '0'
    );
\write_max_queue_size_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(16),
      Q => write_max_queue_size(16),
      R => '0'
    );
\write_max_queue_size_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(17),
      Q => write_max_queue_size(17),
      R => '0'
    );
\write_max_queue_size_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(18),
      Q => write_max_queue_size(18),
      R => '0'
    );
\write_max_queue_size_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(19),
      Q => write_max_queue_size(19),
      R => '0'
    );
\write_max_queue_size_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(1),
      Q => write_max_queue_size(1),
      R => '0'
    );
\write_max_queue_size_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(20),
      Q => write_max_queue_size(20),
      R => '0'
    );
\write_max_queue_size_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(21),
      Q => write_max_queue_size(21),
      R => '0'
    );
\write_max_queue_size_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(22),
      Q => write_max_queue_size(22),
      R => '0'
    );
\write_max_queue_size_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(23),
      Q => write_max_queue_size(23),
      R => '0'
    );
\write_max_queue_size_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(24),
      Q => write_max_queue_size(24),
      R => '0'
    );
\write_max_queue_size_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(25),
      Q => write_max_queue_size(25),
      R => '0'
    );
\write_max_queue_size_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(26),
      Q => write_max_queue_size(26),
      R => '0'
    );
\write_max_queue_size_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(27),
      Q => write_max_queue_size(27),
      R => '0'
    );
\write_max_queue_size_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(28),
      Q => write_max_queue_size(28),
      R => '0'
    );
\write_max_queue_size_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(29),
      Q => write_max_queue_size(29),
      R => '0'
    );
\write_max_queue_size_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(2),
      Q => write_max_queue_size(2),
      R => '0'
    );
\write_max_queue_size_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(30),
      Q => write_max_queue_size(30),
      R => '0'
    );
\write_max_queue_size_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(31),
      Q => write_max_queue_size(31),
      R => '0'
    );
\write_max_queue_size_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(3),
      Q => write_max_queue_size(3),
      R => '0'
    );
\write_max_queue_size_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(4),
      Q => write_max_queue_size(4),
      R => '0'
    );
\write_max_queue_size_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(5),
      Q => write_max_queue_size(5),
      R => '0'
    );
\write_max_queue_size_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(6),
      Q => write_max_queue_size(6),
      R => '0'
    );
\write_max_queue_size_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(7),
      Q => write_max_queue_size(7),
      R => '0'
    );
\write_max_queue_size_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(8),
      Q => write_max_queue_size(8),
      R => '0'
    );
\write_max_queue_size_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_max_queue_size__0\(9),
      Q => write_max_queue_size(9),
      R => '0'
    );
\write_start_DDR_address_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(0),
      Q => write_start_DDR_address(0),
      R => '0'
    );
\write_start_DDR_address_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(10),
      Q => write_start_DDR_address(10),
      R => '0'
    );
\write_start_DDR_address_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(11),
      Q => write_start_DDR_address(11),
      R => '0'
    );
\write_start_DDR_address_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(12),
      Q => write_start_DDR_address(12),
      R => '0'
    );
\write_start_DDR_address_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(13),
      Q => write_start_DDR_address(13),
      R => '0'
    );
\write_start_DDR_address_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(14),
      Q => write_start_DDR_address(14),
      R => '0'
    );
\write_start_DDR_address_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(15),
      Q => write_start_DDR_address(15),
      R => '0'
    );
\write_start_DDR_address_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(16),
      Q => write_start_DDR_address(16),
      R => '0'
    );
\write_start_DDR_address_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(17),
      Q => write_start_DDR_address(17),
      R => '0'
    );
\write_start_DDR_address_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(18),
      Q => write_start_DDR_address(18),
      R => '0'
    );
\write_start_DDR_address_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(19),
      Q => write_start_DDR_address(19),
      R => '0'
    );
\write_start_DDR_address_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(1),
      Q => write_start_DDR_address(1),
      R => '0'
    );
\write_start_DDR_address_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(20),
      Q => write_start_DDR_address(20),
      R => '0'
    );
\write_start_DDR_address_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(21),
      Q => write_start_DDR_address(21),
      R => '0'
    );
\write_start_DDR_address_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(22),
      Q => write_start_DDR_address(22),
      R => '0'
    );
\write_start_DDR_address_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(23),
      Q => write_start_DDR_address(23),
      R => '0'
    );
\write_start_DDR_address_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(24),
      Q => write_start_DDR_address(24),
      R => '0'
    );
\write_start_DDR_address_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(25),
      Q => write_start_DDR_address(25),
      R => '0'
    );
\write_start_DDR_address_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(26),
      Q => write_start_DDR_address(26),
      R => '0'
    );
\write_start_DDR_address_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(27),
      Q => write_start_DDR_address(27),
      R => '0'
    );
\write_start_DDR_address_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(28),
      Q => write_start_DDR_address(28),
      R => '0'
    );
\write_start_DDR_address_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(29),
      Q => write_start_DDR_address(29),
      R => '0'
    );
\write_start_DDR_address_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(2),
      Q => write_start_DDR_address(2),
      R => '0'
    );
\write_start_DDR_address_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(30),
      Q => write_start_DDR_address(30),
      R => '0'
    );
\write_start_DDR_address_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(31),
      Q => write_start_DDR_address(31),
      R => '0'
    );
\write_start_DDR_address_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(32),
      Q => write_start_DDR_address(32),
      R => '0'
    );
\write_start_DDR_address_reg[33]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(33),
      Q => write_start_DDR_address(33),
      R => '0'
    );
\write_start_DDR_address_reg[34]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(34),
      Q => write_start_DDR_address(34),
      R => '0'
    );
\write_start_DDR_address_reg[35]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(35),
      Q => write_start_DDR_address(35),
      R => '0'
    );
\write_start_DDR_address_reg[36]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(36),
      Q => write_start_DDR_address(36),
      R => '0'
    );
\write_start_DDR_address_reg[37]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(37),
      Q => write_start_DDR_address(37),
      R => '0'
    );
\write_start_DDR_address_reg[38]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(38),
      Q => write_start_DDR_address(38),
      R => '0'
    );
\write_start_DDR_address_reg[39]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(39),
      Q => write_start_DDR_address(39),
      R => '0'
    );
\write_start_DDR_address_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(3),
      Q => write_start_DDR_address(3),
      R => '0'
    );
\write_start_DDR_address_reg[40]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(40),
      Q => write_start_DDR_address(40),
      R => '0'
    );
\write_start_DDR_address_reg[41]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(41),
      Q => write_start_DDR_address(41),
      R => '0'
    );
\write_start_DDR_address_reg[42]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(42),
      Q => write_start_DDR_address(42),
      R => '0'
    );
\write_start_DDR_address_reg[43]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(43),
      Q => write_start_DDR_address(43),
      R => '0'
    );
\write_start_DDR_address_reg[44]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(44),
      Q => write_start_DDR_address(44),
      R => '0'
    );
\write_start_DDR_address_reg[45]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(45),
      Q => write_start_DDR_address(45),
      R => '0'
    );
\write_start_DDR_address_reg[46]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(46),
      Q => write_start_DDR_address(46),
      R => '0'
    );
\write_start_DDR_address_reg[47]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(47),
      Q => write_start_DDR_address(47),
      R => '0'
    );
\write_start_DDR_address_reg[48]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(48),
      Q => write_start_DDR_address(48),
      R => '0'
    );
\write_start_DDR_address_reg[49]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(49),
      Q => write_start_DDR_address(49),
      R => '0'
    );
\write_start_DDR_address_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(4),
      Q => write_start_DDR_address(4),
      R => '0'
    );
\write_start_DDR_address_reg[50]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(50),
      Q => write_start_DDR_address(50),
      R => '0'
    );
\write_start_DDR_address_reg[51]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(51),
      Q => write_start_DDR_address(51),
      R => '0'
    );
\write_start_DDR_address_reg[52]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(52),
      Q => write_start_DDR_address(52),
      R => '0'
    );
\write_start_DDR_address_reg[53]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(53),
      Q => write_start_DDR_address(53),
      R => '0'
    );
\write_start_DDR_address_reg[54]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(54),
      Q => write_start_DDR_address(54),
      R => '0'
    );
\write_start_DDR_address_reg[55]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(55),
      Q => write_start_DDR_address(55),
      R => '0'
    );
\write_start_DDR_address_reg[56]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(56),
      Q => write_start_DDR_address(56),
      R => '0'
    );
\write_start_DDR_address_reg[57]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(57),
      Q => write_start_DDR_address(57),
      R => '0'
    );
\write_start_DDR_address_reg[58]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(58),
      Q => write_start_DDR_address(58),
      R => '0'
    );
\write_start_DDR_address_reg[59]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(59),
      Q => write_start_DDR_address(59),
      R => '0'
    );
\write_start_DDR_address_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(5),
      Q => write_start_DDR_address(5),
      R => '0'
    );
\write_start_DDR_address_reg[60]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(60),
      Q => write_start_DDR_address(60),
      R => '0'
    );
\write_start_DDR_address_reg[61]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(61),
      Q => write_start_DDR_address(61),
      R => '0'
    );
\write_start_DDR_address_reg[62]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(62),
      Q => write_start_DDR_address(62),
      R => '0'
    );
\write_start_DDR_address_reg[63]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(63),
      Q => write_start_DDR_address(63),
      R => '0'
    );
\write_start_DDR_address_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(6),
      Q => write_start_DDR_address(6),
      R => '0'
    );
\write_start_DDR_address_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(7),
      Q => write_start_DDR_address(7),
      R => '0'
    );
\write_start_DDR_address_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(8),
      Q => write_start_DDR_address(8),
      R => '0'
    );
\write_start_DDR_address_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_start_DDR_address__0\(9),
      Q => write_start_DDR_address(9),
      R => '0'
    );
\write_step_DDR_address_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(0),
      Q => write_step_DDR_address(0),
      R => '0'
    );
\write_step_DDR_address_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(10),
      Q => write_step_DDR_address(10),
      R => '0'
    );
\write_step_DDR_address_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(11),
      Q => write_step_DDR_address(11),
      R => '0'
    );
\write_step_DDR_address_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(12),
      Q => write_step_DDR_address(12),
      R => '0'
    );
\write_step_DDR_address_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(13),
      Q => write_step_DDR_address(13),
      R => '0'
    );
\write_step_DDR_address_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(14),
      Q => write_step_DDR_address(14),
      R => '0'
    );
\write_step_DDR_address_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(15),
      Q => write_step_DDR_address(15),
      R => '0'
    );
\write_step_DDR_address_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(16),
      Q => write_step_DDR_address(16),
      R => '0'
    );
\write_step_DDR_address_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(17),
      Q => write_step_DDR_address(17),
      R => '0'
    );
\write_step_DDR_address_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(18),
      Q => write_step_DDR_address(18),
      R => '0'
    );
\write_step_DDR_address_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(19),
      Q => write_step_DDR_address(19),
      R => '0'
    );
\write_step_DDR_address_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(1),
      Q => write_step_DDR_address(1),
      R => '0'
    );
\write_step_DDR_address_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(20),
      Q => write_step_DDR_address(20),
      R => '0'
    );
\write_step_DDR_address_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(21),
      Q => write_step_DDR_address(21),
      R => '0'
    );
\write_step_DDR_address_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(22),
      Q => write_step_DDR_address(22),
      R => '0'
    );
\write_step_DDR_address_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(23),
      Q => write_step_DDR_address(23),
      R => '0'
    );
\write_step_DDR_address_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(24),
      Q => write_step_DDR_address(24),
      R => '0'
    );
\write_step_DDR_address_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(25),
      Q => write_step_DDR_address(25),
      R => '0'
    );
\write_step_DDR_address_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(26),
      Q => write_step_DDR_address(26),
      R => '0'
    );
\write_step_DDR_address_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(27),
      Q => write_step_DDR_address(27),
      R => '0'
    );
\write_step_DDR_address_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(28),
      Q => write_step_DDR_address(28),
      R => '0'
    );
\write_step_DDR_address_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(29),
      Q => write_step_DDR_address(29),
      R => '0'
    );
\write_step_DDR_address_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(2),
      Q => write_step_DDR_address(2),
      R => '0'
    );
\write_step_DDR_address_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(30),
      Q => write_step_DDR_address(30),
      R => '0'
    );
\write_step_DDR_address_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(31),
      Q => write_step_DDR_address(31),
      R => '0'
    );
\write_step_DDR_address_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(3),
      Q => write_step_DDR_address(3),
      R => '0'
    );
\write_step_DDR_address_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(4),
      Q => write_step_DDR_address(4),
      R => '0'
    );
\write_step_DDR_address_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(5),
      Q => write_step_DDR_address(5),
      R => '0'
    );
\write_step_DDR_address_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(6),
      Q => write_step_DDR_address(6),
      R => '0'
    );
\write_step_DDR_address_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(7),
      Q => write_step_DDR_address(7),
      R => '0'
    );
\write_step_DDR_address_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(8),
      Q => write_step_DDR_address(8),
      R => '0'
    );
\write_step_DDR_address_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_step_DDR_address__0\(9),
      Q => write_step_DDR_address(9),
      R => '0'
    );
\write_ticks[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[0]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[0]_i_1_n_0\
    );
\write_ticks[0]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"007F"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks(0),
      O => \write_ticks[0]_i_2_n_0\
    );
\write_ticks[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[10]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[10]_i_1_n_0\
    );
\write_ticks[10]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(10),
      O => \write_ticks[10]_i_2_n_0\
    );
\write_ticks[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[11]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[11]_i_1_n_0\
    );
\write_ticks[11]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(11),
      O => \write_ticks[11]_i_2_n_0\
    );
\write_ticks[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[12]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[12]_i_1_n_0\
    );
\write_ticks[12]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(12),
      O => \write_ticks[12]_i_2_n_0\
    );
\write_ticks[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[13]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[13]_i_1_n_0\
    );
\write_ticks[13]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(13),
      O => \write_ticks[13]_i_2_n_0\
    );
\write_ticks[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[14]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[14]_i_1_n_0\
    );
\write_ticks[14]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(14),
      O => \write_ticks[14]_i_2_n_0\
    );
\write_ticks[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[15]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[15]_i_1_n_0\
    );
\write_ticks[15]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(15),
      O => \write_ticks[15]_i_2_n_0\
    );
\write_ticks[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[16]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[16]_i_1_n_0\
    );
\write_ticks[16]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(16),
      O => \write_ticks[16]_i_2_n_0\
    );
\write_ticks[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[17]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[17]_i_1_n_0\
    );
\write_ticks[17]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(17),
      O => \write_ticks[17]_i_2_n_0\
    );
\write_ticks[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[18]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[18]_i_1_n_0\
    );
\write_ticks[18]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(18),
      O => \write_ticks[18]_i_2_n_0\
    );
\write_ticks[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[19]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[19]_i_1_n_0\
    );
\write_ticks[19]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(19),
      O => \write_ticks[19]_i_2_n_0\
    );
\write_ticks[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[1]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[1]_i_1_n_0\
    );
\write_ticks[1]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(1),
      O => \write_ticks[1]_i_2_n_0\
    );
\write_ticks[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[20]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[20]_i_1_n_0\
    );
\write_ticks[20]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(20),
      O => \write_ticks[20]_i_2_n_0\
    );
\write_ticks[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[21]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[21]_i_1_n_0\
    );
\write_ticks[21]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(21),
      O => \write_ticks[21]_i_2_n_0\
    );
\write_ticks[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[22]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[22]_i_1_n_0\
    );
\write_ticks[22]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(22),
      O => \write_ticks[22]_i_2_n_0\
    );
\write_ticks[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[23]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[23]_i_1_n_0\
    );
\write_ticks[23]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(23),
      O => \write_ticks[23]_i_2_n_0\
    );
\write_ticks[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[24]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[24]_i_1_n_0\
    );
\write_ticks[24]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(24),
      O => \write_ticks[24]_i_2_n_0\
    );
\write_ticks[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[25]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[25]_i_1_n_0\
    );
\write_ticks[25]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(25),
      O => \write_ticks[25]_i_2_n_0\
    );
\write_ticks[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[26]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[26]_i_1_n_0\
    );
\write_ticks[26]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(26),
      O => \write_ticks[26]_i_2_n_0\
    );
\write_ticks[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[27]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[27]_i_1_n_0\
    );
\write_ticks[27]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(27),
      O => \write_ticks[27]_i_2_n_0\
    );
\write_ticks[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[28]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[28]_i_1_n_0\
    );
\write_ticks[28]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(28),
      O => \write_ticks[28]_i_2_n_0\
    );
\write_ticks[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[29]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[29]_i_1_n_0\
    );
\write_ticks[29]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(29),
      O => \write_ticks[29]_i_2_n_0\
    );
\write_ticks[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[2]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[2]_i_1_n_0\
    );
\write_ticks[2]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(2),
      O => \write_ticks[2]_i_2_n_0\
    );
\write_ticks[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[30]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[30]_i_1_n_0\
    );
\write_ticks[30]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(30),
      O => \write_ticks[30]_i_2_n_0\
    );
\write_ticks[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[31]_i_3_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[31]_i_1_n_0\
    );
\write_ticks[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => active_runtime0,
      I1 => active_runtime1,
      I2 => active_blocking,
      I3 => \countDataReceived[39]_i_7_n_0\,
      I4 => active_runtime2,
      I5 => active_runtime3,
      O => active_runtime
    );
\write_ticks[31]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(31),
      O => \write_ticks[31]_i_3_n_0\
    );
\write_ticks[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[3]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[3]_i_1_n_0\
    );
\write_ticks[3]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(3),
      O => \write_ticks[3]_i_2_n_0\
    );
\write_ticks[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[4]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[4]_i_1_n_0\
    );
\write_ticks[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(4),
      O => \write_ticks[4]_i_2_n_0\
    );
\write_ticks[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[5]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[5]_i_1_n_0\
    );
\write_ticks[5]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(5),
      O => \write_ticks[5]_i_2_n_0\
    );
\write_ticks[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[6]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[6]_i_1_n_0\
    );
\write_ticks[6]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(6),
      O => \write_ticks[6]_i_2_n_0\
    );
\write_ticks[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[7]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[7]_i_1_n_0\
    );
\write_ticks[7]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(7),
      O => \write_ticks[7]_i_2_n_0\
    );
\write_ticks[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[8]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[8]_i_1_n_0\
    );
\write_ticks[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(8),
      O => \write_ticks[8]_i_2_n_0\
    );
\write_ticks[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"088888880CCCCCCC"
    )
        port map (
      I0 => active_runtime,
      I1 => \write_ticks[9]_i_2_n_0\,
      I2 => active_blocking,
      I3 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I4 => write_ticks1,
      I5 => reset_cmd,
      O => \write_ticks[9]_i_1_n_0\
    );
\write_ticks[9]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F00"
    )
        port map (
      I0 => \countAddrToBeSent_reg[39]_i_7_n_0\,
      I1 => \countAddrToBeSent_reg[39]_i_4_n_4\,
      I2 => active_write,
      I3 => write_ticks2(9),
      O => \write_ticks[9]_i_2_n_0\
    );
\write_ticks_per_burst_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(0),
      Q => write_ticks_per_burst(0),
      R => '0'
    );
\write_ticks_per_burst_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(10),
      Q => write_ticks_per_burst(10),
      R => '0'
    );
\write_ticks_per_burst_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(11),
      Q => write_ticks_per_burst(11),
      R => '0'
    );
\write_ticks_per_burst_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(12),
      Q => write_ticks_per_burst(12),
      R => '0'
    );
\write_ticks_per_burst_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(13),
      Q => write_ticks_per_burst(13),
      R => '0'
    );
\write_ticks_per_burst_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(14),
      Q => write_ticks_per_burst(14),
      R => '0'
    );
\write_ticks_per_burst_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(15),
      Q => write_ticks_per_burst(15),
      R => '0'
    );
\write_ticks_per_burst_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(16),
      Q => write_ticks_per_burst(16),
      R => '0'
    );
\write_ticks_per_burst_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(17),
      Q => write_ticks_per_burst(17),
      R => '0'
    );
\write_ticks_per_burst_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(18),
      Q => write_ticks_per_burst(18),
      R => '0'
    );
\write_ticks_per_burst_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(19),
      Q => write_ticks_per_burst(19),
      R => '0'
    );
\write_ticks_per_burst_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(1),
      Q => write_ticks_per_burst(1),
      R => '0'
    );
\write_ticks_per_burst_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(20),
      Q => write_ticks_per_burst(20),
      R => '0'
    );
\write_ticks_per_burst_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(21),
      Q => write_ticks_per_burst(21),
      R => '0'
    );
\write_ticks_per_burst_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(22),
      Q => write_ticks_per_burst(22),
      R => '0'
    );
\write_ticks_per_burst_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(23),
      Q => write_ticks_per_burst(23),
      R => '0'
    );
\write_ticks_per_burst_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(24),
      Q => write_ticks_per_burst(24),
      R => '0'
    );
\write_ticks_per_burst_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(25),
      Q => write_ticks_per_burst(25),
      R => '0'
    );
\write_ticks_per_burst_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(26),
      Q => write_ticks_per_burst(26),
      R => '0'
    );
\write_ticks_per_burst_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(27),
      Q => write_ticks_per_burst(27),
      R => '0'
    );
\write_ticks_per_burst_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(28),
      Q => write_ticks_per_burst(28),
      R => '0'
    );
\write_ticks_per_burst_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(29),
      Q => write_ticks_per_burst(29),
      R => '0'
    );
\write_ticks_per_burst_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(2),
      Q => write_ticks_per_burst(2),
      R => '0'
    );
\write_ticks_per_burst_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(30),
      Q => write_ticks_per_burst(30),
      R => '0'
    );
\write_ticks_per_burst_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(31),
      Q => write_ticks_per_burst(31),
      R => '0'
    );
\write_ticks_per_burst_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(3),
      Q => write_ticks_per_burst(3),
      R => '0'
    );
\write_ticks_per_burst_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(4),
      Q => write_ticks_per_burst(4),
      R => '0'
    );
\write_ticks_per_burst_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(5),
      Q => write_ticks_per_burst(5),
      R => '0'
    );
\write_ticks_per_burst_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(6),
      Q => write_ticks_per_burst(6),
      R => '0'
    );
\write_ticks_per_burst_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(7),
      Q => write_ticks_per_burst(7),
      R => '0'
    );
\write_ticks_per_burst_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(8),
      Q => write_ticks_per_burst(8),
      R => '0'
    );
\write_ticks_per_burst_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => axi_c_write_valid,
      D => \write_ticks_per_burst__0\(9),
      Q => write_ticks_per_burst(9),
      R => '0'
    );
\write_ticks_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[0]_i_1_n_0\,
      Q => write_ticks(0),
      R => '0'
    );
\write_ticks_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[10]_i_1_n_0\,
      Q => write_ticks(10),
      R => '0'
    );
\write_ticks_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[11]_i_1_n_0\,
      Q => write_ticks(11),
      R => '0'
    );
\write_ticks_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[12]_i_1_n_0\,
      Q => write_ticks(12),
      R => '0'
    );
\write_ticks_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[13]_i_1_n_0\,
      Q => write_ticks(13),
      R => '0'
    );
\write_ticks_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[14]_i_1_n_0\,
      Q => write_ticks(14),
      R => '0'
    );
\write_ticks_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[15]_i_1_n_0\,
      Q => write_ticks(15),
      R => '0'
    );
\write_ticks_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[16]_i_1_n_0\,
      Q => write_ticks(16),
      R => '0'
    );
\write_ticks_reg[16]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_ticks_reg[8]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \write_ticks_reg[16]_i_3_n_0\,
      CO(6) => \write_ticks_reg[16]_i_3_n_1\,
      CO(5) => \write_ticks_reg[16]_i_3_n_2\,
      CO(4) => \write_ticks_reg[16]_i_3_n_3\,
      CO(3) => \NLW_write_ticks_reg[16]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \write_ticks_reg[16]_i_3_n_5\,
      CO(1) => \write_ticks_reg[16]_i_3_n_6\,
      CO(0) => \write_ticks_reg[16]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => write_ticks2(16 downto 9),
      S(7 downto 0) => write_ticks(16 downto 9)
    );
\write_ticks_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[17]_i_1_n_0\,
      Q => write_ticks(17),
      R => '0'
    );
\write_ticks_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[18]_i_1_n_0\,
      Q => write_ticks(18),
      R => '0'
    );
\write_ticks_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[19]_i_1_n_0\,
      Q => write_ticks(19),
      R => '0'
    );
\write_ticks_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[1]_i_1_n_0\,
      Q => write_ticks(1),
      R => '0'
    );
\write_ticks_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[20]_i_1_n_0\,
      Q => write_ticks(20),
      R => '0'
    );
\write_ticks_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[21]_i_1_n_0\,
      Q => write_ticks(21),
      R => '0'
    );
\write_ticks_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[22]_i_1_n_0\,
      Q => write_ticks(22),
      R => '0'
    );
\write_ticks_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[23]_i_1_n_0\,
      Q => write_ticks(23),
      R => '0'
    );
\write_ticks_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[24]_i_1_n_0\,
      Q => write_ticks(24),
      R => '0'
    );
\write_ticks_reg[24]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_ticks_reg[16]_i_3_n_0\,
      CI_TOP => '0',
      CO(7) => \write_ticks_reg[24]_i_3_n_0\,
      CO(6) => \write_ticks_reg[24]_i_3_n_1\,
      CO(5) => \write_ticks_reg[24]_i_3_n_2\,
      CO(4) => \write_ticks_reg[24]_i_3_n_3\,
      CO(3) => \NLW_write_ticks_reg[24]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \write_ticks_reg[24]_i_3_n_5\,
      CO(1) => \write_ticks_reg[24]_i_3_n_6\,
      CO(0) => \write_ticks_reg[24]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => write_ticks2(24 downto 17),
      S(7 downto 0) => write_ticks(24 downto 17)
    );
\write_ticks_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[25]_i_1_n_0\,
      Q => write_ticks(25),
      R => '0'
    );
\write_ticks_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[26]_i_1_n_0\,
      Q => write_ticks(26),
      R => '0'
    );
\write_ticks_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[27]_i_1_n_0\,
      Q => write_ticks(27),
      R => '0'
    );
\write_ticks_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[28]_i_1_n_0\,
      Q => write_ticks(28),
      R => '0'
    );
\write_ticks_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[29]_i_1_n_0\,
      Q => write_ticks(29),
      R => '0'
    );
\write_ticks_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[2]_i_1_n_0\,
      Q => write_ticks(2),
      R => '0'
    );
\write_ticks_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[30]_i_1_n_0\,
      Q => write_ticks(30),
      R => '0'
    );
\write_ticks_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[31]_i_1_n_0\,
      Q => write_ticks(31),
      R => '0'
    );
\write_ticks_reg[31]_i_4\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => \write_ticks_reg[24]_i_3_n_0\,
      CI_TOP => '0',
      CO(7 downto 6) => \NLW_write_ticks_reg[31]_i_4_CO_UNCONNECTED\(7 downto 6),
      CO(5) => \write_ticks_reg[31]_i_4_n_2\,
      CO(4) => \write_ticks_reg[31]_i_4_n_3\,
      CO(3) => \NLW_write_ticks_reg[31]_i_4_CO_UNCONNECTED\(3),
      CO(2) => \write_ticks_reg[31]_i_4_n_5\,
      CO(1) => \write_ticks_reg[31]_i_4_n_6\,
      CO(0) => \write_ticks_reg[31]_i_4_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7) => \NLW_write_ticks_reg[31]_i_4_O_UNCONNECTED\(7),
      O(6 downto 0) => write_ticks2(31 downto 25),
      S(7) => '0',
      S(6 downto 0) => write_ticks(31 downto 25)
    );
\write_ticks_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[3]_i_1_n_0\,
      Q => write_ticks(3),
      R => '0'
    );
\write_ticks_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[4]_i_1_n_0\,
      Q => write_ticks(4),
      R => '0'
    );
\write_ticks_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[5]_i_1_n_0\,
      Q => write_ticks(5),
      R => '0'
    );
\write_ticks_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[6]_i_1_n_0\,
      Q => write_ticks(6),
      R => '0'
    );
\write_ticks_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[7]_i_1_n_0\,
      Q => write_ticks(7),
      R => '0'
    );
\write_ticks_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[8]_i_1_n_0\,
      Q => write_ticks(8),
      R => '0'
    );
\write_ticks_reg[8]_i_3\: unisim.vcomponents.CARRY8
    generic map(
      CARRY_TYPE => "SINGLE_CY8"
    )
        port map (
      CI => write_ticks(0),
      CI_TOP => '0',
      CO(7) => \write_ticks_reg[8]_i_3_n_0\,
      CO(6) => \write_ticks_reg[8]_i_3_n_1\,
      CO(5) => \write_ticks_reg[8]_i_3_n_2\,
      CO(4) => \write_ticks_reg[8]_i_3_n_3\,
      CO(3) => \NLW_write_ticks_reg[8]_i_3_CO_UNCONNECTED\(3),
      CO(2) => \write_ticks_reg[8]_i_3_n_5\,
      CO(1) => \write_ticks_reg[8]_i_3_n_6\,
      CO(0) => \write_ticks_reg[8]_i_3_n_7\,
      DI(7 downto 0) => B"00000000",
      O(7 downto 0) => write_ticks2(8 downto 1),
      S(7 downto 0) => write_ticks(8 downto 1)
    );
\write_ticks_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => clk,
      CE => '1',
      D => \write_ticks[9]_i_1_n_0\,
      Q => write_ticks(9),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_MemoryTestBlock is
  port (
    clk : in STD_LOGIC;
    m_ddr_axi_ARREADY : in STD_LOGIC;
    m_ddr_axi_ARVALID : out STD_LOGIC;
    m_ddr_axi_AWREADY : in STD_LOGIC;
    m_ddr_axi_AWVALID : out STD_LOGIC;
    m_ddr_axi_BREADY : out STD_LOGIC;
    m_ddr_axi_BVALID : in STD_LOGIC;
    m_ddr_axi_RLAST : in STD_LOGIC;
    m_ddr_axi_RREADY : out STD_LOGIC;
    m_ddr_axi_RVALID : in STD_LOGIC;
    m_ddr_axi_WLAST : out STD_LOGIC;
    m_ddr_axi_WREADY : in STD_LOGIC;
    m_ddr_axi_WVALID : out STD_LOGIC;
    rstn : in STD_LOGIC;
    s_axi_control_ARREADY : out STD_LOGIC;
    s_axi_control_ARVALID : in STD_LOGIC;
    s_axi_control_AWREADY : out STD_LOGIC;
    s_axi_control_AWVALID : in STD_LOGIC;
    s_axi_control_BREADY : in STD_LOGIC;
    s_axi_control_BVALID : out STD_LOGIC;
    s_axi_control_RREADY : in STD_LOGIC;
    s_axi_control_RVALID : out STD_LOGIC;
    s_axi_control_WREADY : out STD_LOGIC;
    s_axi_control_WVALID : in STD_LOGIC;
    m_ddr_axi_ARADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_ddr_axi_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_ddr_axi_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_ARUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_AWADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_ddr_axi_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_ddr_axi_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_AWUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_RDATA : in STD_LOGIC_VECTOR ( 127 downto 0 );
    m_ddr_axi_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_WDATA : out STD_LOGIC_VECTOR ( 127 downto 0 );
    m_ddr_axi_WID : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_WSTRB : out STD_LOGIC_VECTOR ( 15 downto 0 );
    m_ddr_axi_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_control_ARADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_AWADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_control_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_control_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_WSTRB : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_MemoryTestBlock;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_MemoryTestBlock is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal countAddrSent1 : STD_LOGIC;
  signal nolabel_line179_n_0 : STD_LOGIC;
  signal nolabel_line179_n_2 : STD_LOGIC;
  signal nolabel_line179_n_4 : STD_LOGIC;
  signal readData : STD_LOGIC_VECTOR ( 127 downto 0 );
  signal readDataLast : STD_LOGIC;
  signal readDataValid : STD_LOGIC;
  signal toReadDataAddress : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal toReadDataBusy : STD_LOGIC;
  signal toReadDataSize : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal toReadDataValid : STD_LOGIC;
  signal toReadDataValid1 : STD_LOGIC;
  signal tpg_n_194 : STD_LOGIC;
  signal tpg_n_361 : STD_LOGIC;
  signal writeAbusy : STD_LOGIC;
  signal writeAddress : STD_LOGIC_VECTOR ( 63 downto 0 );
  signal writeAsize : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal writeAvalid : STD_LOGIC;
  signal writeDbusy : STD_LOGIC;
  signal writeDdata : STD_LOGIC_VECTOR ( 127 downto 0 );
  signal writeDlast : STD_LOGIC;
  signal writeDvalid : STD_LOGIC;
  signal writeDvalid0 : STD_LOGIC;
begin
  m_ddr_axi_ARUSER(0) <= \<const0>\;
  m_ddr_axi_AWID(0) <= \<const0>\;
  m_ddr_axi_AWUSER(0) <= \<const0>\;
  m_ddr_axi_BREADY <= \<const1>\;
  m_ddr_axi_WID(0) <= \<const0>\;
  m_ddr_axi_WSTRB(15) <= \<const1>\;
  m_ddr_axi_WSTRB(14) <= \<const1>\;
  m_ddr_axi_WSTRB(13) <= \<const1>\;
  m_ddr_axi_WSTRB(12) <= \<const1>\;
  m_ddr_axi_WSTRB(11) <= \<const1>\;
  m_ddr_axi_WSTRB(10) <= \<const1>\;
  m_ddr_axi_WSTRB(9) <= \<const1>\;
  m_ddr_axi_WSTRB(8) <= \<const1>\;
  m_ddr_axi_WSTRB(7) <= \<const1>\;
  m_ddr_axi_WSTRB(6) <= \<const1>\;
  m_ddr_axi_WSTRB(5) <= \<const1>\;
  m_ddr_axi_WSTRB(4) <= \<const1>\;
  m_ddr_axi_WSTRB(3) <= \<const1>\;
  m_ddr_axi_WSTRB(2) <= \<const1>\;
  m_ddr_axi_WSTRB(1) <= \<const1>\;
  m_ddr_axi_WSTRB(0) <= \<const1>\;
  m_ddr_axi_WUSER(0) <= \<const0>\;
  s_axi_control_BRESP(1) <= \<const0>\;
  s_axi_control_BRESP(0) <= \<const0>\;
  s_axi_control_RRESP(1) <= \<const0>\;
  s_axi_control_RRESP(0) <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
nolabel_line179: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_AXI_Wrapper
     port map (
      CO(0) => toReadDataValid1,
      E(0) => nolabel_line179_n_2,
      O32 => tpg_n_361,
      Q(7 downto 0) => writeAsize(7 downto 0),
      clk => clk,
      \countAddrToBeSent_reg[38]\(0) => countAddrSent1,
      din(128 downto 1) => m_ddr_axi_RDATA(127 downto 0),
      din(0) => m_ddr_axi_RLAST,
      dout(128 downto 1) => m_ddr_axi_WDATA(127 downto 0),
      dout(0) => m_ddr_axi_WLAST,
      \m_ddr_axi_ARADDR[63]\(71 downto 8) => m_ddr_axi_ARADDR(63 downto 0),
      \m_ddr_axi_ARADDR[63]\(7 downto 0) => m_ddr_axi_ARLEN(7 downto 0),
      m_ddr_axi_ARID(0) => m_ddr_axi_ARID(0),
      m_ddr_axi_ARREADY => m_ddr_axi_ARREADY,
      m_ddr_axi_ARVALID => m_ddr_axi_ARVALID,
      \m_ddr_axi_AWADDR[63]\(71 downto 8) => m_ddr_axi_AWADDR(63 downto 0),
      \m_ddr_axi_AWADDR[63]\(7 downto 0) => m_ddr_axi_AWLEN(7 downto 0),
      m_ddr_axi_AWREADY => m_ddr_axi_AWREADY,
      m_ddr_axi_AWVALID => m_ddr_axi_AWVALID,
      m_ddr_axi_RREADY => m_ddr_axi_RREADY,
      m_ddr_axi_RRESP(1 downto 0) => m_ddr_axi_RRESP(1 downto 0),
      m_ddr_axi_RVALID => m_ddr_axi_RVALID,
      m_ddr_axi_WREADY => m_ddr_axi_WREADY,
      m_ddr_axi_WVALID => m_ddr_axi_WVALID,
      readData(127 downto 0) => readData(127 downto 0),
      readDataLast => readDataLast,
      readDataValid => readDataValid,
      srst => tpg_n_194,
      toReadDataAddress(63 downto 0) => toReadDataAddress(63 downto 0),
      toReadDataBusy => toReadDataBusy,
      \toReadDataSize_reg[7]\(7 downto 0) => toReadDataSize(7 downto 0),
      toReadDataValid => toReadDataValid,
      writeAbusy => writeAbusy,
      writeAddress(63 downto 0) => writeAddress(63 downto 0),
      writeAddress_reg(63) => nolabel_line179_n_4,
      writeAvalid => writeAvalid,
      writeDbusy => writeDbusy,
      \writeDdata_reg[127]\(127 downto 0) => writeDdata(127 downto 0),
      writeDlast => writeDlast,
      writeDlast_reg => nolabel_line179_n_0,
      writeDvalid => writeDvalid,
      writeDvalid0 => writeDvalid0
    );
tpg: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_TestPatternGenerator
     port map (
      CO(0) => toReadDataValid1,
      D(127 downto 0) => readData(127 downto 0),
      E(0) => nolabel_line179_n_2,
      O32 => tpg_n_361,
      Q(21 downto 19) => m_ddr_axi_AWSIZE(2 downto 0),
      Q(18 downto 16) => m_ddr_axi_AWPROT(2 downto 0),
      Q(15 downto 14) => m_ddr_axi_AWBURST(1 downto 0),
      Q(13 downto 12) => m_ddr_axi_AWLOCK(1 downto 0),
      Q(11 downto 8) => m_ddr_axi_AWCACHE(3 downto 0),
      Q(7 downto 4) => m_ddr_axi_AWQOS(3 downto 0),
      Q(3 downto 0) => m_ddr_axi_AWREGION(3 downto 0),
      \axi_ARID_reg[0]\(7 downto 0) => toReadDataSize(7 downto 0),
      clk => clk,
      \countAddrSent_reg[1]_0\(0) => countAddrSent1,
      \countAddrToBeSent_reg[38]_0\ => nolabel_line179_n_4,
      \m_ddr_axi_ARSIZE[2]\(21 downto 19) => m_ddr_axi_ARSIZE(2 downto 0),
      \m_ddr_axi_ARSIZE[2]\(18 downto 16) => m_ddr_axi_ARPROT(2 downto 0),
      \m_ddr_axi_ARSIZE[2]\(15 downto 14) => m_ddr_axi_ARBURST(1 downto 0),
      \m_ddr_axi_ARSIZE[2]\(13 downto 12) => m_ddr_axi_ARLOCK(1 downto 0),
      \m_ddr_axi_ARSIZE[2]\(11 downto 8) => m_ddr_axi_ARCACHE(3 downto 0),
      \m_ddr_axi_ARSIZE[2]\(7 downto 4) => m_ddr_axi_ARQOS(3 downto 0),
      \m_ddr_axi_ARSIZE[2]\(3 downto 0) => m_ddr_axi_ARREGION(3 downto 0),
      readDataLast => readDataLast,
      readDataValid => readDataValid,
      rstn => rstn,
      s_axi_control_ARADDR(6 downto 0) => s_axi_control_ARADDR(6 downto 0),
      s_axi_control_ARREADY => s_axi_control_ARREADY,
      s_axi_control_ARVALID => s_axi_control_ARVALID,
      s_axi_control_AWADDR(6 downto 0) => s_axi_control_AWADDR(6 downto 0),
      s_axi_control_AWREADY => s_axi_control_AWREADY,
      s_axi_control_AWVALID => s_axi_control_AWVALID,
      s_axi_control_BREADY => s_axi_control_BREADY,
      s_axi_control_BVALID => s_axi_control_BVALID,
      s_axi_control_RDATA(31 downto 0) => s_axi_control_RDATA(31 downto 0),
      s_axi_control_RREADY => s_axi_control_RREADY,
      s_axi_control_RVALID => s_axi_control_RVALID,
      s_axi_control_WDATA(31 downto 0) => s_axi_control_WDATA(31 downto 0),
      s_axi_control_WREADY => s_axi_control_WREADY,
      s_axi_control_WVALID => s_axi_control_WVALID,
      srst => tpg_n_194,
      toReadDataAddress(63 downto 0) => toReadDataAddress(63 downto 0),
      toReadDataBusy => toReadDataBusy,
      toReadDataValid => toReadDataValid,
      writeAbusy => writeAbusy,
      writeAddress(63 downto 0) => writeAddress(63 downto 0),
      \writeAddress_reg[63]_0\(7 downto 0) => writeAsize(7 downto 0),
      writeAvalid => writeAvalid,
      writeDbusy => writeDbusy,
      writeDlast => writeDlast,
      writeDlast_reg_0 => nolabel_line179_n_0,
      writeDvalid => writeDvalid,
      writeDvalid0 => writeDvalid0,
      writeDvalid_reg_0(127 downto 0) => writeDdata(127 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
  port (
    clk : in STD_LOGIC;
    m_ddr_axi_ARREADY : in STD_LOGIC;
    m_ddr_axi_ARVALID : out STD_LOGIC;
    m_ddr_axi_AWREADY : in STD_LOGIC;
    m_ddr_axi_AWVALID : out STD_LOGIC;
    m_ddr_axi_BREADY : out STD_LOGIC;
    m_ddr_axi_BVALID : in STD_LOGIC;
    m_ddr_axi_RLAST : in STD_LOGIC;
    m_ddr_axi_RREADY : out STD_LOGIC;
    m_ddr_axi_RVALID : in STD_LOGIC;
    m_ddr_axi_WLAST : out STD_LOGIC;
    m_ddr_axi_WREADY : in STD_LOGIC;
    m_ddr_axi_WVALID : out STD_LOGIC;
    rstn : in STD_LOGIC;
    s_axi_control_ARREADY : out STD_LOGIC;
    s_axi_control_ARVALID : in STD_LOGIC;
    s_axi_control_AWREADY : out STD_LOGIC;
    s_axi_control_AWVALID : in STD_LOGIC;
    s_axi_control_BREADY : in STD_LOGIC;
    s_axi_control_BVALID : out STD_LOGIC;
    s_axi_control_RREADY : in STD_LOGIC;
    s_axi_control_RVALID : out STD_LOGIC;
    s_axi_control_WREADY : out STD_LOGIC;
    s_axi_control_WVALID : in STD_LOGIC;
    m_ddr_axi_ARADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_ddr_axi_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_ddr_axi_ARLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_ARREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_ARUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_AWADDR : out STD_LOGIC_VECTOR ( 63 downto 0 );
    m_ddr_axi_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    m_ddr_axi_AWLOCK : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_AWREGION : out STD_LOGIC_VECTOR ( 3 downto 0 );
    m_ddr_axi_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m_ddr_axi_AWUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_RDATA : in STD_LOGIC_VECTOR ( 127 downto 0 );
    m_ddr_axi_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m_ddr_axi_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_WDATA : out STD_LOGIC_VECTOR ( 127 downto 0 );
    m_ddr_axi_WID : out STD_LOGIC_VECTOR ( 0 to 0 );
    m_ddr_axi_WSTRB : out STD_LOGIC_VECTOR ( 15 downto 0 );
    m_ddr_axi_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    s_axi_control_ARADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_AWADDR : in STD_LOGIC_VECTOR ( 6 downto 0 );
    s_axi_control_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_control_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    s_axi_control_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    s_axi_control_WSTRB : in STD_LOGIC_VECTOR ( 3 downto 0 )
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is "IP_Test_MemoryTestBlock_0_0,MemoryTestBlock,{}";
  attribute DowngradeIPIdentifiedWarnings : string;
  attribute DowngradeIPIdentifiedWarnings of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is "yes";
  attribute IP_DEFINITION_SOURCE : string;
  attribute IP_DEFINITION_SOURCE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is "package_project";
  attribute X_CORE_INFO : string;
  attribute X_CORE_INFO of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix : entity is "MemoryTestBlock,Vivado 2018.2.1";
end decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix;

architecture STRUCTURE of decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix is
  attribute black_box : string;
  attribute black_box of inst : label is "1";
  attribute X_INTERFACE_INFO : string;
  attribute X_INTERFACE_INFO of clk : signal is "xilinx.com:signal:clock:1.0 clk CLK";
  attribute X_INTERFACE_PARAMETER : string;
  attribute X_INTERFACE_PARAMETER of clk : signal is "XIL_INTERFACENAME clk, ASSOCIATED_BUSIF m_ddr_axi:s_axi_control, ASSOCIATED_RESET rstn, FREQ_HZ 99999999, PHASE 0.000, CLK_DOMAIN IP_Test_zynq_ultra_ps_e_0_0_pl_clk0";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARREADY : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARREADY";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARVALID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARVALID";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWREADY : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWREADY";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWVALID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWVALID";
  attribute X_INTERFACE_INFO of m_ddr_axi_BREADY : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi BREADY";
  attribute X_INTERFACE_INFO of m_ddr_axi_BVALID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi BVALID";
  attribute X_INTERFACE_INFO of m_ddr_axi_RLAST : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi RLAST";
  attribute X_INTERFACE_INFO of m_ddr_axi_RREADY : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi RREADY";
  attribute X_INTERFACE_INFO of m_ddr_axi_RVALID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi RVALID";
  attribute X_INTERFACE_INFO of m_ddr_axi_WLAST : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi WLAST";
  attribute X_INTERFACE_INFO of m_ddr_axi_WREADY : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi WREADY";
  attribute X_INTERFACE_INFO of m_ddr_axi_WVALID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi WVALID";
  attribute X_INTERFACE_INFO of rstn : signal is "xilinx.com:signal:reset:1.0 rstn RST";
  attribute X_INTERFACE_PARAMETER of rstn : signal is "XIL_INTERFACENAME rstn, POLARITY ACTIVE_LOW";
  attribute X_INTERFACE_INFO of s_axi_control_ARREADY : signal is "xilinx.com:interface:aximm:1.0 s_axi_control ARREADY";
  attribute X_INTERFACE_INFO of s_axi_control_ARVALID : signal is "xilinx.com:interface:aximm:1.0 s_axi_control ARVALID";
  attribute X_INTERFACE_INFO of s_axi_control_AWREADY : signal is "xilinx.com:interface:aximm:1.0 s_axi_control AWREADY";
  attribute X_INTERFACE_INFO of s_axi_control_AWVALID : signal is "xilinx.com:interface:aximm:1.0 s_axi_control AWVALID";
  attribute X_INTERFACE_INFO of s_axi_control_BREADY : signal is "xilinx.com:interface:aximm:1.0 s_axi_control BREADY";
  attribute X_INTERFACE_INFO of s_axi_control_BVALID : signal is "xilinx.com:interface:aximm:1.0 s_axi_control BVALID";
  attribute X_INTERFACE_INFO of s_axi_control_RREADY : signal is "xilinx.com:interface:aximm:1.0 s_axi_control RREADY";
  attribute X_INTERFACE_INFO of s_axi_control_RVALID : signal is "xilinx.com:interface:aximm:1.0 s_axi_control RVALID";
  attribute X_INTERFACE_INFO of s_axi_control_WREADY : signal is "xilinx.com:interface:aximm:1.0 s_axi_control WREADY";
  attribute X_INTERFACE_INFO of s_axi_control_WVALID : signal is "xilinx.com:interface:aximm:1.0 s_axi_control WVALID";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARADDR : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARADDR";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARBURST : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARBURST";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARCACHE : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARCACHE";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARID";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARLEN : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARLEN";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARLOCK : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARLOCK";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARPROT : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARPROT";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARQOS : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARQOS";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARREGION : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARREGION";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARSIZE : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARSIZE";
  attribute X_INTERFACE_INFO of m_ddr_axi_ARUSER : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi ARUSER";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWADDR : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWADDR";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWBURST : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWBURST";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWCACHE : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWCACHE";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWID";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWLEN : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWLEN";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWLOCK : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWLOCK";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWPROT : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWPROT";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWQOS : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWQOS";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWREGION : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWREGION";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWSIZE : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWSIZE";
  attribute X_INTERFACE_INFO of m_ddr_axi_AWUSER : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi AWUSER";
  attribute X_INTERFACE_INFO of m_ddr_axi_BID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi BID";
  attribute X_INTERFACE_INFO of m_ddr_axi_BRESP : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi BRESP";
  attribute X_INTERFACE_INFO of m_ddr_axi_BUSER : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi BUSER";
  attribute X_INTERFACE_INFO of m_ddr_axi_RDATA : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi RDATA";
  attribute X_INTERFACE_INFO of m_ddr_axi_RID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi RID";
  attribute X_INTERFACE_INFO of m_ddr_axi_RRESP : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi RRESP";
  attribute X_INTERFACE_INFO of m_ddr_axi_RUSER : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi RUSER";
  attribute X_INTERFACE_INFO of m_ddr_axi_WDATA : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi WDATA";
  attribute X_INTERFACE_INFO of m_ddr_axi_WID : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi WID";
  attribute X_INTERFACE_INFO of m_ddr_axi_WSTRB : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi WSTRB";
  attribute X_INTERFACE_INFO of m_ddr_axi_WUSER : signal is "xilinx.com:interface:aximm:1.0 m_ddr_axi WUSER";
  attribute X_INTERFACE_PARAMETER of m_ddr_axi_WUSER : signal is "XIL_INTERFACENAME m_ddr_axi, DATA_WIDTH 128, PROTOCOL AXI4, FREQ_HZ 99999999, ID_WIDTH 1, ADDR_WIDTH 64, AWUSER_WIDTH 1, ARUSER_WIDTH 1, WUSER_WIDTH 1, RUSER_WIDTH 1, BUSER_WIDTH 1, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 256, PHASE 0.000, CLK_DOMAIN IP_Test_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
  attribute X_INTERFACE_INFO of s_axi_control_ARADDR : signal is "xilinx.com:interface:aximm:1.0 s_axi_control ARADDR";
  attribute X_INTERFACE_INFO of s_axi_control_AWADDR : signal is "xilinx.com:interface:aximm:1.0 s_axi_control AWADDR";
  attribute X_INTERFACE_INFO of s_axi_control_BRESP : signal is "xilinx.com:interface:aximm:1.0 s_axi_control BRESP";
  attribute X_INTERFACE_INFO of s_axi_control_RDATA : signal is "xilinx.com:interface:aximm:1.0 s_axi_control RDATA";
  attribute X_INTERFACE_INFO of s_axi_control_RRESP : signal is "xilinx.com:interface:aximm:1.0 s_axi_control RRESP";
  attribute X_INTERFACE_INFO of s_axi_control_WDATA : signal is "xilinx.com:interface:aximm:1.0 s_axi_control WDATA";
  attribute X_INTERFACE_INFO of s_axi_control_WSTRB : signal is "xilinx.com:interface:aximm:1.0 s_axi_control WSTRB";
  attribute X_INTERFACE_PARAMETER of s_axi_control_WSTRB : signal is "XIL_INTERFACENAME s_axi_control, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 99999999, ID_WIDTH 0, ADDR_WIDTH 7, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN IP_Test_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0";
begin
inst: entity work.decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_MemoryTestBlock
     port map (
      clk => clk,
      m_ddr_axi_ARADDR(63 downto 0) => m_ddr_axi_ARADDR(63 downto 0),
      m_ddr_axi_ARBURST(1 downto 0) => m_ddr_axi_ARBURST(1 downto 0),
      m_ddr_axi_ARCACHE(3 downto 0) => m_ddr_axi_ARCACHE(3 downto 0),
      m_ddr_axi_ARID(0) => m_ddr_axi_ARID(0),
      m_ddr_axi_ARLEN(7 downto 0) => m_ddr_axi_ARLEN(7 downto 0),
      m_ddr_axi_ARLOCK(1 downto 0) => m_ddr_axi_ARLOCK(1 downto 0),
      m_ddr_axi_ARPROT(2 downto 0) => m_ddr_axi_ARPROT(2 downto 0),
      m_ddr_axi_ARQOS(3 downto 0) => m_ddr_axi_ARQOS(3 downto 0),
      m_ddr_axi_ARREADY => m_ddr_axi_ARREADY,
      m_ddr_axi_ARREGION(3 downto 0) => m_ddr_axi_ARREGION(3 downto 0),
      m_ddr_axi_ARSIZE(2 downto 0) => m_ddr_axi_ARSIZE(2 downto 0),
      m_ddr_axi_ARUSER(0) => m_ddr_axi_ARUSER(0),
      m_ddr_axi_ARVALID => m_ddr_axi_ARVALID,
      m_ddr_axi_AWADDR(63 downto 0) => m_ddr_axi_AWADDR(63 downto 0),
      m_ddr_axi_AWBURST(1 downto 0) => m_ddr_axi_AWBURST(1 downto 0),
      m_ddr_axi_AWCACHE(3 downto 0) => m_ddr_axi_AWCACHE(3 downto 0),
      m_ddr_axi_AWID(0) => m_ddr_axi_AWID(0),
      m_ddr_axi_AWLEN(7 downto 0) => m_ddr_axi_AWLEN(7 downto 0),
      m_ddr_axi_AWLOCK(1 downto 0) => m_ddr_axi_AWLOCK(1 downto 0),
      m_ddr_axi_AWPROT(2 downto 0) => m_ddr_axi_AWPROT(2 downto 0),
      m_ddr_axi_AWQOS(3 downto 0) => m_ddr_axi_AWQOS(3 downto 0),
      m_ddr_axi_AWREADY => m_ddr_axi_AWREADY,
      m_ddr_axi_AWREGION(3 downto 0) => m_ddr_axi_AWREGION(3 downto 0),
      m_ddr_axi_AWSIZE(2 downto 0) => m_ddr_axi_AWSIZE(2 downto 0),
      m_ddr_axi_AWUSER(0) => m_ddr_axi_AWUSER(0),
      m_ddr_axi_AWVALID => m_ddr_axi_AWVALID,
      m_ddr_axi_BID(0) => m_ddr_axi_BID(0),
      m_ddr_axi_BREADY => m_ddr_axi_BREADY,
      m_ddr_axi_BRESP(1 downto 0) => m_ddr_axi_BRESP(1 downto 0),
      m_ddr_axi_BUSER(0) => m_ddr_axi_BUSER(0),
      m_ddr_axi_BVALID => m_ddr_axi_BVALID,
      m_ddr_axi_RDATA(127 downto 0) => m_ddr_axi_RDATA(127 downto 0),
      m_ddr_axi_RID(0) => m_ddr_axi_RID(0),
      m_ddr_axi_RLAST => m_ddr_axi_RLAST,
      m_ddr_axi_RREADY => m_ddr_axi_RREADY,
      m_ddr_axi_RRESP(1 downto 0) => m_ddr_axi_RRESP(1 downto 0),
      m_ddr_axi_RUSER(0) => m_ddr_axi_RUSER(0),
      m_ddr_axi_RVALID => m_ddr_axi_RVALID,
      m_ddr_axi_WDATA(127 downto 0) => m_ddr_axi_WDATA(127 downto 0),
      m_ddr_axi_WID(0) => m_ddr_axi_WID(0),
      m_ddr_axi_WLAST => m_ddr_axi_WLAST,
      m_ddr_axi_WREADY => m_ddr_axi_WREADY,
      m_ddr_axi_WSTRB(15 downto 0) => m_ddr_axi_WSTRB(15 downto 0),
      m_ddr_axi_WUSER(0) => m_ddr_axi_WUSER(0),
      m_ddr_axi_WVALID => m_ddr_axi_WVALID,
      rstn => rstn,
      s_axi_control_ARADDR(6 downto 0) => s_axi_control_ARADDR(6 downto 0),
      s_axi_control_ARREADY => s_axi_control_ARREADY,
      s_axi_control_ARVALID => s_axi_control_ARVALID,
      s_axi_control_AWADDR(6 downto 0) => s_axi_control_AWADDR(6 downto 0),
      s_axi_control_AWREADY => s_axi_control_AWREADY,
      s_axi_control_AWVALID => s_axi_control_AWVALID,
      s_axi_control_BREADY => s_axi_control_BREADY,
      s_axi_control_BRESP(1 downto 0) => s_axi_control_BRESP(1 downto 0),
      s_axi_control_BVALID => s_axi_control_BVALID,
      s_axi_control_RDATA(31 downto 0) => s_axi_control_RDATA(31 downto 0),
      s_axi_control_RREADY => s_axi_control_RREADY,
      s_axi_control_RRESP(1 downto 0) => s_axi_control_RRESP(1 downto 0),
      s_axi_control_RVALID => s_axi_control_RVALID,
      s_axi_control_WDATA(31 downto 0) => s_axi_control_WDATA(31 downto 0),
      s_axi_control_WREADY => s_axi_control_WREADY,
      s_axi_control_WSTRB(3 downto 0) => s_axi_control_WSTRB(3 downto 0),
      s_axi_control_WVALID => s_axi_control_WVALID
    );
end STRUCTURE;
