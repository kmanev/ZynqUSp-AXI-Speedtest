// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2018.2.1 (win64) Build 2288692 Thu Jul 26 18:24:02 MDT 2018
// Date        : Mon Oct 14 15:24:02 2019
// Host        : DESKTOP-UAK7KP3 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ IP_Test_MemoryTestBlock_0_0_sim_netlist.v
// Design      : IP_Test_MemoryTestBlock_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu3eg-sbva484-1-e
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_AXI_Wrapper
   (O32,
    clk,
    m_ddr_axi_ARREADY,
    m_ddr_axi_ARVALID,
    m_ddr_axi_AWREADY,
    m_ddr_axi_AWVALID,
    m_ddr_axi_RREADY,
    m_ddr_axi_RVALID,
    m_ddr_axi_WREADY,
    m_ddr_axi_WVALID,
    readDataLast,
    readDataValid,
    srst,
    toReadDataBusy,
    toReadDataValid,
    writeAbusy,
    writeAddress_reg,
    writeAvalid,
    writeDbusy,
    writeDlast,
    writeDlast_reg,
    writeDvalid,
    writeDvalid0,
    CO,
    E,
    Q,
    \countAddrToBeSent_reg[38] ,
    din,
    dout,
    \m_ddr_axi_ARADDR[63] ,
    m_ddr_axi_ARID,
    \m_ddr_axi_AWADDR[63] ,
    m_ddr_axi_RRESP,
    readData,
    toReadDataAddress,
    \toReadDataSize_reg[7] ,
    writeAddress,
    \writeDdata_reg[127] );
  input O32;
  input clk;
  input m_ddr_axi_ARREADY;
  output m_ddr_axi_ARVALID;
  input m_ddr_axi_AWREADY;
  output m_ddr_axi_AWVALID;
  output m_ddr_axi_RREADY;
  input m_ddr_axi_RVALID;
  input m_ddr_axi_WREADY;
  output m_ddr_axi_WVALID;
  output readDataLast;
  output readDataValid;
  input srst;
  output toReadDataBusy;
  input toReadDataValid;
  output writeAbusy;
  output [63:63]writeAddress_reg;
  input writeAvalid;
  output writeDbusy;
  input writeDlast;
  output writeDlast_reg;
  input writeDvalid;
  input writeDvalid0;
  input [0:0]CO;
  output [0:0]E;
  input [7:0]Q;
  input [0:0]\countAddrToBeSent_reg[38] ;
  input [128:0]din;
  output [128:0]dout;
  output [71:0]\m_ddr_axi_ARADDR[63] ;
  output [0:0]m_ddr_axi_ARID;
  output [71:0]\m_ddr_axi_AWADDR[63] ;
  input [1:0]m_ddr_axi_RRESP;
  output [127:0]readData;
  input [63:0]toReadDataAddress;
  input [7:0]\toReadDataSize_reg[7] ;
  input [63:0]writeAddress;
  input [127:0]\writeDdata_reg[127] ;

  wire [0:0]CO;
  wire [0:0]E;
  wire O32;
  (* DONT_TOUCH *) wire [7:0]Q;
  wire axi_ARID0;
  wire \axi_ARID[0]_i_1_n_0 ;
  wire clk;
  wire [0:0]\countAddrToBeSent_reg[38] ;
  wire [128:0]din;
  wire [128:0]dout;
  wire [71:0]\m_ddr_axi_ARADDR[63] ;
  wire [0:0]m_ddr_axi_ARID;
  wire m_ddr_axi_ARREADY;
  wire m_ddr_axi_ARVALID;
  wire [71:0]\m_ddr_axi_AWADDR[63] ;
  wire m_ddr_axi_AWREADY;
  wire m_ddr_axi_AWVALID;
  wire m_ddr_axi_RREADY;
  wire [1:0]m_ddr_axi_RRESP;
  wire m_ddr_axi_RVALID;
  wire m_ddr_axi_WREADY;
  wire m_ddr_axi_WVALID;
  (* DONT_TOUCH *) wire p_0_in;
  wire rd_en0;
  wire rd_en00_out;
  wire rd_en01_out;
  (* DONT_TOUCH *) wire [127:0]readData;
  (* DONT_TOUCH *) wire readDataLast;
  (* DONT_TOUCH *) wire readDataValid;
  wire read_data_fifo_prog_full;
  wire srst;
  (* DONT_TOUCH *) wire [63:0]toReadDataAddress;
  (* DONT_TOUCH *) wire toReadDataBusy;
  (* DONT_TOUCH *) wire [7:0]\toReadDataSize_reg[7] ;
  (* DONT_TOUCH *) wire toReadDataValid;
  wire wr_en0__0;
  (* DONT_TOUCH *) wire writeAbusy;
  (* DONT_TOUCH *) wire [63:0]writeAddress;
  wire [63:63]writeAddress_reg;
  (* DONT_TOUCH *) wire writeAvalid;
  (* DONT_TOUCH *) wire writeDbusy;
  (* DONT_TOUCH *) wire [127:0]\writeDdata_reg[127] ;
  (* DONT_TOUCH *) wire writeDlast;
  wire writeDlast_reg;
  (* DONT_TOUCH *) wire writeDvalid;
  wire writeDvalid0;
  wire NLW_read_commands_fifo_empty_UNCONNECTED;
  wire NLW_read_commands_fifo_full_UNCONNECTED;
  wire NLW_read_commands_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_read_commands_fifo_wr_rst_busy_UNCONNECTED;
  wire NLW_read_data_fifo_empty_UNCONNECTED;
  wire NLW_read_data_fifo_full_UNCONNECTED;
  wire NLW_read_data_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_read_data_fifo_wr_rst_busy_UNCONNECTED;
  wire NLW_write_commands_fifo_empty_UNCONNECTED;
  wire NLW_write_commands_fifo_full_UNCONNECTED;
  wire NLW_write_commands_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_write_commands_fifo_wr_rst_busy_UNCONNECTED;
  wire NLW_write_data_fifo_empty_UNCONNECTED;
  wire NLW_write_data_fifo_full_UNCONNECTED;
  wire NLW_write_data_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_write_data_fifo_wr_rst_busy_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \axi_ARID[0]_i_1 
       (.I0(m_ddr_axi_ARREADY),
        .I1(m_ddr_axi_ARVALID),
        .I2(m_ddr_axi_ARID),
        .O(\axi_ARID[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \axi_ARID_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\axi_ARID[0]_i_1_n_0 ),
        .Q(m_ddr_axi_ARID),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT1 #(
    .INIT(2'h1)) 
    m_ddr_axi_RREADY_INST_0
       (.I0(read_data_fifo_prog_full),
        .O(m_ddr_axi_RREADY));
  LUT1 #(
    .INIT(2'h2)) 
    nolabel_line179i_0
       (.I0(1'b1),
        .O(p_0_in));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth read_commands_fifo
       (.clk(clk),
        .din({toReadDataAddress,\toReadDataSize_reg[7] }),
        .dout(\m_ddr_axi_ARADDR[63] ),
        .empty(NLW_read_commands_fifo_empty_UNCONNECTED),
        .full(NLW_read_commands_fifo_full_UNCONNECTED),
        .prog_full(toReadDataBusy),
        .rd_en(axi_ARID0),
        .rd_rst_busy(NLW_read_commands_fifo_rd_rst_busy_UNCONNECTED),
        .srst(srst),
        .valid(m_ddr_axi_ARVALID),
        .wr_en(toReadDataValid),
        .wr_rst_busy(NLW_read_commands_fifo_wr_rst_busy_UNCONNECTED));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h8)) 
    read_commands_fifo_i_1
       (.I0(m_ddr_axi_ARVALID),
        .I1(m_ddr_axi_ARREADY),
        .O(axi_ARID0));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth read_data_fifo
       (.clk(clk),
        .din(din),
        .dout({readData,readDataLast}),
        .empty(NLW_read_data_fifo_empty_UNCONNECTED),
        .full(NLW_read_data_fifo_full_UNCONNECTED),
        .prog_full(read_data_fifo_prog_full),
        .rd_en(rd_en0),
        .rd_rst_busy(NLW_read_data_fifo_rd_rst_busy_UNCONNECTED),
        .srst(srst),
        .valid(readDataValid),
        .wr_en(wr_en0__0),
        .wr_rst_busy(NLW_read_data_fifo_wr_rst_busy_UNCONNECTED));
  LUT2 #(
    .INIT(4'h8)) 
    read_data_fifo_i_1__0
       (.I0(readDataValid),
        .I1(p_0_in),
        .O(rd_en0));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataSize[7]_i_1 
       (.I0(CO),
        .I1(toReadDataBusy),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    wr_en0
       (.I0(m_ddr_axi_RVALID),
        .I1(read_data_fifo_prog_full),
        .I2(m_ddr_axi_RRESP[0]),
        .I3(m_ddr_axi_RRESP[1]),
        .O(wr_en0__0));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_1 
       (.I0(\countAddrToBeSent_reg[38] ),
        .I1(writeAbusy),
        .O(writeAddress_reg));
  LUT4 #(
    .INIT(16'hFB08)) 
    writeDlast_i_1
       (.I0(O32),
        .I1(writeDvalid0),
        .I2(writeDbusy),
        .I3(writeDlast),
        .O(writeDlast_reg));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth write_commands_fifo
       (.clk(clk),
        .din({writeAddress,Q}),
        .dout(\m_ddr_axi_AWADDR[63] ),
        .empty(NLW_write_commands_fifo_empty_UNCONNECTED),
        .full(NLW_write_commands_fifo_full_UNCONNECTED),
        .prog_full(writeAbusy),
        .rd_en(rd_en01_out),
        .rd_rst_busy(NLW_write_commands_fifo_rd_rst_busy_UNCONNECTED),
        .srst(srst),
        .valid(m_ddr_axi_AWVALID),
        .wr_en(writeAvalid),
        .wr_rst_busy(NLW_write_commands_fifo_wr_rst_busy_UNCONNECTED));
  LUT2 #(
    .INIT(4'h8)) 
    write_commands_fifo_i_1
       (.I0(m_ddr_axi_AWVALID),
        .I1(m_ddr_axi_AWREADY),
        .O(rd_en01_out));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth write_data_fifo
       (.clk(clk),
        .din({\writeDdata_reg[127] ,writeDlast}),
        .dout(dout),
        .empty(NLW_write_data_fifo_empty_UNCONNECTED),
        .full(NLW_write_data_fifo_full_UNCONNECTED),
        .prog_full(writeDbusy),
        .rd_en(rd_en00_out),
        .rd_rst_busy(NLW_write_data_fifo_rd_rst_busy_UNCONNECTED),
        .srst(srst),
        .valid(m_ddr_axi_WVALID),
        .wr_en(writeDvalid),
        .wr_rst_busy(NLW_write_data_fifo_wr_rst_busy_UNCONNECTED));
  LUT2 #(
    .INIT(4'h8)) 
    write_data_fifo_i_1__0
       (.I0(m_ddr_axi_WVALID),
        .I1(m_ddr_axi_WREADY),
        .O(rd_en00_out));
endmodule

(* CHECK_LICENSE_TYPE = "IP_Test_MemoryTestBlock_0_0,MemoryTestBlock,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "package_project" *) 
(* X_CORE_INFO = "MemoryTestBlock,Vivado 2018.2.1" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (clk,
    m_ddr_axi_ARREADY,
    m_ddr_axi_ARVALID,
    m_ddr_axi_AWREADY,
    m_ddr_axi_AWVALID,
    m_ddr_axi_BREADY,
    m_ddr_axi_BVALID,
    m_ddr_axi_RLAST,
    m_ddr_axi_RREADY,
    m_ddr_axi_RVALID,
    m_ddr_axi_WLAST,
    m_ddr_axi_WREADY,
    m_ddr_axi_WVALID,
    rstn,
    s_axi_control_ARREADY,
    s_axi_control_ARVALID,
    s_axi_control_AWREADY,
    s_axi_control_AWVALID,
    s_axi_control_BREADY,
    s_axi_control_BVALID,
    s_axi_control_RREADY,
    s_axi_control_RVALID,
    s_axi_control_WREADY,
    s_axi_control_WVALID,
    m_ddr_axi_ARADDR,
    m_ddr_axi_ARBURST,
    m_ddr_axi_ARCACHE,
    m_ddr_axi_ARID,
    m_ddr_axi_ARLEN,
    m_ddr_axi_ARLOCK,
    m_ddr_axi_ARPROT,
    m_ddr_axi_ARQOS,
    m_ddr_axi_ARREGION,
    m_ddr_axi_ARSIZE,
    m_ddr_axi_ARUSER,
    m_ddr_axi_AWADDR,
    m_ddr_axi_AWBURST,
    m_ddr_axi_AWCACHE,
    m_ddr_axi_AWID,
    m_ddr_axi_AWLEN,
    m_ddr_axi_AWLOCK,
    m_ddr_axi_AWPROT,
    m_ddr_axi_AWQOS,
    m_ddr_axi_AWREGION,
    m_ddr_axi_AWSIZE,
    m_ddr_axi_AWUSER,
    m_ddr_axi_BID,
    m_ddr_axi_BRESP,
    m_ddr_axi_BUSER,
    m_ddr_axi_RDATA,
    m_ddr_axi_RID,
    m_ddr_axi_RRESP,
    m_ddr_axi_RUSER,
    m_ddr_axi_WDATA,
    m_ddr_axi_WID,
    m_ddr_axi_WSTRB,
    m_ddr_axi_WUSER,
    s_axi_control_ARADDR,
    s_axi_control_AWADDR,
    s_axi_control_BRESP,
    s_axi_control_RDATA,
    s_axi_control_RRESP,
    s_axi_control_WDATA,
    s_axi_control_WSTRB);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk, ASSOCIATED_BUSIF m_ddr_axi:s_axi_control, ASSOCIATED_RESET rstn, FREQ_HZ 99999999, PHASE 0.000, CLK_DOMAIN IP_Test_zynq_ultra_ps_e_0_0_pl_clk0" *) input clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARREADY" *) input m_ddr_axi_ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARVALID" *) output m_ddr_axi_ARVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWREADY" *) input m_ddr_axi_AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWVALID" *) output m_ddr_axi_AWVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi BREADY" *) output m_ddr_axi_BREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi BVALID" *) input m_ddr_axi_BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi RLAST" *) input m_ddr_axi_RLAST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi RREADY" *) output m_ddr_axi_RREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi RVALID" *) input m_ddr_axi_RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi WLAST" *) output m_ddr_axi_WLAST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi WREADY" *) input m_ddr_axi_WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi WVALID" *) output m_ddr_axi_WVALID;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 rstn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME rstn, POLARITY ACTIVE_LOW" *) input rstn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control ARREADY" *) output s_axi_control_ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control ARVALID" *) input s_axi_control_ARVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control AWREADY" *) output s_axi_control_AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control AWVALID" *) input s_axi_control_AWVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control BREADY" *) input s_axi_control_BREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control BVALID" *) output s_axi_control_BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RREADY" *) input s_axi_control_RREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RVALID" *) output s_axi_control_RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WREADY" *) output s_axi_control_WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WVALID" *) input s_axi_control_WVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARADDR" *) output [63:0]m_ddr_axi_ARADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARBURST" *) output [1:0]m_ddr_axi_ARBURST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARCACHE" *) output [3:0]m_ddr_axi_ARCACHE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARID" *) output [0:0]m_ddr_axi_ARID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARLEN" *) output [7:0]m_ddr_axi_ARLEN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARLOCK" *) output [1:0]m_ddr_axi_ARLOCK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARPROT" *) output [2:0]m_ddr_axi_ARPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARQOS" *) output [3:0]m_ddr_axi_ARQOS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARREGION" *) output [3:0]m_ddr_axi_ARREGION;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARSIZE" *) output [2:0]m_ddr_axi_ARSIZE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi ARUSER" *) output [0:0]m_ddr_axi_ARUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWADDR" *) output [63:0]m_ddr_axi_AWADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWBURST" *) output [1:0]m_ddr_axi_AWBURST;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWCACHE" *) output [3:0]m_ddr_axi_AWCACHE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWID" *) output [0:0]m_ddr_axi_AWID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWLEN" *) output [7:0]m_ddr_axi_AWLEN;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWLOCK" *) output [1:0]m_ddr_axi_AWLOCK;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWPROT" *) output [2:0]m_ddr_axi_AWPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWQOS" *) output [3:0]m_ddr_axi_AWQOS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWREGION" *) output [3:0]m_ddr_axi_AWREGION;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWSIZE" *) output [2:0]m_ddr_axi_AWSIZE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi AWUSER" *) output [0:0]m_ddr_axi_AWUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi BID" *) input [0:0]m_ddr_axi_BID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi BRESP" *) input [1:0]m_ddr_axi_BRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi BUSER" *) input [0:0]m_ddr_axi_BUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi RDATA" *) input [127:0]m_ddr_axi_RDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi RID" *) input [0:0]m_ddr_axi_RID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi RRESP" *) input [1:0]m_ddr_axi_RRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi RUSER" *) input [0:0]m_ddr_axi_RUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi WDATA" *) output [127:0]m_ddr_axi_WDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi WID" *) output [0:0]m_ddr_axi_WID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi WSTRB" *) output [15:0]m_ddr_axi_WSTRB;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 m_ddr_axi WUSER" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_ddr_axi, DATA_WIDTH 128, PROTOCOL AXI4, FREQ_HZ 99999999, ID_WIDTH 1, ADDR_WIDTH 64, AWUSER_WIDTH 1, ARUSER_WIDTH 1, WUSER_WIDTH 1, RUSER_WIDTH 1, BUSER_WIDTH 1, READ_WRITE_MODE READ_WRITE, HAS_BURST 1, HAS_LOCK 1, HAS_PROT 1, HAS_CACHE 1, HAS_QOS 1, HAS_REGION 1, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 1, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 256, PHASE 0.000, CLK_DOMAIN IP_Test_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) output [0:0]m_ddr_axi_WUSER;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control ARADDR" *) input [6:0]s_axi_control_ARADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control AWADDR" *) input [6:0]s_axi_control_AWADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control BRESP" *) output [1:0]s_axi_control_BRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RDATA" *) output [31:0]s_axi_control_RDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control RRESP" *) output [1:0]s_axi_control_RRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WDATA" *) input [31:0]s_axi_control_WDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi_control WSTRB" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_control, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 99999999, ID_WIDTH 0, ADDR_WIDTH 7, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN IP_Test_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0" *) input [3:0]s_axi_control_WSTRB;

  wire clk;
  wire [63:0]m_ddr_axi_ARADDR;
  wire [1:0]m_ddr_axi_ARBURST;
  wire [3:0]m_ddr_axi_ARCACHE;
  wire [0:0]m_ddr_axi_ARID;
  wire [7:0]m_ddr_axi_ARLEN;
  wire [1:0]m_ddr_axi_ARLOCK;
  wire [2:0]m_ddr_axi_ARPROT;
  wire [3:0]m_ddr_axi_ARQOS;
  wire m_ddr_axi_ARREADY;
  wire [3:0]m_ddr_axi_ARREGION;
  wire [2:0]m_ddr_axi_ARSIZE;
  wire [0:0]m_ddr_axi_ARUSER;
  wire m_ddr_axi_ARVALID;
  wire [63:0]m_ddr_axi_AWADDR;
  wire [1:0]m_ddr_axi_AWBURST;
  wire [3:0]m_ddr_axi_AWCACHE;
  wire [0:0]m_ddr_axi_AWID;
  wire [7:0]m_ddr_axi_AWLEN;
  wire [1:0]m_ddr_axi_AWLOCK;
  wire [2:0]m_ddr_axi_AWPROT;
  wire [3:0]m_ddr_axi_AWQOS;
  wire m_ddr_axi_AWREADY;
  wire [3:0]m_ddr_axi_AWREGION;
  wire [2:0]m_ddr_axi_AWSIZE;
  wire [0:0]m_ddr_axi_AWUSER;
  wire m_ddr_axi_AWVALID;
  wire [0:0]m_ddr_axi_BID;
  wire m_ddr_axi_BREADY;
  wire [1:0]m_ddr_axi_BRESP;
  wire [0:0]m_ddr_axi_BUSER;
  wire m_ddr_axi_BVALID;
  wire [127:0]m_ddr_axi_RDATA;
  wire [0:0]m_ddr_axi_RID;
  wire m_ddr_axi_RLAST;
  wire m_ddr_axi_RREADY;
  wire [1:0]m_ddr_axi_RRESP;
  wire [0:0]m_ddr_axi_RUSER;
  wire m_ddr_axi_RVALID;
  wire [127:0]m_ddr_axi_WDATA;
  wire [0:0]m_ddr_axi_WID;
  wire m_ddr_axi_WLAST;
  wire m_ddr_axi_WREADY;
  wire [15:0]m_ddr_axi_WSTRB;
  wire [0:0]m_ddr_axi_WUSER;
  wire m_ddr_axi_WVALID;
  wire rstn;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARREADY;
  wire s_axi_control_ARVALID;
  wire [6:0]s_axi_control_AWADDR;
  wire s_axi_control_AWREADY;
  wire s_axi_control_AWVALID;
  wire s_axi_control_BREADY;
  wire [1:0]s_axi_control_BRESP;
  wire s_axi_control_BVALID;
  wire [31:0]s_axi_control_RDATA;
  wire s_axi_control_RREADY;
  wire [1:0]s_axi_control_RRESP;
  wire s_axi_control_RVALID;
  wire [31:0]s_axi_control_WDATA;
  wire s_axi_control_WREADY;
  wire [3:0]s_axi_control_WSTRB;
  wire s_axi_control_WVALID;

  (* black_box = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_MemoryTestBlock inst
       (.clk(clk),
        .m_ddr_axi_ARADDR(m_ddr_axi_ARADDR),
        .m_ddr_axi_ARBURST(m_ddr_axi_ARBURST),
        .m_ddr_axi_ARCACHE(m_ddr_axi_ARCACHE),
        .m_ddr_axi_ARID(m_ddr_axi_ARID),
        .m_ddr_axi_ARLEN(m_ddr_axi_ARLEN),
        .m_ddr_axi_ARLOCK(m_ddr_axi_ARLOCK),
        .m_ddr_axi_ARPROT(m_ddr_axi_ARPROT),
        .m_ddr_axi_ARQOS(m_ddr_axi_ARQOS),
        .m_ddr_axi_ARREADY(m_ddr_axi_ARREADY),
        .m_ddr_axi_ARREGION(m_ddr_axi_ARREGION),
        .m_ddr_axi_ARSIZE(m_ddr_axi_ARSIZE),
        .m_ddr_axi_ARUSER(m_ddr_axi_ARUSER),
        .m_ddr_axi_ARVALID(m_ddr_axi_ARVALID),
        .m_ddr_axi_AWADDR(m_ddr_axi_AWADDR),
        .m_ddr_axi_AWBURST(m_ddr_axi_AWBURST),
        .m_ddr_axi_AWCACHE(m_ddr_axi_AWCACHE),
        .m_ddr_axi_AWID(m_ddr_axi_AWID),
        .m_ddr_axi_AWLEN(m_ddr_axi_AWLEN),
        .m_ddr_axi_AWLOCK(m_ddr_axi_AWLOCK),
        .m_ddr_axi_AWPROT(m_ddr_axi_AWPROT),
        .m_ddr_axi_AWQOS(m_ddr_axi_AWQOS),
        .m_ddr_axi_AWREADY(m_ddr_axi_AWREADY),
        .m_ddr_axi_AWREGION(m_ddr_axi_AWREGION),
        .m_ddr_axi_AWSIZE(m_ddr_axi_AWSIZE),
        .m_ddr_axi_AWUSER(m_ddr_axi_AWUSER),
        .m_ddr_axi_AWVALID(m_ddr_axi_AWVALID),
        .m_ddr_axi_BID(m_ddr_axi_BID),
        .m_ddr_axi_BREADY(m_ddr_axi_BREADY),
        .m_ddr_axi_BRESP(m_ddr_axi_BRESP),
        .m_ddr_axi_BUSER(m_ddr_axi_BUSER),
        .m_ddr_axi_BVALID(m_ddr_axi_BVALID),
        .m_ddr_axi_RDATA(m_ddr_axi_RDATA),
        .m_ddr_axi_RID(m_ddr_axi_RID),
        .m_ddr_axi_RLAST(m_ddr_axi_RLAST),
        .m_ddr_axi_RREADY(m_ddr_axi_RREADY),
        .m_ddr_axi_RRESP(m_ddr_axi_RRESP),
        .m_ddr_axi_RUSER(m_ddr_axi_RUSER),
        .m_ddr_axi_RVALID(m_ddr_axi_RVALID),
        .m_ddr_axi_WDATA(m_ddr_axi_WDATA),
        .m_ddr_axi_WID(m_ddr_axi_WID),
        .m_ddr_axi_WLAST(m_ddr_axi_WLAST),
        .m_ddr_axi_WREADY(m_ddr_axi_WREADY),
        .m_ddr_axi_WSTRB(m_ddr_axi_WSTRB),
        .m_ddr_axi_WUSER(m_ddr_axi_WUSER),
        .m_ddr_axi_WVALID(m_ddr_axi_WVALID),
        .rstn(rstn),
        .s_axi_control_ARADDR(s_axi_control_ARADDR),
        .s_axi_control_ARREADY(s_axi_control_ARREADY),
        .s_axi_control_ARVALID(s_axi_control_ARVALID),
        .s_axi_control_AWADDR(s_axi_control_AWADDR),
        .s_axi_control_AWREADY(s_axi_control_AWREADY),
        .s_axi_control_AWVALID(s_axi_control_AWVALID),
        .s_axi_control_BREADY(s_axi_control_BREADY),
        .s_axi_control_BRESP(s_axi_control_BRESP),
        .s_axi_control_BVALID(s_axi_control_BVALID),
        .s_axi_control_RDATA(s_axi_control_RDATA),
        .s_axi_control_RREADY(s_axi_control_RREADY),
        .s_axi_control_RRESP(s_axi_control_RRESP),
        .s_axi_control_RVALID(s_axi_control_RVALID),
        .s_axi_control_WDATA(s_axi_control_WDATA),
        .s_axi_control_WREADY(s_axi_control_WREADY),
        .s_axi_control_WSTRB(s_axi_control_WSTRB),
        .s_axi_control_WVALID(s_axi_control_WVALID));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_MemoryTestBlock
   (clk,
    m_ddr_axi_ARREADY,
    m_ddr_axi_ARVALID,
    m_ddr_axi_AWREADY,
    m_ddr_axi_AWVALID,
    m_ddr_axi_BREADY,
    m_ddr_axi_BVALID,
    m_ddr_axi_RLAST,
    m_ddr_axi_RREADY,
    m_ddr_axi_RVALID,
    m_ddr_axi_WLAST,
    m_ddr_axi_WREADY,
    m_ddr_axi_WVALID,
    rstn,
    s_axi_control_ARREADY,
    s_axi_control_ARVALID,
    s_axi_control_AWREADY,
    s_axi_control_AWVALID,
    s_axi_control_BREADY,
    s_axi_control_BVALID,
    s_axi_control_RREADY,
    s_axi_control_RVALID,
    s_axi_control_WREADY,
    s_axi_control_WVALID,
    m_ddr_axi_ARADDR,
    m_ddr_axi_ARBURST,
    m_ddr_axi_ARCACHE,
    m_ddr_axi_ARID,
    m_ddr_axi_ARLEN,
    m_ddr_axi_ARLOCK,
    m_ddr_axi_ARPROT,
    m_ddr_axi_ARQOS,
    m_ddr_axi_ARREGION,
    m_ddr_axi_ARSIZE,
    m_ddr_axi_ARUSER,
    m_ddr_axi_AWADDR,
    m_ddr_axi_AWBURST,
    m_ddr_axi_AWCACHE,
    m_ddr_axi_AWID,
    m_ddr_axi_AWLEN,
    m_ddr_axi_AWLOCK,
    m_ddr_axi_AWPROT,
    m_ddr_axi_AWQOS,
    m_ddr_axi_AWREGION,
    m_ddr_axi_AWSIZE,
    m_ddr_axi_AWUSER,
    m_ddr_axi_BID,
    m_ddr_axi_BRESP,
    m_ddr_axi_BUSER,
    m_ddr_axi_RDATA,
    m_ddr_axi_RID,
    m_ddr_axi_RRESP,
    m_ddr_axi_RUSER,
    m_ddr_axi_WDATA,
    m_ddr_axi_WID,
    m_ddr_axi_WSTRB,
    m_ddr_axi_WUSER,
    s_axi_control_ARADDR,
    s_axi_control_AWADDR,
    s_axi_control_BRESP,
    s_axi_control_RDATA,
    s_axi_control_RRESP,
    s_axi_control_WDATA,
    s_axi_control_WSTRB);
  input clk;
  input m_ddr_axi_ARREADY;
  output m_ddr_axi_ARVALID;
  input m_ddr_axi_AWREADY;
  output m_ddr_axi_AWVALID;
  output m_ddr_axi_BREADY;
  input m_ddr_axi_BVALID;
  input m_ddr_axi_RLAST;
  output m_ddr_axi_RREADY;
  input m_ddr_axi_RVALID;
  output m_ddr_axi_WLAST;
  input m_ddr_axi_WREADY;
  output m_ddr_axi_WVALID;
  input rstn;
  output s_axi_control_ARREADY;
  input s_axi_control_ARVALID;
  output s_axi_control_AWREADY;
  input s_axi_control_AWVALID;
  input s_axi_control_BREADY;
  output s_axi_control_BVALID;
  input s_axi_control_RREADY;
  output s_axi_control_RVALID;
  output s_axi_control_WREADY;
  input s_axi_control_WVALID;
  output [63:0]m_ddr_axi_ARADDR;
  output [1:0]m_ddr_axi_ARBURST;
  output [3:0]m_ddr_axi_ARCACHE;
  output [0:0]m_ddr_axi_ARID;
  output [7:0]m_ddr_axi_ARLEN;
  output [1:0]m_ddr_axi_ARLOCK;
  output [2:0]m_ddr_axi_ARPROT;
  output [3:0]m_ddr_axi_ARQOS;
  output [3:0]m_ddr_axi_ARREGION;
  output [2:0]m_ddr_axi_ARSIZE;
  output [0:0]m_ddr_axi_ARUSER;
  output [63:0]m_ddr_axi_AWADDR;
  output [1:0]m_ddr_axi_AWBURST;
  output [3:0]m_ddr_axi_AWCACHE;
  output [0:0]m_ddr_axi_AWID;
  output [7:0]m_ddr_axi_AWLEN;
  output [1:0]m_ddr_axi_AWLOCK;
  output [2:0]m_ddr_axi_AWPROT;
  output [3:0]m_ddr_axi_AWQOS;
  output [3:0]m_ddr_axi_AWREGION;
  output [2:0]m_ddr_axi_AWSIZE;
  output [0:0]m_ddr_axi_AWUSER;
  input [0:0]m_ddr_axi_BID;
  input [1:0]m_ddr_axi_BRESP;
  input [0:0]m_ddr_axi_BUSER;
  input [127:0]m_ddr_axi_RDATA;
  input [0:0]m_ddr_axi_RID;
  input [1:0]m_ddr_axi_RRESP;
  input [0:0]m_ddr_axi_RUSER;
  output [127:0]m_ddr_axi_WDATA;
  output [0:0]m_ddr_axi_WID;
  output [15:0]m_ddr_axi_WSTRB;
  output [0:0]m_ddr_axi_WUSER;
  input [6:0]s_axi_control_ARADDR;
  input [6:0]s_axi_control_AWADDR;
  output [1:0]s_axi_control_BRESP;
  output [31:0]s_axi_control_RDATA;
  output [1:0]s_axi_control_RRESP;
  input [31:0]s_axi_control_WDATA;
  input [3:0]s_axi_control_WSTRB;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire countAddrSent1;
  wire [63:0]m_ddr_axi_ARADDR;
  wire [1:0]m_ddr_axi_ARBURST;
  wire [3:0]m_ddr_axi_ARCACHE;
  wire [0:0]m_ddr_axi_ARID;
  wire [7:0]m_ddr_axi_ARLEN;
  wire [1:0]m_ddr_axi_ARLOCK;
  wire [2:0]m_ddr_axi_ARPROT;
  wire [3:0]m_ddr_axi_ARQOS;
  wire m_ddr_axi_ARREADY;
  wire [3:0]m_ddr_axi_ARREGION;
  wire [2:0]m_ddr_axi_ARSIZE;
  wire m_ddr_axi_ARVALID;
  wire [63:0]m_ddr_axi_AWADDR;
  wire [1:0]m_ddr_axi_AWBURST;
  wire [3:0]m_ddr_axi_AWCACHE;
  wire [7:0]m_ddr_axi_AWLEN;
  wire [1:0]m_ddr_axi_AWLOCK;
  wire [2:0]m_ddr_axi_AWPROT;
  wire [3:0]m_ddr_axi_AWQOS;
  wire m_ddr_axi_AWREADY;
  wire [3:0]m_ddr_axi_AWREGION;
  wire [2:0]m_ddr_axi_AWSIZE;
  wire m_ddr_axi_AWVALID;
  wire [127:0]m_ddr_axi_RDATA;
  wire m_ddr_axi_RLAST;
  wire m_ddr_axi_RREADY;
  wire [1:0]m_ddr_axi_RRESP;
  wire m_ddr_axi_RVALID;
  wire [127:0]m_ddr_axi_WDATA;
  wire m_ddr_axi_WLAST;
  wire m_ddr_axi_WREADY;
  wire m_ddr_axi_WVALID;
  wire nolabel_line179_n_0;
  wire nolabel_line179_n_2;
  wire nolabel_line179_n_4;
  wire [127:0]readData;
  wire readDataLast;
  wire readDataValid;
  wire rstn;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARREADY;
  wire s_axi_control_ARVALID;
  wire [6:0]s_axi_control_AWADDR;
  wire s_axi_control_AWREADY;
  wire s_axi_control_AWVALID;
  wire s_axi_control_BREADY;
  wire s_axi_control_BVALID;
  wire [31:0]s_axi_control_RDATA;
  wire s_axi_control_RREADY;
  wire s_axi_control_RVALID;
  wire [31:0]s_axi_control_WDATA;
  wire s_axi_control_WREADY;
  wire s_axi_control_WVALID;
  wire [63:0]toReadDataAddress;
  wire toReadDataBusy;
  wire [7:0]toReadDataSize;
  wire toReadDataValid;
  wire toReadDataValid1;
  wire tpg_n_194;
  wire tpg_n_361;
  wire writeAbusy;
  wire [63:0]writeAddress;
  wire [7:0]writeAsize;
  wire writeAvalid;
  wire writeDbusy;
  wire [127:0]writeDdata;
  wire writeDlast;
  wire writeDvalid;
  wire writeDvalid0;

  assign m_ddr_axi_ARUSER[0] = \<const0> ;
  assign m_ddr_axi_AWID[0] = \<const0> ;
  assign m_ddr_axi_AWUSER[0] = \<const0> ;
  assign m_ddr_axi_BREADY = \<const1> ;
  assign m_ddr_axi_WID[0] = \<const0> ;
  assign m_ddr_axi_WSTRB[15] = \<const1> ;
  assign m_ddr_axi_WSTRB[14] = \<const1> ;
  assign m_ddr_axi_WSTRB[13] = \<const1> ;
  assign m_ddr_axi_WSTRB[12] = \<const1> ;
  assign m_ddr_axi_WSTRB[11] = \<const1> ;
  assign m_ddr_axi_WSTRB[10] = \<const1> ;
  assign m_ddr_axi_WSTRB[9] = \<const1> ;
  assign m_ddr_axi_WSTRB[8] = \<const1> ;
  assign m_ddr_axi_WSTRB[7] = \<const1> ;
  assign m_ddr_axi_WSTRB[6] = \<const1> ;
  assign m_ddr_axi_WSTRB[5] = \<const1> ;
  assign m_ddr_axi_WSTRB[4] = \<const1> ;
  assign m_ddr_axi_WSTRB[3] = \<const1> ;
  assign m_ddr_axi_WSTRB[2] = \<const1> ;
  assign m_ddr_axi_WSTRB[1] = \<const1> ;
  assign m_ddr_axi_WSTRB[0] = \<const1> ;
  assign m_ddr_axi_WUSER[0] = \<const0> ;
  assign s_axi_control_BRESP[1] = \<const0> ;
  assign s_axi_control_BRESP[0] = \<const0> ;
  assign s_axi_control_RRESP[1] = \<const0> ;
  assign s_axi_control_RRESP[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_AXI_Wrapper nolabel_line179
       (.CO(toReadDataValid1),
        .E(nolabel_line179_n_2),
        .O32(tpg_n_361),
        .Q(writeAsize),
        .clk(clk),
        .\countAddrToBeSent_reg[38] (countAddrSent1),
        .din({m_ddr_axi_RDATA,m_ddr_axi_RLAST}),
        .dout({m_ddr_axi_WDATA,m_ddr_axi_WLAST}),
        .\m_ddr_axi_ARADDR[63] ({m_ddr_axi_ARADDR,m_ddr_axi_ARLEN}),
        .m_ddr_axi_ARID(m_ddr_axi_ARID),
        .m_ddr_axi_ARREADY(m_ddr_axi_ARREADY),
        .m_ddr_axi_ARVALID(m_ddr_axi_ARVALID),
        .\m_ddr_axi_AWADDR[63] ({m_ddr_axi_AWADDR,m_ddr_axi_AWLEN}),
        .m_ddr_axi_AWREADY(m_ddr_axi_AWREADY),
        .m_ddr_axi_AWVALID(m_ddr_axi_AWVALID),
        .m_ddr_axi_RREADY(m_ddr_axi_RREADY),
        .m_ddr_axi_RRESP(m_ddr_axi_RRESP),
        .m_ddr_axi_RVALID(m_ddr_axi_RVALID),
        .m_ddr_axi_WREADY(m_ddr_axi_WREADY),
        .m_ddr_axi_WVALID(m_ddr_axi_WVALID),
        .readData(readData),
        .readDataLast(readDataLast),
        .readDataValid(readDataValid),
        .srst(tpg_n_194),
        .toReadDataAddress(toReadDataAddress),
        .toReadDataBusy(toReadDataBusy),
        .\toReadDataSize_reg[7] (toReadDataSize),
        .toReadDataValid(toReadDataValid),
        .writeAbusy(writeAbusy),
        .writeAddress(writeAddress),
        .writeAddress_reg(nolabel_line179_n_4),
        .writeAvalid(writeAvalid),
        .writeDbusy(writeDbusy),
        .\writeDdata_reg[127] (writeDdata),
        .writeDlast(writeDlast),
        .writeDlast_reg(nolabel_line179_n_0),
        .writeDvalid(writeDvalid),
        .writeDvalid0(writeDvalid0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_TestPatternGenerator tpg
       (.CO(toReadDataValid1),
        .D(readData),
        .E(nolabel_line179_n_2),
        .O32(tpg_n_361),
        .Q({m_ddr_axi_AWSIZE,m_ddr_axi_AWPROT,m_ddr_axi_AWBURST,m_ddr_axi_AWLOCK,m_ddr_axi_AWCACHE,m_ddr_axi_AWQOS,m_ddr_axi_AWREGION}),
        .\axi_ARID_reg[0] (toReadDataSize),
        .clk(clk),
        .\countAddrSent_reg[1]_0 (countAddrSent1),
        .\countAddrToBeSent_reg[38]_0 (nolabel_line179_n_4),
        .\m_ddr_axi_ARSIZE[2] ({m_ddr_axi_ARSIZE,m_ddr_axi_ARPROT,m_ddr_axi_ARBURST,m_ddr_axi_ARLOCK,m_ddr_axi_ARCACHE,m_ddr_axi_ARQOS,m_ddr_axi_ARREGION}),
        .readDataLast(readDataLast),
        .readDataValid(readDataValid),
        .rstn(rstn),
        .s_axi_control_ARADDR(s_axi_control_ARADDR),
        .s_axi_control_ARREADY(s_axi_control_ARREADY),
        .s_axi_control_ARVALID(s_axi_control_ARVALID),
        .s_axi_control_AWADDR(s_axi_control_AWADDR),
        .s_axi_control_AWREADY(s_axi_control_AWREADY),
        .s_axi_control_AWVALID(s_axi_control_AWVALID),
        .s_axi_control_BREADY(s_axi_control_BREADY),
        .s_axi_control_BVALID(s_axi_control_BVALID),
        .s_axi_control_RDATA(s_axi_control_RDATA),
        .s_axi_control_RREADY(s_axi_control_RREADY),
        .s_axi_control_RVALID(s_axi_control_RVALID),
        .s_axi_control_WDATA(s_axi_control_WDATA),
        .s_axi_control_WREADY(s_axi_control_WREADY),
        .s_axi_control_WVALID(s_axi_control_WVALID),
        .srst(tpg_n_194),
        .toReadDataAddress(toReadDataAddress),
        .toReadDataBusy(toReadDataBusy),
        .toReadDataValid(toReadDataValid),
        .writeAbusy(writeAbusy),
        .writeAddress(writeAddress),
        .\writeAddress_reg[63]_0 (writeAsize),
        .writeAvalid(writeAvalid),
        .writeDbusy(writeDbusy),
        .writeDlast(writeDlast),
        .writeDlast_reg_0(nolabel_line179_n_0),
        .writeDvalid(writeDvalid),
        .writeDvalid0(writeDvalid0),
        .writeDvalid_reg_0(writeDdata));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_TestPatternGenerator
   (O32,
    clk,
    \countAddrToBeSent_reg[38]_0 ,
    readDataLast,
    readDataValid,
    rstn,
    s_axi_control_ARREADY,
    s_axi_control_ARVALID,
    s_axi_control_AWREADY,
    s_axi_control_AWVALID,
    s_axi_control_BREADY,
    s_axi_control_BVALID,
    s_axi_control_RREADY,
    s_axi_control_RVALID,
    s_axi_control_WREADY,
    s_axi_control_WVALID,
    srst,
    toReadDataBusy,
    toReadDataValid,
    writeAbusy,
    writeAvalid,
    writeDbusy,
    writeDlast,
    writeDlast_reg_0,
    writeDvalid,
    writeDvalid0,
    CO,
    D,
    E,
    Q,
    \axi_ARID_reg[0] ,
    \countAddrSent_reg[1]_0 ,
    \m_ddr_axi_ARSIZE[2] ,
    s_axi_control_ARADDR,
    s_axi_control_AWADDR,
    s_axi_control_RDATA,
    s_axi_control_WDATA,
    toReadDataAddress,
    writeAddress,
    \writeAddress_reg[63]_0 ,
    writeDvalid_reg_0);
  output O32;
  input clk;
  input \countAddrToBeSent_reg[38]_0 ;
  input readDataLast;
  input readDataValid;
  input rstn;
  output s_axi_control_ARREADY;
  input s_axi_control_ARVALID;
  output s_axi_control_AWREADY;
  input s_axi_control_AWVALID;
  input s_axi_control_BREADY;
  output s_axi_control_BVALID;
  input s_axi_control_RREADY;
  output s_axi_control_RVALID;
  output s_axi_control_WREADY;
  input s_axi_control_WVALID;
  output srst;
  input toReadDataBusy;
  output toReadDataValid;
  input writeAbusy;
  output writeAvalid;
  input writeDbusy;
  output writeDlast;
  input writeDlast_reg_0;
  output writeDvalid;
  output writeDvalid0;
  output [0:0]CO;
  input [127:0]D;
  input [0:0]E;
  output [21:0]Q;
  output [7:0]\axi_ARID_reg[0] ;
  output [0:0]\countAddrSent_reg[1]_0 ;
  output [21:0]\m_ddr_axi_ARSIZE[2] ;
  input [6:0]s_axi_control_ARADDR;
  input [6:0]s_axi_control_AWADDR;
  output [31:0]s_axi_control_RDATA;
  input [31:0]s_axi_control_WDATA;
  output [63:0]toReadDataAddress;
  output [63:0]writeAddress;
  output [7:0]\writeAddress_reg[63]_0 ;
  output [127:0]writeDvalid_reg_0;

  wire [0:0]CO;
  wire [127:0]D;
  wire [0:0]E;
  wire O32;
  wire [21:0]Q;
  (* DONT_TOUCH *) wire active_blocking;
  wire active_blocking__0;
  (* DONT_TOUCH *) wire active_read;
  wire active_read__0;
  wire active_runtime;
  wire active_runtime0;
  wire active_runtime1;
  wire active_runtime2;
  wire active_runtime3;
  (* DONT_TOUCH *) wire active_write;
  wire active_write__0;
  wire [7:0]\axi_ARID_reg[0] ;
  wire [31:0]axi_c_read_data;
  wire [31:0]axi_c_read_data_reg_n_0_;
  wire axi_c_read_data_valid;
  wire axi_c_read_valid;
  wire [31:0]axi_c_write_data;
  wire axi_c_write_valid;
  wire clk;
  wire [39:0]countAddrSent;
  wire [39:1]countAddrSent0;
  wire countAddrSentRatioFix;
  wire \countAddrSentRatioFix[15]_i_10_n_0 ;
  wire \countAddrSentRatioFix[15]_i_11_n_0 ;
  wire \countAddrSentRatioFix[15]_i_12_n_0 ;
  wire \countAddrSentRatioFix[15]_i_13_n_0 ;
  wire \countAddrSentRatioFix[15]_i_14_n_0 ;
  wire \countAddrSentRatioFix[15]_i_15_n_0 ;
  wire \countAddrSentRatioFix[15]_i_16_n_0 ;
  wire \countAddrSentRatioFix[15]_i_17_n_0 ;
  wire \countAddrSentRatioFix[15]_i_2_n_0 ;
  wire \countAddrSentRatioFix[15]_i_3_n_0 ;
  wire \countAddrSentRatioFix[15]_i_4_n_0 ;
  wire \countAddrSentRatioFix[15]_i_5_n_0 ;
  wire \countAddrSentRatioFix[15]_i_6_n_0 ;
  wire \countAddrSentRatioFix[15]_i_7_n_0 ;
  wire \countAddrSentRatioFix[15]_i_8_n_0 ;
  wire \countAddrSentRatioFix[15]_i_9_n_0 ;
  wire \countAddrSentRatioFix[23]_i_10_n_0 ;
  wire \countAddrSentRatioFix[23]_i_11_n_0 ;
  wire \countAddrSentRatioFix[23]_i_12_n_0 ;
  wire \countAddrSentRatioFix[23]_i_13_n_0 ;
  wire \countAddrSentRatioFix[23]_i_14_n_0 ;
  wire \countAddrSentRatioFix[23]_i_15_n_0 ;
  wire \countAddrSentRatioFix[23]_i_16_n_0 ;
  wire \countAddrSentRatioFix[23]_i_17_n_0 ;
  wire \countAddrSentRatioFix[23]_i_2_n_0 ;
  wire \countAddrSentRatioFix[23]_i_3_n_0 ;
  wire \countAddrSentRatioFix[23]_i_4_n_0 ;
  wire \countAddrSentRatioFix[23]_i_5_n_0 ;
  wire \countAddrSentRatioFix[23]_i_6_n_0 ;
  wire \countAddrSentRatioFix[23]_i_7_n_0 ;
  wire \countAddrSentRatioFix[23]_i_8_n_0 ;
  wire \countAddrSentRatioFix[23]_i_9_n_0 ;
  wire \countAddrSentRatioFix[31]_i_10_n_0 ;
  wire \countAddrSentRatioFix[31]_i_11_n_0 ;
  wire \countAddrSentRatioFix[31]_i_12_n_0 ;
  wire \countAddrSentRatioFix[31]_i_13_n_0 ;
  wire \countAddrSentRatioFix[31]_i_14_n_0 ;
  wire \countAddrSentRatioFix[31]_i_15_n_0 ;
  wire \countAddrSentRatioFix[31]_i_16_n_0 ;
  wire \countAddrSentRatioFix[31]_i_17_n_0 ;
  wire \countAddrSentRatioFix[31]_i_2_n_0 ;
  wire \countAddrSentRatioFix[31]_i_3_n_0 ;
  wire \countAddrSentRatioFix[31]_i_4_n_0 ;
  wire \countAddrSentRatioFix[31]_i_5_n_0 ;
  wire \countAddrSentRatioFix[31]_i_6_n_0 ;
  wire \countAddrSentRatioFix[31]_i_7_n_0 ;
  wire \countAddrSentRatioFix[31]_i_8_n_0 ;
  wire \countAddrSentRatioFix[31]_i_9_n_0 ;
  wire \countAddrSentRatioFix[39]_i_10_n_0 ;
  wire \countAddrSentRatioFix[39]_i_11_n_0 ;
  wire \countAddrSentRatioFix[39]_i_3_n_0 ;
  wire \countAddrSentRatioFix[39]_i_4_n_0 ;
  wire \countAddrSentRatioFix[39]_i_5_n_0 ;
  wire \countAddrSentRatioFix[39]_i_6_n_0 ;
  wire \countAddrSentRatioFix[39]_i_7_n_0 ;
  wire \countAddrSentRatioFix[39]_i_8_n_0 ;
  wire \countAddrSentRatioFix[39]_i_9_n_0 ;
  wire \countAddrSentRatioFix[7]_i_10_n_0 ;
  wire \countAddrSentRatioFix[7]_i_11_n_0 ;
  wire \countAddrSentRatioFix[7]_i_12_n_0 ;
  wire \countAddrSentRatioFix[7]_i_13_n_0 ;
  wire \countAddrSentRatioFix[7]_i_14_n_0 ;
  wire \countAddrSentRatioFix[7]_i_15_n_0 ;
  wire \countAddrSentRatioFix[7]_i_16_n_0 ;
  wire \countAddrSentRatioFix[7]_i_2_n_0 ;
  wire \countAddrSentRatioFix[7]_i_3_n_0 ;
  wire \countAddrSentRatioFix[7]_i_4_n_0 ;
  wire \countAddrSentRatioFix[7]_i_5_n_0 ;
  wire \countAddrSentRatioFix[7]_i_6_n_0 ;
  wire \countAddrSentRatioFix[7]_i_7_n_0 ;
  wire \countAddrSentRatioFix[7]_i_8_n_0 ;
  wire \countAddrSentRatioFix[7]_i_9_n_0 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_0 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_1 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_10 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_11 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_12 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_13 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_14 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_15 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_2 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_3 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_5 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_6 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_7 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_8 ;
  wire \countAddrSentRatioFix_reg[15]_i_1_n_9 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_0 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_1 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_10 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_11 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_12 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_13 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_14 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_15 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_2 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_3 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_5 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_6 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_7 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_8 ;
  wire \countAddrSentRatioFix_reg[23]_i_1_n_9 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_0 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_1 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_10 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_11 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_12 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_13 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_14 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_15 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_2 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_3 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_5 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_6 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_7 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_8 ;
  wire \countAddrSentRatioFix_reg[31]_i_1_n_9 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_1 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_10 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_11 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_12 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_13 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_14 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_15 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_2 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_3 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_5 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_6 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_7 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_8 ;
  wire \countAddrSentRatioFix_reg[39]_i_2_n_9 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_0 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_1 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_10 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_11 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_12 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_13 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_14 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_15 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_2 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_3 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_5 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_6 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_7 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_8 ;
  wire \countAddrSentRatioFix_reg[7]_i_1_n_9 ;
  wire [39:0]countAddrSentRatioFix_reg_n_0_;
  wire \countAddrSent[31]_i_3_n_0 ;
  wire \countAddrSent[32]_i_1_n_0 ;
  wire \countAddrSent[33]_i_1_n_0 ;
  wire \countAddrSent[34]_i_1_n_0 ;
  wire \countAddrSent[35]_i_1_n_0 ;
  wire \countAddrSent[36]_i_1_n_0 ;
  wire \countAddrSent[37]_i_1_n_0 ;
  wire \countAddrSent[38]_i_1_n_0 ;
  wire \countAddrSent[39]_i_10_n_0 ;
  wire \countAddrSent[39]_i_11_n_0 ;
  wire \countAddrSent[39]_i_12_n_0 ;
  wire \countAddrSent[39]_i_13_n_0 ;
  wire \countAddrSent[39]_i_14_n_0 ;
  wire \countAddrSent[39]_i_15_n_0 ;
  wire \countAddrSent[39]_i_17_n_0 ;
  wire \countAddrSent[39]_i_18_n_0 ;
  wire \countAddrSent[39]_i_19_n_0 ;
  wire \countAddrSent[39]_i_1_n_0 ;
  wire \countAddrSent[39]_i_20_n_0 ;
  wire \countAddrSent[39]_i_21_n_0 ;
  wire \countAddrSent[39]_i_22_n_0 ;
  wire \countAddrSent[39]_i_23_n_0 ;
  wire \countAddrSent[39]_i_24_n_0 ;
  wire \countAddrSent[39]_i_25_n_0 ;
  wire \countAddrSent[39]_i_26_n_0 ;
  wire \countAddrSent[39]_i_27_n_0 ;
  wire \countAddrSent[39]_i_28_n_0 ;
  wire \countAddrSent[39]_i_29_n_0 ;
  wire \countAddrSent[39]_i_2_n_0 ;
  wire \countAddrSent[39]_i_30_n_0 ;
  wire \countAddrSent[39]_i_31_n_0 ;
  wire \countAddrSent[39]_i_32_n_0 ;
  wire \countAddrSent[39]_i_33_n_0 ;
  wire \countAddrSent[39]_i_34_n_0 ;
  wire \countAddrSent[39]_i_35_n_0 ;
  wire \countAddrSent[39]_i_36_n_0 ;
  wire \countAddrSent[39]_i_37_n_0 ;
  wire \countAddrSent[39]_i_38_n_0 ;
  wire \countAddrSent[39]_i_39_n_0 ;
  wire \countAddrSent[39]_i_3_n_0 ;
  wire \countAddrSent[39]_i_40_n_0 ;
  wire \countAddrSent[39]_i_41_n_0 ;
  wire \countAddrSent[39]_i_42_n_0 ;
  wire \countAddrSent[39]_i_43_n_0 ;
  wire \countAddrSent[39]_i_44_n_0 ;
  wire \countAddrSent[39]_i_45_n_0 ;
  wire \countAddrSent[39]_i_46_n_0 ;
  wire \countAddrSent[39]_i_47_n_0 ;
  wire \countAddrSent[39]_i_48_n_0 ;
  wire \countAddrSent[39]_i_5_n_0 ;
  wire \countAddrSent[39]_i_8_n_0 ;
  wire \countAddrSent[39]_i_9_n_0 ;
  wire \countAddrSent_reg[16]_i_2_n_0 ;
  wire \countAddrSent_reg[16]_i_2_n_1 ;
  wire \countAddrSent_reg[16]_i_2_n_2 ;
  wire \countAddrSent_reg[16]_i_2_n_3 ;
  wire \countAddrSent_reg[16]_i_2_n_5 ;
  wire \countAddrSent_reg[16]_i_2_n_6 ;
  wire \countAddrSent_reg[16]_i_2_n_7 ;
  wire [0:0]\countAddrSent_reg[1]_0 ;
  wire \countAddrSent_reg[24]_i_2_n_0 ;
  wire \countAddrSent_reg[24]_i_2_n_1 ;
  wire \countAddrSent_reg[24]_i_2_n_2 ;
  wire \countAddrSent_reg[24]_i_2_n_3 ;
  wire \countAddrSent_reg[24]_i_2_n_5 ;
  wire \countAddrSent_reg[24]_i_2_n_6 ;
  wire \countAddrSent_reg[24]_i_2_n_7 ;
  wire \countAddrSent_reg[32]_i_2_n_0 ;
  wire \countAddrSent_reg[32]_i_2_n_1 ;
  wire \countAddrSent_reg[32]_i_2_n_2 ;
  wire \countAddrSent_reg[32]_i_2_n_3 ;
  wire \countAddrSent_reg[32]_i_2_n_5 ;
  wire \countAddrSent_reg[32]_i_2_n_6 ;
  wire \countAddrSent_reg[32]_i_2_n_7 ;
  wire \countAddrSent_reg[39]_i_16_n_0 ;
  wire \countAddrSent_reg[39]_i_16_n_1 ;
  wire \countAddrSent_reg[39]_i_16_n_2 ;
  wire \countAddrSent_reg[39]_i_16_n_3 ;
  wire \countAddrSent_reg[39]_i_16_n_5 ;
  wire \countAddrSent_reg[39]_i_16_n_6 ;
  wire \countAddrSent_reg[39]_i_16_n_7 ;
  wire \countAddrSent_reg[39]_i_4_n_5 ;
  wire \countAddrSent_reg[39]_i_4_n_6 ;
  wire \countAddrSent_reg[39]_i_4_n_7 ;
  wire \countAddrSent_reg[39]_i_6_n_2 ;
  wire \countAddrSent_reg[39]_i_6_n_3 ;
  wire \countAddrSent_reg[39]_i_6_n_5 ;
  wire \countAddrSent_reg[39]_i_6_n_6 ;
  wire \countAddrSent_reg[39]_i_6_n_7 ;
  wire \countAddrSent_reg[39]_i_7_n_0 ;
  wire \countAddrSent_reg[39]_i_7_n_1 ;
  wire \countAddrSent_reg[39]_i_7_n_2 ;
  wire \countAddrSent_reg[39]_i_7_n_3 ;
  wire \countAddrSent_reg[39]_i_7_n_5 ;
  wire \countAddrSent_reg[39]_i_7_n_6 ;
  wire \countAddrSent_reg[39]_i_7_n_7 ;
  wire \countAddrSent_reg[8]_i_2_n_0 ;
  wire \countAddrSent_reg[8]_i_2_n_1 ;
  wire \countAddrSent_reg[8]_i_2_n_2 ;
  wire \countAddrSent_reg[8]_i_2_n_3 ;
  wire \countAddrSent_reg[8]_i_2_n_5 ;
  wire \countAddrSent_reg[8]_i_2_n_6 ;
  wire \countAddrSent_reg[8]_i_2_n_7 ;
  wire [39:0]countAddrToBeSent;
  wire [39:1]countAddrToBeSent0;
  wire [39:0]countAddrToBeSent00_in;
  wire \countAddrToBeSent[0]_i_1_n_0 ;
  wire \countAddrToBeSent[0]_i_2_n_0 ;
  wire \countAddrToBeSent[10]_i_1_n_0 ;
  wire \countAddrToBeSent[10]_i_2_n_0 ;
  wire \countAddrToBeSent[11]_i_1_n_0 ;
  wire \countAddrToBeSent[11]_i_2_n_0 ;
  wire \countAddrToBeSent[12]_i_1_n_0 ;
  wire \countAddrToBeSent[12]_i_2_n_0 ;
  wire \countAddrToBeSent[13]_i_1_n_0 ;
  wire \countAddrToBeSent[13]_i_2_n_0 ;
  wire \countAddrToBeSent[14]_i_1_n_0 ;
  wire \countAddrToBeSent[14]_i_2_n_0 ;
  wire \countAddrToBeSent[15]_i_10_n_0 ;
  wire \countAddrToBeSent[15]_i_11_n_0 ;
  wire \countAddrToBeSent[15]_i_1_n_0 ;
  wire \countAddrToBeSent[15]_i_2_n_0 ;
  wire \countAddrToBeSent[15]_i_4_n_0 ;
  wire \countAddrToBeSent[15]_i_5_n_0 ;
  wire \countAddrToBeSent[15]_i_6_n_0 ;
  wire \countAddrToBeSent[15]_i_7_n_0 ;
  wire \countAddrToBeSent[15]_i_8_n_0 ;
  wire \countAddrToBeSent[15]_i_9_n_0 ;
  wire \countAddrToBeSent[16]_i_1_n_0 ;
  wire \countAddrToBeSent[16]_i_2_n_0 ;
  wire \countAddrToBeSent[17]_i_1_n_0 ;
  wire \countAddrToBeSent[17]_i_2_n_0 ;
  wire \countAddrToBeSent[18]_i_1_n_0 ;
  wire \countAddrToBeSent[18]_i_2_n_0 ;
  wire \countAddrToBeSent[19]_i_1_n_0 ;
  wire \countAddrToBeSent[19]_i_2_n_0 ;
  wire \countAddrToBeSent[1]_i_1_n_0 ;
  wire \countAddrToBeSent[1]_i_2_n_0 ;
  wire \countAddrToBeSent[20]_i_1_n_0 ;
  wire \countAddrToBeSent[20]_i_2_n_0 ;
  wire \countAddrToBeSent[21]_i_1_n_0 ;
  wire \countAddrToBeSent[21]_i_2_n_0 ;
  wire \countAddrToBeSent[22]_i_1_n_0 ;
  wire \countAddrToBeSent[22]_i_2_n_0 ;
  wire \countAddrToBeSent[23]_i_10_n_0 ;
  wire \countAddrToBeSent[23]_i_11_n_0 ;
  wire \countAddrToBeSent[23]_i_1_n_0 ;
  wire \countAddrToBeSent[23]_i_2_n_0 ;
  wire \countAddrToBeSent[23]_i_4_n_0 ;
  wire \countAddrToBeSent[23]_i_5_n_0 ;
  wire \countAddrToBeSent[23]_i_6_n_0 ;
  wire \countAddrToBeSent[23]_i_7_n_0 ;
  wire \countAddrToBeSent[23]_i_8_n_0 ;
  wire \countAddrToBeSent[23]_i_9_n_0 ;
  wire \countAddrToBeSent[24]_i_1_n_0 ;
  wire \countAddrToBeSent[24]_i_2_n_0 ;
  wire \countAddrToBeSent[25]_i_1_n_0 ;
  wire \countAddrToBeSent[25]_i_2_n_0 ;
  wire \countAddrToBeSent[26]_i_1_n_0 ;
  wire \countAddrToBeSent[26]_i_2_n_0 ;
  wire \countAddrToBeSent[27]_i_1_n_0 ;
  wire \countAddrToBeSent[27]_i_2_n_0 ;
  wire \countAddrToBeSent[28]_i_1_n_0 ;
  wire \countAddrToBeSent[28]_i_2_n_0 ;
  wire \countAddrToBeSent[29]_i_1_n_0 ;
  wire \countAddrToBeSent[29]_i_2_n_0 ;
  wire \countAddrToBeSent[2]_i_1_n_0 ;
  wire \countAddrToBeSent[2]_i_2_n_0 ;
  wire \countAddrToBeSent[30]_i_1_n_0 ;
  wire \countAddrToBeSent[30]_i_2_n_0 ;
  wire \countAddrToBeSent[31]_i_10_n_0 ;
  wire \countAddrToBeSent[31]_i_11_n_0 ;
  wire \countAddrToBeSent[31]_i_1_n_0 ;
  wire \countAddrToBeSent[31]_i_2_n_0 ;
  wire \countAddrToBeSent[31]_i_4_n_0 ;
  wire \countAddrToBeSent[31]_i_5_n_0 ;
  wire \countAddrToBeSent[31]_i_6_n_0 ;
  wire \countAddrToBeSent[31]_i_7_n_0 ;
  wire \countAddrToBeSent[31]_i_8_n_0 ;
  wire \countAddrToBeSent[31]_i_9_n_0 ;
  wire \countAddrToBeSent[32]_i_1_n_0 ;
  wire \countAddrToBeSent[32]_i_2_n_0 ;
  wire \countAddrToBeSent[33]_i_1_n_0 ;
  wire \countAddrToBeSent[33]_i_2_n_0 ;
  wire \countAddrToBeSent[34]_i_1_n_0 ;
  wire \countAddrToBeSent[34]_i_2_n_0 ;
  wire \countAddrToBeSent[35]_i_1_n_0 ;
  wire \countAddrToBeSent[35]_i_2_n_0 ;
  wire \countAddrToBeSent[36]_i_1_n_0 ;
  wire \countAddrToBeSent[36]_i_2_n_0 ;
  wire \countAddrToBeSent[37]_i_1_n_0 ;
  wire \countAddrToBeSent[37]_i_2_n_0 ;
  wire \countAddrToBeSent[38]_i_1_n_0 ;
  wire \countAddrToBeSent[38]_i_2_n_0 ;
  wire \countAddrToBeSent[39]_i_100_n_0 ;
  wire \countAddrToBeSent[39]_i_101_n_0 ;
  wire \countAddrToBeSent[39]_i_102_n_0 ;
  wire \countAddrToBeSent[39]_i_105_n_0 ;
  wire \countAddrToBeSent[39]_i_106_n_0 ;
  wire \countAddrToBeSent[39]_i_107_n_0 ;
  wire \countAddrToBeSent[39]_i_108_n_0 ;
  wire \countAddrToBeSent[39]_i_109_n_0 ;
  wire \countAddrToBeSent[39]_i_10_n_0 ;
  wire \countAddrToBeSent[39]_i_110_n_0 ;
  wire \countAddrToBeSent[39]_i_111_n_0 ;
  wire \countAddrToBeSent[39]_i_112_n_0 ;
  wire \countAddrToBeSent[39]_i_113_n_0 ;
  wire \countAddrToBeSent[39]_i_114_n_0 ;
  wire \countAddrToBeSent[39]_i_115_n_0 ;
  wire \countAddrToBeSent[39]_i_116_n_0 ;
  wire \countAddrToBeSent[39]_i_117_n_0 ;
  wire \countAddrToBeSent[39]_i_118_n_0 ;
  wire \countAddrToBeSent[39]_i_119_n_0 ;
  wire \countAddrToBeSent[39]_i_11_n_0 ;
  wire \countAddrToBeSent[39]_i_120_n_0 ;
  wire \countAddrToBeSent[39]_i_124_n_0 ;
  wire \countAddrToBeSent[39]_i_125_n_0 ;
  wire \countAddrToBeSent[39]_i_126_n_0 ;
  wire \countAddrToBeSent[39]_i_127_n_0 ;
  wire \countAddrToBeSent[39]_i_128_n_0 ;
  wire \countAddrToBeSent[39]_i_129_n_0 ;
  wire \countAddrToBeSent[39]_i_12_n_0 ;
  wire \countAddrToBeSent[39]_i_130_n_0 ;
  wire \countAddrToBeSent[39]_i_131_n_0 ;
  wire \countAddrToBeSent[39]_i_132_n_0 ;
  wire \countAddrToBeSent[39]_i_133_n_0 ;
  wire \countAddrToBeSent[39]_i_134_n_0 ;
  wire \countAddrToBeSent[39]_i_135_n_0 ;
  wire \countAddrToBeSent[39]_i_136_n_0 ;
  wire \countAddrToBeSent[39]_i_137_n_0 ;
  wire \countAddrToBeSent[39]_i_138_n_0 ;
  wire \countAddrToBeSent[39]_i_139_n_0 ;
  wire \countAddrToBeSent[39]_i_142_n_0 ;
  wire \countAddrToBeSent[39]_i_143_n_0 ;
  wire \countAddrToBeSent[39]_i_144_n_0 ;
  wire \countAddrToBeSent[39]_i_145_n_0 ;
  wire \countAddrToBeSent[39]_i_146_n_0 ;
  wire \countAddrToBeSent[39]_i_147_n_0 ;
  wire \countAddrToBeSent[39]_i_148_n_0 ;
  wire \countAddrToBeSent[39]_i_149_n_0 ;
  wire \countAddrToBeSent[39]_i_150_n_0 ;
  wire \countAddrToBeSent[39]_i_151_n_0 ;
  wire \countAddrToBeSent[39]_i_152_n_0 ;
  wire \countAddrToBeSent[39]_i_153_n_0 ;
  wire \countAddrToBeSent[39]_i_154_n_0 ;
  wire \countAddrToBeSent[39]_i_155_n_0 ;
  wire \countAddrToBeSent[39]_i_156_n_0 ;
  wire \countAddrToBeSent[39]_i_157_n_0 ;
  wire \countAddrToBeSent[39]_i_159_n_0 ;
  wire \countAddrToBeSent[39]_i_160_n_0 ;
  wire \countAddrToBeSent[39]_i_161_n_0 ;
  wire \countAddrToBeSent[39]_i_162_n_0 ;
  wire \countAddrToBeSent[39]_i_163_n_0 ;
  wire \countAddrToBeSent[39]_i_164_n_0 ;
  wire \countAddrToBeSent[39]_i_165_n_0 ;
  wire \countAddrToBeSent[39]_i_166_n_0 ;
  wire \countAddrToBeSent[39]_i_167_n_0 ;
  wire \countAddrToBeSent[39]_i_168_n_0 ;
  wire \countAddrToBeSent[39]_i_169_n_0 ;
  wire \countAddrToBeSent[39]_i_170_n_0 ;
  wire \countAddrToBeSent[39]_i_171_n_0 ;
  wire \countAddrToBeSent[39]_i_172_n_0 ;
  wire \countAddrToBeSent[39]_i_173_n_0 ;
  wire \countAddrToBeSent[39]_i_174_n_0 ;
  wire \countAddrToBeSent[39]_i_175_n_0 ;
  wire \countAddrToBeSent[39]_i_176_n_0 ;
  wire \countAddrToBeSent[39]_i_177_n_0 ;
  wire \countAddrToBeSent[39]_i_178_n_0 ;
  wire \countAddrToBeSent[39]_i_179_n_0 ;
  wire \countAddrToBeSent[39]_i_17_n_0 ;
  wire \countAddrToBeSent[39]_i_180_n_0 ;
  wire \countAddrToBeSent[39]_i_181_n_0 ;
  wire \countAddrToBeSent[39]_i_182_n_0 ;
  wire \countAddrToBeSent[39]_i_185_n_0 ;
  wire \countAddrToBeSent[39]_i_186_n_0 ;
  wire \countAddrToBeSent[39]_i_187_n_0 ;
  wire \countAddrToBeSent[39]_i_188_n_0 ;
  wire \countAddrToBeSent[39]_i_189_n_0 ;
  wire \countAddrToBeSent[39]_i_18_n_0 ;
  wire \countAddrToBeSent[39]_i_190_n_0 ;
  wire \countAddrToBeSent[39]_i_191_n_0 ;
  wire \countAddrToBeSent[39]_i_192_n_0 ;
  wire \countAddrToBeSent[39]_i_193_n_0 ;
  wire \countAddrToBeSent[39]_i_194_n_0 ;
  wire \countAddrToBeSent[39]_i_195_n_0 ;
  wire \countAddrToBeSent[39]_i_196_n_0 ;
  wire \countAddrToBeSent[39]_i_197_n_0 ;
  wire \countAddrToBeSent[39]_i_198_n_0 ;
  wire \countAddrToBeSent[39]_i_199_n_0 ;
  wire \countAddrToBeSent[39]_i_19_n_0 ;
  wire \countAddrToBeSent[39]_i_1_n_0 ;
  wire \countAddrToBeSent[39]_i_200_n_0 ;
  wire \countAddrToBeSent[39]_i_202_n_0 ;
  wire \countAddrToBeSent[39]_i_203_n_0 ;
  wire \countAddrToBeSent[39]_i_204_n_0 ;
  wire \countAddrToBeSent[39]_i_205_n_0 ;
  wire \countAddrToBeSent[39]_i_206_n_0 ;
  wire \countAddrToBeSent[39]_i_207_n_0 ;
  wire \countAddrToBeSent[39]_i_208_n_0 ;
  wire \countAddrToBeSent[39]_i_209_n_0 ;
  wire \countAddrToBeSent[39]_i_20_n_0 ;
  wire \countAddrToBeSent[39]_i_211_n_0 ;
  wire \countAddrToBeSent[39]_i_212_n_0 ;
  wire \countAddrToBeSent[39]_i_213_n_0 ;
  wire \countAddrToBeSent[39]_i_214_n_0 ;
  wire \countAddrToBeSent[39]_i_215_n_0 ;
  wire \countAddrToBeSent[39]_i_216_n_0 ;
  wire \countAddrToBeSent[39]_i_217_n_0 ;
  wire \countAddrToBeSent[39]_i_218_n_0 ;
  wire \countAddrToBeSent[39]_i_219_n_0 ;
  wire \countAddrToBeSent[39]_i_21_n_0 ;
  wire \countAddrToBeSent[39]_i_220_n_0 ;
  wire \countAddrToBeSent[39]_i_221_n_0 ;
  wire \countAddrToBeSent[39]_i_222_n_0 ;
  wire \countAddrToBeSent[39]_i_223_n_0 ;
  wire \countAddrToBeSent[39]_i_224_n_0 ;
  wire \countAddrToBeSent[39]_i_225_n_0 ;
  wire \countAddrToBeSent[39]_i_226_n_0 ;
  wire \countAddrToBeSent[39]_i_228_n_0 ;
  wire \countAddrToBeSent[39]_i_229_n_0 ;
  wire \countAddrToBeSent[39]_i_22_n_0 ;
  wire \countAddrToBeSent[39]_i_230_n_0 ;
  wire \countAddrToBeSent[39]_i_231_n_0 ;
  wire \countAddrToBeSent[39]_i_232_n_0 ;
  wire \countAddrToBeSent[39]_i_233_n_0 ;
  wire \countAddrToBeSent[39]_i_234_n_0 ;
  wire \countAddrToBeSent[39]_i_235_n_0 ;
  wire \countAddrToBeSent[39]_i_236_n_0 ;
  wire \countAddrToBeSent[39]_i_237_n_0 ;
  wire \countAddrToBeSent[39]_i_238_n_0 ;
  wire \countAddrToBeSent[39]_i_239_n_0 ;
  wire \countAddrToBeSent[39]_i_23_n_0 ;
  wire \countAddrToBeSent[39]_i_240_n_0 ;
  wire \countAddrToBeSent[39]_i_241_n_0 ;
  wire \countAddrToBeSent[39]_i_242_n_0 ;
  wire \countAddrToBeSent[39]_i_243_n_0 ;
  wire \countAddrToBeSent[39]_i_245_n_0 ;
  wire \countAddrToBeSent[39]_i_246_n_0 ;
  wire \countAddrToBeSent[39]_i_247_n_0 ;
  wire \countAddrToBeSent[39]_i_248_n_0 ;
  wire \countAddrToBeSent[39]_i_249_n_0 ;
  wire \countAddrToBeSent[39]_i_24_n_0 ;
  wire \countAddrToBeSent[39]_i_250_n_0 ;
  wire \countAddrToBeSent[39]_i_251_n_0 ;
  wire \countAddrToBeSent[39]_i_252_n_0 ;
  wire \countAddrToBeSent[39]_i_253_n_0 ;
  wire \countAddrToBeSent[39]_i_254_n_0 ;
  wire \countAddrToBeSent[39]_i_255_n_0 ;
  wire \countAddrToBeSent[39]_i_256_n_0 ;
  wire \countAddrToBeSent[39]_i_257_n_0 ;
  wire \countAddrToBeSent[39]_i_258_n_0 ;
  wire \countAddrToBeSent[39]_i_259_n_0 ;
  wire \countAddrToBeSent[39]_i_25_n_0 ;
  wire \countAddrToBeSent[39]_i_260_n_0 ;
  wire \countAddrToBeSent[39]_i_26_n_0 ;
  wire \countAddrToBeSent[39]_i_27_n_0 ;
  wire \countAddrToBeSent[39]_i_28_n_0 ;
  wire \countAddrToBeSent[39]_i_29_n_0 ;
  wire \countAddrToBeSent[39]_i_2_n_0 ;
  wire \countAddrToBeSent[39]_i_30_n_0 ;
  wire \countAddrToBeSent[39]_i_31_n_0 ;
  wire \countAddrToBeSent[39]_i_32_n_0 ;
  wire \countAddrToBeSent[39]_i_34_n_0 ;
  wire \countAddrToBeSent[39]_i_35_n_0 ;
  wire \countAddrToBeSent[39]_i_36_n_0 ;
  wire \countAddrToBeSent[39]_i_37_n_0 ;
  wire \countAddrToBeSent[39]_i_38_n_0 ;
  wire \countAddrToBeSent[39]_i_39_n_0 ;
  wire \countAddrToBeSent[39]_i_40_n_0 ;
  wire \countAddrToBeSent[39]_i_41_n_0 ;
  wire \countAddrToBeSent[39]_i_42_n_0 ;
  wire \countAddrToBeSent[39]_i_43_n_0 ;
  wire \countAddrToBeSent[39]_i_44_n_0 ;
  wire \countAddrToBeSent[39]_i_45_n_0 ;
  wire \countAddrToBeSent[39]_i_46_n_0 ;
  wire \countAddrToBeSent[39]_i_47_n_0 ;
  wire \countAddrToBeSent[39]_i_48_n_0 ;
  wire \countAddrToBeSent[39]_i_49_n_0 ;
  wire \countAddrToBeSent[39]_i_53_n_0 ;
  wire \countAddrToBeSent[39]_i_54_n_0 ;
  wire \countAddrToBeSent[39]_i_55_n_0 ;
  wire \countAddrToBeSent[39]_i_56_n_0 ;
  wire \countAddrToBeSent[39]_i_57_n_0 ;
  wire \countAddrToBeSent[39]_i_58_n_0 ;
  wire \countAddrToBeSent[39]_i_59_n_0 ;
  wire \countAddrToBeSent[39]_i_60_n_0 ;
  wire \countAddrToBeSent[39]_i_61_n_0 ;
  wire \countAddrToBeSent[39]_i_62_n_0 ;
  wire \countAddrToBeSent[39]_i_63_n_0 ;
  wire \countAddrToBeSent[39]_i_64_n_0 ;
  wire \countAddrToBeSent[39]_i_65_n_0 ;
  wire \countAddrToBeSent[39]_i_66_n_0 ;
  wire \countAddrToBeSent[39]_i_67_n_0 ;
  wire \countAddrToBeSent[39]_i_68_n_0 ;
  wire \countAddrToBeSent[39]_i_69_n_0 ;
  wire \countAddrToBeSent[39]_i_6_n_0 ;
  wire \countAddrToBeSent[39]_i_70_n_0 ;
  wire \countAddrToBeSent[39]_i_71_n_0 ;
  wire \countAddrToBeSent[39]_i_72_n_0 ;
  wire \countAddrToBeSent[39]_i_73_n_0 ;
  wire \countAddrToBeSent[39]_i_74_n_0 ;
  wire \countAddrToBeSent[39]_i_75_n_0 ;
  wire \countAddrToBeSent[39]_i_76_n_0 ;
  wire \countAddrToBeSent[39]_i_77_n_0 ;
  wire \countAddrToBeSent[39]_i_78_n_0 ;
  wire \countAddrToBeSent[39]_i_79_n_0 ;
  wire \countAddrToBeSent[39]_i_80_n_0 ;
  wire \countAddrToBeSent[39]_i_81_n_0 ;
  wire \countAddrToBeSent[39]_i_82_n_0 ;
  wire \countAddrToBeSent[39]_i_83_n_0 ;
  wire \countAddrToBeSent[39]_i_84_n_0 ;
  wire \countAddrToBeSent[39]_i_85_n_0 ;
  wire \countAddrToBeSent[39]_i_86_n_0 ;
  wire \countAddrToBeSent[39]_i_87_n_0 ;
  wire \countAddrToBeSent[39]_i_88_n_0 ;
  wire \countAddrToBeSent[39]_i_89_n_0 ;
  wire \countAddrToBeSent[39]_i_90_n_0 ;
  wire \countAddrToBeSent[39]_i_91_n_0 ;
  wire \countAddrToBeSent[39]_i_92_n_0 ;
  wire \countAddrToBeSent[39]_i_95_n_0 ;
  wire \countAddrToBeSent[39]_i_96_n_0 ;
  wire \countAddrToBeSent[39]_i_97_n_0 ;
  wire \countAddrToBeSent[39]_i_98_n_0 ;
  wire \countAddrToBeSent[39]_i_99_n_0 ;
  wire \countAddrToBeSent[39]_i_9_n_0 ;
  wire \countAddrToBeSent[3]_i_1_n_0 ;
  wire \countAddrToBeSent[3]_i_2_n_0 ;
  wire \countAddrToBeSent[4]_i_1_n_0 ;
  wire \countAddrToBeSent[4]_i_2_n_0 ;
  wire \countAddrToBeSent[5]_i_1_n_0 ;
  wire \countAddrToBeSent[5]_i_2_n_0 ;
  wire \countAddrToBeSent[6]_i_1_n_0 ;
  wire \countAddrToBeSent[6]_i_2_n_0 ;
  wire \countAddrToBeSent[7]_i_10_n_0 ;
  wire \countAddrToBeSent[7]_i_11_n_0 ;
  wire \countAddrToBeSent[7]_i_1_n_0 ;
  wire \countAddrToBeSent[7]_i_2_n_0 ;
  wire \countAddrToBeSent[7]_i_4_n_0 ;
  wire \countAddrToBeSent[7]_i_5_n_0 ;
  wire \countAddrToBeSent[7]_i_6_n_0 ;
  wire \countAddrToBeSent[7]_i_7_n_0 ;
  wire \countAddrToBeSent[7]_i_8_n_0 ;
  wire \countAddrToBeSent[7]_i_9_n_0 ;
  wire \countAddrToBeSent[8]_i_1_n_0 ;
  wire \countAddrToBeSent[8]_i_2_n_0 ;
  wire \countAddrToBeSent[9]_i_1_n_0 ;
  wire \countAddrToBeSent[9]_i_2_n_0 ;
  wire countAddrToBeSent__0;
  wire \countAddrToBeSent_reg[15]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[15]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[15]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[15]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[15]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[15]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[15]_i_3_n_7 ;
  wire \countAddrToBeSent_reg[16]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[16]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[16]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[16]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[16]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[16]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[16]_i_3_n_7 ;
  wire \countAddrToBeSent_reg[23]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[23]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[23]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[23]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[23]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[23]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[23]_i_3_n_7 ;
  wire \countAddrToBeSent_reg[24]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[24]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[24]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[24]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[24]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[24]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[24]_i_3_n_7 ;
  wire \countAddrToBeSent_reg[31]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[31]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[31]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[31]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[31]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[31]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[31]_i_3_n_7 ;
  wire \countAddrToBeSent_reg[32]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[32]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[32]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[32]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[32]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[32]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[32]_i_3_n_7 ;
  wire \countAddrToBeSent_reg[38]_0 ;
  wire \countAddrToBeSent_reg[39]_i_103_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_103_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_103_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_103_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_103_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_103_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_103_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_104_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_104_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_104_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_104_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_104_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_104_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_104_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_10 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_11 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_12 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_13 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_14 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_15 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_8 ;
  wire \countAddrToBeSent_reg[39]_i_121_n_9 ;
  wire \countAddrToBeSent_reg[39]_i_122_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_122_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_122_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_122_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_122_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_122_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_122_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_123_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_123_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_123_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_123_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_123_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_123_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_123_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_13_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_13_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_13_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_13_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_13_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_13_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_13_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_140_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_140_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_140_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_140_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_140_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_140_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_140_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_141_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_141_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_141_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_141_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_141_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_141_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_141_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_14_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_14_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_14_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_14_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_14_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_14_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_10 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_11 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_12 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_13 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_14 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_15 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_8 ;
  wire \countAddrToBeSent_reg[39]_i_158_n_9 ;
  wire \countAddrToBeSent_reg[39]_i_15_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_15_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_15_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_15_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_15_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_16_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_16_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_16_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_16_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_16_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_16_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_16_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_183_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_183_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_183_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_183_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_183_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_183_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_183_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_184_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_184_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_184_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_184_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_184_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_184_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_184_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_10 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_11 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_12 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_13 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_14 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_15 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_8 ;
  wire \countAddrToBeSent_reg[39]_i_201_n_9 ;
  wire \countAddrToBeSent_reg[39]_i_210_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_210_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_210_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_210_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_210_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_210_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_210_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_10 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_11 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_12 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_13 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_14 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_15 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_8 ;
  wire \countAddrToBeSent_reg[39]_i_227_n_9 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_10 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_11 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_12 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_13 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_14 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_15 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_8 ;
  wire \countAddrToBeSent_reg[39]_i_244_n_9 ;
  wire \countAddrToBeSent_reg[39]_i_33_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_33_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_33_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_33_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_33_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_33_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_33_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_4_n_4 ;
  wire \countAddrToBeSent_reg[39]_i_4_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_4_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_4_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_50_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_50_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_50_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_50_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_50_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_50_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_51_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_51_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_51_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_51_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_51_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_51_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_51_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_52_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_52_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_52_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_52_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_52_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_52_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_7_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_7_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_7_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_7_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_7_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_7_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_7_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_8_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_8_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_8_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_8_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_8_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_8_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_8_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_93_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_93_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_93_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_93_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_93_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_93_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_93_n_7 ;
  wire \countAddrToBeSent_reg[39]_i_94_n_0 ;
  wire \countAddrToBeSent_reg[39]_i_94_n_1 ;
  wire \countAddrToBeSent_reg[39]_i_94_n_2 ;
  wire \countAddrToBeSent_reg[39]_i_94_n_3 ;
  wire \countAddrToBeSent_reg[39]_i_94_n_5 ;
  wire \countAddrToBeSent_reg[39]_i_94_n_6 ;
  wire \countAddrToBeSent_reg[39]_i_94_n_7 ;
  wire \countAddrToBeSent_reg[7]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[7]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[7]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[7]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[7]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[7]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[7]_i_3_n_7 ;
  wire \countAddrToBeSent_reg[8]_i_3_n_0 ;
  wire \countAddrToBeSent_reg[8]_i_3_n_1 ;
  wire \countAddrToBeSent_reg[8]_i_3_n_2 ;
  wire \countAddrToBeSent_reg[8]_i_3_n_3 ;
  wire \countAddrToBeSent_reg[8]_i_3_n_5 ;
  wire \countAddrToBeSent_reg[8]_i_3_n_6 ;
  wire \countAddrToBeSent_reg[8]_i_3_n_7 ;
  wire [39:0]countDataReceived;
  wire [39:1]countDataReceived0;
  wire countDataReceivedRatioFix;
  wire \countDataReceivedRatioFix[15]_i_10_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_11_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_12_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_13_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_14_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_15_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_16_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_17_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_2_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_3_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_4_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_5_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_6_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_7_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_8_n_0 ;
  wire \countDataReceivedRatioFix[15]_i_9_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_10_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_11_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_12_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_13_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_14_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_15_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_16_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_17_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_2_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_3_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_4_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_5_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_6_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_7_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_8_n_0 ;
  wire \countDataReceivedRatioFix[23]_i_9_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_10_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_11_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_12_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_13_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_14_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_15_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_16_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_17_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_2_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_3_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_4_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_5_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_6_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_7_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_8_n_0 ;
  wire \countDataReceivedRatioFix[31]_i_9_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_10_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_11_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_12_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_14_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_15_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_16_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_17_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_18_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_19_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_20_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_21_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_22_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_23_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_24_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_25_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_26_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_27_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_28_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_29_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_30_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_31_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_32_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_33_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_34_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_35_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_36_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_37_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_38_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_39_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_40_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_41_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_42_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_43_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_44_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_45_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_4_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_5_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_6_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_7_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_8_n_0 ;
  wire \countDataReceivedRatioFix[39]_i_9_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_10_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_11_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_12_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_13_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_14_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_15_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_16_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_17_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_2_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_3_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_4_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_5_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_6_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_7_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_8_n_0 ;
  wire \countDataReceivedRatioFix[7]_i_9_n_0 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_0 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_1 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_10 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_11 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_12 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_13 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_14 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_15 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_2 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_3 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_5 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_6 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_7 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_8 ;
  wire \countDataReceivedRatioFix_reg[15]_i_1_n_9 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_0 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_1 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_10 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_11 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_12 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_13 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_14 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_15 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_2 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_3 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_5 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_6 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_7 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_8 ;
  wire \countDataReceivedRatioFix_reg[23]_i_1_n_9 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_0 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_1 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_10 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_11 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_12 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_13 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_14 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_15 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_2 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_3 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_5 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_6 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_7 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_8 ;
  wire \countDataReceivedRatioFix_reg[31]_i_1_n_9 ;
  wire \countDataReceivedRatioFix_reg[39]_i_13_n_0 ;
  wire \countDataReceivedRatioFix_reg[39]_i_13_n_1 ;
  wire \countDataReceivedRatioFix_reg[39]_i_13_n_2 ;
  wire \countDataReceivedRatioFix_reg[39]_i_13_n_3 ;
  wire \countDataReceivedRatioFix_reg[39]_i_13_n_5 ;
  wire \countDataReceivedRatioFix_reg[39]_i_13_n_6 ;
  wire \countDataReceivedRatioFix_reg[39]_i_13_n_7 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_1 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_10 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_11 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_12 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_13 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_14 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_15 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_2 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_3 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_5 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_6 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_7 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_8 ;
  wire \countDataReceivedRatioFix_reg[39]_i_2_n_9 ;
  wire \countDataReceivedRatioFix_reg[39]_i_3_n_0 ;
  wire \countDataReceivedRatioFix_reg[39]_i_3_n_1 ;
  wire \countDataReceivedRatioFix_reg[39]_i_3_n_2 ;
  wire \countDataReceivedRatioFix_reg[39]_i_3_n_3 ;
  wire \countDataReceivedRatioFix_reg[39]_i_3_n_5 ;
  wire \countDataReceivedRatioFix_reg[39]_i_3_n_6 ;
  wire \countDataReceivedRatioFix_reg[39]_i_3_n_7 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_0 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_1 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_10 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_11 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_12 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_13 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_14 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_15 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_2 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_3 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_5 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_6 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_7 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_8 ;
  wire \countDataReceivedRatioFix_reg[7]_i_1_n_9 ;
  wire [39:0]countDataReceivedRatioFix_reg_n_0_;
  wire \countDataReceived[39]_i_11_n_0 ;
  wire \countDataReceived[39]_i_12_n_0 ;
  wire \countDataReceived[39]_i_13_n_0 ;
  wire \countDataReceived[39]_i_14_n_0 ;
  wire \countDataReceived[39]_i_15_n_0 ;
  wire \countDataReceived[39]_i_16_n_0 ;
  wire \countDataReceived[39]_i_18_n_0 ;
  wire \countDataReceived[39]_i_19_n_0 ;
  wire \countDataReceived[39]_i_1_n_0 ;
  wire \countDataReceived[39]_i_20_n_0 ;
  wire \countDataReceived[39]_i_21_n_0 ;
  wire \countDataReceived[39]_i_22_n_0 ;
  wire \countDataReceived[39]_i_23_n_0 ;
  wire \countDataReceived[39]_i_25_n_0 ;
  wire \countDataReceived[39]_i_26_n_0 ;
  wire \countDataReceived[39]_i_27_n_0 ;
  wire \countDataReceived[39]_i_28_n_0 ;
  wire \countDataReceived[39]_i_29_n_0 ;
  wire \countDataReceived[39]_i_30_n_0 ;
  wire \countDataReceived[39]_i_32_n_0 ;
  wire \countDataReceived[39]_i_33_n_0 ;
  wire \countDataReceived[39]_i_34_n_0 ;
  wire \countDataReceived[39]_i_35_n_0 ;
  wire \countDataReceived[39]_i_36_n_0 ;
  wire \countDataReceived[39]_i_37_n_0 ;
  wire \countDataReceived[39]_i_38_n_0 ;
  wire \countDataReceived[39]_i_39_n_0 ;
  wire \countDataReceived[39]_i_3_n_0 ;
  wire \countDataReceived[39]_i_40_n_0 ;
  wire \countDataReceived[39]_i_41_n_0 ;
  wire \countDataReceived[39]_i_42_n_0 ;
  wire \countDataReceived[39]_i_43_n_0 ;
  wire \countDataReceived[39]_i_44_n_0 ;
  wire \countDataReceived[39]_i_45_n_0 ;
  wire \countDataReceived[39]_i_46_n_0 ;
  wire \countDataReceived[39]_i_47_n_0 ;
  wire \countDataReceived[39]_i_48_n_0 ;
  wire \countDataReceived[39]_i_49_n_0 ;
  wire \countDataReceived[39]_i_50_n_0 ;
  wire \countDataReceived[39]_i_51_n_0 ;
  wire \countDataReceived[39]_i_52_n_0 ;
  wire \countDataReceived[39]_i_53_n_0 ;
  wire \countDataReceived[39]_i_54_n_0 ;
  wire \countDataReceived[39]_i_55_n_0 ;
  wire \countDataReceived[39]_i_56_n_0 ;
  wire \countDataReceived[39]_i_57_n_0 ;
  wire \countDataReceived[39]_i_58_n_0 ;
  wire \countDataReceived[39]_i_59_n_0 ;
  wire \countDataReceived[39]_i_60_n_0 ;
  wire \countDataReceived[39]_i_61_n_0 ;
  wire \countDataReceived[39]_i_62_n_0 ;
  wire \countDataReceived[39]_i_63_n_0 ;
  wire \countDataReceived[39]_i_64_n_0 ;
  wire \countDataReceived[39]_i_65_n_0 ;
  wire \countDataReceived[39]_i_66_n_0 ;
  wire \countDataReceived[39]_i_67_n_0 ;
  wire \countDataReceived[39]_i_68_n_0 ;
  wire \countDataReceived[39]_i_69_n_0 ;
  wire \countDataReceived[39]_i_7_n_0 ;
  wire \countDataReceived_reg[16]_i_2_n_0 ;
  wire \countDataReceived_reg[16]_i_2_n_1 ;
  wire \countDataReceived_reg[16]_i_2_n_2 ;
  wire \countDataReceived_reg[16]_i_2_n_3 ;
  wire \countDataReceived_reg[16]_i_2_n_5 ;
  wire \countDataReceived_reg[16]_i_2_n_6 ;
  wire \countDataReceived_reg[16]_i_2_n_7 ;
  wire \countDataReceived_reg[24]_i_2_n_0 ;
  wire \countDataReceived_reg[24]_i_2_n_1 ;
  wire \countDataReceived_reg[24]_i_2_n_2 ;
  wire \countDataReceived_reg[24]_i_2_n_3 ;
  wire \countDataReceived_reg[24]_i_2_n_5 ;
  wire \countDataReceived_reg[24]_i_2_n_6 ;
  wire \countDataReceived_reg[24]_i_2_n_7 ;
  wire \countDataReceived_reg[32]_i_2_n_0 ;
  wire \countDataReceived_reg[32]_i_2_n_1 ;
  wire \countDataReceived_reg[32]_i_2_n_2 ;
  wire \countDataReceived_reg[32]_i_2_n_3 ;
  wire \countDataReceived_reg[32]_i_2_n_5 ;
  wire \countDataReceived_reg[32]_i_2_n_6 ;
  wire \countDataReceived_reg[32]_i_2_n_7 ;
  wire \countDataReceived_reg[39]_i_10_n_0 ;
  wire \countDataReceived_reg[39]_i_10_n_1 ;
  wire \countDataReceived_reg[39]_i_10_n_2 ;
  wire \countDataReceived_reg[39]_i_10_n_3 ;
  wire \countDataReceived_reg[39]_i_10_n_5 ;
  wire \countDataReceived_reg[39]_i_10_n_6 ;
  wire \countDataReceived_reg[39]_i_10_n_7 ;
  wire \countDataReceived_reg[39]_i_17_n_0 ;
  wire \countDataReceived_reg[39]_i_17_n_1 ;
  wire \countDataReceived_reg[39]_i_17_n_2 ;
  wire \countDataReceived_reg[39]_i_17_n_3 ;
  wire \countDataReceived_reg[39]_i_17_n_5 ;
  wire \countDataReceived_reg[39]_i_17_n_6 ;
  wire \countDataReceived_reg[39]_i_17_n_7 ;
  wire \countDataReceived_reg[39]_i_24_n_0 ;
  wire \countDataReceived_reg[39]_i_24_n_1 ;
  wire \countDataReceived_reg[39]_i_24_n_2 ;
  wire \countDataReceived_reg[39]_i_24_n_3 ;
  wire \countDataReceived_reg[39]_i_24_n_5 ;
  wire \countDataReceived_reg[39]_i_24_n_6 ;
  wire \countDataReceived_reg[39]_i_24_n_7 ;
  wire \countDataReceived_reg[39]_i_31_n_0 ;
  wire \countDataReceived_reg[39]_i_31_n_1 ;
  wire \countDataReceived_reg[39]_i_31_n_2 ;
  wire \countDataReceived_reg[39]_i_31_n_3 ;
  wire \countDataReceived_reg[39]_i_31_n_5 ;
  wire \countDataReceived_reg[39]_i_31_n_6 ;
  wire \countDataReceived_reg[39]_i_31_n_7 ;
  wire \countDataReceived_reg[39]_i_4_n_2 ;
  wire \countDataReceived_reg[39]_i_4_n_3 ;
  wire \countDataReceived_reg[39]_i_4_n_5 ;
  wire \countDataReceived_reg[39]_i_4_n_6 ;
  wire \countDataReceived_reg[39]_i_4_n_7 ;
  wire \countDataReceived_reg[39]_i_5_n_3 ;
  wire \countDataReceived_reg[39]_i_5_n_5 ;
  wire \countDataReceived_reg[39]_i_5_n_6 ;
  wire \countDataReceived_reg[39]_i_5_n_7 ;
  wire \countDataReceived_reg[39]_i_6_n_3 ;
  wire \countDataReceived_reg[39]_i_6_n_5 ;
  wire \countDataReceived_reg[39]_i_6_n_6 ;
  wire \countDataReceived_reg[39]_i_6_n_7 ;
  wire \countDataReceived_reg[39]_i_8_n_3 ;
  wire \countDataReceived_reg[39]_i_8_n_5 ;
  wire \countDataReceived_reg[39]_i_8_n_6 ;
  wire \countDataReceived_reg[39]_i_8_n_7 ;
  wire \countDataReceived_reg[39]_i_9_n_3 ;
  wire \countDataReceived_reg[39]_i_9_n_5 ;
  wire \countDataReceived_reg[39]_i_9_n_6 ;
  wire \countDataReceived_reg[39]_i_9_n_7 ;
  wire \countDataReceived_reg[8]_i_2_n_0 ;
  wire \countDataReceived_reg[8]_i_2_n_1 ;
  wire \countDataReceived_reg[8]_i_2_n_2 ;
  wire \countDataReceived_reg[8]_i_2_n_3 ;
  wire \countDataReceived_reg[8]_i_2_n_5 ;
  wire \countDataReceived_reg[8]_i_2_n_6 ;
  wire \countDataReceived_reg[8]_i_2_n_7 ;
  wire [39:1]countDataSent0;
  wire \countDataSent[0]_i_10_n_0 ;
  wire \countDataSent[0]_i_2_n_0 ;
  wire \countDataSent[0]_i_3_n_0 ;
  wire \countDataSent[0]_i_4_n_0 ;
  wire \countDataSent[0]_i_5_n_0 ;
  wire \countDataSent[0]_i_6_n_0 ;
  wire \countDataSent[0]_i_7_n_0 ;
  wire \countDataSent[0]_i_8_n_0 ;
  wire \countDataSent[0]_i_9_n_0 ;
  wire \countDataSent[16]_i_2_n_0 ;
  wire \countDataSent[16]_i_3_n_0 ;
  wire \countDataSent[16]_i_4_n_0 ;
  wire \countDataSent[16]_i_5_n_0 ;
  wire \countDataSent[16]_i_6_n_0 ;
  wire \countDataSent[16]_i_7_n_0 ;
  wire \countDataSent[16]_i_8_n_0 ;
  wire \countDataSent[16]_i_9_n_0 ;
  wire \countDataSent[24]_i_2_n_0 ;
  wire \countDataSent[24]_i_3_n_0 ;
  wire \countDataSent[24]_i_4_n_0 ;
  wire \countDataSent[24]_i_5_n_0 ;
  wire \countDataSent[24]_i_6_n_0 ;
  wire \countDataSent[24]_i_7_n_0 ;
  wire \countDataSent[24]_i_8_n_0 ;
  wire \countDataSent[24]_i_9_n_0 ;
  wire \countDataSent[32]_i_2_n_0 ;
  wire \countDataSent[32]_i_3_n_0 ;
  wire \countDataSent[32]_i_4_n_0 ;
  wire \countDataSent[32]_i_5_n_0 ;
  wire \countDataSent[32]_i_6_n_0 ;
  wire \countDataSent[32]_i_7_n_0 ;
  wire \countDataSent[32]_i_8_n_0 ;
  wire \countDataSent[32]_i_9_n_0 ;
  wire \countDataSent[8]_i_2_n_0 ;
  wire \countDataSent[8]_i_3_n_0 ;
  wire \countDataSent[8]_i_4_n_0 ;
  wire \countDataSent[8]_i_5_n_0 ;
  wire \countDataSent[8]_i_6_n_0 ;
  wire \countDataSent[8]_i_7_n_0 ;
  wire \countDataSent[8]_i_8_n_0 ;
  wire \countDataSent[8]_i_9_n_0 ;
  wire [39:0]countDataSent_reg;
  wire \countDataSent_reg[0]_i_11_n_0 ;
  wire \countDataSent_reg[0]_i_11_n_1 ;
  wire \countDataSent_reg[0]_i_11_n_2 ;
  wire \countDataSent_reg[0]_i_11_n_3 ;
  wire \countDataSent_reg[0]_i_11_n_5 ;
  wire \countDataSent_reg[0]_i_11_n_6 ;
  wire \countDataSent_reg[0]_i_11_n_7 ;
  wire \countDataSent_reg[0]_i_1_n_0 ;
  wire \countDataSent_reg[0]_i_1_n_1 ;
  wire \countDataSent_reg[0]_i_1_n_10 ;
  wire \countDataSent_reg[0]_i_1_n_11 ;
  wire \countDataSent_reg[0]_i_1_n_12 ;
  wire \countDataSent_reg[0]_i_1_n_13 ;
  wire \countDataSent_reg[0]_i_1_n_14 ;
  wire \countDataSent_reg[0]_i_1_n_15 ;
  wire \countDataSent_reg[0]_i_1_n_2 ;
  wire \countDataSent_reg[0]_i_1_n_3 ;
  wire \countDataSent_reg[0]_i_1_n_5 ;
  wire \countDataSent_reg[0]_i_1_n_6 ;
  wire \countDataSent_reg[0]_i_1_n_7 ;
  wire \countDataSent_reg[0]_i_1_n_8 ;
  wire \countDataSent_reg[0]_i_1_n_9 ;
  wire \countDataSent_reg[16]_i_10_n_0 ;
  wire \countDataSent_reg[16]_i_10_n_1 ;
  wire \countDataSent_reg[16]_i_10_n_2 ;
  wire \countDataSent_reg[16]_i_10_n_3 ;
  wire \countDataSent_reg[16]_i_10_n_5 ;
  wire \countDataSent_reg[16]_i_10_n_6 ;
  wire \countDataSent_reg[16]_i_10_n_7 ;
  wire \countDataSent_reg[16]_i_1_n_0 ;
  wire \countDataSent_reg[16]_i_1_n_1 ;
  wire \countDataSent_reg[16]_i_1_n_10 ;
  wire \countDataSent_reg[16]_i_1_n_11 ;
  wire \countDataSent_reg[16]_i_1_n_12 ;
  wire \countDataSent_reg[16]_i_1_n_13 ;
  wire \countDataSent_reg[16]_i_1_n_14 ;
  wire \countDataSent_reg[16]_i_1_n_15 ;
  wire \countDataSent_reg[16]_i_1_n_2 ;
  wire \countDataSent_reg[16]_i_1_n_3 ;
  wire \countDataSent_reg[16]_i_1_n_5 ;
  wire \countDataSent_reg[16]_i_1_n_6 ;
  wire \countDataSent_reg[16]_i_1_n_7 ;
  wire \countDataSent_reg[16]_i_1_n_8 ;
  wire \countDataSent_reg[16]_i_1_n_9 ;
  wire \countDataSent_reg[24]_i_10_n_0 ;
  wire \countDataSent_reg[24]_i_10_n_1 ;
  wire \countDataSent_reg[24]_i_10_n_2 ;
  wire \countDataSent_reg[24]_i_10_n_3 ;
  wire \countDataSent_reg[24]_i_10_n_5 ;
  wire \countDataSent_reg[24]_i_10_n_6 ;
  wire \countDataSent_reg[24]_i_10_n_7 ;
  wire \countDataSent_reg[24]_i_1_n_0 ;
  wire \countDataSent_reg[24]_i_1_n_1 ;
  wire \countDataSent_reg[24]_i_1_n_10 ;
  wire \countDataSent_reg[24]_i_1_n_11 ;
  wire \countDataSent_reg[24]_i_1_n_12 ;
  wire \countDataSent_reg[24]_i_1_n_13 ;
  wire \countDataSent_reg[24]_i_1_n_14 ;
  wire \countDataSent_reg[24]_i_1_n_15 ;
  wire \countDataSent_reg[24]_i_1_n_2 ;
  wire \countDataSent_reg[24]_i_1_n_3 ;
  wire \countDataSent_reg[24]_i_1_n_5 ;
  wire \countDataSent_reg[24]_i_1_n_6 ;
  wire \countDataSent_reg[24]_i_1_n_7 ;
  wire \countDataSent_reg[24]_i_1_n_8 ;
  wire \countDataSent_reg[24]_i_1_n_9 ;
  wire \countDataSent_reg[32]_i_10_n_2 ;
  wire \countDataSent_reg[32]_i_10_n_3 ;
  wire \countDataSent_reg[32]_i_10_n_5 ;
  wire \countDataSent_reg[32]_i_10_n_6 ;
  wire \countDataSent_reg[32]_i_10_n_7 ;
  wire \countDataSent_reg[32]_i_1_n_1 ;
  wire \countDataSent_reg[32]_i_1_n_10 ;
  wire \countDataSent_reg[32]_i_1_n_11 ;
  wire \countDataSent_reg[32]_i_1_n_12 ;
  wire \countDataSent_reg[32]_i_1_n_13 ;
  wire \countDataSent_reg[32]_i_1_n_14 ;
  wire \countDataSent_reg[32]_i_1_n_15 ;
  wire \countDataSent_reg[32]_i_1_n_2 ;
  wire \countDataSent_reg[32]_i_1_n_3 ;
  wire \countDataSent_reg[32]_i_1_n_5 ;
  wire \countDataSent_reg[32]_i_1_n_6 ;
  wire \countDataSent_reg[32]_i_1_n_7 ;
  wire \countDataSent_reg[32]_i_1_n_8 ;
  wire \countDataSent_reg[32]_i_1_n_9 ;
  wire \countDataSent_reg[8]_i_10_n_0 ;
  wire \countDataSent_reg[8]_i_10_n_1 ;
  wire \countDataSent_reg[8]_i_10_n_2 ;
  wire \countDataSent_reg[8]_i_10_n_3 ;
  wire \countDataSent_reg[8]_i_10_n_5 ;
  wire \countDataSent_reg[8]_i_10_n_6 ;
  wire \countDataSent_reg[8]_i_10_n_7 ;
  wire \countDataSent_reg[8]_i_1_n_0 ;
  wire \countDataSent_reg[8]_i_1_n_1 ;
  wire \countDataSent_reg[8]_i_1_n_10 ;
  wire \countDataSent_reg[8]_i_1_n_11 ;
  wire \countDataSent_reg[8]_i_1_n_12 ;
  wire \countDataSent_reg[8]_i_1_n_13 ;
  wire \countDataSent_reg[8]_i_1_n_14 ;
  wire \countDataSent_reg[8]_i_1_n_15 ;
  wire \countDataSent_reg[8]_i_1_n_2 ;
  wire \countDataSent_reg[8]_i_1_n_3 ;
  wire \countDataSent_reg[8]_i_1_n_5 ;
  wire \countDataSent_reg[8]_i_1_n_6 ;
  wire \countDataSent_reg[8]_i_1_n_7 ;
  wire \countDataSent_reg[8]_i_1_n_8 ;
  wire \countDataSent_reg[8]_i_1_n_9 ;
  wire [39:1]countDataToBeReceived0;
  wire \countDataToBeReceived[0]_i_10_n_0 ;
  wire \countDataToBeReceived[0]_i_2_n_0 ;
  wire \countDataToBeReceived[0]_i_3_n_0 ;
  wire \countDataToBeReceived[0]_i_4_n_0 ;
  wire \countDataToBeReceived[0]_i_5_n_0 ;
  wire \countDataToBeReceived[0]_i_6_n_0 ;
  wire \countDataToBeReceived[0]_i_7_n_0 ;
  wire \countDataToBeReceived[0]_i_8_n_0 ;
  wire \countDataToBeReceived[0]_i_9_n_0 ;
  wire \countDataToBeReceived[16]_i_2_n_0 ;
  wire \countDataToBeReceived[16]_i_3_n_0 ;
  wire \countDataToBeReceived[16]_i_4_n_0 ;
  wire \countDataToBeReceived[16]_i_5_n_0 ;
  wire \countDataToBeReceived[16]_i_6_n_0 ;
  wire \countDataToBeReceived[16]_i_7_n_0 ;
  wire \countDataToBeReceived[16]_i_8_n_0 ;
  wire \countDataToBeReceived[16]_i_9_n_0 ;
  wire \countDataToBeReceived[24]_i_2_n_0 ;
  wire \countDataToBeReceived[24]_i_3_n_0 ;
  wire \countDataToBeReceived[24]_i_4_n_0 ;
  wire \countDataToBeReceived[24]_i_5_n_0 ;
  wire \countDataToBeReceived[24]_i_6_n_0 ;
  wire \countDataToBeReceived[24]_i_7_n_0 ;
  wire \countDataToBeReceived[24]_i_8_n_0 ;
  wire \countDataToBeReceived[24]_i_9_n_0 ;
  wire \countDataToBeReceived[32]_i_2_n_0 ;
  wire \countDataToBeReceived[32]_i_3_n_0 ;
  wire \countDataToBeReceived[32]_i_4_n_0 ;
  wire \countDataToBeReceived[32]_i_5_n_0 ;
  wire \countDataToBeReceived[32]_i_6_n_0 ;
  wire \countDataToBeReceived[32]_i_7_n_0 ;
  wire \countDataToBeReceived[32]_i_8_n_0 ;
  wire \countDataToBeReceived[32]_i_9_n_0 ;
  wire \countDataToBeReceived[8]_i_2_n_0 ;
  wire \countDataToBeReceived[8]_i_3_n_0 ;
  wire \countDataToBeReceived[8]_i_4_n_0 ;
  wire \countDataToBeReceived[8]_i_5_n_0 ;
  wire \countDataToBeReceived[8]_i_6_n_0 ;
  wire \countDataToBeReceived[8]_i_7_n_0 ;
  wire \countDataToBeReceived[8]_i_8_n_0 ;
  wire \countDataToBeReceived[8]_i_9_n_0 ;
  wire [39:0]countDataToBeReceived_reg;
  wire \countDataToBeReceived_reg[0]_i_11_n_0 ;
  wire \countDataToBeReceived_reg[0]_i_11_n_1 ;
  wire \countDataToBeReceived_reg[0]_i_11_n_2 ;
  wire \countDataToBeReceived_reg[0]_i_11_n_3 ;
  wire \countDataToBeReceived_reg[0]_i_11_n_5 ;
  wire \countDataToBeReceived_reg[0]_i_11_n_6 ;
  wire \countDataToBeReceived_reg[0]_i_11_n_7 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_0 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_1 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_10 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_11 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_12 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_13 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_14 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_15 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_2 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_3 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_5 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_6 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_7 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_8 ;
  wire \countDataToBeReceived_reg[0]_i_1_n_9 ;
  wire \countDataToBeReceived_reg[16]_i_10_n_0 ;
  wire \countDataToBeReceived_reg[16]_i_10_n_1 ;
  wire \countDataToBeReceived_reg[16]_i_10_n_2 ;
  wire \countDataToBeReceived_reg[16]_i_10_n_3 ;
  wire \countDataToBeReceived_reg[16]_i_10_n_5 ;
  wire \countDataToBeReceived_reg[16]_i_10_n_6 ;
  wire \countDataToBeReceived_reg[16]_i_10_n_7 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_0 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_1 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_10 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_11 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_12 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_13 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_14 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_15 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_2 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_3 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_5 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_6 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_7 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_8 ;
  wire \countDataToBeReceived_reg[16]_i_1_n_9 ;
  wire \countDataToBeReceived_reg[24]_i_10_n_0 ;
  wire \countDataToBeReceived_reg[24]_i_10_n_1 ;
  wire \countDataToBeReceived_reg[24]_i_10_n_2 ;
  wire \countDataToBeReceived_reg[24]_i_10_n_3 ;
  wire \countDataToBeReceived_reg[24]_i_10_n_5 ;
  wire \countDataToBeReceived_reg[24]_i_10_n_6 ;
  wire \countDataToBeReceived_reg[24]_i_10_n_7 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_0 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_1 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_10 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_11 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_12 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_13 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_14 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_15 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_2 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_3 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_5 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_6 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_7 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_8 ;
  wire \countDataToBeReceived_reg[24]_i_1_n_9 ;
  wire \countDataToBeReceived_reg[32]_i_10_n_2 ;
  wire \countDataToBeReceived_reg[32]_i_10_n_3 ;
  wire \countDataToBeReceived_reg[32]_i_10_n_5 ;
  wire \countDataToBeReceived_reg[32]_i_10_n_6 ;
  wire \countDataToBeReceived_reg[32]_i_10_n_7 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_1 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_10 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_11 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_12 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_13 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_14 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_15 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_2 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_3 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_5 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_6 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_7 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_8 ;
  wire \countDataToBeReceived_reg[32]_i_1_n_9 ;
  wire \countDataToBeReceived_reg[8]_i_10_n_0 ;
  wire \countDataToBeReceived_reg[8]_i_10_n_1 ;
  wire \countDataToBeReceived_reg[8]_i_10_n_2 ;
  wire \countDataToBeReceived_reg[8]_i_10_n_3 ;
  wire \countDataToBeReceived_reg[8]_i_10_n_5 ;
  wire \countDataToBeReceived_reg[8]_i_10_n_6 ;
  wire \countDataToBeReceived_reg[8]_i_10_n_7 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_0 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_1 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_10 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_11 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_12 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_13 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_14 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_15 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_2 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_3 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_5 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_6 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_7 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_8 ;
  wire \countDataToBeReceived_reg[8]_i_1_n_9 ;
  wire [39:0]countDataToBeSent0;
  wire \countDataToBeSent[0]_i_10_n_0 ;
  wire \countDataToBeSent[0]_i_11_n_0 ;
  wire \countDataToBeSent[0]_i_12_n_0 ;
  wire \countDataToBeSent[0]_i_13_n_0 ;
  wire \countDataToBeSent[0]_i_14_n_0 ;
  wire \countDataToBeSent[0]_i_15_n_0 ;
  wire \countDataToBeSent[0]_i_16_n_0 ;
  wire \countDataToBeSent[0]_i_17_n_0 ;
  wire \countDataToBeSent[0]_i_19_n_0 ;
  wire \countDataToBeSent[0]_i_20_n_0 ;
  wire \countDataToBeSent[0]_i_21_n_0 ;
  wire \countDataToBeSent[0]_i_22_n_0 ;
  wire \countDataToBeSent[0]_i_23_n_0 ;
  wire \countDataToBeSent[0]_i_24_n_0 ;
  wire \countDataToBeSent[0]_i_25_n_0 ;
  wire \countDataToBeSent[0]_i_26_n_0 ;
  wire \countDataToBeSent[0]_i_2_n_0 ;
  wire \countDataToBeSent[0]_i_3_n_0 ;
  wire \countDataToBeSent[0]_i_4_n_0 ;
  wire \countDataToBeSent[0]_i_5_n_0 ;
  wire \countDataToBeSent[0]_i_6_n_0 ;
  wire \countDataToBeSent[0]_i_7_n_0 ;
  wire \countDataToBeSent[0]_i_8_n_0 ;
  wire \countDataToBeSent[0]_i_9_n_0 ;
  wire \countDataToBeSent[16]_i_10_n_0 ;
  wire \countDataToBeSent[16]_i_11_n_0 ;
  wire \countDataToBeSent[16]_i_12_n_0 ;
  wire \countDataToBeSent[16]_i_13_n_0 ;
  wire \countDataToBeSent[16]_i_14_n_0 ;
  wire \countDataToBeSent[16]_i_15_n_0 ;
  wire \countDataToBeSent[16]_i_16_n_0 ;
  wire \countDataToBeSent[16]_i_17_n_0 ;
  wire \countDataToBeSent[16]_i_19_n_0 ;
  wire \countDataToBeSent[16]_i_20_n_0 ;
  wire \countDataToBeSent[16]_i_21_n_0 ;
  wire \countDataToBeSent[16]_i_22_n_0 ;
  wire \countDataToBeSent[16]_i_23_n_0 ;
  wire \countDataToBeSent[16]_i_24_n_0 ;
  wire \countDataToBeSent[16]_i_25_n_0 ;
  wire \countDataToBeSent[16]_i_26_n_0 ;
  wire \countDataToBeSent[16]_i_2_n_0 ;
  wire \countDataToBeSent[16]_i_3_n_0 ;
  wire \countDataToBeSent[16]_i_4_n_0 ;
  wire \countDataToBeSent[16]_i_5_n_0 ;
  wire \countDataToBeSent[16]_i_6_n_0 ;
  wire \countDataToBeSent[16]_i_7_n_0 ;
  wire \countDataToBeSent[16]_i_8_n_0 ;
  wire \countDataToBeSent[16]_i_9_n_0 ;
  wire \countDataToBeSent[24]_i_10_n_0 ;
  wire \countDataToBeSent[24]_i_11_n_0 ;
  wire \countDataToBeSent[24]_i_12_n_0 ;
  wire \countDataToBeSent[24]_i_13_n_0 ;
  wire \countDataToBeSent[24]_i_14_n_0 ;
  wire \countDataToBeSent[24]_i_15_n_0 ;
  wire \countDataToBeSent[24]_i_16_n_0 ;
  wire \countDataToBeSent[24]_i_17_n_0 ;
  wire \countDataToBeSent[24]_i_19_n_0 ;
  wire \countDataToBeSent[24]_i_20_n_0 ;
  wire \countDataToBeSent[24]_i_21_n_0 ;
  wire \countDataToBeSent[24]_i_22_n_0 ;
  wire \countDataToBeSent[24]_i_23_n_0 ;
  wire \countDataToBeSent[24]_i_24_n_0 ;
  wire \countDataToBeSent[24]_i_25_n_0 ;
  wire \countDataToBeSent[24]_i_26_n_0 ;
  wire \countDataToBeSent[24]_i_2_n_0 ;
  wire \countDataToBeSent[24]_i_3_n_0 ;
  wire \countDataToBeSent[24]_i_4_n_0 ;
  wire \countDataToBeSent[24]_i_5_n_0 ;
  wire \countDataToBeSent[24]_i_6_n_0 ;
  wire \countDataToBeSent[24]_i_7_n_0 ;
  wire \countDataToBeSent[24]_i_8_n_0 ;
  wire \countDataToBeSent[24]_i_9_n_0 ;
  wire \countDataToBeSent[32]_i_2_n_0 ;
  wire \countDataToBeSent[32]_i_3_n_0 ;
  wire \countDataToBeSent[32]_i_4_n_0 ;
  wire \countDataToBeSent[32]_i_5_n_0 ;
  wire \countDataToBeSent[32]_i_6_n_0 ;
  wire \countDataToBeSent[32]_i_7_n_0 ;
  wire \countDataToBeSent[32]_i_8_n_0 ;
  wire \countDataToBeSent[32]_i_9_n_0 ;
  wire \countDataToBeSent[8]_i_10_n_0 ;
  wire \countDataToBeSent[8]_i_11_n_0 ;
  wire \countDataToBeSent[8]_i_12_n_0 ;
  wire \countDataToBeSent[8]_i_13_n_0 ;
  wire \countDataToBeSent[8]_i_14_n_0 ;
  wire \countDataToBeSent[8]_i_15_n_0 ;
  wire \countDataToBeSent[8]_i_16_n_0 ;
  wire \countDataToBeSent[8]_i_17_n_0 ;
  wire \countDataToBeSent[8]_i_19_n_0 ;
  wire \countDataToBeSent[8]_i_20_n_0 ;
  wire \countDataToBeSent[8]_i_21_n_0 ;
  wire \countDataToBeSent[8]_i_22_n_0 ;
  wire \countDataToBeSent[8]_i_23_n_0 ;
  wire \countDataToBeSent[8]_i_24_n_0 ;
  wire \countDataToBeSent[8]_i_25_n_0 ;
  wire \countDataToBeSent[8]_i_26_n_0 ;
  wire \countDataToBeSent[8]_i_2_n_0 ;
  wire \countDataToBeSent[8]_i_3_n_0 ;
  wire \countDataToBeSent[8]_i_4_n_0 ;
  wire \countDataToBeSent[8]_i_5_n_0 ;
  wire \countDataToBeSent[8]_i_6_n_0 ;
  wire \countDataToBeSent[8]_i_7_n_0 ;
  wire \countDataToBeSent[8]_i_8_n_0 ;
  wire \countDataToBeSent[8]_i_9_n_0 ;
  wire [39:0]countDataToBeSent_reg;
  wire \countDataToBeSent_reg[0]_i_18_n_0 ;
  wire \countDataToBeSent_reg[0]_i_18_n_1 ;
  wire \countDataToBeSent_reg[0]_i_18_n_2 ;
  wire \countDataToBeSent_reg[0]_i_18_n_3 ;
  wire \countDataToBeSent_reg[0]_i_18_n_5 ;
  wire \countDataToBeSent_reg[0]_i_18_n_6 ;
  wire \countDataToBeSent_reg[0]_i_18_n_7 ;
  wire \countDataToBeSent_reg[0]_i_1_n_0 ;
  wire \countDataToBeSent_reg[0]_i_1_n_1 ;
  wire \countDataToBeSent_reg[0]_i_1_n_10 ;
  wire \countDataToBeSent_reg[0]_i_1_n_11 ;
  wire \countDataToBeSent_reg[0]_i_1_n_12 ;
  wire \countDataToBeSent_reg[0]_i_1_n_13 ;
  wire \countDataToBeSent_reg[0]_i_1_n_14 ;
  wire \countDataToBeSent_reg[0]_i_1_n_15 ;
  wire \countDataToBeSent_reg[0]_i_1_n_2 ;
  wire \countDataToBeSent_reg[0]_i_1_n_3 ;
  wire \countDataToBeSent_reg[0]_i_1_n_5 ;
  wire \countDataToBeSent_reg[0]_i_1_n_6 ;
  wire \countDataToBeSent_reg[0]_i_1_n_7 ;
  wire \countDataToBeSent_reg[0]_i_1_n_8 ;
  wire \countDataToBeSent_reg[0]_i_1_n_9 ;
  wire \countDataToBeSent_reg[16]_i_18_n_0 ;
  wire \countDataToBeSent_reg[16]_i_18_n_1 ;
  wire \countDataToBeSent_reg[16]_i_18_n_2 ;
  wire \countDataToBeSent_reg[16]_i_18_n_3 ;
  wire \countDataToBeSent_reg[16]_i_18_n_5 ;
  wire \countDataToBeSent_reg[16]_i_18_n_6 ;
  wire \countDataToBeSent_reg[16]_i_18_n_7 ;
  wire \countDataToBeSent_reg[16]_i_1_n_0 ;
  wire \countDataToBeSent_reg[16]_i_1_n_1 ;
  wire \countDataToBeSent_reg[16]_i_1_n_10 ;
  wire \countDataToBeSent_reg[16]_i_1_n_11 ;
  wire \countDataToBeSent_reg[16]_i_1_n_12 ;
  wire \countDataToBeSent_reg[16]_i_1_n_13 ;
  wire \countDataToBeSent_reg[16]_i_1_n_14 ;
  wire \countDataToBeSent_reg[16]_i_1_n_15 ;
  wire \countDataToBeSent_reg[16]_i_1_n_2 ;
  wire \countDataToBeSent_reg[16]_i_1_n_3 ;
  wire \countDataToBeSent_reg[16]_i_1_n_5 ;
  wire \countDataToBeSent_reg[16]_i_1_n_6 ;
  wire \countDataToBeSent_reg[16]_i_1_n_7 ;
  wire \countDataToBeSent_reg[16]_i_1_n_8 ;
  wire \countDataToBeSent_reg[16]_i_1_n_9 ;
  wire \countDataToBeSent_reg[24]_i_18_n_0 ;
  wire \countDataToBeSent_reg[24]_i_18_n_1 ;
  wire \countDataToBeSent_reg[24]_i_18_n_2 ;
  wire \countDataToBeSent_reg[24]_i_18_n_3 ;
  wire \countDataToBeSent_reg[24]_i_18_n_5 ;
  wire \countDataToBeSent_reg[24]_i_18_n_6 ;
  wire \countDataToBeSent_reg[24]_i_18_n_7 ;
  wire \countDataToBeSent_reg[24]_i_1_n_0 ;
  wire \countDataToBeSent_reg[24]_i_1_n_1 ;
  wire \countDataToBeSent_reg[24]_i_1_n_10 ;
  wire \countDataToBeSent_reg[24]_i_1_n_11 ;
  wire \countDataToBeSent_reg[24]_i_1_n_12 ;
  wire \countDataToBeSent_reg[24]_i_1_n_13 ;
  wire \countDataToBeSent_reg[24]_i_1_n_14 ;
  wire \countDataToBeSent_reg[24]_i_1_n_15 ;
  wire \countDataToBeSent_reg[24]_i_1_n_2 ;
  wire \countDataToBeSent_reg[24]_i_1_n_3 ;
  wire \countDataToBeSent_reg[24]_i_1_n_5 ;
  wire \countDataToBeSent_reg[24]_i_1_n_6 ;
  wire \countDataToBeSent_reg[24]_i_1_n_7 ;
  wire \countDataToBeSent_reg[24]_i_1_n_8 ;
  wire \countDataToBeSent_reg[24]_i_1_n_9 ;
  wire \countDataToBeSent_reg[32]_i_10_n_1 ;
  wire \countDataToBeSent_reg[32]_i_10_n_2 ;
  wire \countDataToBeSent_reg[32]_i_10_n_3 ;
  wire \countDataToBeSent_reg[32]_i_10_n_5 ;
  wire \countDataToBeSent_reg[32]_i_10_n_6 ;
  wire \countDataToBeSent_reg[32]_i_10_n_7 ;
  wire \countDataToBeSent_reg[32]_i_1_n_1 ;
  wire \countDataToBeSent_reg[32]_i_1_n_10 ;
  wire \countDataToBeSent_reg[32]_i_1_n_11 ;
  wire \countDataToBeSent_reg[32]_i_1_n_12 ;
  wire \countDataToBeSent_reg[32]_i_1_n_13 ;
  wire \countDataToBeSent_reg[32]_i_1_n_14 ;
  wire \countDataToBeSent_reg[32]_i_1_n_15 ;
  wire \countDataToBeSent_reg[32]_i_1_n_2 ;
  wire \countDataToBeSent_reg[32]_i_1_n_3 ;
  wire \countDataToBeSent_reg[32]_i_1_n_5 ;
  wire \countDataToBeSent_reg[32]_i_1_n_6 ;
  wire \countDataToBeSent_reg[32]_i_1_n_7 ;
  wire \countDataToBeSent_reg[32]_i_1_n_8 ;
  wire \countDataToBeSent_reg[32]_i_1_n_9 ;
  wire \countDataToBeSent_reg[8]_i_18_n_0 ;
  wire \countDataToBeSent_reg[8]_i_18_n_1 ;
  wire \countDataToBeSent_reg[8]_i_18_n_2 ;
  wire \countDataToBeSent_reg[8]_i_18_n_3 ;
  wire \countDataToBeSent_reg[8]_i_18_n_5 ;
  wire \countDataToBeSent_reg[8]_i_18_n_6 ;
  wire \countDataToBeSent_reg[8]_i_18_n_7 ;
  wire \countDataToBeSent_reg[8]_i_1_n_0 ;
  wire \countDataToBeSent_reg[8]_i_1_n_1 ;
  wire \countDataToBeSent_reg[8]_i_1_n_10 ;
  wire \countDataToBeSent_reg[8]_i_1_n_11 ;
  wire \countDataToBeSent_reg[8]_i_1_n_12 ;
  wire \countDataToBeSent_reg[8]_i_1_n_13 ;
  wire \countDataToBeSent_reg[8]_i_1_n_14 ;
  wire \countDataToBeSent_reg[8]_i_1_n_15 ;
  wire \countDataToBeSent_reg[8]_i_1_n_2 ;
  wire \countDataToBeSent_reg[8]_i_1_n_3 ;
  wire \countDataToBeSent_reg[8]_i_1_n_5 ;
  wire \countDataToBeSent_reg[8]_i_1_n_6 ;
  wire \countDataToBeSent_reg[8]_i_1_n_7 ;
  wire \countDataToBeSent_reg[8]_i_1_n_8 ;
  wire \countDataToBeSent_reg[8]_i_1_n_9 ;
  wire [39:1]countReadReqSent0;
  wire \countReadReqSent[0]_i_10_n_0 ;
  wire \countReadReqSent[0]_i_2_n_0 ;
  wire \countReadReqSent[0]_i_3_n_0 ;
  wire \countReadReqSent[0]_i_4_n_0 ;
  wire \countReadReqSent[0]_i_5_n_0 ;
  wire \countReadReqSent[0]_i_6_n_0 ;
  wire \countReadReqSent[0]_i_7_n_0 ;
  wire \countReadReqSent[0]_i_8_n_0 ;
  wire \countReadReqSent[0]_i_9_n_0 ;
  wire \countReadReqSent[16]_i_2_n_0 ;
  wire \countReadReqSent[16]_i_3_n_0 ;
  wire \countReadReqSent[16]_i_4_n_0 ;
  wire \countReadReqSent[16]_i_5_n_0 ;
  wire \countReadReqSent[16]_i_6_n_0 ;
  wire \countReadReqSent[16]_i_7_n_0 ;
  wire \countReadReqSent[16]_i_8_n_0 ;
  wire \countReadReqSent[16]_i_9_n_0 ;
  wire \countReadReqSent[24]_i_2_n_0 ;
  wire \countReadReqSent[24]_i_3_n_0 ;
  wire \countReadReqSent[24]_i_4_n_0 ;
  wire \countReadReqSent[24]_i_5_n_0 ;
  wire \countReadReqSent[24]_i_6_n_0 ;
  wire \countReadReqSent[24]_i_7_n_0 ;
  wire \countReadReqSent[24]_i_8_n_0 ;
  wire \countReadReqSent[24]_i_9_n_0 ;
  wire \countReadReqSent[32]_i_2_n_0 ;
  wire \countReadReqSent[32]_i_3_n_0 ;
  wire \countReadReqSent[32]_i_4_n_0 ;
  wire \countReadReqSent[32]_i_5_n_0 ;
  wire \countReadReqSent[32]_i_6_n_0 ;
  wire \countReadReqSent[32]_i_7_n_0 ;
  wire \countReadReqSent[32]_i_8_n_0 ;
  wire \countReadReqSent[32]_i_9_n_0 ;
  wire \countReadReqSent[8]_i_2_n_0 ;
  wire \countReadReqSent[8]_i_3_n_0 ;
  wire \countReadReqSent[8]_i_4_n_0 ;
  wire \countReadReqSent[8]_i_5_n_0 ;
  wire \countReadReqSent[8]_i_6_n_0 ;
  wire \countReadReqSent[8]_i_7_n_0 ;
  wire \countReadReqSent[8]_i_8_n_0 ;
  wire \countReadReqSent[8]_i_9_n_0 ;
  wire [39:0]countReadReqSent_reg;
  wire \countReadReqSent_reg[0]_i_11_n_0 ;
  wire \countReadReqSent_reg[0]_i_11_n_1 ;
  wire \countReadReqSent_reg[0]_i_11_n_2 ;
  wire \countReadReqSent_reg[0]_i_11_n_3 ;
  wire \countReadReqSent_reg[0]_i_11_n_5 ;
  wire \countReadReqSent_reg[0]_i_11_n_6 ;
  wire \countReadReqSent_reg[0]_i_11_n_7 ;
  wire \countReadReqSent_reg[0]_i_1_n_0 ;
  wire \countReadReqSent_reg[0]_i_1_n_1 ;
  wire \countReadReqSent_reg[0]_i_1_n_10 ;
  wire \countReadReqSent_reg[0]_i_1_n_11 ;
  wire \countReadReqSent_reg[0]_i_1_n_12 ;
  wire \countReadReqSent_reg[0]_i_1_n_13 ;
  wire \countReadReqSent_reg[0]_i_1_n_14 ;
  wire \countReadReqSent_reg[0]_i_1_n_15 ;
  wire \countReadReqSent_reg[0]_i_1_n_2 ;
  wire \countReadReqSent_reg[0]_i_1_n_3 ;
  wire \countReadReqSent_reg[0]_i_1_n_5 ;
  wire \countReadReqSent_reg[0]_i_1_n_6 ;
  wire \countReadReqSent_reg[0]_i_1_n_7 ;
  wire \countReadReqSent_reg[0]_i_1_n_8 ;
  wire \countReadReqSent_reg[0]_i_1_n_9 ;
  wire \countReadReqSent_reg[16]_i_10_n_0 ;
  wire \countReadReqSent_reg[16]_i_10_n_1 ;
  wire \countReadReqSent_reg[16]_i_10_n_2 ;
  wire \countReadReqSent_reg[16]_i_10_n_3 ;
  wire \countReadReqSent_reg[16]_i_10_n_5 ;
  wire \countReadReqSent_reg[16]_i_10_n_6 ;
  wire \countReadReqSent_reg[16]_i_10_n_7 ;
  wire \countReadReqSent_reg[16]_i_1_n_0 ;
  wire \countReadReqSent_reg[16]_i_1_n_1 ;
  wire \countReadReqSent_reg[16]_i_1_n_10 ;
  wire \countReadReqSent_reg[16]_i_1_n_11 ;
  wire \countReadReqSent_reg[16]_i_1_n_12 ;
  wire \countReadReqSent_reg[16]_i_1_n_13 ;
  wire \countReadReqSent_reg[16]_i_1_n_14 ;
  wire \countReadReqSent_reg[16]_i_1_n_15 ;
  wire \countReadReqSent_reg[16]_i_1_n_2 ;
  wire \countReadReqSent_reg[16]_i_1_n_3 ;
  wire \countReadReqSent_reg[16]_i_1_n_5 ;
  wire \countReadReqSent_reg[16]_i_1_n_6 ;
  wire \countReadReqSent_reg[16]_i_1_n_7 ;
  wire \countReadReqSent_reg[16]_i_1_n_8 ;
  wire \countReadReqSent_reg[16]_i_1_n_9 ;
  wire \countReadReqSent_reg[24]_i_10_n_0 ;
  wire \countReadReqSent_reg[24]_i_10_n_1 ;
  wire \countReadReqSent_reg[24]_i_10_n_2 ;
  wire \countReadReqSent_reg[24]_i_10_n_3 ;
  wire \countReadReqSent_reg[24]_i_10_n_5 ;
  wire \countReadReqSent_reg[24]_i_10_n_6 ;
  wire \countReadReqSent_reg[24]_i_10_n_7 ;
  wire \countReadReqSent_reg[24]_i_1_n_0 ;
  wire \countReadReqSent_reg[24]_i_1_n_1 ;
  wire \countReadReqSent_reg[24]_i_1_n_10 ;
  wire \countReadReqSent_reg[24]_i_1_n_11 ;
  wire \countReadReqSent_reg[24]_i_1_n_12 ;
  wire \countReadReqSent_reg[24]_i_1_n_13 ;
  wire \countReadReqSent_reg[24]_i_1_n_14 ;
  wire \countReadReqSent_reg[24]_i_1_n_15 ;
  wire \countReadReqSent_reg[24]_i_1_n_2 ;
  wire \countReadReqSent_reg[24]_i_1_n_3 ;
  wire \countReadReqSent_reg[24]_i_1_n_5 ;
  wire \countReadReqSent_reg[24]_i_1_n_6 ;
  wire \countReadReqSent_reg[24]_i_1_n_7 ;
  wire \countReadReqSent_reg[24]_i_1_n_8 ;
  wire \countReadReqSent_reg[24]_i_1_n_9 ;
  wire \countReadReqSent_reg[32]_i_10_n_2 ;
  wire \countReadReqSent_reg[32]_i_10_n_3 ;
  wire \countReadReqSent_reg[32]_i_10_n_5 ;
  wire \countReadReqSent_reg[32]_i_10_n_6 ;
  wire \countReadReqSent_reg[32]_i_10_n_7 ;
  wire \countReadReqSent_reg[32]_i_1_n_1 ;
  wire \countReadReqSent_reg[32]_i_1_n_10 ;
  wire \countReadReqSent_reg[32]_i_1_n_11 ;
  wire \countReadReqSent_reg[32]_i_1_n_12 ;
  wire \countReadReqSent_reg[32]_i_1_n_13 ;
  wire \countReadReqSent_reg[32]_i_1_n_14 ;
  wire \countReadReqSent_reg[32]_i_1_n_15 ;
  wire \countReadReqSent_reg[32]_i_1_n_2 ;
  wire \countReadReqSent_reg[32]_i_1_n_3 ;
  wire \countReadReqSent_reg[32]_i_1_n_5 ;
  wire \countReadReqSent_reg[32]_i_1_n_6 ;
  wire \countReadReqSent_reg[32]_i_1_n_7 ;
  wire \countReadReqSent_reg[32]_i_1_n_8 ;
  wire \countReadReqSent_reg[32]_i_1_n_9 ;
  wire \countReadReqSent_reg[8]_i_10_n_0 ;
  wire \countReadReqSent_reg[8]_i_10_n_1 ;
  wire \countReadReqSent_reg[8]_i_10_n_2 ;
  wire \countReadReqSent_reg[8]_i_10_n_3 ;
  wire \countReadReqSent_reg[8]_i_10_n_5 ;
  wire \countReadReqSent_reg[8]_i_10_n_6 ;
  wire \countReadReqSent_reg[8]_i_10_n_7 ;
  wire \countReadReqSent_reg[8]_i_1_n_0 ;
  wire \countReadReqSent_reg[8]_i_1_n_1 ;
  wire \countReadReqSent_reg[8]_i_1_n_10 ;
  wire \countReadReqSent_reg[8]_i_1_n_11 ;
  wire \countReadReqSent_reg[8]_i_1_n_12 ;
  wire \countReadReqSent_reg[8]_i_1_n_13 ;
  wire \countReadReqSent_reg[8]_i_1_n_14 ;
  wire \countReadReqSent_reg[8]_i_1_n_15 ;
  wire \countReadReqSent_reg[8]_i_1_n_2 ;
  wire \countReadReqSent_reg[8]_i_1_n_3 ;
  wire \countReadReqSent_reg[8]_i_1_n_5 ;
  wire \countReadReqSent_reg[8]_i_1_n_6 ;
  wire \countReadReqSent_reg[8]_i_1_n_7 ;
  wire \countReadReqSent_reg[8]_i_1_n_8 ;
  wire \countReadReqSent_reg[8]_i_1_n_9 ;
  wire [39:0]countReadReqToBeSent;
  wire [39:1]countReadReqToBeSent0;
  wire [39:0]countReadReqToBeSent01_in;
  wire \countReadReqToBeSent[0]_i_1_n_0 ;
  wire \countReadReqToBeSent[0]_i_2_n_0 ;
  wire \countReadReqToBeSent[10]_i_1_n_0 ;
  wire \countReadReqToBeSent[10]_i_2_n_0 ;
  wire \countReadReqToBeSent[11]_i_1_n_0 ;
  wire \countReadReqToBeSent[11]_i_2_n_0 ;
  wire \countReadReqToBeSent[12]_i_1_n_0 ;
  wire \countReadReqToBeSent[12]_i_2_n_0 ;
  wire \countReadReqToBeSent[13]_i_1_n_0 ;
  wire \countReadReqToBeSent[13]_i_2_n_0 ;
  wire \countReadReqToBeSent[14]_i_1_n_0 ;
  wire \countReadReqToBeSent[14]_i_2_n_0 ;
  wire \countReadReqToBeSent[15]_i_10_n_0 ;
  wire \countReadReqToBeSent[15]_i_11_n_0 ;
  wire \countReadReqToBeSent[15]_i_1_n_0 ;
  wire \countReadReqToBeSent[15]_i_2_n_0 ;
  wire \countReadReqToBeSent[15]_i_4_n_0 ;
  wire \countReadReqToBeSent[15]_i_5_n_0 ;
  wire \countReadReqToBeSent[15]_i_6_n_0 ;
  wire \countReadReqToBeSent[15]_i_7_n_0 ;
  wire \countReadReqToBeSent[15]_i_8_n_0 ;
  wire \countReadReqToBeSent[15]_i_9_n_0 ;
  wire \countReadReqToBeSent[16]_i_1_n_0 ;
  wire \countReadReqToBeSent[16]_i_2_n_0 ;
  wire \countReadReqToBeSent[17]_i_1_n_0 ;
  wire \countReadReqToBeSent[17]_i_2_n_0 ;
  wire \countReadReqToBeSent[18]_i_1_n_0 ;
  wire \countReadReqToBeSent[18]_i_2_n_0 ;
  wire \countReadReqToBeSent[19]_i_1_n_0 ;
  wire \countReadReqToBeSent[19]_i_2_n_0 ;
  wire \countReadReqToBeSent[1]_i_1_n_0 ;
  wire \countReadReqToBeSent[1]_i_2_n_0 ;
  wire \countReadReqToBeSent[20]_i_1_n_0 ;
  wire \countReadReqToBeSent[20]_i_2_n_0 ;
  wire \countReadReqToBeSent[21]_i_1_n_0 ;
  wire \countReadReqToBeSent[21]_i_2_n_0 ;
  wire \countReadReqToBeSent[22]_i_1_n_0 ;
  wire \countReadReqToBeSent[22]_i_2_n_0 ;
  wire \countReadReqToBeSent[23]_i_10_n_0 ;
  wire \countReadReqToBeSent[23]_i_11_n_0 ;
  wire \countReadReqToBeSent[23]_i_1_n_0 ;
  wire \countReadReqToBeSent[23]_i_2_n_0 ;
  wire \countReadReqToBeSent[23]_i_4_n_0 ;
  wire \countReadReqToBeSent[23]_i_5_n_0 ;
  wire \countReadReqToBeSent[23]_i_6_n_0 ;
  wire \countReadReqToBeSent[23]_i_7_n_0 ;
  wire \countReadReqToBeSent[23]_i_8_n_0 ;
  wire \countReadReqToBeSent[23]_i_9_n_0 ;
  wire \countReadReqToBeSent[24]_i_1_n_0 ;
  wire \countReadReqToBeSent[24]_i_2_n_0 ;
  wire \countReadReqToBeSent[25]_i_1_n_0 ;
  wire \countReadReqToBeSent[25]_i_2_n_0 ;
  wire \countReadReqToBeSent[26]_i_1_n_0 ;
  wire \countReadReqToBeSent[26]_i_2_n_0 ;
  wire \countReadReqToBeSent[27]_i_1_n_0 ;
  wire \countReadReqToBeSent[27]_i_2_n_0 ;
  wire \countReadReqToBeSent[28]_i_1_n_0 ;
  wire \countReadReqToBeSent[28]_i_2_n_0 ;
  wire \countReadReqToBeSent[29]_i_1_n_0 ;
  wire \countReadReqToBeSent[29]_i_2_n_0 ;
  wire \countReadReqToBeSent[2]_i_1_n_0 ;
  wire \countReadReqToBeSent[2]_i_2_n_0 ;
  wire \countReadReqToBeSent[30]_i_1_n_0 ;
  wire \countReadReqToBeSent[30]_i_2_n_0 ;
  wire \countReadReqToBeSent[31]_i_10_n_0 ;
  wire \countReadReqToBeSent[31]_i_11_n_0 ;
  wire \countReadReqToBeSent[31]_i_1_n_0 ;
  wire \countReadReqToBeSent[31]_i_2_n_0 ;
  wire \countReadReqToBeSent[31]_i_4_n_0 ;
  wire \countReadReqToBeSent[31]_i_5_n_0 ;
  wire \countReadReqToBeSent[31]_i_6_n_0 ;
  wire \countReadReqToBeSent[31]_i_7_n_0 ;
  wire \countReadReqToBeSent[31]_i_8_n_0 ;
  wire \countReadReqToBeSent[31]_i_9_n_0 ;
  wire \countReadReqToBeSent[32]_i_1_n_0 ;
  wire \countReadReqToBeSent[32]_i_2_n_0 ;
  wire \countReadReqToBeSent[33]_i_1_n_0 ;
  wire \countReadReqToBeSent[33]_i_2_n_0 ;
  wire \countReadReqToBeSent[34]_i_1_n_0 ;
  wire \countReadReqToBeSent[34]_i_2_n_0 ;
  wire \countReadReqToBeSent[35]_i_1_n_0 ;
  wire \countReadReqToBeSent[35]_i_2_n_0 ;
  wire \countReadReqToBeSent[36]_i_1_n_0 ;
  wire \countReadReqToBeSent[36]_i_2_n_0 ;
  wire \countReadReqToBeSent[37]_i_1_n_0 ;
  wire \countReadReqToBeSent[37]_i_2_n_0 ;
  wire \countReadReqToBeSent[38]_i_1_n_0 ;
  wire \countReadReqToBeSent[38]_i_2_n_0 ;
  wire \countReadReqToBeSent[39]_i_1_n_0 ;
  wire \countReadReqToBeSent[39]_i_2_n_0 ;
  wire \countReadReqToBeSent[39]_i_3_n_0 ;
  wire \countReadReqToBeSent[3]_i_1_n_0 ;
  wire \countReadReqToBeSent[3]_i_2_n_0 ;
  wire \countReadReqToBeSent[4]_i_1_n_0 ;
  wire \countReadReqToBeSent[4]_i_2_n_0 ;
  wire \countReadReqToBeSent[5]_i_1_n_0 ;
  wire \countReadReqToBeSent[5]_i_2_n_0 ;
  wire \countReadReqToBeSent[6]_i_1_n_0 ;
  wire \countReadReqToBeSent[6]_i_2_n_0 ;
  wire \countReadReqToBeSent[7]_i_10_n_0 ;
  wire \countReadReqToBeSent[7]_i_11_n_0 ;
  wire \countReadReqToBeSent[7]_i_1_n_0 ;
  wire \countReadReqToBeSent[7]_i_2_n_0 ;
  wire \countReadReqToBeSent[7]_i_4_n_0 ;
  wire \countReadReqToBeSent[7]_i_5_n_0 ;
  wire \countReadReqToBeSent[7]_i_6_n_0 ;
  wire \countReadReqToBeSent[7]_i_7_n_0 ;
  wire \countReadReqToBeSent[7]_i_8_n_0 ;
  wire \countReadReqToBeSent[7]_i_9_n_0 ;
  wire \countReadReqToBeSent[8]_i_1_n_0 ;
  wire \countReadReqToBeSent[8]_i_2_n_0 ;
  wire \countReadReqToBeSent[9]_i_1_n_0 ;
  wire \countReadReqToBeSent[9]_i_2_n_0 ;
  wire \countReadReqToBeSent_reg[15]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[15]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[15]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[15]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[15]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[15]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[15]_i_3_n_7 ;
  wire \countReadReqToBeSent_reg[16]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[16]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[16]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[16]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[16]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[16]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[16]_i_3_n_7 ;
  wire \countReadReqToBeSent_reg[23]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[23]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[23]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[23]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[23]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[23]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[23]_i_3_n_7 ;
  wire \countReadReqToBeSent_reg[24]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[24]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[24]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[24]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[24]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[24]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[24]_i_3_n_7 ;
  wire \countReadReqToBeSent_reg[31]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[31]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[31]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[31]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[31]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[31]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[31]_i_3_n_7 ;
  wire \countReadReqToBeSent_reg[32]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[32]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[32]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[32]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[32]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[32]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[32]_i_3_n_7 ;
  wire \countReadReqToBeSent_reg[39]_i_4_n_1 ;
  wire \countReadReqToBeSent_reg[39]_i_4_n_2 ;
  wire \countReadReqToBeSent_reg[39]_i_4_n_3 ;
  wire \countReadReqToBeSent_reg[39]_i_4_n_5 ;
  wire \countReadReqToBeSent_reg[39]_i_4_n_6 ;
  wire \countReadReqToBeSent_reg[39]_i_4_n_7 ;
  wire \countReadReqToBeSent_reg[39]_i_5_n_2 ;
  wire \countReadReqToBeSent_reg[39]_i_5_n_3 ;
  wire \countReadReqToBeSent_reg[39]_i_5_n_5 ;
  wire \countReadReqToBeSent_reg[39]_i_5_n_6 ;
  wire \countReadReqToBeSent_reg[39]_i_5_n_7 ;
  wire \countReadReqToBeSent_reg[7]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[7]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[7]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[7]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[7]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[7]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[7]_i_3_n_7 ;
  wire \countReadReqToBeSent_reg[8]_i_3_n_0 ;
  wire \countReadReqToBeSent_reg[8]_i_3_n_1 ;
  wire \countReadReqToBeSent_reg[8]_i_3_n_2 ;
  wire \countReadReqToBeSent_reg[8]_i_3_n_3 ;
  wire \countReadReqToBeSent_reg[8]_i_3_n_5 ;
  wire \countReadReqToBeSent_reg[8]_i_3_n_6 ;
  wire \countReadReqToBeSent_reg[8]_i_3_n_7 ;
  (* DONT_TOUCH *) wire [63:0]current_cycles_with_no_data_read;
  wire \current_cycles_with_no_data_read[0]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[10]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[11]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[12]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[13]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[14]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[15]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[16]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[17]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[18]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[19]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[1]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[20]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[21]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[22]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[23]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[24]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[25]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[26]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[27]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[28]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[29]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[2]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[30]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[31]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[32]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[33]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[34]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[35]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[36]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[37]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[38]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[39]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[3]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[40]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[41]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[42]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[43]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[44]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[45]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[46]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[47]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[48]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[49]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[4]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[50]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[51]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[52]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[53]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[54]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[55]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[56]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[57]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[58]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[59]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[5]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[60]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[61]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[62]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[63]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[6]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[7]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[7]_i_3_n_0 ;
  wire \current_cycles_with_no_data_read[8]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read[9]_i_1_n_0 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_0 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[15]_i_2_n_9 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_0 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[23]_i_2_n_9 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_0 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[31]_i_2_n_9 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_0 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[39]_i_2_n_9 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_0 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[47]_i_2_n_9 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_0 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[55]_i_2_n_9 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[63]_i_2_n_9 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_0 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_1 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_10 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_11 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_12 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_13 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_14 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_15 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_2 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_3 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_5 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_6 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_7 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_8 ;
  wire \current_cycles_with_no_data_read_reg[7]_i_2_n_9 ;
  wire [127:0]dataBuffer_S1;
  wire [127:0]dataBuffer_S2;
  wire \dataBuffer_S2[0]_i_1_n_0 ;
  wire \dataBuffer_S2[100]_i_1_n_0 ;
  wire \dataBuffer_S2[101]_i_1_n_0 ;
  wire \dataBuffer_S2[102]_i_1_n_0 ;
  wire \dataBuffer_S2[103]_i_1_n_0 ;
  wire \dataBuffer_S2[104]_i_1_n_0 ;
  wire \dataBuffer_S2[105]_i_1_n_0 ;
  wire \dataBuffer_S2[106]_i_1_n_0 ;
  wire \dataBuffer_S2[107]_i_1_n_0 ;
  wire \dataBuffer_S2[108]_i_1_n_0 ;
  wire \dataBuffer_S2[109]_i_1_n_0 ;
  wire \dataBuffer_S2[10]_i_1_n_0 ;
  wire \dataBuffer_S2[110]_i_1_n_0 ;
  wire \dataBuffer_S2[111]_i_1_n_0 ;
  wire \dataBuffer_S2[112]_i_1_n_0 ;
  wire \dataBuffer_S2[113]_i_1_n_0 ;
  wire \dataBuffer_S2[114]_i_1_n_0 ;
  wire \dataBuffer_S2[115]_i_1_n_0 ;
  wire \dataBuffer_S2[116]_i_1_n_0 ;
  wire \dataBuffer_S2[117]_i_1_n_0 ;
  wire \dataBuffer_S2[118]_i_1_n_0 ;
  wire \dataBuffer_S2[119]_i_1_n_0 ;
  wire \dataBuffer_S2[11]_i_1_n_0 ;
  wire \dataBuffer_S2[120]_i_1_n_0 ;
  wire \dataBuffer_S2[121]_i_1_n_0 ;
  wire \dataBuffer_S2[122]_i_1_n_0 ;
  wire \dataBuffer_S2[123]_i_1_n_0 ;
  wire \dataBuffer_S2[124]_i_1_n_0 ;
  wire \dataBuffer_S2[125]_i_1_n_0 ;
  wire \dataBuffer_S2[126]_i_1_n_0 ;
  wire \dataBuffer_S2[127]_i_1_n_0 ;
  wire \dataBuffer_S2[12]_i_1_n_0 ;
  wire \dataBuffer_S2[13]_i_1_n_0 ;
  wire \dataBuffer_S2[14]_i_1_n_0 ;
  wire \dataBuffer_S2[15]_i_1_n_0 ;
  wire \dataBuffer_S2[16]_i_1_n_0 ;
  wire \dataBuffer_S2[17]_i_1_n_0 ;
  wire \dataBuffer_S2[18]_i_1_n_0 ;
  wire \dataBuffer_S2[19]_i_1_n_0 ;
  wire \dataBuffer_S2[1]_i_1_n_0 ;
  wire \dataBuffer_S2[20]_i_1_n_0 ;
  wire \dataBuffer_S2[21]_i_1_n_0 ;
  wire \dataBuffer_S2[22]_i_1_n_0 ;
  wire \dataBuffer_S2[23]_i_1_n_0 ;
  wire \dataBuffer_S2[24]_i_1_n_0 ;
  wire \dataBuffer_S2[25]_i_1_n_0 ;
  wire \dataBuffer_S2[26]_i_1_n_0 ;
  wire \dataBuffer_S2[27]_i_1_n_0 ;
  wire \dataBuffer_S2[28]_i_1_n_0 ;
  wire \dataBuffer_S2[29]_i_1_n_0 ;
  wire \dataBuffer_S2[2]_i_1_n_0 ;
  wire \dataBuffer_S2[30]_i_1_n_0 ;
  wire \dataBuffer_S2[31]_i_1_n_0 ;
  wire \dataBuffer_S2[32]_i_1_n_0 ;
  wire \dataBuffer_S2[33]_i_1_n_0 ;
  wire \dataBuffer_S2[34]_i_1_n_0 ;
  wire \dataBuffer_S2[35]_i_1_n_0 ;
  wire \dataBuffer_S2[36]_i_1_n_0 ;
  wire \dataBuffer_S2[37]_i_1_n_0 ;
  wire \dataBuffer_S2[38]_i_1_n_0 ;
  wire \dataBuffer_S2[39]_i_1_n_0 ;
  wire \dataBuffer_S2[3]_i_1_n_0 ;
  wire \dataBuffer_S2[40]_i_1_n_0 ;
  wire \dataBuffer_S2[41]_i_1_n_0 ;
  wire \dataBuffer_S2[42]_i_1_n_0 ;
  wire \dataBuffer_S2[43]_i_1_n_0 ;
  wire \dataBuffer_S2[44]_i_1_n_0 ;
  wire \dataBuffer_S2[45]_i_1_n_0 ;
  wire \dataBuffer_S2[46]_i_1_n_0 ;
  wire \dataBuffer_S2[47]_i_1_n_0 ;
  wire \dataBuffer_S2[48]_i_1_n_0 ;
  wire \dataBuffer_S2[49]_i_1_n_0 ;
  wire \dataBuffer_S2[4]_i_1_n_0 ;
  wire \dataBuffer_S2[50]_i_1_n_0 ;
  wire \dataBuffer_S2[51]_i_1_n_0 ;
  wire \dataBuffer_S2[52]_i_1_n_0 ;
  wire \dataBuffer_S2[53]_i_1_n_0 ;
  wire \dataBuffer_S2[54]_i_1_n_0 ;
  wire \dataBuffer_S2[55]_i_1_n_0 ;
  wire \dataBuffer_S2[56]_i_1_n_0 ;
  wire \dataBuffer_S2[57]_i_1_n_0 ;
  wire \dataBuffer_S2[58]_i_1_n_0 ;
  wire \dataBuffer_S2[59]_i_1_n_0 ;
  wire \dataBuffer_S2[5]_i_1_n_0 ;
  wire \dataBuffer_S2[60]_i_1_n_0 ;
  wire \dataBuffer_S2[61]_i_1_n_0 ;
  wire \dataBuffer_S2[62]_i_1_n_0 ;
  wire \dataBuffer_S2[63]_i_1_n_0 ;
  wire \dataBuffer_S2[64]_i_1_n_0 ;
  wire \dataBuffer_S2[65]_i_1_n_0 ;
  wire \dataBuffer_S2[66]_i_1_n_0 ;
  wire \dataBuffer_S2[67]_i_1_n_0 ;
  wire \dataBuffer_S2[68]_i_1_n_0 ;
  wire \dataBuffer_S2[69]_i_1_n_0 ;
  wire \dataBuffer_S2[6]_i_1_n_0 ;
  wire \dataBuffer_S2[70]_i_1_n_0 ;
  wire \dataBuffer_S2[71]_i_1_n_0 ;
  wire \dataBuffer_S2[72]_i_1_n_0 ;
  wire \dataBuffer_S2[73]_i_1_n_0 ;
  wire \dataBuffer_S2[74]_i_1_n_0 ;
  wire \dataBuffer_S2[75]_i_1_n_0 ;
  wire \dataBuffer_S2[76]_i_1_n_0 ;
  wire \dataBuffer_S2[77]_i_1_n_0 ;
  wire \dataBuffer_S2[78]_i_1_n_0 ;
  wire \dataBuffer_S2[79]_i_1_n_0 ;
  wire \dataBuffer_S2[7]_i_1_n_0 ;
  wire \dataBuffer_S2[80]_i_1_n_0 ;
  wire \dataBuffer_S2[81]_i_1_n_0 ;
  wire \dataBuffer_S2[82]_i_1_n_0 ;
  wire \dataBuffer_S2[83]_i_1_n_0 ;
  wire \dataBuffer_S2[84]_i_1_n_0 ;
  wire \dataBuffer_S2[85]_i_1_n_0 ;
  wire \dataBuffer_S2[86]_i_1_n_0 ;
  wire \dataBuffer_S2[87]_i_1_n_0 ;
  wire \dataBuffer_S2[88]_i_1_n_0 ;
  wire \dataBuffer_S2[89]_i_1_n_0 ;
  wire \dataBuffer_S2[8]_i_1_n_0 ;
  wire \dataBuffer_S2[90]_i_1_n_0 ;
  wire \dataBuffer_S2[91]_i_1_n_0 ;
  wire \dataBuffer_S2[92]_i_1_n_0 ;
  wire \dataBuffer_S2[93]_i_1_n_0 ;
  wire \dataBuffer_S2[94]_i_1_n_0 ;
  wire \dataBuffer_S2[95]_i_1_n_0 ;
  wire \dataBuffer_S2[96]_i_1_n_0 ;
  wire \dataBuffer_S2[97]_i_1_n_0 ;
  wire \dataBuffer_S2[98]_i_1_n_0 ;
  wire \dataBuffer_S2[99]_i_1_n_0 ;
  wire \dataBuffer_S2[9]_i_1_n_0 ;
  (* DONT_TOUCH *) wire data_read_in_this_test;
  wire data_read_in_this_test_i_1_n_0;
  wire data_read_in_this_test_i_2_n_0;
  wire [31:22]debug_axi_control_reg_n_0_;
  wire [31:22]debug_axi_r_control_reg_n_0_;
  (* DONT_TOUCH *) wire [63:0]latency;
  wire \latency[15]_i_10_n_0 ;
  wire \latency[15]_i_11_n_0 ;
  wire \latency[15]_i_12_n_0 ;
  wire \latency[15]_i_13_n_0 ;
  wire \latency[15]_i_14_n_0 ;
  wire \latency[15]_i_15_n_0 ;
  wire \latency[15]_i_16_n_0 ;
  wire \latency[15]_i_17_n_0 ;
  wire \latency[15]_i_2_n_0 ;
  wire \latency[15]_i_3_n_0 ;
  wire \latency[15]_i_4_n_0 ;
  wire \latency[15]_i_5_n_0 ;
  wire \latency[15]_i_6_n_0 ;
  wire \latency[15]_i_7_n_0 ;
  wire \latency[15]_i_8_n_0 ;
  wire \latency[15]_i_9_n_0 ;
  wire \latency[23]_i_10_n_0 ;
  wire \latency[23]_i_11_n_0 ;
  wire \latency[23]_i_12_n_0 ;
  wire \latency[23]_i_13_n_0 ;
  wire \latency[23]_i_14_n_0 ;
  wire \latency[23]_i_15_n_0 ;
  wire \latency[23]_i_16_n_0 ;
  wire \latency[23]_i_17_n_0 ;
  wire \latency[23]_i_2_n_0 ;
  wire \latency[23]_i_3_n_0 ;
  wire \latency[23]_i_4_n_0 ;
  wire \latency[23]_i_5_n_0 ;
  wire \latency[23]_i_6_n_0 ;
  wire \latency[23]_i_7_n_0 ;
  wire \latency[23]_i_8_n_0 ;
  wire \latency[23]_i_9_n_0 ;
  wire \latency[31]_i_10_n_0 ;
  wire \latency[31]_i_11_n_0 ;
  wire \latency[31]_i_12_n_0 ;
  wire \latency[31]_i_13_n_0 ;
  wire \latency[31]_i_14_n_0 ;
  wire \latency[31]_i_15_n_0 ;
  wire \latency[31]_i_16_n_0 ;
  wire \latency[31]_i_17_n_0 ;
  wire \latency[31]_i_2_n_0 ;
  wire \latency[31]_i_3_n_0 ;
  wire \latency[31]_i_4_n_0 ;
  wire \latency[31]_i_5_n_0 ;
  wire \latency[31]_i_6_n_0 ;
  wire \latency[31]_i_7_n_0 ;
  wire \latency[31]_i_8_n_0 ;
  wire \latency[31]_i_9_n_0 ;
  wire \latency[39]_i_10_n_0 ;
  wire \latency[39]_i_11_n_0 ;
  wire \latency[39]_i_12_n_0 ;
  wire \latency[39]_i_13_n_0 ;
  wire \latency[39]_i_14_n_0 ;
  wire \latency[39]_i_15_n_0 ;
  wire \latency[39]_i_16_n_0 ;
  wire \latency[39]_i_17_n_0 ;
  wire \latency[39]_i_2_n_0 ;
  wire \latency[39]_i_3_n_0 ;
  wire \latency[39]_i_4_n_0 ;
  wire \latency[39]_i_5_n_0 ;
  wire \latency[39]_i_6_n_0 ;
  wire \latency[39]_i_7_n_0 ;
  wire \latency[39]_i_8_n_0 ;
  wire \latency[39]_i_9_n_0 ;
  wire \latency[47]_i_10_n_0 ;
  wire \latency[47]_i_2_n_0 ;
  wire \latency[47]_i_3_n_0 ;
  wire \latency[47]_i_4_n_0 ;
  wire \latency[47]_i_5_n_0 ;
  wire \latency[47]_i_6_n_0 ;
  wire \latency[47]_i_7_n_0 ;
  wire \latency[47]_i_8_n_0 ;
  wire \latency[47]_i_9_n_0 ;
  wire \latency[55]_i_2_n_0 ;
  wire \latency[55]_i_3_n_0 ;
  wire \latency[55]_i_4_n_0 ;
  wire \latency[55]_i_5_n_0 ;
  wire \latency[55]_i_6_n_0 ;
  wire \latency[55]_i_7_n_0 ;
  wire \latency[55]_i_8_n_0 ;
  wire \latency[55]_i_9_n_0 ;
  wire \latency[63]_i_2_n_0 ;
  wire \latency[63]_i_3_n_0 ;
  wire \latency[63]_i_4_n_0 ;
  wire \latency[63]_i_5_n_0 ;
  wire \latency[63]_i_6_n_0 ;
  wire \latency[63]_i_7_n_0 ;
  wire \latency[63]_i_8_n_0 ;
  wire \latency[63]_i_9_n_0 ;
  wire \latency[7]_i_10_n_0 ;
  wire \latency[7]_i_11_n_0 ;
  wire \latency[7]_i_12_n_0 ;
  wire \latency[7]_i_13_n_0 ;
  wire \latency[7]_i_14_n_0 ;
  wire \latency[7]_i_15_n_0 ;
  wire \latency[7]_i_16_n_0 ;
  wire \latency[7]_i_2_n_0 ;
  wire \latency[7]_i_3_n_0 ;
  wire \latency[7]_i_4_n_0 ;
  wire \latency[7]_i_5_n_0 ;
  wire \latency[7]_i_6_n_0 ;
  wire \latency[7]_i_7_n_0 ;
  wire \latency[7]_i_8_n_0 ;
  wire \latency[7]_i_9_n_0 ;
  wire \latency_reg[15]_i_1_n_0 ;
  wire \latency_reg[15]_i_1_n_1 ;
  wire \latency_reg[15]_i_1_n_10 ;
  wire \latency_reg[15]_i_1_n_11 ;
  wire \latency_reg[15]_i_1_n_12 ;
  wire \latency_reg[15]_i_1_n_13 ;
  wire \latency_reg[15]_i_1_n_14 ;
  wire \latency_reg[15]_i_1_n_15 ;
  wire \latency_reg[15]_i_1_n_2 ;
  wire \latency_reg[15]_i_1_n_3 ;
  wire \latency_reg[15]_i_1_n_5 ;
  wire \latency_reg[15]_i_1_n_6 ;
  wire \latency_reg[15]_i_1_n_7 ;
  wire \latency_reg[15]_i_1_n_8 ;
  wire \latency_reg[15]_i_1_n_9 ;
  wire \latency_reg[23]_i_1_n_0 ;
  wire \latency_reg[23]_i_1_n_1 ;
  wire \latency_reg[23]_i_1_n_10 ;
  wire \latency_reg[23]_i_1_n_11 ;
  wire \latency_reg[23]_i_1_n_12 ;
  wire \latency_reg[23]_i_1_n_13 ;
  wire \latency_reg[23]_i_1_n_14 ;
  wire \latency_reg[23]_i_1_n_15 ;
  wire \latency_reg[23]_i_1_n_2 ;
  wire \latency_reg[23]_i_1_n_3 ;
  wire \latency_reg[23]_i_1_n_5 ;
  wire \latency_reg[23]_i_1_n_6 ;
  wire \latency_reg[23]_i_1_n_7 ;
  wire \latency_reg[23]_i_1_n_8 ;
  wire \latency_reg[23]_i_1_n_9 ;
  wire \latency_reg[31]_i_1_n_0 ;
  wire \latency_reg[31]_i_1_n_1 ;
  wire \latency_reg[31]_i_1_n_10 ;
  wire \latency_reg[31]_i_1_n_11 ;
  wire \latency_reg[31]_i_1_n_12 ;
  wire \latency_reg[31]_i_1_n_13 ;
  wire \latency_reg[31]_i_1_n_14 ;
  wire \latency_reg[31]_i_1_n_15 ;
  wire \latency_reg[31]_i_1_n_2 ;
  wire \latency_reg[31]_i_1_n_3 ;
  wire \latency_reg[31]_i_1_n_5 ;
  wire \latency_reg[31]_i_1_n_6 ;
  wire \latency_reg[31]_i_1_n_7 ;
  wire \latency_reg[31]_i_1_n_8 ;
  wire \latency_reg[31]_i_1_n_9 ;
  wire \latency_reg[39]_i_1_n_0 ;
  wire \latency_reg[39]_i_1_n_1 ;
  wire \latency_reg[39]_i_1_n_10 ;
  wire \latency_reg[39]_i_1_n_11 ;
  wire \latency_reg[39]_i_1_n_12 ;
  wire \latency_reg[39]_i_1_n_13 ;
  wire \latency_reg[39]_i_1_n_14 ;
  wire \latency_reg[39]_i_1_n_15 ;
  wire \latency_reg[39]_i_1_n_2 ;
  wire \latency_reg[39]_i_1_n_3 ;
  wire \latency_reg[39]_i_1_n_5 ;
  wire \latency_reg[39]_i_1_n_6 ;
  wire \latency_reg[39]_i_1_n_7 ;
  wire \latency_reg[39]_i_1_n_8 ;
  wire \latency_reg[39]_i_1_n_9 ;
  wire \latency_reg[47]_i_1_n_0 ;
  wire \latency_reg[47]_i_1_n_1 ;
  wire \latency_reg[47]_i_1_n_10 ;
  wire \latency_reg[47]_i_1_n_11 ;
  wire \latency_reg[47]_i_1_n_12 ;
  wire \latency_reg[47]_i_1_n_13 ;
  wire \latency_reg[47]_i_1_n_14 ;
  wire \latency_reg[47]_i_1_n_15 ;
  wire \latency_reg[47]_i_1_n_2 ;
  wire \latency_reg[47]_i_1_n_3 ;
  wire \latency_reg[47]_i_1_n_5 ;
  wire \latency_reg[47]_i_1_n_6 ;
  wire \latency_reg[47]_i_1_n_7 ;
  wire \latency_reg[47]_i_1_n_8 ;
  wire \latency_reg[47]_i_1_n_9 ;
  wire \latency_reg[55]_i_1_n_0 ;
  wire \latency_reg[55]_i_1_n_1 ;
  wire \latency_reg[55]_i_1_n_10 ;
  wire \latency_reg[55]_i_1_n_11 ;
  wire \latency_reg[55]_i_1_n_12 ;
  wire \latency_reg[55]_i_1_n_13 ;
  wire \latency_reg[55]_i_1_n_14 ;
  wire \latency_reg[55]_i_1_n_15 ;
  wire \latency_reg[55]_i_1_n_2 ;
  wire \latency_reg[55]_i_1_n_3 ;
  wire \latency_reg[55]_i_1_n_5 ;
  wire \latency_reg[55]_i_1_n_6 ;
  wire \latency_reg[55]_i_1_n_7 ;
  wire \latency_reg[55]_i_1_n_8 ;
  wire \latency_reg[55]_i_1_n_9 ;
  wire \latency_reg[63]_i_1_n_1 ;
  wire \latency_reg[63]_i_1_n_10 ;
  wire \latency_reg[63]_i_1_n_11 ;
  wire \latency_reg[63]_i_1_n_12 ;
  wire \latency_reg[63]_i_1_n_13 ;
  wire \latency_reg[63]_i_1_n_14 ;
  wire \latency_reg[63]_i_1_n_15 ;
  wire \latency_reg[63]_i_1_n_2 ;
  wire \latency_reg[63]_i_1_n_3 ;
  wire \latency_reg[63]_i_1_n_5 ;
  wire \latency_reg[63]_i_1_n_6 ;
  wire \latency_reg[63]_i_1_n_7 ;
  wire \latency_reg[63]_i_1_n_8 ;
  wire \latency_reg[63]_i_1_n_9 ;
  wire \latency_reg[7]_i_1_n_0 ;
  wire \latency_reg[7]_i_1_n_1 ;
  wire \latency_reg[7]_i_1_n_10 ;
  wire \latency_reg[7]_i_1_n_11 ;
  wire \latency_reg[7]_i_1_n_12 ;
  wire \latency_reg[7]_i_1_n_13 ;
  wire \latency_reg[7]_i_1_n_14 ;
  wire \latency_reg[7]_i_1_n_15 ;
  wire \latency_reg[7]_i_1_n_2 ;
  wire \latency_reg[7]_i_1_n_3 ;
  wire \latency_reg[7]_i_1_n_5 ;
  wire \latency_reg[7]_i_1_n_6 ;
  wire \latency_reg[7]_i_1_n_7 ;
  wire \latency_reg[7]_i_1_n_8 ;
  wire \latency_reg[7]_i_1_n_9 ;
  wire [21:0]\m_ddr_axi_ARSIZE[2] ;
  wire [31:0]max_cycles_with_no_data_read;
  wire \max_cycles_with_no_data_read[31]_i_10_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_11_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_12_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_13_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_14_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_15_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_16_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_17_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_18_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_19_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_20_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_21_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_23_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_24_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_25_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_26_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_27_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_28_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_29_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_30_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_31_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_32_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_33_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_34_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_35_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_36_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_37_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_38_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_40_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_41_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_42_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_43_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_44_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_45_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_46_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_47_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_48_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_49_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_50_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_51_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_52_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_53_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_54_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_55_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_56_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_57_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_58_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_59_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_60_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_61_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_62_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_63_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_64_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_65_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_66_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_67_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_68_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_69_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_6_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_70_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_71_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_7_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_8_n_0 ;
  wire \max_cycles_with_no_data_read[31]_i_9_n_0 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_22_n_0 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_22_n_1 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_22_n_2 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_22_n_3 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_22_n_5 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_22_n_6 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_22_n_7 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_39_n_0 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_39_n_1 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_39_n_2 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_39_n_3 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_39_n_5 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_39_n_6 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_39_n_7 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_4_n_0 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_4_n_1 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_4_n_2 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_4_n_3 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_4_n_5 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_4_n_6 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_4_n_7 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_5_n_0 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_5_n_1 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_5_n_2 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_5_n_3 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_5_n_5 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_5_n_6 ;
  wire \max_cycles_with_no_data_read_reg[31]_i_5_n_7 ;
  wire [39:0]p_1_in__0;
  wire readDataLast;
  wire readDataValid;
  (* DONT_TOUCH *) wire [31:0]read_blocking_ratio;
  wire [31:0]read_blocking_ratio__0;
  (* DONT_TOUCH *) wire [31:0]read_burst_size;
  wire [31:0]read_burst_size__0;
  wire read_count;
  wire \read_count[0]_i_1_n_0 ;
  wire \read_count[10]_i_1_n_0 ;
  wire \read_count[11]_i_1_n_0 ;
  wire \read_count[12]_i_1_n_0 ;
  wire \read_count[13]_i_1_n_0 ;
  wire \read_count[14]_i_1_n_0 ;
  wire \read_count[15]_i_1_n_0 ;
  wire \read_count[16]_i_1_n_0 ;
  wire \read_count[17]_i_1_n_0 ;
  wire \read_count[18]_i_1_n_0 ;
  wire \read_count[19]_i_1_n_0 ;
  wire \read_count[1]_i_1_n_0 ;
  wire \read_count[20]_i_1_n_0 ;
  wire \read_count[21]_i_1_n_0 ;
  wire \read_count[22]_i_1_n_0 ;
  wire \read_count[23]_i_1_n_0 ;
  wire \read_count[24]_i_1_n_0 ;
  wire \read_count[25]_i_1_n_0 ;
  wire \read_count[26]_i_1_n_0 ;
  wire \read_count[27]_i_1_n_0 ;
  wire \read_count[28]_i_1_n_0 ;
  wire \read_count[29]_i_1_n_0 ;
  wire \read_count[2]_i_1_n_0 ;
  wire \read_count[30]_i_1_n_0 ;
  wire \read_count[31]_i_10_n_0 ;
  wire \read_count[31]_i_11_n_0 ;
  wire \read_count[31]_i_12_n_0 ;
  wire \read_count[31]_i_13_n_0 ;
  wire \read_count[31]_i_14_n_0 ;
  wire \read_count[31]_i_16_n_0 ;
  wire \read_count[31]_i_17_n_0 ;
  wire \read_count[31]_i_18_n_0 ;
  wire \read_count[31]_i_19_n_0 ;
  wire \read_count[31]_i_20_n_0 ;
  wire \read_count[31]_i_21_n_0 ;
  wire \read_count[31]_i_22_n_0 ;
  wire \read_count[31]_i_23_n_0 ;
  wire \read_count[31]_i_24_n_0 ;
  wire \read_count[31]_i_25_n_0 ;
  wire \read_count[31]_i_26_n_0 ;
  wire \read_count[31]_i_27_n_0 ;
  wire \read_count[31]_i_28_n_0 ;
  wire \read_count[31]_i_29_n_0 ;
  wire \read_count[31]_i_2_n_0 ;
  wire \read_count[31]_i_30_n_0 ;
  wire \read_count[31]_i_31_n_0 ;
  wire \read_count[31]_i_33_n_0 ;
  wire \read_count[31]_i_34_n_0 ;
  wire \read_count[31]_i_35_n_0 ;
  wire \read_count[31]_i_36_n_0 ;
  wire \read_count[31]_i_37_n_0 ;
  wire \read_count[31]_i_38_n_0 ;
  wire \read_count[31]_i_39_n_0 ;
  wire \read_count[31]_i_40_n_0 ;
  wire \read_count[31]_i_41_n_0 ;
  wire \read_count[31]_i_42_n_0 ;
  wire \read_count[31]_i_43_n_0 ;
  wire \read_count[31]_i_44_n_0 ;
  wire \read_count[31]_i_45_n_0 ;
  wire \read_count[31]_i_46_n_0 ;
  wire \read_count[31]_i_47_n_0 ;
  wire \read_count[31]_i_48_n_0 ;
  wire \read_count[31]_i_49_n_0 ;
  wire \read_count[31]_i_50_n_0 ;
  wire \read_count[31]_i_51_n_0 ;
  wire \read_count[31]_i_52_n_0 ;
  wire \read_count[31]_i_53_n_0 ;
  wire \read_count[31]_i_54_n_0 ;
  wire \read_count[31]_i_55_n_0 ;
  wire \read_count[31]_i_56_n_0 ;
  wire \read_count[31]_i_57_n_0 ;
  wire \read_count[31]_i_58_n_0 ;
  wire \read_count[31]_i_59_n_0 ;
  wire \read_count[31]_i_60_n_0 ;
  wire \read_count[31]_i_61_n_0 ;
  wire \read_count[31]_i_62_n_0 ;
  wire \read_count[31]_i_63_n_0 ;
  wire \read_count[31]_i_64_n_0 ;
  wire \read_count[31]_i_65_n_0 ;
  wire \read_count[31]_i_66_n_0 ;
  wire \read_count[31]_i_67_n_0 ;
  wire \read_count[31]_i_68_n_0 ;
  wire \read_count[31]_i_69_n_0 ;
  wire \read_count[31]_i_70_n_0 ;
  wire \read_count[31]_i_71_n_0 ;
  wire \read_count[31]_i_72_n_0 ;
  wire \read_count[31]_i_73_n_0 ;
  wire \read_count[31]_i_74_n_0 ;
  wire \read_count[31]_i_75_n_0 ;
  wire \read_count[31]_i_76_n_0 ;
  wire \read_count[31]_i_77_n_0 ;
  wire \read_count[31]_i_78_n_0 ;
  wire \read_count[31]_i_79_n_0 ;
  wire \read_count[31]_i_7_n_0 ;
  wire \read_count[31]_i_80_n_0 ;
  wire \read_count[31]_i_8_n_0 ;
  wire \read_count[31]_i_9_n_0 ;
  wire \read_count[3]_i_1_n_0 ;
  wire \read_count[4]_i_1_n_0 ;
  wire \read_count[5]_i_1_n_0 ;
  wire \read_count[6]_i_1_n_0 ;
  wire \read_count[7]_i_1_n_0 ;
  wire \read_count[8]_i_1_n_0 ;
  wire \read_count[9]_i_1_n_0 ;
  (* DONT_TOUCH *) wire [31:0]read_count_bursts_per_reset;
  wire [31:0]read_count_bursts_per_reset__0;
  wire \read_count_reg[16]_i_2_n_0 ;
  wire \read_count_reg[16]_i_2_n_1 ;
  wire \read_count_reg[16]_i_2_n_10 ;
  wire \read_count_reg[16]_i_2_n_11 ;
  wire \read_count_reg[16]_i_2_n_12 ;
  wire \read_count_reg[16]_i_2_n_13 ;
  wire \read_count_reg[16]_i_2_n_14 ;
  wire \read_count_reg[16]_i_2_n_15 ;
  wire \read_count_reg[16]_i_2_n_2 ;
  wire \read_count_reg[16]_i_2_n_3 ;
  wire \read_count_reg[16]_i_2_n_5 ;
  wire \read_count_reg[16]_i_2_n_6 ;
  wire \read_count_reg[16]_i_2_n_7 ;
  wire \read_count_reg[16]_i_2_n_8 ;
  wire \read_count_reg[16]_i_2_n_9 ;
  wire \read_count_reg[24]_i_2_n_0 ;
  wire \read_count_reg[24]_i_2_n_1 ;
  wire \read_count_reg[24]_i_2_n_10 ;
  wire \read_count_reg[24]_i_2_n_11 ;
  wire \read_count_reg[24]_i_2_n_12 ;
  wire \read_count_reg[24]_i_2_n_13 ;
  wire \read_count_reg[24]_i_2_n_14 ;
  wire \read_count_reg[24]_i_2_n_15 ;
  wire \read_count_reg[24]_i_2_n_2 ;
  wire \read_count_reg[24]_i_2_n_3 ;
  wire \read_count_reg[24]_i_2_n_5 ;
  wire \read_count_reg[24]_i_2_n_6 ;
  wire \read_count_reg[24]_i_2_n_7 ;
  wire \read_count_reg[24]_i_2_n_8 ;
  wire \read_count_reg[24]_i_2_n_9 ;
  wire \read_count_reg[31]_i_15_n_0 ;
  wire \read_count_reg[31]_i_15_n_1 ;
  wire \read_count_reg[31]_i_15_n_2 ;
  wire \read_count_reg[31]_i_15_n_3 ;
  wire \read_count_reg[31]_i_15_n_5 ;
  wire \read_count_reg[31]_i_15_n_6 ;
  wire \read_count_reg[31]_i_15_n_7 ;
  wire \read_count_reg[31]_i_32_n_0 ;
  wire \read_count_reg[31]_i_32_n_1 ;
  wire \read_count_reg[31]_i_32_n_2 ;
  wire \read_count_reg[31]_i_32_n_3 ;
  wire \read_count_reg[31]_i_32_n_5 ;
  wire \read_count_reg[31]_i_32_n_6 ;
  wire \read_count_reg[31]_i_32_n_7 ;
  wire \read_count_reg[31]_i_3_n_5 ;
  wire \read_count_reg[31]_i_3_n_6 ;
  wire \read_count_reg[31]_i_3_n_7 ;
  wire \read_count_reg[31]_i_4_n_0 ;
  wire \read_count_reg[31]_i_4_n_1 ;
  wire \read_count_reg[31]_i_4_n_2 ;
  wire \read_count_reg[31]_i_4_n_3 ;
  wire \read_count_reg[31]_i_4_n_5 ;
  wire \read_count_reg[31]_i_4_n_6 ;
  wire \read_count_reg[31]_i_4_n_7 ;
  wire \read_count_reg[31]_i_5_n_10 ;
  wire \read_count_reg[31]_i_5_n_11 ;
  wire \read_count_reg[31]_i_5_n_12 ;
  wire \read_count_reg[31]_i_5_n_13 ;
  wire \read_count_reg[31]_i_5_n_14 ;
  wire \read_count_reg[31]_i_5_n_15 ;
  wire \read_count_reg[31]_i_5_n_2 ;
  wire \read_count_reg[31]_i_5_n_3 ;
  wire \read_count_reg[31]_i_5_n_5 ;
  wire \read_count_reg[31]_i_5_n_6 ;
  wire \read_count_reg[31]_i_5_n_7 ;
  wire \read_count_reg[31]_i_5_n_9 ;
  wire \read_count_reg[31]_i_6_n_0 ;
  wire \read_count_reg[31]_i_6_n_1 ;
  wire \read_count_reg[31]_i_6_n_2 ;
  wire \read_count_reg[31]_i_6_n_3 ;
  wire \read_count_reg[31]_i_6_n_5 ;
  wire \read_count_reg[31]_i_6_n_6 ;
  wire \read_count_reg[31]_i_6_n_7 ;
  wire \read_count_reg[8]_i_2_n_0 ;
  wire \read_count_reg[8]_i_2_n_1 ;
  wire \read_count_reg[8]_i_2_n_10 ;
  wire \read_count_reg[8]_i_2_n_11 ;
  wire \read_count_reg[8]_i_2_n_12 ;
  wire \read_count_reg[8]_i_2_n_13 ;
  wire \read_count_reg[8]_i_2_n_14 ;
  wire \read_count_reg[8]_i_2_n_15 ;
  wire \read_count_reg[8]_i_2_n_2 ;
  wire \read_count_reg[8]_i_2_n_3 ;
  wire \read_count_reg[8]_i_2_n_5 ;
  wire \read_count_reg[8]_i_2_n_6 ;
  wire \read_count_reg[8]_i_2_n_7 ;
  wire \read_count_reg[8]_i_2_n_8 ;
  wire \read_count_reg[8]_i_2_n_9 ;
  wire [31:0]read_count_reg_n_0_;
  (* DONT_TOUCH *) wire [31:0]read_max_queue_size;
  wire [31:0]read_max_queue_size__0;
  (* DONT_TOUCH *) wire [63:0]read_start_DDR_address;
  wire [63:0]read_start_DDR_address__0;
  (* DONT_TOUCH *) wire [31:0]read_step_DDR_address;
  wire [31:0]read_step_DDR_address__0;
  wire [31:0]read_ticks;
  wire [31:1]read_ticks2;
  wire [39:0]read_ticks20_out;
  wire \read_ticks[0]_i_1_n_0 ;
  wire \read_ticks[0]_i_2_n_0 ;
  wire \read_ticks[10]_i_1_n_0 ;
  wire \read_ticks[10]_i_2_n_0 ;
  wire \read_ticks[11]_i_1_n_0 ;
  wire \read_ticks[11]_i_2_n_0 ;
  wire \read_ticks[12]_i_1_n_0 ;
  wire \read_ticks[12]_i_2_n_0 ;
  wire \read_ticks[13]_i_1_n_0 ;
  wire \read_ticks[13]_i_2_n_0 ;
  wire \read_ticks[14]_i_1_n_0 ;
  wire \read_ticks[14]_i_2_n_0 ;
  wire \read_ticks[15]_i_1_n_0 ;
  wire \read_ticks[15]_i_2_n_0 ;
  wire \read_ticks[16]_i_1_n_0 ;
  wire \read_ticks[16]_i_2_n_0 ;
  wire \read_ticks[17]_i_1_n_0 ;
  wire \read_ticks[17]_i_2_n_0 ;
  wire \read_ticks[18]_i_1_n_0 ;
  wire \read_ticks[18]_i_2_n_0 ;
  wire \read_ticks[19]_i_1_n_0 ;
  wire \read_ticks[19]_i_2_n_0 ;
  wire \read_ticks[1]_i_1_n_0 ;
  wire \read_ticks[1]_i_2_n_0 ;
  wire \read_ticks[20]_i_1_n_0 ;
  wire \read_ticks[20]_i_2_n_0 ;
  wire \read_ticks[21]_i_1_n_0 ;
  wire \read_ticks[21]_i_2_n_0 ;
  wire \read_ticks[22]_i_1_n_0 ;
  wire \read_ticks[22]_i_2_n_0 ;
  wire \read_ticks[23]_i_1_n_0 ;
  wire \read_ticks[23]_i_2_n_0 ;
  wire \read_ticks[24]_i_1_n_0 ;
  wire \read_ticks[24]_i_2_n_0 ;
  wire \read_ticks[25]_i_1_n_0 ;
  wire \read_ticks[25]_i_2_n_0 ;
  wire \read_ticks[26]_i_1_n_0 ;
  wire \read_ticks[26]_i_2_n_0 ;
  wire \read_ticks[27]_i_1_n_0 ;
  wire \read_ticks[27]_i_2_n_0 ;
  wire \read_ticks[28]_i_1_n_0 ;
  wire \read_ticks[28]_i_2_n_0 ;
  wire \read_ticks[29]_i_1_n_0 ;
  wire \read_ticks[29]_i_2_n_0 ;
  wire \read_ticks[2]_i_1_n_0 ;
  wire \read_ticks[2]_i_2_n_0 ;
  wire \read_ticks[30]_i_1_n_0 ;
  wire \read_ticks[30]_i_2_n_0 ;
  wire \read_ticks[31]_i_100_n_0 ;
  wire \read_ticks[31]_i_101_n_0 ;
  wire \read_ticks[31]_i_102_n_0 ;
  wire \read_ticks[31]_i_103_n_0 ;
  wire \read_ticks[31]_i_104_n_0 ;
  wire \read_ticks[31]_i_105_n_0 ;
  wire \read_ticks[31]_i_106_n_0 ;
  wire \read_ticks[31]_i_107_n_0 ;
  wire \read_ticks[31]_i_108_n_0 ;
  wire \read_ticks[31]_i_109_n_0 ;
  wire \read_ticks[31]_i_10_n_0 ;
  wire \read_ticks[31]_i_110_n_0 ;
  wire \read_ticks[31]_i_111_n_0 ;
  wire \read_ticks[31]_i_112_n_0 ;
  wire \read_ticks[31]_i_113_n_0 ;
  wire \read_ticks[31]_i_114_n_0 ;
  wire \read_ticks[31]_i_115_n_0 ;
  wire \read_ticks[31]_i_116_n_0 ;
  wire \read_ticks[31]_i_117_n_0 ;
  wire \read_ticks[31]_i_118_n_0 ;
  wire \read_ticks[31]_i_119_n_0 ;
  wire \read_ticks[31]_i_120_n_0 ;
  wire \read_ticks[31]_i_121_n_0 ;
  wire \read_ticks[31]_i_12_n_0 ;
  wire \read_ticks[31]_i_13_n_0 ;
  wire \read_ticks[31]_i_14_n_0 ;
  wire \read_ticks[31]_i_15_n_0 ;
  wire \read_ticks[31]_i_16_n_0 ;
  wire \read_ticks[31]_i_17_n_0 ;
  wire \read_ticks[31]_i_18_n_0 ;
  wire \read_ticks[31]_i_19_n_0 ;
  wire \read_ticks[31]_i_1_n_0 ;
  wire \read_ticks[31]_i_20_n_0 ;
  wire \read_ticks[31]_i_21_n_0 ;
  wire \read_ticks[31]_i_22_n_0 ;
  wire \read_ticks[31]_i_23_n_0 ;
  wire \read_ticks[31]_i_24_n_0 ;
  wire \read_ticks[31]_i_25_n_0 ;
  wire \read_ticks[31]_i_26_n_0 ;
  wire \read_ticks[31]_i_27_n_0 ;
  wire \read_ticks[31]_i_29_n_0 ;
  wire \read_ticks[31]_i_2_n_0 ;
  wire \read_ticks[31]_i_30_n_0 ;
  wire \read_ticks[31]_i_31_n_0 ;
  wire \read_ticks[31]_i_32_n_0 ;
  wire \read_ticks[31]_i_33_n_0 ;
  wire \read_ticks[31]_i_34_n_0 ;
  wire \read_ticks[31]_i_35_n_0 ;
  wire \read_ticks[31]_i_36_n_0 ;
  wire \read_ticks[31]_i_37_n_0 ;
  wire \read_ticks[31]_i_38_n_0 ;
  wire \read_ticks[31]_i_39_n_0 ;
  wire \read_ticks[31]_i_40_n_0 ;
  wire \read_ticks[31]_i_41_n_0 ;
  wire \read_ticks[31]_i_42_n_0 ;
  wire \read_ticks[31]_i_43_n_0 ;
  wire \read_ticks[31]_i_44_n_0 ;
  wire \read_ticks[31]_i_46_n_0 ;
  wire \read_ticks[31]_i_47_n_0 ;
  wire \read_ticks[31]_i_48_n_0 ;
  wire \read_ticks[31]_i_49_n_0 ;
  wire \read_ticks[31]_i_50_n_0 ;
  wire \read_ticks[31]_i_51_n_0 ;
  wire \read_ticks[31]_i_52_n_0 ;
  wire \read_ticks[31]_i_53_n_0 ;
  wire \read_ticks[31]_i_54_n_0 ;
  wire \read_ticks[31]_i_55_n_0 ;
  wire \read_ticks[31]_i_56_n_0 ;
  wire \read_ticks[31]_i_57_n_0 ;
  wire \read_ticks[31]_i_58_n_0 ;
  wire \read_ticks[31]_i_59_n_0 ;
  wire \read_ticks[31]_i_60_n_0 ;
  wire \read_ticks[31]_i_61_n_0 ;
  wire \read_ticks[31]_i_62_n_0 ;
  wire \read_ticks[31]_i_63_n_0 ;
  wire \read_ticks[31]_i_64_n_0 ;
  wire \read_ticks[31]_i_65_n_0 ;
  wire \read_ticks[31]_i_66_n_0 ;
  wire \read_ticks[31]_i_67_n_0 ;
  wire \read_ticks[31]_i_68_n_0 ;
  wire \read_ticks[31]_i_69_n_0 ;
  wire \read_ticks[31]_i_70_n_0 ;
  wire \read_ticks[31]_i_71_n_0 ;
  wire \read_ticks[31]_i_72_n_0 ;
  wire \read_ticks[31]_i_73_n_0 ;
  wire \read_ticks[31]_i_74_n_0 ;
  wire \read_ticks[31]_i_75_n_0 ;
  wire \read_ticks[31]_i_76_n_0 ;
  wire \read_ticks[31]_i_77_n_0 ;
  wire \read_ticks[31]_i_7_n_0 ;
  wire \read_ticks[31]_i_80_n_0 ;
  wire \read_ticks[31]_i_81_n_0 ;
  wire \read_ticks[31]_i_82_n_0 ;
  wire \read_ticks[31]_i_83_n_0 ;
  wire \read_ticks[31]_i_84_n_0 ;
  wire \read_ticks[31]_i_85_n_0 ;
  wire \read_ticks[31]_i_86_n_0 ;
  wire \read_ticks[31]_i_87_n_0 ;
  wire \read_ticks[31]_i_8_n_0 ;
  wire \read_ticks[31]_i_90_n_0 ;
  wire \read_ticks[31]_i_91_n_0 ;
  wire \read_ticks[31]_i_92_n_0 ;
  wire \read_ticks[31]_i_93_n_0 ;
  wire \read_ticks[31]_i_94_n_0 ;
  wire \read_ticks[31]_i_95_n_0 ;
  wire \read_ticks[31]_i_96_n_0 ;
  wire \read_ticks[31]_i_97_n_0 ;
  wire \read_ticks[31]_i_98_n_0 ;
  wire \read_ticks[31]_i_99_n_0 ;
  wire \read_ticks[31]_i_9_n_0 ;
  wire \read_ticks[3]_i_1_n_0 ;
  wire \read_ticks[3]_i_2_n_0 ;
  wire \read_ticks[4]_i_1_n_0 ;
  wire \read_ticks[4]_i_2_n_0 ;
  wire \read_ticks[5]_i_1_n_0 ;
  wire \read_ticks[5]_i_2_n_0 ;
  wire \read_ticks[6]_i_1_n_0 ;
  wire \read_ticks[6]_i_2_n_0 ;
  wire \read_ticks[7]_i_1_n_0 ;
  wire \read_ticks[7]_i_2_n_0 ;
  wire \read_ticks[8]_i_1_n_0 ;
  wire \read_ticks[8]_i_2_n_0 ;
  wire \read_ticks[9]_i_1_n_0 ;
  wire \read_ticks[9]_i_2_n_0 ;
  (* DONT_TOUCH *) wire [31:0]read_ticks_per_burst;
  wire [31:0]read_ticks_per_burst__0;
  wire \read_ticks_reg[16]_i_3_n_0 ;
  wire \read_ticks_reg[16]_i_3_n_1 ;
  wire \read_ticks_reg[16]_i_3_n_2 ;
  wire \read_ticks_reg[16]_i_3_n_3 ;
  wire \read_ticks_reg[16]_i_3_n_5 ;
  wire \read_ticks_reg[16]_i_3_n_6 ;
  wire \read_ticks_reg[16]_i_3_n_7 ;
  wire \read_ticks_reg[24]_i_3_n_0 ;
  wire \read_ticks_reg[24]_i_3_n_1 ;
  wire \read_ticks_reg[24]_i_3_n_2 ;
  wire \read_ticks_reg[24]_i_3_n_3 ;
  wire \read_ticks_reg[24]_i_3_n_5 ;
  wire \read_ticks_reg[24]_i_3_n_6 ;
  wire \read_ticks_reg[24]_i_3_n_7 ;
  wire \read_ticks_reg[31]_i_11_n_0 ;
  wire \read_ticks_reg[31]_i_11_n_1 ;
  wire \read_ticks_reg[31]_i_11_n_2 ;
  wire \read_ticks_reg[31]_i_11_n_3 ;
  wire \read_ticks_reg[31]_i_11_n_5 ;
  wire \read_ticks_reg[31]_i_11_n_6 ;
  wire \read_ticks_reg[31]_i_11_n_7 ;
  wire \read_ticks_reg[31]_i_28_n_0 ;
  wire \read_ticks_reg[31]_i_28_n_1 ;
  wire \read_ticks_reg[31]_i_28_n_2 ;
  wire \read_ticks_reg[31]_i_28_n_3 ;
  wire \read_ticks_reg[31]_i_28_n_5 ;
  wire \read_ticks_reg[31]_i_28_n_6 ;
  wire \read_ticks_reg[31]_i_28_n_7 ;
  wire \read_ticks_reg[31]_i_3_n_4 ;
  wire \read_ticks_reg[31]_i_3_n_5 ;
  wire \read_ticks_reg[31]_i_3_n_6 ;
  wire \read_ticks_reg[31]_i_3_n_7 ;
  wire \read_ticks_reg[31]_i_45_n_1 ;
  wire \read_ticks_reg[31]_i_45_n_2 ;
  wire \read_ticks_reg[31]_i_45_n_3 ;
  wire \read_ticks_reg[31]_i_45_n_5 ;
  wire \read_ticks_reg[31]_i_45_n_6 ;
  wire \read_ticks_reg[31]_i_45_n_7 ;
  wire \read_ticks_reg[31]_i_4_n_0 ;
  wire \read_ticks_reg[31]_i_4_n_1 ;
  wire \read_ticks_reg[31]_i_4_n_2 ;
  wire \read_ticks_reg[31]_i_4_n_3 ;
  wire \read_ticks_reg[31]_i_4_n_5 ;
  wire \read_ticks_reg[31]_i_4_n_6 ;
  wire \read_ticks_reg[31]_i_4_n_7 ;
  wire \read_ticks_reg[31]_i_5_n_2 ;
  wire \read_ticks_reg[31]_i_5_n_3 ;
  wire \read_ticks_reg[31]_i_5_n_5 ;
  wire \read_ticks_reg[31]_i_5_n_6 ;
  wire \read_ticks_reg[31]_i_5_n_7 ;
  wire \read_ticks_reg[31]_i_6_n_0 ;
  wire \read_ticks_reg[31]_i_6_n_1 ;
  wire \read_ticks_reg[31]_i_6_n_2 ;
  wire \read_ticks_reg[31]_i_6_n_3 ;
  wire \read_ticks_reg[31]_i_6_n_5 ;
  wire \read_ticks_reg[31]_i_6_n_6 ;
  wire \read_ticks_reg[31]_i_6_n_7 ;
  wire \read_ticks_reg[31]_i_78_n_0 ;
  wire \read_ticks_reg[31]_i_78_n_1 ;
  wire \read_ticks_reg[31]_i_78_n_2 ;
  wire \read_ticks_reg[31]_i_78_n_3 ;
  wire \read_ticks_reg[31]_i_78_n_5 ;
  wire \read_ticks_reg[31]_i_78_n_6 ;
  wire \read_ticks_reg[31]_i_78_n_7 ;
  wire \read_ticks_reg[31]_i_79_n_0 ;
  wire \read_ticks_reg[31]_i_79_n_1 ;
  wire \read_ticks_reg[31]_i_79_n_2 ;
  wire \read_ticks_reg[31]_i_79_n_3 ;
  wire \read_ticks_reg[31]_i_79_n_5 ;
  wire \read_ticks_reg[31]_i_79_n_6 ;
  wire \read_ticks_reg[31]_i_79_n_7 ;
  wire \read_ticks_reg[31]_i_88_n_0 ;
  wire \read_ticks_reg[31]_i_88_n_1 ;
  wire \read_ticks_reg[31]_i_88_n_2 ;
  wire \read_ticks_reg[31]_i_88_n_3 ;
  wire \read_ticks_reg[31]_i_88_n_5 ;
  wire \read_ticks_reg[31]_i_88_n_6 ;
  wire \read_ticks_reg[31]_i_88_n_7 ;
  wire \read_ticks_reg[31]_i_89_n_0 ;
  wire \read_ticks_reg[31]_i_89_n_1 ;
  wire \read_ticks_reg[31]_i_89_n_2 ;
  wire \read_ticks_reg[31]_i_89_n_3 ;
  wire \read_ticks_reg[31]_i_89_n_5 ;
  wire \read_ticks_reg[31]_i_89_n_6 ;
  wire \read_ticks_reg[31]_i_89_n_7 ;
  wire \read_ticks_reg[8]_i_3_n_0 ;
  wire \read_ticks_reg[8]_i_3_n_1 ;
  wire \read_ticks_reg[8]_i_3_n_2 ;
  wire \read_ticks_reg[8]_i_3_n_3 ;
  wire \read_ticks_reg[8]_i_3_n_5 ;
  wire \read_ticks_reg[8]_i_3_n_6 ;
  wire \read_ticks_reg[8]_i_3_n_7 ;
  (* DONT_TOUCH *) wire reset_cmd;
  wire rstn;
  (* DONT_TOUCH *) wire [63:0]runtime;
  wire [63:1]runtime0;
  wire \runtime[63]_i_1_n_0 ;
  wire \runtime[63]_i_3_n_0 ;
  wire \runtime_reg[16]_i_2_n_0 ;
  wire \runtime_reg[16]_i_2_n_1 ;
  wire \runtime_reg[16]_i_2_n_2 ;
  wire \runtime_reg[16]_i_2_n_3 ;
  wire \runtime_reg[16]_i_2_n_5 ;
  wire \runtime_reg[16]_i_2_n_6 ;
  wire \runtime_reg[16]_i_2_n_7 ;
  wire \runtime_reg[24]_i_2_n_0 ;
  wire \runtime_reg[24]_i_2_n_1 ;
  wire \runtime_reg[24]_i_2_n_2 ;
  wire \runtime_reg[24]_i_2_n_3 ;
  wire \runtime_reg[24]_i_2_n_5 ;
  wire \runtime_reg[24]_i_2_n_6 ;
  wire \runtime_reg[24]_i_2_n_7 ;
  wire \runtime_reg[32]_i_2_n_0 ;
  wire \runtime_reg[32]_i_2_n_1 ;
  wire \runtime_reg[32]_i_2_n_2 ;
  wire \runtime_reg[32]_i_2_n_3 ;
  wire \runtime_reg[32]_i_2_n_5 ;
  wire \runtime_reg[32]_i_2_n_6 ;
  wire \runtime_reg[32]_i_2_n_7 ;
  wire \runtime_reg[40]_i_2_n_0 ;
  wire \runtime_reg[40]_i_2_n_1 ;
  wire \runtime_reg[40]_i_2_n_2 ;
  wire \runtime_reg[40]_i_2_n_3 ;
  wire \runtime_reg[40]_i_2_n_5 ;
  wire \runtime_reg[40]_i_2_n_6 ;
  wire \runtime_reg[40]_i_2_n_7 ;
  wire \runtime_reg[48]_i_2_n_0 ;
  wire \runtime_reg[48]_i_2_n_1 ;
  wire \runtime_reg[48]_i_2_n_2 ;
  wire \runtime_reg[48]_i_2_n_3 ;
  wire \runtime_reg[48]_i_2_n_5 ;
  wire \runtime_reg[48]_i_2_n_6 ;
  wire \runtime_reg[48]_i_2_n_7 ;
  wire \runtime_reg[56]_i_2_n_0 ;
  wire \runtime_reg[56]_i_2_n_1 ;
  wire \runtime_reg[56]_i_2_n_2 ;
  wire \runtime_reg[56]_i_2_n_3 ;
  wire \runtime_reg[56]_i_2_n_5 ;
  wire \runtime_reg[56]_i_2_n_6 ;
  wire \runtime_reg[56]_i_2_n_7 ;
  wire \runtime_reg[63]_i_4_n_2 ;
  wire \runtime_reg[63]_i_4_n_3 ;
  wire \runtime_reg[63]_i_4_n_5 ;
  wire \runtime_reg[63]_i_4_n_6 ;
  wire \runtime_reg[63]_i_4_n_7 ;
  wire \runtime_reg[8]_i_2_n_0 ;
  wire \runtime_reg[8]_i_2_n_1 ;
  wire \runtime_reg[8]_i_2_n_2 ;
  wire \runtime_reg[8]_i_2_n_3 ;
  wire \runtime_reg[8]_i_2_n_5 ;
  wire \runtime_reg[8]_i_2_n_6 ;
  wire \runtime_reg[8]_i_2_n_7 ;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARREADY;
  wire s_axi_control_ARVALID;
  wire [6:0]s_axi_control_AWADDR;
  wire s_axi_control_AWREADY;
  wire s_axi_control_AWVALID;
  wire s_axi_control_BREADY;
  wire s_axi_control_BVALID;
  wire [31:0]s_axi_control_RDATA;
  wire s_axi_control_RREADY;
  wire s_axi_control_RVALID;
  wire [31:0]s_axi_control_WDATA;
  wire s_axi_control_WREADY;
  wire s_axi_control_WVALID;
  wire sactn_n_1;
  wire sactn_n_10;
  wire sactn_n_11;
  wire sactn_n_12;
  wire sactn_n_13;
  wire sactn_n_14;
  wire sactn_n_15;
  wire sactn_n_16;
  wire sactn_n_17;
  wire sactn_n_18;
  wire sactn_n_19;
  wire sactn_n_20;
  wire sactn_n_21;
  wire sactn_n_22;
  wire sactn_n_23;
  wire sactn_n_24;
  wire sactn_n_25;
  wire sactn_n_26;
  wire sactn_n_264;
  wire sactn_n_265;
  wire sactn_n_266;
  wire sactn_n_267;
  wire sactn_n_268;
  wire sactn_n_269;
  wire sactn_n_27;
  wire sactn_n_270;
  wire sactn_n_271;
  wire sactn_n_272;
  wire sactn_n_273;
  wire sactn_n_274;
  wire sactn_n_275;
  wire sactn_n_276;
  wire sactn_n_277;
  wire sactn_n_278;
  wire sactn_n_279;
  wire sactn_n_28;
  wire sactn_n_280;
  wire sactn_n_281;
  wire sactn_n_282;
  wire sactn_n_283;
  wire sactn_n_284;
  wire sactn_n_285;
  wire sactn_n_286;
  wire sactn_n_287;
  wire sactn_n_288;
  wire sactn_n_289;
  wire sactn_n_29;
  wire sactn_n_290;
  wire sactn_n_291;
  wire sactn_n_292;
  wire sactn_n_293;
  wire sactn_n_294;
  wire sactn_n_295;
  wire sactn_n_3;
  wire sactn_n_30;
  wire sactn_n_31;
  wire sactn_n_32;
  wire sactn_n_33;
  wire sactn_n_34;
  wire sactn_n_35;
  wire sactn_n_36;
  wire sactn_n_37;
  wire sactn_n_38;
  wire sactn_n_39;
  wire sactn_n_4;
  wire sactn_n_40;
  wire sactn_n_41;
  wire sactn_n_42;
  wire sactn_n_43;
  wire sactn_n_44;
  wire sactn_n_45;
  wire sactn_n_46;
  wire sactn_n_47;
  wire sactn_n_48;
  wire sactn_n_49;
  wire sactn_n_5;
  wire sactn_n_50;
  wire sactn_n_51;
  wire sactn_n_52;
  wire sactn_n_53;
  wire sactn_n_54;
  wire sactn_n_55;
  wire sactn_n_56;
  wire sactn_n_57;
  wire sactn_n_58;
  wire sactn_n_587;
  wire sactn_n_588;
  wire sactn_n_589;
  wire sactn_n_59;
  wire sactn_n_590;
  wire sactn_n_591;
  wire sactn_n_592;
  wire sactn_n_593;
  wire sactn_n_594;
  wire sactn_n_595;
  wire sactn_n_596;
  wire sactn_n_597;
  wire sactn_n_598;
  wire sactn_n_599;
  wire sactn_n_6;
  wire sactn_n_60;
  wire sactn_n_600;
  wire sactn_n_601;
  wire sactn_n_602;
  wire sactn_n_603;
  wire sactn_n_604;
  wire sactn_n_605;
  wire sactn_n_606;
  wire sactn_n_607;
  wire sactn_n_608;
  wire sactn_n_609;
  wire sactn_n_61;
  wire sactn_n_610;
  wire sactn_n_611;
  wire sactn_n_612;
  wire sactn_n_613;
  wire sactn_n_614;
  wire sactn_n_615;
  wire sactn_n_616;
  wire sactn_n_617;
  wire sactn_n_618;
  wire sactn_n_62;
  wire sactn_n_63;
  wire sactn_n_64;
  wire sactn_n_65;
  wire sactn_n_66;
  wire sactn_n_67;
  wire sactn_n_68;
  wire sactn_n_69;
  wire sactn_n_7;
  wire sactn_n_70;
  wire sactn_n_71;
  wire sactn_n_8;
  wire sactn_n_9;
  wire srst;
  wire [63:0]toReadDataAddress;
  wire \toReadDataAddress[0]_i_10_n_0 ;
  wire \toReadDataAddress[0]_i_11_n_0 ;
  wire \toReadDataAddress[0]_i_12_n_0 ;
  wire \toReadDataAddress[0]_i_13_n_0 ;
  wire \toReadDataAddress[0]_i_14_n_0 ;
  wire \toReadDataAddress[0]_i_15_n_0 ;
  wire \toReadDataAddress[0]_i_16_n_0 ;
  wire \toReadDataAddress[0]_i_17_n_0 ;
  wire \toReadDataAddress[0]_i_2_n_0 ;
  wire \toReadDataAddress[0]_i_3_n_0 ;
  wire \toReadDataAddress[0]_i_4_n_0 ;
  wire \toReadDataAddress[0]_i_5_n_0 ;
  wire \toReadDataAddress[0]_i_6_n_0 ;
  wire \toReadDataAddress[0]_i_7_n_0 ;
  wire \toReadDataAddress[0]_i_8_n_0 ;
  wire \toReadDataAddress[0]_i_9_n_0 ;
  wire \toReadDataAddress[16]_i_10_n_0 ;
  wire \toReadDataAddress[16]_i_11_n_0 ;
  wire \toReadDataAddress[16]_i_12_n_0 ;
  wire \toReadDataAddress[16]_i_13_n_0 ;
  wire \toReadDataAddress[16]_i_14_n_0 ;
  wire \toReadDataAddress[16]_i_15_n_0 ;
  wire \toReadDataAddress[16]_i_16_n_0 ;
  wire \toReadDataAddress[16]_i_17_n_0 ;
  wire \toReadDataAddress[16]_i_2_n_0 ;
  wire \toReadDataAddress[16]_i_3_n_0 ;
  wire \toReadDataAddress[16]_i_4_n_0 ;
  wire \toReadDataAddress[16]_i_5_n_0 ;
  wire \toReadDataAddress[16]_i_6_n_0 ;
  wire \toReadDataAddress[16]_i_7_n_0 ;
  wire \toReadDataAddress[16]_i_8_n_0 ;
  wire \toReadDataAddress[16]_i_9_n_0 ;
  wire \toReadDataAddress[24]_i_10_n_0 ;
  wire \toReadDataAddress[24]_i_11_n_0 ;
  wire \toReadDataAddress[24]_i_12_n_0 ;
  wire \toReadDataAddress[24]_i_13_n_0 ;
  wire \toReadDataAddress[24]_i_14_n_0 ;
  wire \toReadDataAddress[24]_i_15_n_0 ;
  wire \toReadDataAddress[24]_i_16_n_0 ;
  wire \toReadDataAddress[24]_i_17_n_0 ;
  wire \toReadDataAddress[24]_i_2_n_0 ;
  wire \toReadDataAddress[24]_i_3_n_0 ;
  wire \toReadDataAddress[24]_i_4_n_0 ;
  wire \toReadDataAddress[24]_i_5_n_0 ;
  wire \toReadDataAddress[24]_i_6_n_0 ;
  wire \toReadDataAddress[24]_i_7_n_0 ;
  wire \toReadDataAddress[24]_i_8_n_0 ;
  wire \toReadDataAddress[24]_i_9_n_0 ;
  wire \toReadDataAddress[32]_i_2_n_0 ;
  wire \toReadDataAddress[32]_i_3_n_0 ;
  wire \toReadDataAddress[32]_i_4_n_0 ;
  wire \toReadDataAddress[32]_i_5_n_0 ;
  wire \toReadDataAddress[32]_i_6_n_0 ;
  wire \toReadDataAddress[32]_i_7_n_0 ;
  wire \toReadDataAddress[32]_i_8_n_0 ;
  wire \toReadDataAddress[32]_i_9_n_0 ;
  wire \toReadDataAddress[40]_i_2_n_0 ;
  wire \toReadDataAddress[40]_i_3_n_0 ;
  wire \toReadDataAddress[40]_i_4_n_0 ;
  wire \toReadDataAddress[40]_i_5_n_0 ;
  wire \toReadDataAddress[40]_i_6_n_0 ;
  wire \toReadDataAddress[40]_i_7_n_0 ;
  wire \toReadDataAddress[40]_i_8_n_0 ;
  wire \toReadDataAddress[40]_i_9_n_0 ;
  wire \toReadDataAddress[48]_i_2_n_0 ;
  wire \toReadDataAddress[48]_i_3_n_0 ;
  wire \toReadDataAddress[48]_i_4_n_0 ;
  wire \toReadDataAddress[48]_i_5_n_0 ;
  wire \toReadDataAddress[48]_i_6_n_0 ;
  wire \toReadDataAddress[48]_i_7_n_0 ;
  wire \toReadDataAddress[48]_i_8_n_0 ;
  wire \toReadDataAddress[48]_i_9_n_0 ;
  wire \toReadDataAddress[56]_i_2_n_0 ;
  wire \toReadDataAddress[56]_i_3_n_0 ;
  wire \toReadDataAddress[56]_i_4_n_0 ;
  wire \toReadDataAddress[56]_i_5_n_0 ;
  wire \toReadDataAddress[56]_i_6_n_0 ;
  wire \toReadDataAddress[56]_i_7_n_0 ;
  wire \toReadDataAddress[56]_i_8_n_0 ;
  wire \toReadDataAddress[56]_i_9_n_0 ;
  wire \toReadDataAddress[8]_i_10_n_0 ;
  wire \toReadDataAddress[8]_i_11_n_0 ;
  wire \toReadDataAddress[8]_i_12_n_0 ;
  wire \toReadDataAddress[8]_i_13_n_0 ;
  wire \toReadDataAddress[8]_i_14_n_0 ;
  wire \toReadDataAddress[8]_i_15_n_0 ;
  wire \toReadDataAddress[8]_i_16_n_0 ;
  wire \toReadDataAddress[8]_i_17_n_0 ;
  wire \toReadDataAddress[8]_i_2_n_0 ;
  wire \toReadDataAddress[8]_i_3_n_0 ;
  wire \toReadDataAddress[8]_i_4_n_0 ;
  wire \toReadDataAddress[8]_i_5_n_0 ;
  wire \toReadDataAddress[8]_i_6_n_0 ;
  wire \toReadDataAddress[8]_i_7_n_0 ;
  wire \toReadDataAddress[8]_i_8_n_0 ;
  wire \toReadDataAddress[8]_i_9_n_0 ;
  wire \toReadDataAddress_reg[0]_i_1_n_0 ;
  wire \toReadDataAddress_reg[0]_i_1_n_1 ;
  wire \toReadDataAddress_reg[0]_i_1_n_10 ;
  wire \toReadDataAddress_reg[0]_i_1_n_11 ;
  wire \toReadDataAddress_reg[0]_i_1_n_12 ;
  wire \toReadDataAddress_reg[0]_i_1_n_13 ;
  wire \toReadDataAddress_reg[0]_i_1_n_14 ;
  wire \toReadDataAddress_reg[0]_i_1_n_15 ;
  wire \toReadDataAddress_reg[0]_i_1_n_2 ;
  wire \toReadDataAddress_reg[0]_i_1_n_3 ;
  wire \toReadDataAddress_reg[0]_i_1_n_5 ;
  wire \toReadDataAddress_reg[0]_i_1_n_6 ;
  wire \toReadDataAddress_reg[0]_i_1_n_7 ;
  wire \toReadDataAddress_reg[0]_i_1_n_8 ;
  wire \toReadDataAddress_reg[0]_i_1_n_9 ;
  wire \toReadDataAddress_reg[16]_i_1_n_0 ;
  wire \toReadDataAddress_reg[16]_i_1_n_1 ;
  wire \toReadDataAddress_reg[16]_i_1_n_10 ;
  wire \toReadDataAddress_reg[16]_i_1_n_11 ;
  wire \toReadDataAddress_reg[16]_i_1_n_12 ;
  wire \toReadDataAddress_reg[16]_i_1_n_13 ;
  wire \toReadDataAddress_reg[16]_i_1_n_14 ;
  wire \toReadDataAddress_reg[16]_i_1_n_15 ;
  wire \toReadDataAddress_reg[16]_i_1_n_2 ;
  wire \toReadDataAddress_reg[16]_i_1_n_3 ;
  wire \toReadDataAddress_reg[16]_i_1_n_5 ;
  wire \toReadDataAddress_reg[16]_i_1_n_6 ;
  wire \toReadDataAddress_reg[16]_i_1_n_7 ;
  wire \toReadDataAddress_reg[16]_i_1_n_8 ;
  wire \toReadDataAddress_reg[16]_i_1_n_9 ;
  wire \toReadDataAddress_reg[24]_i_1_n_0 ;
  wire \toReadDataAddress_reg[24]_i_1_n_1 ;
  wire \toReadDataAddress_reg[24]_i_1_n_10 ;
  wire \toReadDataAddress_reg[24]_i_1_n_11 ;
  wire \toReadDataAddress_reg[24]_i_1_n_12 ;
  wire \toReadDataAddress_reg[24]_i_1_n_13 ;
  wire \toReadDataAddress_reg[24]_i_1_n_14 ;
  wire \toReadDataAddress_reg[24]_i_1_n_15 ;
  wire \toReadDataAddress_reg[24]_i_1_n_2 ;
  wire \toReadDataAddress_reg[24]_i_1_n_3 ;
  wire \toReadDataAddress_reg[24]_i_1_n_5 ;
  wire \toReadDataAddress_reg[24]_i_1_n_6 ;
  wire \toReadDataAddress_reg[24]_i_1_n_7 ;
  wire \toReadDataAddress_reg[24]_i_1_n_8 ;
  wire \toReadDataAddress_reg[24]_i_1_n_9 ;
  wire \toReadDataAddress_reg[32]_i_1_n_0 ;
  wire \toReadDataAddress_reg[32]_i_1_n_1 ;
  wire \toReadDataAddress_reg[32]_i_1_n_10 ;
  wire \toReadDataAddress_reg[32]_i_1_n_11 ;
  wire \toReadDataAddress_reg[32]_i_1_n_12 ;
  wire \toReadDataAddress_reg[32]_i_1_n_13 ;
  wire \toReadDataAddress_reg[32]_i_1_n_14 ;
  wire \toReadDataAddress_reg[32]_i_1_n_15 ;
  wire \toReadDataAddress_reg[32]_i_1_n_2 ;
  wire \toReadDataAddress_reg[32]_i_1_n_3 ;
  wire \toReadDataAddress_reg[32]_i_1_n_5 ;
  wire \toReadDataAddress_reg[32]_i_1_n_6 ;
  wire \toReadDataAddress_reg[32]_i_1_n_7 ;
  wire \toReadDataAddress_reg[32]_i_1_n_8 ;
  wire \toReadDataAddress_reg[32]_i_1_n_9 ;
  wire \toReadDataAddress_reg[40]_i_1_n_0 ;
  wire \toReadDataAddress_reg[40]_i_1_n_1 ;
  wire \toReadDataAddress_reg[40]_i_1_n_10 ;
  wire \toReadDataAddress_reg[40]_i_1_n_11 ;
  wire \toReadDataAddress_reg[40]_i_1_n_12 ;
  wire \toReadDataAddress_reg[40]_i_1_n_13 ;
  wire \toReadDataAddress_reg[40]_i_1_n_14 ;
  wire \toReadDataAddress_reg[40]_i_1_n_15 ;
  wire \toReadDataAddress_reg[40]_i_1_n_2 ;
  wire \toReadDataAddress_reg[40]_i_1_n_3 ;
  wire \toReadDataAddress_reg[40]_i_1_n_5 ;
  wire \toReadDataAddress_reg[40]_i_1_n_6 ;
  wire \toReadDataAddress_reg[40]_i_1_n_7 ;
  wire \toReadDataAddress_reg[40]_i_1_n_8 ;
  wire \toReadDataAddress_reg[40]_i_1_n_9 ;
  wire \toReadDataAddress_reg[48]_i_1_n_0 ;
  wire \toReadDataAddress_reg[48]_i_1_n_1 ;
  wire \toReadDataAddress_reg[48]_i_1_n_10 ;
  wire \toReadDataAddress_reg[48]_i_1_n_11 ;
  wire \toReadDataAddress_reg[48]_i_1_n_12 ;
  wire \toReadDataAddress_reg[48]_i_1_n_13 ;
  wire \toReadDataAddress_reg[48]_i_1_n_14 ;
  wire \toReadDataAddress_reg[48]_i_1_n_15 ;
  wire \toReadDataAddress_reg[48]_i_1_n_2 ;
  wire \toReadDataAddress_reg[48]_i_1_n_3 ;
  wire \toReadDataAddress_reg[48]_i_1_n_5 ;
  wire \toReadDataAddress_reg[48]_i_1_n_6 ;
  wire \toReadDataAddress_reg[48]_i_1_n_7 ;
  wire \toReadDataAddress_reg[48]_i_1_n_8 ;
  wire \toReadDataAddress_reg[48]_i_1_n_9 ;
  wire \toReadDataAddress_reg[56]_i_1_n_1 ;
  wire \toReadDataAddress_reg[56]_i_1_n_10 ;
  wire \toReadDataAddress_reg[56]_i_1_n_11 ;
  wire \toReadDataAddress_reg[56]_i_1_n_12 ;
  wire \toReadDataAddress_reg[56]_i_1_n_13 ;
  wire \toReadDataAddress_reg[56]_i_1_n_14 ;
  wire \toReadDataAddress_reg[56]_i_1_n_15 ;
  wire \toReadDataAddress_reg[56]_i_1_n_2 ;
  wire \toReadDataAddress_reg[56]_i_1_n_3 ;
  wire \toReadDataAddress_reg[56]_i_1_n_5 ;
  wire \toReadDataAddress_reg[56]_i_1_n_6 ;
  wire \toReadDataAddress_reg[56]_i_1_n_7 ;
  wire \toReadDataAddress_reg[56]_i_1_n_8 ;
  wire \toReadDataAddress_reg[56]_i_1_n_9 ;
  wire \toReadDataAddress_reg[8]_i_1_n_0 ;
  wire \toReadDataAddress_reg[8]_i_1_n_1 ;
  wire \toReadDataAddress_reg[8]_i_1_n_10 ;
  wire \toReadDataAddress_reg[8]_i_1_n_11 ;
  wire \toReadDataAddress_reg[8]_i_1_n_12 ;
  wire \toReadDataAddress_reg[8]_i_1_n_13 ;
  wire \toReadDataAddress_reg[8]_i_1_n_14 ;
  wire \toReadDataAddress_reg[8]_i_1_n_15 ;
  wire \toReadDataAddress_reg[8]_i_1_n_2 ;
  wire \toReadDataAddress_reg[8]_i_1_n_3 ;
  wire \toReadDataAddress_reg[8]_i_1_n_5 ;
  wire \toReadDataAddress_reg[8]_i_1_n_6 ;
  wire \toReadDataAddress_reg[8]_i_1_n_7 ;
  wire \toReadDataAddress_reg[8]_i_1_n_8 ;
  wire \toReadDataAddress_reg[8]_i_1_n_9 ;
  wire toReadDataBusy;
  wire [0:0]toReadDataSize0;
  wire \toReadDataSize[1]_i_1_n_0 ;
  wire \toReadDataSize[2]_i_1_n_0 ;
  wire \toReadDataSize[3]_i_1_n_0 ;
  wire \toReadDataSize[4]_i_1_n_0 ;
  wire \toReadDataSize[5]_i_1_n_0 ;
  wire \toReadDataSize[6]_i_1_n_0 ;
  wire \toReadDataSize[7]_i_2_n_0 ;
  wire \toReadDataSize[7]_i_3_n_0 ;
  wire toReadDataValid;
  wire writeAbusy;
  wire [63:0]writeAddress;
  wire \writeAddress[0]_i_10_n_0 ;
  wire \writeAddress[0]_i_11_n_0 ;
  wire \writeAddress[0]_i_12_n_0 ;
  wire \writeAddress[0]_i_13_n_0 ;
  wire \writeAddress[0]_i_14_n_0 ;
  wire \writeAddress[0]_i_15_n_0 ;
  wire \writeAddress[0]_i_16_n_0 ;
  wire \writeAddress[0]_i_17_n_0 ;
  wire \writeAddress[0]_i_18_n_0 ;
  wire \writeAddress[0]_i_3_n_0 ;
  wire \writeAddress[0]_i_4_n_0 ;
  wire \writeAddress[0]_i_5_n_0 ;
  wire \writeAddress[0]_i_6_n_0 ;
  wire \writeAddress[0]_i_7_n_0 ;
  wire \writeAddress[0]_i_8_n_0 ;
  wire \writeAddress[0]_i_9_n_0 ;
  wire \writeAddress[16]_i_10_n_0 ;
  wire \writeAddress[16]_i_11_n_0 ;
  wire \writeAddress[16]_i_12_n_0 ;
  wire \writeAddress[16]_i_13_n_0 ;
  wire \writeAddress[16]_i_14_n_0 ;
  wire \writeAddress[16]_i_15_n_0 ;
  wire \writeAddress[16]_i_16_n_0 ;
  wire \writeAddress[16]_i_17_n_0 ;
  wire \writeAddress[16]_i_2_n_0 ;
  wire \writeAddress[16]_i_3_n_0 ;
  wire \writeAddress[16]_i_4_n_0 ;
  wire \writeAddress[16]_i_5_n_0 ;
  wire \writeAddress[16]_i_6_n_0 ;
  wire \writeAddress[16]_i_7_n_0 ;
  wire \writeAddress[16]_i_8_n_0 ;
  wire \writeAddress[16]_i_9_n_0 ;
  wire \writeAddress[24]_i_10_n_0 ;
  wire \writeAddress[24]_i_11_n_0 ;
  wire \writeAddress[24]_i_12_n_0 ;
  wire \writeAddress[24]_i_13_n_0 ;
  wire \writeAddress[24]_i_14_n_0 ;
  wire \writeAddress[24]_i_15_n_0 ;
  wire \writeAddress[24]_i_16_n_0 ;
  wire \writeAddress[24]_i_17_n_0 ;
  wire \writeAddress[24]_i_2_n_0 ;
  wire \writeAddress[24]_i_3_n_0 ;
  wire \writeAddress[24]_i_4_n_0 ;
  wire \writeAddress[24]_i_5_n_0 ;
  wire \writeAddress[24]_i_6_n_0 ;
  wire \writeAddress[24]_i_7_n_0 ;
  wire \writeAddress[24]_i_8_n_0 ;
  wire \writeAddress[24]_i_9_n_0 ;
  wire \writeAddress[32]_i_2_n_0 ;
  wire \writeAddress[32]_i_3_n_0 ;
  wire \writeAddress[32]_i_4_n_0 ;
  wire \writeAddress[32]_i_5_n_0 ;
  wire \writeAddress[32]_i_6_n_0 ;
  wire \writeAddress[32]_i_7_n_0 ;
  wire \writeAddress[32]_i_8_n_0 ;
  wire \writeAddress[32]_i_9_n_0 ;
  wire \writeAddress[40]_i_2_n_0 ;
  wire \writeAddress[40]_i_3_n_0 ;
  wire \writeAddress[40]_i_4_n_0 ;
  wire \writeAddress[40]_i_5_n_0 ;
  wire \writeAddress[40]_i_6_n_0 ;
  wire \writeAddress[40]_i_7_n_0 ;
  wire \writeAddress[40]_i_8_n_0 ;
  wire \writeAddress[40]_i_9_n_0 ;
  wire \writeAddress[48]_i_2_n_0 ;
  wire \writeAddress[48]_i_3_n_0 ;
  wire \writeAddress[48]_i_4_n_0 ;
  wire \writeAddress[48]_i_5_n_0 ;
  wire \writeAddress[48]_i_6_n_0 ;
  wire \writeAddress[48]_i_7_n_0 ;
  wire \writeAddress[48]_i_8_n_0 ;
  wire \writeAddress[48]_i_9_n_0 ;
  wire \writeAddress[56]_i_2_n_0 ;
  wire \writeAddress[56]_i_3_n_0 ;
  wire \writeAddress[56]_i_4_n_0 ;
  wire \writeAddress[56]_i_5_n_0 ;
  wire \writeAddress[56]_i_6_n_0 ;
  wire \writeAddress[56]_i_7_n_0 ;
  wire \writeAddress[56]_i_8_n_0 ;
  wire \writeAddress[56]_i_9_n_0 ;
  wire \writeAddress[8]_i_10_n_0 ;
  wire \writeAddress[8]_i_11_n_0 ;
  wire \writeAddress[8]_i_12_n_0 ;
  wire \writeAddress[8]_i_13_n_0 ;
  wire \writeAddress[8]_i_14_n_0 ;
  wire \writeAddress[8]_i_15_n_0 ;
  wire \writeAddress[8]_i_16_n_0 ;
  wire \writeAddress[8]_i_17_n_0 ;
  wire \writeAddress[8]_i_2_n_0 ;
  wire \writeAddress[8]_i_3_n_0 ;
  wire \writeAddress[8]_i_4_n_0 ;
  wire \writeAddress[8]_i_5_n_0 ;
  wire \writeAddress[8]_i_6_n_0 ;
  wire \writeAddress[8]_i_7_n_0 ;
  wire \writeAddress[8]_i_8_n_0 ;
  wire \writeAddress[8]_i_9_n_0 ;
  wire \writeAddress_reg[0]_i_2_n_0 ;
  wire \writeAddress_reg[0]_i_2_n_1 ;
  wire \writeAddress_reg[0]_i_2_n_10 ;
  wire \writeAddress_reg[0]_i_2_n_11 ;
  wire \writeAddress_reg[0]_i_2_n_12 ;
  wire \writeAddress_reg[0]_i_2_n_13 ;
  wire \writeAddress_reg[0]_i_2_n_14 ;
  wire \writeAddress_reg[0]_i_2_n_15 ;
  wire \writeAddress_reg[0]_i_2_n_2 ;
  wire \writeAddress_reg[0]_i_2_n_3 ;
  wire \writeAddress_reg[0]_i_2_n_5 ;
  wire \writeAddress_reg[0]_i_2_n_6 ;
  wire \writeAddress_reg[0]_i_2_n_7 ;
  wire \writeAddress_reg[0]_i_2_n_8 ;
  wire \writeAddress_reg[0]_i_2_n_9 ;
  wire \writeAddress_reg[16]_i_1_n_0 ;
  wire \writeAddress_reg[16]_i_1_n_1 ;
  wire \writeAddress_reg[16]_i_1_n_10 ;
  wire \writeAddress_reg[16]_i_1_n_11 ;
  wire \writeAddress_reg[16]_i_1_n_12 ;
  wire \writeAddress_reg[16]_i_1_n_13 ;
  wire \writeAddress_reg[16]_i_1_n_14 ;
  wire \writeAddress_reg[16]_i_1_n_15 ;
  wire \writeAddress_reg[16]_i_1_n_2 ;
  wire \writeAddress_reg[16]_i_1_n_3 ;
  wire \writeAddress_reg[16]_i_1_n_5 ;
  wire \writeAddress_reg[16]_i_1_n_6 ;
  wire \writeAddress_reg[16]_i_1_n_7 ;
  wire \writeAddress_reg[16]_i_1_n_8 ;
  wire \writeAddress_reg[16]_i_1_n_9 ;
  wire \writeAddress_reg[24]_i_1_n_0 ;
  wire \writeAddress_reg[24]_i_1_n_1 ;
  wire \writeAddress_reg[24]_i_1_n_10 ;
  wire \writeAddress_reg[24]_i_1_n_11 ;
  wire \writeAddress_reg[24]_i_1_n_12 ;
  wire \writeAddress_reg[24]_i_1_n_13 ;
  wire \writeAddress_reg[24]_i_1_n_14 ;
  wire \writeAddress_reg[24]_i_1_n_15 ;
  wire \writeAddress_reg[24]_i_1_n_2 ;
  wire \writeAddress_reg[24]_i_1_n_3 ;
  wire \writeAddress_reg[24]_i_1_n_5 ;
  wire \writeAddress_reg[24]_i_1_n_6 ;
  wire \writeAddress_reg[24]_i_1_n_7 ;
  wire \writeAddress_reg[24]_i_1_n_8 ;
  wire \writeAddress_reg[24]_i_1_n_9 ;
  wire \writeAddress_reg[32]_i_1_n_0 ;
  wire \writeAddress_reg[32]_i_1_n_1 ;
  wire \writeAddress_reg[32]_i_1_n_10 ;
  wire \writeAddress_reg[32]_i_1_n_11 ;
  wire \writeAddress_reg[32]_i_1_n_12 ;
  wire \writeAddress_reg[32]_i_1_n_13 ;
  wire \writeAddress_reg[32]_i_1_n_14 ;
  wire \writeAddress_reg[32]_i_1_n_15 ;
  wire \writeAddress_reg[32]_i_1_n_2 ;
  wire \writeAddress_reg[32]_i_1_n_3 ;
  wire \writeAddress_reg[32]_i_1_n_5 ;
  wire \writeAddress_reg[32]_i_1_n_6 ;
  wire \writeAddress_reg[32]_i_1_n_7 ;
  wire \writeAddress_reg[32]_i_1_n_8 ;
  wire \writeAddress_reg[32]_i_1_n_9 ;
  wire \writeAddress_reg[40]_i_1_n_0 ;
  wire \writeAddress_reg[40]_i_1_n_1 ;
  wire \writeAddress_reg[40]_i_1_n_10 ;
  wire \writeAddress_reg[40]_i_1_n_11 ;
  wire \writeAddress_reg[40]_i_1_n_12 ;
  wire \writeAddress_reg[40]_i_1_n_13 ;
  wire \writeAddress_reg[40]_i_1_n_14 ;
  wire \writeAddress_reg[40]_i_1_n_15 ;
  wire \writeAddress_reg[40]_i_1_n_2 ;
  wire \writeAddress_reg[40]_i_1_n_3 ;
  wire \writeAddress_reg[40]_i_1_n_5 ;
  wire \writeAddress_reg[40]_i_1_n_6 ;
  wire \writeAddress_reg[40]_i_1_n_7 ;
  wire \writeAddress_reg[40]_i_1_n_8 ;
  wire \writeAddress_reg[40]_i_1_n_9 ;
  wire \writeAddress_reg[48]_i_1_n_0 ;
  wire \writeAddress_reg[48]_i_1_n_1 ;
  wire \writeAddress_reg[48]_i_1_n_10 ;
  wire \writeAddress_reg[48]_i_1_n_11 ;
  wire \writeAddress_reg[48]_i_1_n_12 ;
  wire \writeAddress_reg[48]_i_1_n_13 ;
  wire \writeAddress_reg[48]_i_1_n_14 ;
  wire \writeAddress_reg[48]_i_1_n_15 ;
  wire \writeAddress_reg[48]_i_1_n_2 ;
  wire \writeAddress_reg[48]_i_1_n_3 ;
  wire \writeAddress_reg[48]_i_1_n_5 ;
  wire \writeAddress_reg[48]_i_1_n_6 ;
  wire \writeAddress_reg[48]_i_1_n_7 ;
  wire \writeAddress_reg[48]_i_1_n_8 ;
  wire \writeAddress_reg[48]_i_1_n_9 ;
  wire \writeAddress_reg[56]_i_1_n_1 ;
  wire \writeAddress_reg[56]_i_1_n_10 ;
  wire \writeAddress_reg[56]_i_1_n_11 ;
  wire \writeAddress_reg[56]_i_1_n_12 ;
  wire \writeAddress_reg[56]_i_1_n_13 ;
  wire \writeAddress_reg[56]_i_1_n_14 ;
  wire \writeAddress_reg[56]_i_1_n_15 ;
  wire \writeAddress_reg[56]_i_1_n_2 ;
  wire \writeAddress_reg[56]_i_1_n_3 ;
  wire \writeAddress_reg[56]_i_1_n_5 ;
  wire \writeAddress_reg[56]_i_1_n_6 ;
  wire \writeAddress_reg[56]_i_1_n_7 ;
  wire \writeAddress_reg[56]_i_1_n_8 ;
  wire \writeAddress_reg[56]_i_1_n_9 ;
  wire [7:0]\writeAddress_reg[63]_0 ;
  wire \writeAddress_reg[8]_i_1_n_0 ;
  wire \writeAddress_reg[8]_i_1_n_1 ;
  wire \writeAddress_reg[8]_i_1_n_10 ;
  wire \writeAddress_reg[8]_i_1_n_11 ;
  wire \writeAddress_reg[8]_i_1_n_12 ;
  wire \writeAddress_reg[8]_i_1_n_13 ;
  wire \writeAddress_reg[8]_i_1_n_14 ;
  wire \writeAddress_reg[8]_i_1_n_15 ;
  wire \writeAddress_reg[8]_i_1_n_2 ;
  wire \writeAddress_reg[8]_i_1_n_3 ;
  wire \writeAddress_reg[8]_i_1_n_5 ;
  wire \writeAddress_reg[8]_i_1_n_6 ;
  wire \writeAddress_reg[8]_i_1_n_7 ;
  wire \writeAddress_reg[8]_i_1_n_8 ;
  wire \writeAddress_reg[8]_i_1_n_9 ;
  wire [0:0]writeAsize0;
  wire \writeAsize[1]_i_1_n_0 ;
  wire \writeAsize[2]_i_1_n_0 ;
  wire \writeAsize[3]_i_1_n_0 ;
  wire \writeAsize[4]_i_1_n_0 ;
  wire \writeAsize[5]_i_1_n_0 ;
  wire \writeAsize[6]_i_1_n_0 ;
  wire \writeAsize[7]_i_1_n_0 ;
  wire \writeAsize[7]_i_2_n_0 ;
  wire writeAvalid;
  wire writeDbusy;
  wire writeDlast;
  wire writeDlast_reg_0;
  wire writeDvalid;
  wire writeDvalid0;
  wire writeDvalid_i_10_n_0;
  wire writeDvalid_i_12_n_0;
  wire writeDvalid_i_13_n_0;
  wire writeDvalid_i_14_n_0;
  wire writeDvalid_i_15_n_0;
  wire writeDvalid_i_16_n_0;
  wire writeDvalid_i_17_n_0;
  wire writeDvalid_i_18_n_0;
  wire writeDvalid_i_19_n_0;
  wire writeDvalid_i_20_n_0;
  wire writeDvalid_i_21_n_0;
  wire writeDvalid_i_22_n_0;
  wire writeDvalid_i_23_n_0;
  wire writeDvalid_i_24_n_0;
  wire writeDvalid_i_25_n_0;
  wire writeDvalid_i_26_n_0;
  wire writeDvalid_i_27_n_0;
  wire writeDvalid_i_28_n_0;
  wire writeDvalid_i_29_n_0;
  wire writeDvalid_i_30_n_0;
  wire writeDvalid_i_31_n_0;
  wire writeDvalid_i_32_n_0;
  wire writeDvalid_i_33_n_0;
  wire writeDvalid_i_34_n_0;
  wire writeDvalid_i_35_n_0;
  wire writeDvalid_i_36_n_0;
  wire writeDvalid_i_37_n_0;
  wire writeDvalid_i_38_n_0;
  wire writeDvalid_i_39_n_0;
  wire writeDvalid_i_3_n_0;
  wire writeDvalid_i_40_n_0;
  wire writeDvalid_i_41_n_0;
  wire writeDvalid_i_42_n_0;
  wire writeDvalid_i_43_n_0;
  wire writeDvalid_i_4_n_0;
  wire writeDvalid_i_5_n_0;
  wire writeDvalid_i_6_n_0;
  wire writeDvalid_i_7_n_0;
  wire writeDvalid_i_8_n_0;
  wire writeDvalid_i_9_n_0;
  wire [127:0]writeDvalid_reg_0;
  wire writeDvalid_reg_i_11_n_0;
  wire writeDvalid_reg_i_11_n_1;
  wire writeDvalid_reg_i_11_n_2;
  wire writeDvalid_reg_i_11_n_3;
  wire writeDvalid_reg_i_11_n_5;
  wire writeDvalid_reg_i_11_n_6;
  wire writeDvalid_reg_i_11_n_7;
  wire writeDvalid_reg_i_1_n_5;
  wire writeDvalid_reg_i_1_n_6;
  wire writeDvalid_reg_i_1_n_7;
  wire writeDvalid_reg_i_2_n_0;
  wire writeDvalid_reg_i_2_n_1;
  wire writeDvalid_reg_i_2_n_2;
  wire writeDvalid_reg_i_2_n_3;
  wire writeDvalid_reg_i_2_n_5;
  wire writeDvalid_reg_i_2_n_6;
  wire writeDvalid_reg_i_2_n_7;
  (* DONT_TOUCH *) wire [31:0]write_blocking_ratio;
  wire [31:0]write_blocking_ratio__0;
  (* DONT_TOUCH *) wire [31:0]write_burst_size;
  wire [31:0]write_burst_size__0;
  wire \write_count[0]_i_1_n_0 ;
  wire \write_count[10]_i_1_n_0 ;
  wire \write_count[11]_i_1_n_0 ;
  wire \write_count[12]_i_1_n_0 ;
  wire \write_count[13]_i_1_n_0 ;
  wire \write_count[14]_i_1_n_0 ;
  wire \write_count[15]_i_1_n_0 ;
  wire \write_count[16]_i_1_n_0 ;
  wire \write_count[17]_i_1_n_0 ;
  wire \write_count[18]_i_1_n_0 ;
  wire \write_count[19]_i_1_n_0 ;
  wire \write_count[1]_i_1_n_0 ;
  wire \write_count[20]_i_1_n_0 ;
  wire \write_count[21]_i_1_n_0 ;
  wire \write_count[22]_i_1_n_0 ;
  wire \write_count[23]_i_1_n_0 ;
  wire \write_count[24]_i_1_n_0 ;
  wire \write_count[25]_i_1_n_0 ;
  wire \write_count[26]_i_1_n_0 ;
  wire \write_count[27]_i_1_n_0 ;
  wire \write_count[28]_i_1_n_0 ;
  wire \write_count[29]_i_1_n_0 ;
  wire \write_count[2]_i_1_n_0 ;
  wire \write_count[30]_i_1_n_0 ;
  wire \write_count[31]_i_10_n_0 ;
  wire \write_count[31]_i_11_n_0 ;
  wire \write_count[31]_i_12_n_0 ;
  wire \write_count[31]_i_13_n_0 ;
  wire \write_count[31]_i_14_n_0 ;
  wire \write_count[31]_i_15_n_0 ;
  wire \write_count[31]_i_16_n_0 ;
  wire \write_count[31]_i_17_n_0 ;
  wire \write_count[31]_i_18_n_0 ;
  wire \write_count[31]_i_19_n_0 ;
  wire \write_count[31]_i_1_n_0 ;
  wire \write_count[31]_i_20_n_0 ;
  wire \write_count[31]_i_21_n_0 ;
  wire \write_count[31]_i_22_n_0 ;
  wire \write_count[31]_i_23_n_0 ;
  wire \write_count[31]_i_24_n_0 ;
  wire \write_count[31]_i_25_n_0 ;
  wire \write_count[31]_i_26_n_0 ;
  wire \write_count[31]_i_27_n_0 ;
  wire \write_count[31]_i_28_n_0 ;
  wire \write_count[31]_i_29_n_0 ;
  wire \write_count[31]_i_30_n_0 ;
  wire \write_count[31]_i_31_n_0 ;
  wire \write_count[31]_i_32_n_0 ;
  wire \write_count[31]_i_33_n_0 ;
  wire \write_count[31]_i_34_n_0 ;
  wire \write_count[31]_i_35_n_0 ;
  wire \write_count[31]_i_36_n_0 ;
  wire \write_count[31]_i_5_n_0 ;
  wire \write_count[31]_i_6_n_0 ;
  wire \write_count[31]_i_7_n_0 ;
  wire \write_count[31]_i_8_n_0 ;
  wire \write_count[31]_i_9_n_0 ;
  wire \write_count[3]_i_1_n_0 ;
  wire \write_count[4]_i_1_n_0 ;
  wire \write_count[5]_i_1_n_0 ;
  wire \write_count[6]_i_1_n_0 ;
  wire \write_count[7]_i_1_n_0 ;
  wire \write_count[8]_i_1_n_0 ;
  wire \write_count[9]_i_1_n_0 ;
  (* DONT_TOUCH *) wire [31:0]write_count_bursts_per_reset;
  wire [31:0]write_count_bursts_per_reset__0;
  wire write_count_for_last;
  wire \write_count_for_last[0]_i_1_n_0 ;
  wire \write_count_for_last[10]_i_1_n_0 ;
  wire \write_count_for_last[11]_i_1_n_0 ;
  wire \write_count_for_last[12]_i_1_n_0 ;
  wire \write_count_for_last[13]_i_1_n_0 ;
  wire \write_count_for_last[14]_i_1_n_0 ;
  wire \write_count_for_last[15]_i_1_n_0 ;
  wire \write_count_for_last[16]_i_1_n_0 ;
  wire \write_count_for_last[17]_i_1_n_0 ;
  wire \write_count_for_last[18]_i_1_n_0 ;
  wire \write_count_for_last[19]_i_1_n_0 ;
  wire \write_count_for_last[1]_i_1_n_0 ;
  wire \write_count_for_last[20]_i_1_n_0 ;
  wire \write_count_for_last[21]_i_1_n_0 ;
  wire \write_count_for_last[22]_i_1_n_0 ;
  wire \write_count_for_last[23]_i_1_n_0 ;
  wire \write_count_for_last[24]_i_1_n_0 ;
  wire \write_count_for_last[25]_i_1_n_0 ;
  wire \write_count_for_last[26]_i_1_n_0 ;
  wire \write_count_for_last[27]_i_1_n_0 ;
  wire \write_count_for_last[28]_i_1_n_0 ;
  wire \write_count_for_last[29]_i_1_n_0 ;
  wire \write_count_for_last[2]_i_1_n_0 ;
  wire \write_count_for_last[30]_i_1_n_0 ;
  wire \write_count_for_last[31]_i_10_n_0 ;
  wire \write_count_for_last[31]_i_11_n_0 ;
  wire \write_count_for_last[31]_i_12_n_0 ;
  wire \write_count_for_last[31]_i_13_n_0 ;
  wire \write_count_for_last[31]_i_14_n_0 ;
  wire \write_count_for_last[31]_i_15_n_0 ;
  wire \write_count_for_last[31]_i_16_n_0 ;
  wire \write_count_for_last[31]_i_2_n_0 ;
  wire \write_count_for_last[31]_i_6_n_0 ;
  wire \write_count_for_last[31]_i_7_n_0 ;
  wire \write_count_for_last[31]_i_8_n_0 ;
  wire \write_count_for_last[31]_i_9_n_0 ;
  wire \write_count_for_last[3]_i_1_n_0 ;
  wire \write_count_for_last[4]_i_1_n_0 ;
  wire \write_count_for_last[5]_i_1_n_0 ;
  wire \write_count_for_last[6]_i_1_n_0 ;
  wire \write_count_for_last[7]_i_1_n_0 ;
  wire \write_count_for_last[8]_i_1_n_0 ;
  wire \write_count_for_last[9]_i_1_n_0 ;
  wire \write_count_for_last_reg[16]_i_2_n_0 ;
  wire \write_count_for_last_reg[16]_i_2_n_1 ;
  wire \write_count_for_last_reg[16]_i_2_n_10 ;
  wire \write_count_for_last_reg[16]_i_2_n_11 ;
  wire \write_count_for_last_reg[16]_i_2_n_12 ;
  wire \write_count_for_last_reg[16]_i_2_n_13 ;
  wire \write_count_for_last_reg[16]_i_2_n_14 ;
  wire \write_count_for_last_reg[16]_i_2_n_15 ;
  wire \write_count_for_last_reg[16]_i_2_n_2 ;
  wire \write_count_for_last_reg[16]_i_2_n_3 ;
  wire \write_count_for_last_reg[16]_i_2_n_5 ;
  wire \write_count_for_last_reg[16]_i_2_n_6 ;
  wire \write_count_for_last_reg[16]_i_2_n_7 ;
  wire \write_count_for_last_reg[16]_i_2_n_8 ;
  wire \write_count_for_last_reg[16]_i_2_n_9 ;
  wire \write_count_for_last_reg[24]_i_2_n_0 ;
  wire \write_count_for_last_reg[24]_i_2_n_1 ;
  wire \write_count_for_last_reg[24]_i_2_n_10 ;
  wire \write_count_for_last_reg[24]_i_2_n_11 ;
  wire \write_count_for_last_reg[24]_i_2_n_12 ;
  wire \write_count_for_last_reg[24]_i_2_n_13 ;
  wire \write_count_for_last_reg[24]_i_2_n_14 ;
  wire \write_count_for_last_reg[24]_i_2_n_15 ;
  wire \write_count_for_last_reg[24]_i_2_n_2 ;
  wire \write_count_for_last_reg[24]_i_2_n_3 ;
  wire \write_count_for_last_reg[24]_i_2_n_5 ;
  wire \write_count_for_last_reg[24]_i_2_n_6 ;
  wire \write_count_for_last_reg[24]_i_2_n_7 ;
  wire \write_count_for_last_reg[24]_i_2_n_8 ;
  wire \write_count_for_last_reg[24]_i_2_n_9 ;
  wire \write_count_for_last_reg[31]_i_3_n_6 ;
  wire \write_count_for_last_reg[31]_i_3_n_7 ;
  wire \write_count_for_last_reg[31]_i_4_n_10 ;
  wire \write_count_for_last_reg[31]_i_4_n_11 ;
  wire \write_count_for_last_reg[31]_i_4_n_12 ;
  wire \write_count_for_last_reg[31]_i_4_n_13 ;
  wire \write_count_for_last_reg[31]_i_4_n_14 ;
  wire \write_count_for_last_reg[31]_i_4_n_15 ;
  wire \write_count_for_last_reg[31]_i_4_n_2 ;
  wire \write_count_for_last_reg[31]_i_4_n_3 ;
  wire \write_count_for_last_reg[31]_i_4_n_5 ;
  wire \write_count_for_last_reg[31]_i_4_n_6 ;
  wire \write_count_for_last_reg[31]_i_4_n_7 ;
  wire \write_count_for_last_reg[31]_i_4_n_9 ;
  wire \write_count_for_last_reg[31]_i_5_n_0 ;
  wire \write_count_for_last_reg[31]_i_5_n_1 ;
  wire \write_count_for_last_reg[31]_i_5_n_2 ;
  wire \write_count_for_last_reg[31]_i_5_n_3 ;
  wire \write_count_for_last_reg[31]_i_5_n_5 ;
  wire \write_count_for_last_reg[31]_i_5_n_6 ;
  wire \write_count_for_last_reg[31]_i_5_n_7 ;
  wire \write_count_for_last_reg[8]_i_2_n_0 ;
  wire \write_count_for_last_reg[8]_i_2_n_1 ;
  wire \write_count_for_last_reg[8]_i_2_n_10 ;
  wire \write_count_for_last_reg[8]_i_2_n_11 ;
  wire \write_count_for_last_reg[8]_i_2_n_12 ;
  wire \write_count_for_last_reg[8]_i_2_n_13 ;
  wire \write_count_for_last_reg[8]_i_2_n_14 ;
  wire \write_count_for_last_reg[8]_i_2_n_15 ;
  wire \write_count_for_last_reg[8]_i_2_n_2 ;
  wire \write_count_for_last_reg[8]_i_2_n_3 ;
  wire \write_count_for_last_reg[8]_i_2_n_5 ;
  wire \write_count_for_last_reg[8]_i_2_n_6 ;
  wire \write_count_for_last_reg[8]_i_2_n_7 ;
  wire \write_count_for_last_reg[8]_i_2_n_8 ;
  wire \write_count_for_last_reg[8]_i_2_n_9 ;
  wire [31:0]write_count_for_last_reg_n_0_;
  wire \write_count_reg[16]_i_2_n_0 ;
  wire \write_count_reg[16]_i_2_n_1 ;
  wire \write_count_reg[16]_i_2_n_10 ;
  wire \write_count_reg[16]_i_2_n_11 ;
  wire \write_count_reg[16]_i_2_n_12 ;
  wire \write_count_reg[16]_i_2_n_13 ;
  wire \write_count_reg[16]_i_2_n_14 ;
  wire \write_count_reg[16]_i_2_n_15 ;
  wire \write_count_reg[16]_i_2_n_2 ;
  wire \write_count_reg[16]_i_2_n_3 ;
  wire \write_count_reg[16]_i_2_n_5 ;
  wire \write_count_reg[16]_i_2_n_6 ;
  wire \write_count_reg[16]_i_2_n_7 ;
  wire \write_count_reg[16]_i_2_n_8 ;
  wire \write_count_reg[16]_i_2_n_9 ;
  wire \write_count_reg[24]_i_2_n_0 ;
  wire \write_count_reg[24]_i_2_n_1 ;
  wire \write_count_reg[24]_i_2_n_10 ;
  wire \write_count_reg[24]_i_2_n_11 ;
  wire \write_count_reg[24]_i_2_n_12 ;
  wire \write_count_reg[24]_i_2_n_13 ;
  wire \write_count_reg[24]_i_2_n_14 ;
  wire \write_count_reg[24]_i_2_n_15 ;
  wire \write_count_reg[24]_i_2_n_2 ;
  wire \write_count_reg[24]_i_2_n_3 ;
  wire \write_count_reg[24]_i_2_n_5 ;
  wire \write_count_reg[24]_i_2_n_6 ;
  wire \write_count_reg[24]_i_2_n_7 ;
  wire \write_count_reg[24]_i_2_n_8 ;
  wire \write_count_reg[24]_i_2_n_9 ;
  wire \write_count_reg[31]_i_2_n_0 ;
  wire \write_count_reg[31]_i_2_n_1 ;
  wire \write_count_reg[31]_i_2_n_2 ;
  wire \write_count_reg[31]_i_2_n_3 ;
  wire \write_count_reg[31]_i_2_n_5 ;
  wire \write_count_reg[31]_i_2_n_6 ;
  wire \write_count_reg[31]_i_2_n_7 ;
  wire \write_count_reg[31]_i_3_n_10 ;
  wire \write_count_reg[31]_i_3_n_11 ;
  wire \write_count_reg[31]_i_3_n_12 ;
  wire \write_count_reg[31]_i_3_n_13 ;
  wire \write_count_reg[31]_i_3_n_14 ;
  wire \write_count_reg[31]_i_3_n_15 ;
  wire \write_count_reg[31]_i_3_n_2 ;
  wire \write_count_reg[31]_i_3_n_3 ;
  wire \write_count_reg[31]_i_3_n_5 ;
  wire \write_count_reg[31]_i_3_n_6 ;
  wire \write_count_reg[31]_i_3_n_7 ;
  wire \write_count_reg[31]_i_3_n_9 ;
  wire \write_count_reg[31]_i_4_n_0 ;
  wire \write_count_reg[31]_i_4_n_1 ;
  wire \write_count_reg[31]_i_4_n_2 ;
  wire \write_count_reg[31]_i_4_n_3 ;
  wire \write_count_reg[31]_i_4_n_5 ;
  wire \write_count_reg[31]_i_4_n_6 ;
  wire \write_count_reg[31]_i_4_n_7 ;
  wire \write_count_reg[8]_i_2_n_0 ;
  wire \write_count_reg[8]_i_2_n_1 ;
  wire \write_count_reg[8]_i_2_n_10 ;
  wire \write_count_reg[8]_i_2_n_11 ;
  wire \write_count_reg[8]_i_2_n_12 ;
  wire \write_count_reg[8]_i_2_n_13 ;
  wire \write_count_reg[8]_i_2_n_14 ;
  wire \write_count_reg[8]_i_2_n_15 ;
  wire \write_count_reg[8]_i_2_n_2 ;
  wire \write_count_reg[8]_i_2_n_3 ;
  wire \write_count_reg[8]_i_2_n_5 ;
  wire \write_count_reg[8]_i_2_n_6 ;
  wire \write_count_reg[8]_i_2_n_7 ;
  wire \write_count_reg[8]_i_2_n_8 ;
  wire \write_count_reg[8]_i_2_n_9 ;
  wire [31:0]write_count_reg_n_0_;
  (* DONT_TOUCH *) wire [31:0]write_max_queue_size;
  wire [31:0]write_max_queue_size__0;
  (* DONT_TOUCH *) wire [63:0]write_start_DDR_address;
  wire [63:0]write_start_DDR_address__0;
  (* DONT_TOUCH *) wire [31:0]write_step_DDR_address;
  wire [31:0]write_step_DDR_address__0;
  wire [31:0]write_ticks;
  wire write_ticks1;
  wire [31:1]write_ticks2;
  wire [39:0]write_ticks21_out;
  wire [39:0]write_ticks22_out;
  wire \write_ticks[0]_i_1_n_0 ;
  wire \write_ticks[0]_i_2_n_0 ;
  wire \write_ticks[10]_i_1_n_0 ;
  wire \write_ticks[10]_i_2_n_0 ;
  wire \write_ticks[11]_i_1_n_0 ;
  wire \write_ticks[11]_i_2_n_0 ;
  wire \write_ticks[12]_i_1_n_0 ;
  wire \write_ticks[12]_i_2_n_0 ;
  wire \write_ticks[13]_i_1_n_0 ;
  wire \write_ticks[13]_i_2_n_0 ;
  wire \write_ticks[14]_i_1_n_0 ;
  wire \write_ticks[14]_i_2_n_0 ;
  wire \write_ticks[15]_i_1_n_0 ;
  wire \write_ticks[15]_i_2_n_0 ;
  wire \write_ticks[16]_i_1_n_0 ;
  wire \write_ticks[16]_i_2_n_0 ;
  wire \write_ticks[17]_i_1_n_0 ;
  wire \write_ticks[17]_i_2_n_0 ;
  wire \write_ticks[18]_i_1_n_0 ;
  wire \write_ticks[18]_i_2_n_0 ;
  wire \write_ticks[19]_i_1_n_0 ;
  wire \write_ticks[19]_i_2_n_0 ;
  wire \write_ticks[1]_i_1_n_0 ;
  wire \write_ticks[1]_i_2_n_0 ;
  wire \write_ticks[20]_i_1_n_0 ;
  wire \write_ticks[20]_i_2_n_0 ;
  wire \write_ticks[21]_i_1_n_0 ;
  wire \write_ticks[21]_i_2_n_0 ;
  wire \write_ticks[22]_i_1_n_0 ;
  wire \write_ticks[22]_i_2_n_0 ;
  wire \write_ticks[23]_i_1_n_0 ;
  wire \write_ticks[23]_i_2_n_0 ;
  wire \write_ticks[24]_i_1_n_0 ;
  wire \write_ticks[24]_i_2_n_0 ;
  wire \write_ticks[25]_i_1_n_0 ;
  wire \write_ticks[25]_i_2_n_0 ;
  wire \write_ticks[26]_i_1_n_0 ;
  wire \write_ticks[26]_i_2_n_0 ;
  wire \write_ticks[27]_i_1_n_0 ;
  wire \write_ticks[27]_i_2_n_0 ;
  wire \write_ticks[28]_i_1_n_0 ;
  wire \write_ticks[28]_i_2_n_0 ;
  wire \write_ticks[29]_i_1_n_0 ;
  wire \write_ticks[29]_i_2_n_0 ;
  wire \write_ticks[2]_i_1_n_0 ;
  wire \write_ticks[2]_i_2_n_0 ;
  wire \write_ticks[30]_i_1_n_0 ;
  wire \write_ticks[30]_i_2_n_0 ;
  wire \write_ticks[31]_i_1_n_0 ;
  wire \write_ticks[31]_i_3_n_0 ;
  wire \write_ticks[3]_i_1_n_0 ;
  wire \write_ticks[3]_i_2_n_0 ;
  wire \write_ticks[4]_i_1_n_0 ;
  wire \write_ticks[4]_i_2_n_0 ;
  wire \write_ticks[5]_i_1_n_0 ;
  wire \write_ticks[5]_i_2_n_0 ;
  wire \write_ticks[6]_i_1_n_0 ;
  wire \write_ticks[6]_i_2_n_0 ;
  wire \write_ticks[7]_i_1_n_0 ;
  wire \write_ticks[7]_i_2_n_0 ;
  wire \write_ticks[8]_i_1_n_0 ;
  wire \write_ticks[8]_i_2_n_0 ;
  wire \write_ticks[9]_i_1_n_0 ;
  wire \write_ticks[9]_i_2_n_0 ;
  (* DONT_TOUCH *) wire [31:0]write_ticks_per_burst;
  wire [31:0]write_ticks_per_burst__0;
  wire \write_ticks_reg[16]_i_3_n_0 ;
  wire \write_ticks_reg[16]_i_3_n_1 ;
  wire \write_ticks_reg[16]_i_3_n_2 ;
  wire \write_ticks_reg[16]_i_3_n_3 ;
  wire \write_ticks_reg[16]_i_3_n_5 ;
  wire \write_ticks_reg[16]_i_3_n_6 ;
  wire \write_ticks_reg[16]_i_3_n_7 ;
  wire \write_ticks_reg[24]_i_3_n_0 ;
  wire \write_ticks_reg[24]_i_3_n_1 ;
  wire \write_ticks_reg[24]_i_3_n_2 ;
  wire \write_ticks_reg[24]_i_3_n_3 ;
  wire \write_ticks_reg[24]_i_3_n_5 ;
  wire \write_ticks_reg[24]_i_3_n_6 ;
  wire \write_ticks_reg[24]_i_3_n_7 ;
  wire \write_ticks_reg[31]_i_4_n_2 ;
  wire \write_ticks_reg[31]_i_4_n_3 ;
  wire \write_ticks_reg[31]_i_4_n_5 ;
  wire \write_ticks_reg[31]_i_4_n_6 ;
  wire \write_ticks_reg[31]_i_4_n_7 ;
  wire \write_ticks_reg[8]_i_3_n_0 ;
  wire \write_ticks_reg[8]_i_3_n_1 ;
  wire \write_ticks_reg[8]_i_3_n_2 ;
  wire \write_ticks_reg[8]_i_3_n_3 ;
  wire \write_ticks_reg[8]_i_3_n_5 ;
  wire \write_ticks_reg[8]_i_3_n_6 ;
  wire \write_ticks_reg[8]_i_3_n_7 ;
  wire [3:3]\NLW_countAddrSentRatioFix_reg[15]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSentRatioFix_reg[23]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSentRatioFix_reg[31]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_countAddrSentRatioFix_reg[39]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSentRatioFix_reg[7]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSent_reg[16]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSent_reg[24]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSent_reg[32]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSent_reg[39]_i_16_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrSent_reg[39]_i_16_O_UNCONNECTED ;
  wire [7:4]\NLW_countAddrSent_reg[39]_i_4_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrSent_reg[39]_i_4_O_UNCONNECTED ;
  wire [7:3]\NLW_countAddrSent_reg[39]_i_6_CO_UNCONNECTED ;
  wire [7:7]\NLW_countAddrSent_reg[39]_i_6_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSent_reg[39]_i_7_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrSent_reg[39]_i_7_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrSent_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[16]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[23]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[24]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[32]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_103_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_103_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_104_CO_UNCONNECTED ;
  wire [7:3]\NLW_countAddrToBeSent_reg[39]_i_121_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_122_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_123_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_13_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_13_O_UNCONNECTED ;
  wire [7:3]\NLW_countAddrToBeSent_reg[39]_i_14_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_140_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_140_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_141_CO_UNCONNECTED ;
  wire [7:3]\NLW_countAddrToBeSent_reg[39]_i_15_CO_UNCONNECTED ;
  wire [7:7]\NLW_countAddrToBeSent_reg[39]_i_15_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_158_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_16_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_16_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_183_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_183_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_184_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_201_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_210_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_227_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_244_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_33_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_33_O_UNCONNECTED ;
  wire [7:4]\NLW_countAddrToBeSent_reg[39]_i_4_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_4_O_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_5_CO_UNCONNECTED ;
  wire [7:1]\NLW_countAddrToBeSent_reg[39]_i_5_O_UNCONNECTED ;
  wire [7:3]\NLW_countAddrToBeSent_reg[39]_i_50_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_51_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_51_O_UNCONNECTED ;
  wire [7:3]\NLW_countAddrToBeSent_reg[39]_i_52_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_7_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_7_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_8_CO_UNCONNECTED ;
  wire [7:0]\NLW_countAddrToBeSent_reg[39]_i_8_O_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_93_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[39]_i_94_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[7]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countAddrToBeSent_reg[8]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceivedRatioFix_reg[15]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceivedRatioFix_reg[23]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceivedRatioFix_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceivedRatioFix_reg[39]_i_13_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceivedRatioFix_reg[39]_i_13_O_UNCONNECTED ;
  wire [7:3]\NLW_countDataReceivedRatioFix_reg[39]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceivedRatioFix_reg[39]_i_3_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceivedRatioFix_reg[39]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceivedRatioFix_reg[7]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[16]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[24]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[32]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[39]_i_10_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_10_O_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[39]_i_17_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_17_O_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[39]_i_24_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_24_O_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[39]_i_31_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_31_O_UNCONNECTED ;
  wire [7:3]\NLW_countDataReceived_reg[39]_i_4_CO_UNCONNECTED ;
  wire [7:7]\NLW_countDataReceived_reg[39]_i_4_O_UNCONNECTED ;
  wire [7:3]\NLW_countDataReceived_reg[39]_i_5_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_5_O_UNCONNECTED ;
  wire [7:3]\NLW_countDataReceived_reg[39]_i_6_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_6_O_UNCONNECTED ;
  wire [7:3]\NLW_countDataReceived_reg[39]_i_8_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_8_O_UNCONNECTED ;
  wire [7:3]\NLW_countDataReceived_reg[39]_i_9_CO_UNCONNECTED ;
  wire [7:0]\NLW_countDataReceived_reg[39]_i_9_O_UNCONNECTED ;
  wire [3:3]\NLW_countDataReceived_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[0]_i_11_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[16]_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[24]_i_10_CO_UNCONNECTED ;
  wire [7:3]\NLW_countDataSent_reg[32]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_countDataSent_reg[32]_i_10_CO_UNCONNECTED ;
  wire [7:7]\NLW_countDataSent_reg[32]_i_10_O_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataSent_reg[8]_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[0]_i_11_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[16]_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[24]_i_10_CO_UNCONNECTED ;
  wire [7:3]\NLW_countDataToBeReceived_reg[32]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_countDataToBeReceived_reg[32]_i_10_CO_UNCONNECTED ;
  wire [7:7]\NLW_countDataToBeReceived_reg[32]_i_10_O_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeReceived_reg[8]_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[0]_i_18_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[16]_i_18_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[24]_i_18_CO_UNCONNECTED ;
  wire [7:3]\NLW_countDataToBeSent_reg[32]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_countDataToBeSent_reg[32]_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countDataToBeSent_reg[8]_i_18_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[0]_i_11_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[16]_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[24]_i_10_CO_UNCONNECTED ;
  wire [7:3]\NLW_countReadReqSent_reg[32]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_countReadReqSent_reg[32]_i_10_CO_UNCONNECTED ;
  wire [7:7]\NLW_countReadReqSent_reg[32]_i_10_O_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqSent_reg[8]_i_10_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[15]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[16]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[23]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[24]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[32]_i_3_CO_UNCONNECTED ;
  wire [7:3]\NLW_countReadReqToBeSent_reg[39]_i_4_CO_UNCONNECTED ;
  wire [7:3]\NLW_countReadReqToBeSent_reg[39]_i_5_CO_UNCONNECTED ;
  wire [7:7]\NLW_countReadReqToBeSent_reg[39]_i_5_O_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[7]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_countReadReqToBeSent_reg[8]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_current_cycles_with_no_data_read_reg[15]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_current_cycles_with_no_data_read_reg[23]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_current_cycles_with_no_data_read_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_current_cycles_with_no_data_read_reg[39]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_current_cycles_with_no_data_read_reg[47]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_current_cycles_with_no_data_read_reg[55]_i_2_CO_UNCONNECTED ;
  wire [7:3]\NLW_current_cycles_with_no_data_read_reg[63]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_current_cycles_with_no_data_read_reg[7]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_latency_reg[15]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_latency_reg[23]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_latency_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_latency_reg[39]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_latency_reg[47]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_latency_reg[55]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_latency_reg[63]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_latency_reg[7]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_max_cycles_with_no_data_read_reg[31]_i_22_CO_UNCONNECTED ;
  wire [7:0]\NLW_max_cycles_with_no_data_read_reg[31]_i_22_O_UNCONNECTED ;
  wire [3:3]\NLW_max_cycles_with_no_data_read_reg[31]_i_39_CO_UNCONNECTED ;
  wire [7:0]\NLW_max_cycles_with_no_data_read_reg[31]_i_39_O_UNCONNECTED ;
  wire [3:3]\NLW_max_cycles_with_no_data_read_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:0]\NLW_max_cycles_with_no_data_read_reg[31]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_max_cycles_with_no_data_read_reg[31]_i_5_CO_UNCONNECTED ;
  wire [7:0]\NLW_max_cycles_with_no_data_read_reg[31]_i_5_O_UNCONNECTED ;
  wire [3:3]\NLW_read_count_reg[16]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_count_reg[24]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_count_reg[31]_i_15_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_count_reg[31]_i_15_O_UNCONNECTED ;
  wire [7:4]\NLW_read_count_reg[31]_i_3_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_count_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_read_count_reg[31]_i_32_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_count_reg[31]_i_32_O_UNCONNECTED ;
  wire [3:3]\NLW_read_count_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_count_reg[31]_i_4_O_UNCONNECTED ;
  wire [7:3]\NLW_read_count_reg[31]_i_5_CO_UNCONNECTED ;
  wire [7:7]\NLW_read_count_reg[31]_i_5_O_UNCONNECTED ;
  wire [3:3]\NLW_read_count_reg[31]_i_6_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_count_reg[31]_i_6_O_UNCONNECTED ;
  wire [3:3]\NLW_read_count_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[16]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[24]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_11_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_ticks_reg[31]_i_11_O_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_28_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_ticks_reg[31]_i_28_O_UNCONNECTED ;
  wire [7:4]\NLW_read_ticks_reg[31]_i_3_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_ticks_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_ticks_reg[31]_i_4_O_UNCONNECTED ;
  wire [7:3]\NLW_read_ticks_reg[31]_i_45_CO_UNCONNECTED ;
  wire [7:3]\NLW_read_ticks_reg[31]_i_5_CO_UNCONNECTED ;
  wire [7:7]\NLW_read_ticks_reg[31]_i_5_O_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_6_CO_UNCONNECTED ;
  wire [7:0]\NLW_read_ticks_reg[31]_i_6_O_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_78_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_79_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_88_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[31]_i_89_CO_UNCONNECTED ;
  wire [3:3]\NLW_read_ticks_reg[8]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_runtime_reg[16]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_runtime_reg[24]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_runtime_reg[32]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_runtime_reg[40]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_runtime_reg[48]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_runtime_reg[56]_i_2_CO_UNCONNECTED ;
  wire [7:3]\NLW_runtime_reg[63]_i_4_CO_UNCONNECTED ;
  wire [7:7]\NLW_runtime_reg[63]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_runtime_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_toReadDataAddress_reg[0]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_toReadDataAddress_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_toReadDataAddress_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_toReadDataAddress_reg[32]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_toReadDataAddress_reg[40]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_toReadDataAddress_reg[48]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_toReadDataAddress_reg[56]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_toReadDataAddress_reg[8]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_writeAddress_reg[0]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_writeAddress_reg[16]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_writeAddress_reg[24]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_writeAddress_reg[32]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_writeAddress_reg[40]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_writeAddress_reg[48]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_writeAddress_reg[56]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_writeAddress_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:4]NLW_writeDvalid_reg_i_1_CO_UNCONNECTED;
  wire [7:0]NLW_writeDvalid_reg_i_1_O_UNCONNECTED;
  wire [3:3]NLW_writeDvalid_reg_i_11_CO_UNCONNECTED;
  wire [7:0]NLW_writeDvalid_reg_i_11_O_UNCONNECTED;
  wire [3:3]NLW_writeDvalid_reg_i_2_CO_UNCONNECTED;
  wire [7:0]NLW_writeDvalid_reg_i_2_O_UNCONNECTED;
  wire [3:3]\NLW_write_count_for_last_reg[16]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_write_count_for_last_reg[24]_i_2_CO_UNCONNECTED ;
  wire [7:3]\NLW_write_count_for_last_reg[31]_i_3_CO_UNCONNECTED ;
  wire [7:0]\NLW_write_count_for_last_reg[31]_i_3_O_UNCONNECTED ;
  wire [7:3]\NLW_write_count_for_last_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:7]\NLW_write_count_for_last_reg[31]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_write_count_for_last_reg[31]_i_5_CO_UNCONNECTED ;
  wire [7:0]\NLW_write_count_for_last_reg[31]_i_5_O_UNCONNECTED ;
  wire [3:3]\NLW_write_count_for_last_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_write_count_reg[16]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_write_count_reg[24]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_write_count_reg[31]_i_2_CO_UNCONNECTED ;
  wire [7:0]\NLW_write_count_reg[31]_i_2_O_UNCONNECTED ;
  wire [7:3]\NLW_write_count_reg[31]_i_3_CO_UNCONNECTED ;
  wire [7:7]\NLW_write_count_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_write_count_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:0]\NLW_write_count_reg[31]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_write_count_reg[8]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_write_ticks_reg[16]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_write_ticks_reg[24]_i_3_CO_UNCONNECTED ;
  wire [7:3]\NLW_write_ticks_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:7]\NLW_write_ticks_reg[31]_i_4_O_UNCONNECTED ;
  wire [3:3]\NLW_write_ticks_reg[8]_i_3_CO_UNCONNECTED ;

  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    active_blocking_reg
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(active_blocking__0),
        .Q(active_blocking),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    active_read_reg
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(active_read__0),
        .Q(active_read),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    active_write_reg
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(active_write__0),
        .Q(active_write),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[0] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[0]),
        .Q(axi_c_read_data_reg_n_0_[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[10] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[10]),
        .Q(axi_c_read_data_reg_n_0_[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[11] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[11]),
        .Q(axi_c_read_data_reg_n_0_[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[12] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[12]),
        .Q(axi_c_read_data_reg_n_0_[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[13] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[13]),
        .Q(axi_c_read_data_reg_n_0_[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[14] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[14]),
        .Q(axi_c_read_data_reg_n_0_[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[15] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[15]),
        .Q(axi_c_read_data_reg_n_0_[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[16] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[16]),
        .Q(axi_c_read_data_reg_n_0_[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[17] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[17]),
        .Q(axi_c_read_data_reg_n_0_[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[18] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[18]),
        .Q(axi_c_read_data_reg_n_0_[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[19] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[19]),
        .Q(axi_c_read_data_reg_n_0_[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[1] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[1]),
        .Q(axi_c_read_data_reg_n_0_[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[20] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[20]),
        .Q(axi_c_read_data_reg_n_0_[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[21] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[21]),
        .Q(axi_c_read_data_reg_n_0_[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[22] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[22]),
        .Q(axi_c_read_data_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[23] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[23]),
        .Q(axi_c_read_data_reg_n_0_[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[24] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[24]),
        .Q(axi_c_read_data_reg_n_0_[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[25] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[25]),
        .Q(axi_c_read_data_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[26] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[26]),
        .Q(axi_c_read_data_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[27] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[27]),
        .Q(axi_c_read_data_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[28] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[28]),
        .Q(axi_c_read_data_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[29] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[29]),
        .Q(axi_c_read_data_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[2] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[2]),
        .Q(axi_c_read_data_reg_n_0_[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[30] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[30]),
        .Q(axi_c_read_data_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[31] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[31]),
        .Q(axi_c_read_data_reg_n_0_[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[3] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[3]),
        .Q(axi_c_read_data_reg_n_0_[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[4] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[4]),
        .Q(axi_c_read_data_reg_n_0_[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[5] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[5]),
        .Q(axi_c_read_data_reg_n_0_[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[6] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[6]),
        .Q(axi_c_read_data_reg_n_0_[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[7] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[7]),
        .Q(axi_c_read_data_reg_n_0_[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[8] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[8]),
        .Q(axi_c_read_data_reg_n_0_[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \axi_c_read_data_reg[9] 
       (.C(clk),
        .CE(axi_c_read_valid),
        .D(axi_c_read_data[9]),
        .Q(axi_c_read_data_reg_n_0_[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    axi_c_read_data_valid_reg
       (.C(clk),
        .CE(1'b1),
        .D(axi_c_read_valid),
        .Q(axi_c_read_data_valid),
        .R(1'b0));
  (* HLUTNM = "lutpair44" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_10 
       (.I0(write_blocking_ratio[15]),
        .I1(countAddrSentRatioFix_reg_n_0_[15]),
        .I2(read_blocking_ratio[15]),
        .I3(\countAddrSentRatioFix[15]_i_2_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_10_n_0 ));
  (* HLUTNM = "lutpair43" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_11 
       (.I0(write_blocking_ratio[14]),
        .I1(countAddrSentRatioFix_reg_n_0_[14]),
        .I2(read_blocking_ratio[14]),
        .I3(\countAddrSentRatioFix[15]_i_3_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_11_n_0 ));
  (* HLUTNM = "lutpair42" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_12 
       (.I0(write_blocking_ratio[13]),
        .I1(countAddrSentRatioFix_reg_n_0_[13]),
        .I2(read_blocking_ratio[13]),
        .I3(\countAddrSentRatioFix[15]_i_4_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_12_n_0 ));
  (* HLUTNM = "lutpair41" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_13 
       (.I0(write_blocking_ratio[12]),
        .I1(countAddrSentRatioFix_reg_n_0_[12]),
        .I2(read_blocking_ratio[12]),
        .I3(\countAddrSentRatioFix[15]_i_5_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_13_n_0 ));
  (* HLUTNM = "lutpair40" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_14 
       (.I0(write_blocking_ratio[11]),
        .I1(countAddrSentRatioFix_reg_n_0_[11]),
        .I2(read_blocking_ratio[11]),
        .I3(\countAddrSentRatioFix[15]_i_6_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_14_n_0 ));
  (* HLUTNM = "lutpair39" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_15 
       (.I0(write_blocking_ratio[10]),
        .I1(countAddrSentRatioFix_reg_n_0_[10]),
        .I2(read_blocking_ratio[10]),
        .I3(\countAddrSentRatioFix[15]_i_7_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_15_n_0 ));
  (* HLUTNM = "lutpair38" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_16 
       (.I0(write_blocking_ratio[9]),
        .I1(countAddrSentRatioFix_reg_n_0_[9]),
        .I2(read_blocking_ratio[9]),
        .I3(\countAddrSentRatioFix[15]_i_8_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_16_n_0 ));
  (* HLUTNM = "lutpair37" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[15]_i_17 
       (.I0(write_blocking_ratio[8]),
        .I1(countAddrSentRatioFix_reg_n_0_[8]),
        .I2(read_blocking_ratio[8]),
        .I3(\countAddrSentRatioFix[15]_i_9_n_0 ),
        .O(\countAddrSentRatioFix[15]_i_17_n_0 ));
  (* HLUTNM = "lutpair43" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_2 
       (.I0(write_blocking_ratio[14]),
        .I1(countAddrSentRatioFix_reg_n_0_[14]),
        .I2(read_blocking_ratio[14]),
        .O(\countAddrSentRatioFix[15]_i_2_n_0 ));
  (* HLUTNM = "lutpair42" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_3 
       (.I0(write_blocking_ratio[13]),
        .I1(countAddrSentRatioFix_reg_n_0_[13]),
        .I2(read_blocking_ratio[13]),
        .O(\countAddrSentRatioFix[15]_i_3_n_0 ));
  (* HLUTNM = "lutpair41" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_4 
       (.I0(write_blocking_ratio[12]),
        .I1(countAddrSentRatioFix_reg_n_0_[12]),
        .I2(read_blocking_ratio[12]),
        .O(\countAddrSentRatioFix[15]_i_4_n_0 ));
  (* HLUTNM = "lutpair40" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_5 
       (.I0(write_blocking_ratio[11]),
        .I1(countAddrSentRatioFix_reg_n_0_[11]),
        .I2(read_blocking_ratio[11]),
        .O(\countAddrSentRatioFix[15]_i_5_n_0 ));
  (* HLUTNM = "lutpair39" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_6 
       (.I0(write_blocking_ratio[10]),
        .I1(countAddrSentRatioFix_reg_n_0_[10]),
        .I2(read_blocking_ratio[10]),
        .O(\countAddrSentRatioFix[15]_i_6_n_0 ));
  (* HLUTNM = "lutpair38" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_7 
       (.I0(write_blocking_ratio[9]),
        .I1(countAddrSentRatioFix_reg_n_0_[9]),
        .I2(read_blocking_ratio[9]),
        .O(\countAddrSentRatioFix[15]_i_7_n_0 ));
  (* HLUTNM = "lutpair37" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_8 
       (.I0(write_blocking_ratio[8]),
        .I1(countAddrSentRatioFix_reg_n_0_[8]),
        .I2(read_blocking_ratio[8]),
        .O(\countAddrSentRatioFix[15]_i_8_n_0 ));
  (* HLUTNM = "lutpair36" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[15]_i_9 
       (.I0(write_blocking_ratio[7]),
        .I1(countAddrSentRatioFix_reg_n_0_[7]),
        .I2(read_blocking_ratio[7]),
        .O(\countAddrSentRatioFix[15]_i_9_n_0 ));
  (* HLUTNM = "lutpair52" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_10 
       (.I0(write_blocking_ratio[23]),
        .I1(countAddrSentRatioFix_reg_n_0_[23]),
        .I2(read_blocking_ratio[23]),
        .I3(\countAddrSentRatioFix[23]_i_2_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_10_n_0 ));
  (* HLUTNM = "lutpair51" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_11 
       (.I0(write_blocking_ratio[22]),
        .I1(countAddrSentRatioFix_reg_n_0_[22]),
        .I2(read_blocking_ratio[22]),
        .I3(\countAddrSentRatioFix[23]_i_3_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_11_n_0 ));
  (* HLUTNM = "lutpair50" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_12 
       (.I0(write_blocking_ratio[21]),
        .I1(countAddrSentRatioFix_reg_n_0_[21]),
        .I2(read_blocking_ratio[21]),
        .I3(\countAddrSentRatioFix[23]_i_4_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_12_n_0 ));
  (* HLUTNM = "lutpair49" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_13 
       (.I0(write_blocking_ratio[20]),
        .I1(countAddrSentRatioFix_reg_n_0_[20]),
        .I2(read_blocking_ratio[20]),
        .I3(\countAddrSentRatioFix[23]_i_5_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_13_n_0 ));
  (* HLUTNM = "lutpair48" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_14 
       (.I0(write_blocking_ratio[19]),
        .I1(countAddrSentRatioFix_reg_n_0_[19]),
        .I2(read_blocking_ratio[19]),
        .I3(\countAddrSentRatioFix[23]_i_6_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_14_n_0 ));
  (* HLUTNM = "lutpair47" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_15 
       (.I0(write_blocking_ratio[18]),
        .I1(countAddrSentRatioFix_reg_n_0_[18]),
        .I2(read_blocking_ratio[18]),
        .I3(\countAddrSentRatioFix[23]_i_7_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_15_n_0 ));
  (* HLUTNM = "lutpair46" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_16 
       (.I0(write_blocking_ratio[17]),
        .I1(countAddrSentRatioFix_reg_n_0_[17]),
        .I2(read_blocking_ratio[17]),
        .I3(\countAddrSentRatioFix[23]_i_8_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_16_n_0 ));
  (* HLUTNM = "lutpair45" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[23]_i_17 
       (.I0(write_blocking_ratio[16]),
        .I1(countAddrSentRatioFix_reg_n_0_[16]),
        .I2(read_blocking_ratio[16]),
        .I3(\countAddrSentRatioFix[23]_i_9_n_0 ),
        .O(\countAddrSentRatioFix[23]_i_17_n_0 ));
  (* HLUTNM = "lutpair51" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_2 
       (.I0(write_blocking_ratio[22]),
        .I1(countAddrSentRatioFix_reg_n_0_[22]),
        .I2(read_blocking_ratio[22]),
        .O(\countAddrSentRatioFix[23]_i_2_n_0 ));
  (* HLUTNM = "lutpair50" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_3 
       (.I0(write_blocking_ratio[21]),
        .I1(countAddrSentRatioFix_reg_n_0_[21]),
        .I2(read_blocking_ratio[21]),
        .O(\countAddrSentRatioFix[23]_i_3_n_0 ));
  (* HLUTNM = "lutpair49" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_4 
       (.I0(write_blocking_ratio[20]),
        .I1(countAddrSentRatioFix_reg_n_0_[20]),
        .I2(read_blocking_ratio[20]),
        .O(\countAddrSentRatioFix[23]_i_4_n_0 ));
  (* HLUTNM = "lutpair48" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_5 
       (.I0(write_blocking_ratio[19]),
        .I1(countAddrSentRatioFix_reg_n_0_[19]),
        .I2(read_blocking_ratio[19]),
        .O(\countAddrSentRatioFix[23]_i_5_n_0 ));
  (* HLUTNM = "lutpair47" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_6 
       (.I0(write_blocking_ratio[18]),
        .I1(countAddrSentRatioFix_reg_n_0_[18]),
        .I2(read_blocking_ratio[18]),
        .O(\countAddrSentRatioFix[23]_i_6_n_0 ));
  (* HLUTNM = "lutpair46" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_7 
       (.I0(write_blocking_ratio[17]),
        .I1(countAddrSentRatioFix_reg_n_0_[17]),
        .I2(read_blocking_ratio[17]),
        .O(\countAddrSentRatioFix[23]_i_7_n_0 ));
  (* HLUTNM = "lutpair45" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_8 
       (.I0(write_blocking_ratio[16]),
        .I1(countAddrSentRatioFix_reg_n_0_[16]),
        .I2(read_blocking_ratio[16]),
        .O(\countAddrSentRatioFix[23]_i_8_n_0 ));
  (* HLUTNM = "lutpair44" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[23]_i_9 
       (.I0(write_blocking_ratio[15]),
        .I1(countAddrSentRatioFix_reg_n_0_[15]),
        .I2(read_blocking_ratio[15]),
        .O(\countAddrSentRatioFix[23]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_10 
       (.I0(\countAddrSentRatioFix[31]_i_2_n_0 ),
        .I1(write_blocking_ratio[31]),
        .I2(countAddrSentRatioFix_reg_n_0_[31]),
        .I3(read_blocking_ratio[31]),
        .O(\countAddrSentRatioFix[31]_i_10_n_0 ));
  (* HLUTNM = "lutpair59" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_11 
       (.I0(write_blocking_ratio[30]),
        .I1(countAddrSentRatioFix_reg_n_0_[30]),
        .I2(read_blocking_ratio[30]),
        .I3(\countAddrSentRatioFix[31]_i_3_n_0 ),
        .O(\countAddrSentRatioFix[31]_i_11_n_0 ));
  (* HLUTNM = "lutpair58" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_12 
       (.I0(write_blocking_ratio[29]),
        .I1(countAddrSentRatioFix_reg_n_0_[29]),
        .I2(read_blocking_ratio[29]),
        .I3(\countAddrSentRatioFix[31]_i_4_n_0 ),
        .O(\countAddrSentRatioFix[31]_i_12_n_0 ));
  (* HLUTNM = "lutpair57" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_13 
       (.I0(write_blocking_ratio[28]),
        .I1(countAddrSentRatioFix_reg_n_0_[28]),
        .I2(read_blocking_ratio[28]),
        .I3(\countAddrSentRatioFix[31]_i_5_n_0 ),
        .O(\countAddrSentRatioFix[31]_i_13_n_0 ));
  (* HLUTNM = "lutpair56" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_14 
       (.I0(write_blocking_ratio[27]),
        .I1(countAddrSentRatioFix_reg_n_0_[27]),
        .I2(read_blocking_ratio[27]),
        .I3(\countAddrSentRatioFix[31]_i_6_n_0 ),
        .O(\countAddrSentRatioFix[31]_i_14_n_0 ));
  (* HLUTNM = "lutpair55" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_15 
       (.I0(write_blocking_ratio[26]),
        .I1(countAddrSentRatioFix_reg_n_0_[26]),
        .I2(read_blocking_ratio[26]),
        .I3(\countAddrSentRatioFix[31]_i_7_n_0 ),
        .O(\countAddrSentRatioFix[31]_i_15_n_0 ));
  (* HLUTNM = "lutpair54" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_16 
       (.I0(write_blocking_ratio[25]),
        .I1(countAddrSentRatioFix_reg_n_0_[25]),
        .I2(read_blocking_ratio[25]),
        .I3(\countAddrSentRatioFix[31]_i_8_n_0 ),
        .O(\countAddrSentRatioFix[31]_i_16_n_0 ));
  (* HLUTNM = "lutpair53" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[31]_i_17 
       (.I0(write_blocking_ratio[24]),
        .I1(countAddrSentRatioFix_reg_n_0_[24]),
        .I2(read_blocking_ratio[24]),
        .I3(\countAddrSentRatioFix[31]_i_9_n_0 ),
        .O(\countAddrSentRatioFix[31]_i_17_n_0 ));
  (* HLUTNM = "lutpair59" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_2 
       (.I0(write_blocking_ratio[30]),
        .I1(countAddrSentRatioFix_reg_n_0_[30]),
        .I2(read_blocking_ratio[30]),
        .O(\countAddrSentRatioFix[31]_i_2_n_0 ));
  (* HLUTNM = "lutpair58" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_3 
       (.I0(write_blocking_ratio[29]),
        .I1(countAddrSentRatioFix_reg_n_0_[29]),
        .I2(read_blocking_ratio[29]),
        .O(\countAddrSentRatioFix[31]_i_3_n_0 ));
  (* HLUTNM = "lutpair57" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_4 
       (.I0(write_blocking_ratio[28]),
        .I1(countAddrSentRatioFix_reg_n_0_[28]),
        .I2(read_blocking_ratio[28]),
        .O(\countAddrSentRatioFix[31]_i_4_n_0 ));
  (* HLUTNM = "lutpair56" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_5 
       (.I0(write_blocking_ratio[27]),
        .I1(countAddrSentRatioFix_reg_n_0_[27]),
        .I2(read_blocking_ratio[27]),
        .O(\countAddrSentRatioFix[31]_i_5_n_0 ));
  (* HLUTNM = "lutpair55" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_6 
       (.I0(write_blocking_ratio[26]),
        .I1(countAddrSentRatioFix_reg_n_0_[26]),
        .I2(read_blocking_ratio[26]),
        .O(\countAddrSentRatioFix[31]_i_6_n_0 ));
  (* HLUTNM = "lutpair54" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_7 
       (.I0(write_blocking_ratio[25]),
        .I1(countAddrSentRatioFix_reg_n_0_[25]),
        .I2(read_blocking_ratio[25]),
        .O(\countAddrSentRatioFix[31]_i_7_n_0 ));
  (* HLUTNM = "lutpair53" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_8 
       (.I0(write_blocking_ratio[24]),
        .I1(countAddrSentRatioFix_reg_n_0_[24]),
        .I2(read_blocking_ratio[24]),
        .O(\countAddrSentRatioFix[31]_i_8_n_0 ));
  (* HLUTNM = "lutpair52" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[31]_i_9 
       (.I0(write_blocking_ratio[23]),
        .I1(countAddrSentRatioFix_reg_n_0_[23]),
        .I2(read_blocking_ratio[23]),
        .O(\countAddrSentRatioFix[31]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \countAddrSentRatioFix[39]_i_1 
       (.I0(\read_ticks_reg[31]_i_3_n_4 ),
        .I1(active_blocking),
        .I2(\read_ticks_reg[31]_i_4_n_0 ),
        .I3(\countDataReceivedRatioFix_reg[39]_i_3_n_0 ),
        .O(countAddrSentRatioFix));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrSentRatioFix[39]_i_10 
       (.I0(countAddrSentRatioFix_reg_n_0_[32]),
        .I1(countAddrSentRatioFix_reg_n_0_[33]),
        .O(\countAddrSentRatioFix[39]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h8E71)) 
    \countAddrSentRatioFix[39]_i_11 
       (.I0(read_blocking_ratio[31]),
        .I1(countAddrSentRatioFix_reg_n_0_[31]),
        .I2(write_blocking_ratio[31]),
        .I3(countAddrSentRatioFix_reg_n_0_[32]),
        .O(\countAddrSentRatioFix[39]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[39]_i_3 
       (.I0(write_blocking_ratio[31]),
        .I1(countAddrSentRatioFix_reg_n_0_[31]),
        .I2(read_blocking_ratio[31]),
        .O(\countAddrSentRatioFix[39]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrSentRatioFix[39]_i_4 
       (.I0(countAddrSentRatioFix_reg_n_0_[38]),
        .I1(countAddrSentRatioFix_reg_n_0_[39]),
        .O(\countAddrSentRatioFix[39]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrSentRatioFix[39]_i_5 
       (.I0(countAddrSentRatioFix_reg_n_0_[37]),
        .I1(countAddrSentRatioFix_reg_n_0_[38]),
        .O(\countAddrSentRatioFix[39]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrSentRatioFix[39]_i_6 
       (.I0(countAddrSentRatioFix_reg_n_0_[36]),
        .I1(countAddrSentRatioFix_reg_n_0_[37]),
        .O(\countAddrSentRatioFix[39]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrSentRatioFix[39]_i_7 
       (.I0(countAddrSentRatioFix_reg_n_0_[35]),
        .I1(countAddrSentRatioFix_reg_n_0_[36]),
        .O(\countAddrSentRatioFix[39]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrSentRatioFix[39]_i_8 
       (.I0(countAddrSentRatioFix_reg_n_0_[34]),
        .I1(countAddrSentRatioFix_reg_n_0_[35]),
        .O(\countAddrSentRatioFix[39]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrSentRatioFix[39]_i_9 
       (.I0(countAddrSentRatioFix_reg_n_0_[33]),
        .I1(countAddrSentRatioFix_reg_n_0_[34]),
        .O(\countAddrSentRatioFix[39]_i_9_n_0 ));
  (* HLUTNM = "lutpair35" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[7]_i_10 
       (.I0(write_blocking_ratio[6]),
        .I1(countAddrSentRatioFix_reg_n_0_[6]),
        .I2(read_blocking_ratio[6]),
        .I3(\countAddrSentRatioFix[7]_i_3_n_0 ),
        .O(\countAddrSentRatioFix[7]_i_10_n_0 ));
  (* HLUTNM = "lutpair34" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[7]_i_11 
       (.I0(write_blocking_ratio[5]),
        .I1(countAddrSentRatioFix_reg_n_0_[5]),
        .I2(read_blocking_ratio[5]),
        .I3(\countAddrSentRatioFix[7]_i_4_n_0 ),
        .O(\countAddrSentRatioFix[7]_i_11_n_0 ));
  (* HLUTNM = "lutpair33" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[7]_i_12 
       (.I0(write_blocking_ratio[4]),
        .I1(countAddrSentRatioFix_reg_n_0_[4]),
        .I2(read_blocking_ratio[4]),
        .I3(\countAddrSentRatioFix[7]_i_5_n_0 ),
        .O(\countAddrSentRatioFix[7]_i_12_n_0 ));
  (* HLUTNM = "lutpair32" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[7]_i_13 
       (.I0(write_blocking_ratio[3]),
        .I1(countAddrSentRatioFix_reg_n_0_[3]),
        .I2(read_blocking_ratio[3]),
        .I3(\countAddrSentRatioFix[7]_i_6_n_0 ),
        .O(\countAddrSentRatioFix[7]_i_13_n_0 ));
  (* HLUTNM = "lutpair31" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[7]_i_14 
       (.I0(write_blocking_ratio[2]),
        .I1(countAddrSentRatioFix_reg_n_0_[2]),
        .I2(read_blocking_ratio[2]),
        .I3(\countAddrSentRatioFix[7]_i_7_n_0 ),
        .O(\countAddrSentRatioFix[7]_i_14_n_0 ));
  (* HLUTNM = "lutpair30" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[7]_i_15 
       (.I0(write_blocking_ratio[1]),
        .I1(countAddrSentRatioFix_reg_n_0_[1]),
        .I2(read_blocking_ratio[1]),
        .I3(\countAddrSentRatioFix[7]_i_8_n_0 ),
        .O(\countAddrSentRatioFix[7]_i_15_n_0 ));
  (* HLUTNM = "lutpair99" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \countAddrSentRatioFix[7]_i_16 
       (.I0(countAddrSentRatioFix_reg_n_0_[0]),
        .I1(write_blocking_ratio[0]),
        .I2(read_blocking_ratio[0]),
        .O(\countAddrSentRatioFix[7]_i_16_n_0 ));
  (* HLUTNM = "lutpair35" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[7]_i_2 
       (.I0(write_blocking_ratio[6]),
        .I1(countAddrSentRatioFix_reg_n_0_[6]),
        .I2(read_blocking_ratio[6]),
        .O(\countAddrSentRatioFix[7]_i_2_n_0 ));
  (* HLUTNM = "lutpair34" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[7]_i_3 
       (.I0(write_blocking_ratio[5]),
        .I1(countAddrSentRatioFix_reg_n_0_[5]),
        .I2(read_blocking_ratio[5]),
        .O(\countAddrSentRatioFix[7]_i_3_n_0 ));
  (* HLUTNM = "lutpair33" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[7]_i_4 
       (.I0(write_blocking_ratio[4]),
        .I1(countAddrSentRatioFix_reg_n_0_[4]),
        .I2(read_blocking_ratio[4]),
        .O(\countAddrSentRatioFix[7]_i_4_n_0 ));
  (* HLUTNM = "lutpair32" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[7]_i_5 
       (.I0(write_blocking_ratio[3]),
        .I1(countAddrSentRatioFix_reg_n_0_[3]),
        .I2(read_blocking_ratio[3]),
        .O(\countAddrSentRatioFix[7]_i_5_n_0 ));
  (* HLUTNM = "lutpair31" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[7]_i_6 
       (.I0(write_blocking_ratio[2]),
        .I1(countAddrSentRatioFix_reg_n_0_[2]),
        .I2(read_blocking_ratio[2]),
        .O(\countAddrSentRatioFix[7]_i_6_n_0 ));
  (* HLUTNM = "lutpair30" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \countAddrSentRatioFix[7]_i_7 
       (.I0(write_blocking_ratio[1]),
        .I1(countAddrSentRatioFix_reg_n_0_[1]),
        .I2(read_blocking_ratio[1]),
        .O(\countAddrSentRatioFix[7]_i_7_n_0 ));
  (* HLUTNM = "lutpair99" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \countAddrSentRatioFix[7]_i_8 
       (.I0(countAddrSentRatioFix_reg_n_0_[0]),
        .I1(write_blocking_ratio[0]),
        .O(\countAddrSentRatioFix[7]_i_8_n_0 ));
  (* HLUTNM = "lutpair36" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countAddrSentRatioFix[7]_i_9 
       (.I0(write_blocking_ratio[7]),
        .I1(countAddrSentRatioFix_reg_n_0_[7]),
        .I2(read_blocking_ratio[7]),
        .I3(\countAddrSentRatioFix[7]_i_2_n_0 ),
        .O(\countAddrSentRatioFix[7]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[0] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_15 ),
        .Q(countAddrSentRatioFix_reg_n_0_[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[10] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_13 ),
        .Q(countAddrSentRatioFix_reg_n_0_[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[11] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_12 ),
        .Q(countAddrSentRatioFix_reg_n_0_[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[12] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_11 ),
        .Q(countAddrSentRatioFix_reg_n_0_[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[13] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_10 ),
        .Q(countAddrSentRatioFix_reg_n_0_[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[14] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_9 ),
        .Q(countAddrSentRatioFix_reg_n_0_[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[15] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_8 ),
        .Q(countAddrSentRatioFix_reg_n_0_[15]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSentRatioFix_reg[15]_i_1 
       (.CI(\countAddrSentRatioFix_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrSentRatioFix_reg[15]_i_1_n_0 ,\countAddrSentRatioFix_reg[15]_i_1_n_1 ,\countAddrSentRatioFix_reg[15]_i_1_n_2 ,\countAddrSentRatioFix_reg[15]_i_1_n_3 ,\NLW_countAddrSentRatioFix_reg[15]_i_1_CO_UNCONNECTED [3],\countAddrSentRatioFix_reg[15]_i_1_n_5 ,\countAddrSentRatioFix_reg[15]_i_1_n_6 ,\countAddrSentRatioFix_reg[15]_i_1_n_7 }),
        .DI({\countAddrSentRatioFix[15]_i_2_n_0 ,\countAddrSentRatioFix[15]_i_3_n_0 ,\countAddrSentRatioFix[15]_i_4_n_0 ,\countAddrSentRatioFix[15]_i_5_n_0 ,\countAddrSentRatioFix[15]_i_6_n_0 ,\countAddrSentRatioFix[15]_i_7_n_0 ,\countAddrSentRatioFix[15]_i_8_n_0 ,\countAddrSentRatioFix[15]_i_9_n_0 }),
        .O({\countAddrSentRatioFix_reg[15]_i_1_n_8 ,\countAddrSentRatioFix_reg[15]_i_1_n_9 ,\countAddrSentRatioFix_reg[15]_i_1_n_10 ,\countAddrSentRatioFix_reg[15]_i_1_n_11 ,\countAddrSentRatioFix_reg[15]_i_1_n_12 ,\countAddrSentRatioFix_reg[15]_i_1_n_13 ,\countAddrSentRatioFix_reg[15]_i_1_n_14 ,\countAddrSentRatioFix_reg[15]_i_1_n_15 }),
        .S({\countAddrSentRatioFix[15]_i_10_n_0 ,\countAddrSentRatioFix[15]_i_11_n_0 ,\countAddrSentRatioFix[15]_i_12_n_0 ,\countAddrSentRatioFix[15]_i_13_n_0 ,\countAddrSentRatioFix[15]_i_14_n_0 ,\countAddrSentRatioFix[15]_i_15_n_0 ,\countAddrSentRatioFix[15]_i_16_n_0 ,\countAddrSentRatioFix[15]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[16] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_15 ),
        .Q(countAddrSentRatioFix_reg_n_0_[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[17] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_14 ),
        .Q(countAddrSentRatioFix_reg_n_0_[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[18] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_13 ),
        .Q(countAddrSentRatioFix_reg_n_0_[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[19] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_12 ),
        .Q(countAddrSentRatioFix_reg_n_0_[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[1] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_14 ),
        .Q(countAddrSentRatioFix_reg_n_0_[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[20] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_11 ),
        .Q(countAddrSentRatioFix_reg_n_0_[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[21] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_10 ),
        .Q(countAddrSentRatioFix_reg_n_0_[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[22] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_9 ),
        .Q(countAddrSentRatioFix_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[23] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[23]_i_1_n_8 ),
        .Q(countAddrSentRatioFix_reg_n_0_[23]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSentRatioFix_reg[23]_i_1 
       (.CI(\countAddrSentRatioFix_reg[15]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrSentRatioFix_reg[23]_i_1_n_0 ,\countAddrSentRatioFix_reg[23]_i_1_n_1 ,\countAddrSentRatioFix_reg[23]_i_1_n_2 ,\countAddrSentRatioFix_reg[23]_i_1_n_3 ,\NLW_countAddrSentRatioFix_reg[23]_i_1_CO_UNCONNECTED [3],\countAddrSentRatioFix_reg[23]_i_1_n_5 ,\countAddrSentRatioFix_reg[23]_i_1_n_6 ,\countAddrSentRatioFix_reg[23]_i_1_n_7 }),
        .DI({\countAddrSentRatioFix[23]_i_2_n_0 ,\countAddrSentRatioFix[23]_i_3_n_0 ,\countAddrSentRatioFix[23]_i_4_n_0 ,\countAddrSentRatioFix[23]_i_5_n_0 ,\countAddrSentRatioFix[23]_i_6_n_0 ,\countAddrSentRatioFix[23]_i_7_n_0 ,\countAddrSentRatioFix[23]_i_8_n_0 ,\countAddrSentRatioFix[23]_i_9_n_0 }),
        .O({\countAddrSentRatioFix_reg[23]_i_1_n_8 ,\countAddrSentRatioFix_reg[23]_i_1_n_9 ,\countAddrSentRatioFix_reg[23]_i_1_n_10 ,\countAddrSentRatioFix_reg[23]_i_1_n_11 ,\countAddrSentRatioFix_reg[23]_i_1_n_12 ,\countAddrSentRatioFix_reg[23]_i_1_n_13 ,\countAddrSentRatioFix_reg[23]_i_1_n_14 ,\countAddrSentRatioFix_reg[23]_i_1_n_15 }),
        .S({\countAddrSentRatioFix[23]_i_10_n_0 ,\countAddrSentRatioFix[23]_i_11_n_0 ,\countAddrSentRatioFix[23]_i_12_n_0 ,\countAddrSentRatioFix[23]_i_13_n_0 ,\countAddrSentRatioFix[23]_i_14_n_0 ,\countAddrSentRatioFix[23]_i_15_n_0 ,\countAddrSentRatioFix[23]_i_16_n_0 ,\countAddrSentRatioFix[23]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[24] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_15 ),
        .Q(countAddrSentRatioFix_reg_n_0_[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[25] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_14 ),
        .Q(countAddrSentRatioFix_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[26] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_13 ),
        .Q(countAddrSentRatioFix_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[27] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_12 ),
        .Q(countAddrSentRatioFix_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[28] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_11 ),
        .Q(countAddrSentRatioFix_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[29] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_10 ),
        .Q(countAddrSentRatioFix_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[2] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_13 ),
        .Q(countAddrSentRatioFix_reg_n_0_[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[30] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_9 ),
        .Q(countAddrSentRatioFix_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[31] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[31]_i_1_n_8 ),
        .Q(countAddrSentRatioFix_reg_n_0_[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSentRatioFix_reg[31]_i_1 
       (.CI(\countAddrSentRatioFix_reg[23]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrSentRatioFix_reg[31]_i_1_n_0 ,\countAddrSentRatioFix_reg[31]_i_1_n_1 ,\countAddrSentRatioFix_reg[31]_i_1_n_2 ,\countAddrSentRatioFix_reg[31]_i_1_n_3 ,\NLW_countAddrSentRatioFix_reg[31]_i_1_CO_UNCONNECTED [3],\countAddrSentRatioFix_reg[31]_i_1_n_5 ,\countAddrSentRatioFix_reg[31]_i_1_n_6 ,\countAddrSentRatioFix_reg[31]_i_1_n_7 }),
        .DI({\countAddrSentRatioFix[31]_i_2_n_0 ,\countAddrSentRatioFix[31]_i_3_n_0 ,\countAddrSentRatioFix[31]_i_4_n_0 ,\countAddrSentRatioFix[31]_i_5_n_0 ,\countAddrSentRatioFix[31]_i_6_n_0 ,\countAddrSentRatioFix[31]_i_7_n_0 ,\countAddrSentRatioFix[31]_i_8_n_0 ,\countAddrSentRatioFix[31]_i_9_n_0 }),
        .O({\countAddrSentRatioFix_reg[31]_i_1_n_8 ,\countAddrSentRatioFix_reg[31]_i_1_n_9 ,\countAddrSentRatioFix_reg[31]_i_1_n_10 ,\countAddrSentRatioFix_reg[31]_i_1_n_11 ,\countAddrSentRatioFix_reg[31]_i_1_n_12 ,\countAddrSentRatioFix_reg[31]_i_1_n_13 ,\countAddrSentRatioFix_reg[31]_i_1_n_14 ,\countAddrSentRatioFix_reg[31]_i_1_n_15 }),
        .S({\countAddrSentRatioFix[31]_i_10_n_0 ,\countAddrSentRatioFix[31]_i_11_n_0 ,\countAddrSentRatioFix[31]_i_12_n_0 ,\countAddrSentRatioFix[31]_i_13_n_0 ,\countAddrSentRatioFix[31]_i_14_n_0 ,\countAddrSentRatioFix[31]_i_15_n_0 ,\countAddrSentRatioFix[31]_i_16_n_0 ,\countAddrSentRatioFix[31]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[32] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_15 ),
        .Q(countAddrSentRatioFix_reg_n_0_[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[33] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_14 ),
        .Q(countAddrSentRatioFix_reg_n_0_[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[34] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_13 ),
        .Q(countAddrSentRatioFix_reg_n_0_[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[35] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_12 ),
        .Q(countAddrSentRatioFix_reg_n_0_[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[36] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_11 ),
        .Q(countAddrSentRatioFix_reg_n_0_[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[37] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_10 ),
        .Q(countAddrSentRatioFix_reg_n_0_[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[38] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_9 ),
        .Q(countAddrSentRatioFix_reg_n_0_[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[39] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[39]_i_2_n_8 ),
        .Q(countAddrSentRatioFix_reg_n_0_[39]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSentRatioFix_reg[39]_i_2 
       (.CI(\countAddrSentRatioFix_reg[31]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrSentRatioFix_reg[39]_i_2_CO_UNCONNECTED [7],\countAddrSentRatioFix_reg[39]_i_2_n_1 ,\countAddrSentRatioFix_reg[39]_i_2_n_2 ,\countAddrSentRatioFix_reg[39]_i_2_n_3 ,\NLW_countAddrSentRatioFix_reg[39]_i_2_CO_UNCONNECTED [3],\countAddrSentRatioFix_reg[39]_i_2_n_5 ,\countAddrSentRatioFix_reg[39]_i_2_n_6 ,\countAddrSentRatioFix_reg[39]_i_2_n_7 }),
        .DI({1'b0,countAddrSentRatioFix_reg_n_0_[37:32],\countAddrSentRatioFix[39]_i_3_n_0 }),
        .O({\countAddrSentRatioFix_reg[39]_i_2_n_8 ,\countAddrSentRatioFix_reg[39]_i_2_n_9 ,\countAddrSentRatioFix_reg[39]_i_2_n_10 ,\countAddrSentRatioFix_reg[39]_i_2_n_11 ,\countAddrSentRatioFix_reg[39]_i_2_n_12 ,\countAddrSentRatioFix_reg[39]_i_2_n_13 ,\countAddrSentRatioFix_reg[39]_i_2_n_14 ,\countAddrSentRatioFix_reg[39]_i_2_n_15 }),
        .S({\countAddrSentRatioFix[39]_i_4_n_0 ,\countAddrSentRatioFix[39]_i_5_n_0 ,\countAddrSentRatioFix[39]_i_6_n_0 ,\countAddrSentRatioFix[39]_i_7_n_0 ,\countAddrSentRatioFix[39]_i_8_n_0 ,\countAddrSentRatioFix[39]_i_9_n_0 ,\countAddrSentRatioFix[39]_i_10_n_0 ,\countAddrSentRatioFix[39]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[3] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_12 ),
        .Q(countAddrSentRatioFix_reg_n_0_[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[4] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_11 ),
        .Q(countAddrSentRatioFix_reg_n_0_[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[5] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_10 ),
        .Q(countAddrSentRatioFix_reg_n_0_[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[6] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_9 ),
        .Q(countAddrSentRatioFix_reg_n_0_[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[7] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[7]_i_1_n_8 ),
        .Q(countAddrSentRatioFix_reg_n_0_[7]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSentRatioFix_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countAddrSentRatioFix_reg[7]_i_1_n_0 ,\countAddrSentRatioFix_reg[7]_i_1_n_1 ,\countAddrSentRatioFix_reg[7]_i_1_n_2 ,\countAddrSentRatioFix_reg[7]_i_1_n_3 ,\NLW_countAddrSentRatioFix_reg[7]_i_1_CO_UNCONNECTED [3],\countAddrSentRatioFix_reg[7]_i_1_n_5 ,\countAddrSentRatioFix_reg[7]_i_1_n_6 ,\countAddrSentRatioFix_reg[7]_i_1_n_7 }),
        .DI({\countAddrSentRatioFix[7]_i_2_n_0 ,\countAddrSentRatioFix[7]_i_3_n_0 ,\countAddrSentRatioFix[7]_i_4_n_0 ,\countAddrSentRatioFix[7]_i_5_n_0 ,\countAddrSentRatioFix[7]_i_6_n_0 ,\countAddrSentRatioFix[7]_i_7_n_0 ,\countAddrSentRatioFix[7]_i_8_n_0 ,read_blocking_ratio[0]}),
        .O({\countAddrSentRatioFix_reg[7]_i_1_n_8 ,\countAddrSentRatioFix_reg[7]_i_1_n_9 ,\countAddrSentRatioFix_reg[7]_i_1_n_10 ,\countAddrSentRatioFix_reg[7]_i_1_n_11 ,\countAddrSentRatioFix_reg[7]_i_1_n_12 ,\countAddrSentRatioFix_reg[7]_i_1_n_13 ,\countAddrSentRatioFix_reg[7]_i_1_n_14 ,\countAddrSentRatioFix_reg[7]_i_1_n_15 }),
        .S({\countAddrSentRatioFix[7]_i_9_n_0 ,\countAddrSentRatioFix[7]_i_10_n_0 ,\countAddrSentRatioFix[7]_i_11_n_0 ,\countAddrSentRatioFix[7]_i_12_n_0 ,\countAddrSentRatioFix[7]_i_13_n_0 ,\countAddrSentRatioFix[7]_i_14_n_0 ,\countAddrSentRatioFix[7]_i_15_n_0 ,\countAddrSentRatioFix[7]_i_16_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[8] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_15 ),
        .Q(countAddrSentRatioFix_reg_n_0_[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSentRatioFix_reg[9] 
       (.C(clk),
        .CE(countAddrSentRatioFix),
        .D(\countAddrSentRatioFix_reg[15]_i_1_n_14 ),
        .Q(countAddrSentRatioFix_reg_n_0_[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \countAddrSent[31]_i_3 
       (.I0(active_runtime0),
        .I1(active_runtime1),
        .I2(active_blocking),
        .I3(\countDataReceived[39]_i_7_n_0 ),
        .I4(active_runtime2),
        .I5(active_runtime3),
        .O(\countAddrSent[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[32]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[32]),
        .I2(reset_cmd),
        .O(\countAddrSent[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[33]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[33]),
        .I2(reset_cmd),
        .O(\countAddrSent[33]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[34]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[34]),
        .I2(reset_cmd),
        .O(\countAddrSent[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[35]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[35]),
        .I2(reset_cmd),
        .O(\countAddrSent[35]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[36]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[36]),
        .I2(reset_cmd),
        .O(\countAddrSent[36]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[37]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[37]),
        .I2(reset_cmd),
        .O(\countAddrSent[37]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[38]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[38]),
        .I2(reset_cmd),
        .O(\countAddrSent[38]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \countAddrSent[39]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(writeAbusy),
        .I3(\countAddrSent_reg[1]_0 ),
        .O(\countAddrSent[39]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_10 
       (.I0(countAddrToBeSent[34]),
        .I1(countAddrSent[34]),
        .I2(countAddrSent[35]),
        .I3(countAddrToBeSent[35]),
        .O(\countAddrSent[39]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_11 
       (.I0(countAddrToBeSent[32]),
        .I1(countAddrSent[32]),
        .I2(countAddrSent[33]),
        .I3(countAddrToBeSent[33]),
        .O(\countAddrSent[39]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_12 
       (.I0(countAddrToBeSent[38]),
        .I1(countAddrSent[38]),
        .I2(countAddrToBeSent[39]),
        .I3(countAddrSent[39]),
        .O(\countAddrSent[39]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_13 
       (.I0(countAddrToBeSent[36]),
        .I1(countAddrSent[36]),
        .I2(countAddrToBeSent[37]),
        .I3(countAddrSent[37]),
        .O(\countAddrSent[39]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_14 
       (.I0(countAddrToBeSent[34]),
        .I1(countAddrSent[34]),
        .I2(countAddrToBeSent[35]),
        .I3(countAddrSent[35]),
        .O(\countAddrSent[39]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_15 
       (.I0(countAddrToBeSent[32]),
        .I1(countAddrSent[32]),
        .I2(countAddrToBeSent[33]),
        .I3(countAddrSent[33]),
        .O(\countAddrSent[39]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_17 
       (.I0(countAddrToBeSent[30]),
        .I1(countAddrSent[30]),
        .I2(countAddrSent[31]),
        .I3(countAddrToBeSent[31]),
        .O(\countAddrSent[39]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_18 
       (.I0(countAddrToBeSent[28]),
        .I1(countAddrSent[28]),
        .I2(countAddrSent[29]),
        .I3(countAddrToBeSent[29]),
        .O(\countAddrSent[39]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_19 
       (.I0(countAddrToBeSent[26]),
        .I1(countAddrSent[26]),
        .I2(countAddrSent[27]),
        .I3(countAddrToBeSent[27]),
        .O(\countAddrSent[39]_i_19_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrSent[39]_i_2 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countAddrSent0[39]),
        .I2(reset_cmd),
        .O(\countAddrSent[39]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_20 
       (.I0(countAddrToBeSent[24]),
        .I1(countAddrSent[24]),
        .I2(countAddrSent[25]),
        .I3(countAddrToBeSent[25]),
        .O(\countAddrSent[39]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_21 
       (.I0(countAddrToBeSent[22]),
        .I1(countAddrSent[22]),
        .I2(countAddrSent[23]),
        .I3(countAddrToBeSent[23]),
        .O(\countAddrSent[39]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_22 
       (.I0(countAddrToBeSent[20]),
        .I1(countAddrSent[20]),
        .I2(countAddrSent[21]),
        .I3(countAddrToBeSent[21]),
        .O(\countAddrSent[39]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_23 
       (.I0(countAddrToBeSent[18]),
        .I1(countAddrSent[18]),
        .I2(countAddrSent[19]),
        .I3(countAddrToBeSent[19]),
        .O(\countAddrSent[39]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_24 
       (.I0(countAddrToBeSent[16]),
        .I1(countAddrSent[16]),
        .I2(countAddrSent[17]),
        .I3(countAddrToBeSent[17]),
        .O(\countAddrSent[39]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_25 
       (.I0(countAddrToBeSent[30]),
        .I1(countAddrSent[30]),
        .I2(countAddrToBeSent[31]),
        .I3(countAddrSent[31]),
        .O(\countAddrSent[39]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_26 
       (.I0(countAddrToBeSent[28]),
        .I1(countAddrSent[28]),
        .I2(countAddrToBeSent[29]),
        .I3(countAddrSent[29]),
        .O(\countAddrSent[39]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_27 
       (.I0(countAddrToBeSent[26]),
        .I1(countAddrSent[26]),
        .I2(countAddrToBeSent[27]),
        .I3(countAddrSent[27]),
        .O(\countAddrSent[39]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_28 
       (.I0(countAddrToBeSent[24]),
        .I1(countAddrSent[24]),
        .I2(countAddrToBeSent[25]),
        .I3(countAddrSent[25]),
        .O(\countAddrSent[39]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_29 
       (.I0(countAddrToBeSent[22]),
        .I1(countAddrSent[22]),
        .I2(countAddrToBeSent[23]),
        .I3(countAddrSent[23]),
        .O(\countAddrSent[39]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \countAddrSent[39]_i_3 
       (.I0(active_runtime0),
        .I1(active_runtime1),
        .I2(active_blocking),
        .I3(\countDataReceived[39]_i_7_n_0 ),
        .I4(active_runtime2),
        .I5(active_runtime3),
        .O(\countAddrSent[39]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_30 
       (.I0(countAddrToBeSent[20]),
        .I1(countAddrSent[20]),
        .I2(countAddrToBeSent[21]),
        .I3(countAddrSent[21]),
        .O(\countAddrSent[39]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_31 
       (.I0(countAddrToBeSent[18]),
        .I1(countAddrSent[18]),
        .I2(countAddrToBeSent[19]),
        .I3(countAddrSent[19]),
        .O(\countAddrSent[39]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_32 
       (.I0(countAddrToBeSent[16]),
        .I1(countAddrSent[16]),
        .I2(countAddrToBeSent[17]),
        .I3(countAddrSent[17]),
        .O(\countAddrSent[39]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_33 
       (.I0(countAddrToBeSent[14]),
        .I1(countAddrSent[14]),
        .I2(countAddrSent[15]),
        .I3(countAddrToBeSent[15]),
        .O(\countAddrSent[39]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_34 
       (.I0(countAddrToBeSent[12]),
        .I1(countAddrSent[12]),
        .I2(countAddrSent[13]),
        .I3(countAddrToBeSent[13]),
        .O(\countAddrSent[39]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_35 
       (.I0(countAddrToBeSent[10]),
        .I1(countAddrSent[10]),
        .I2(countAddrSent[11]),
        .I3(countAddrToBeSent[11]),
        .O(\countAddrSent[39]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_36 
       (.I0(countAddrToBeSent[8]),
        .I1(countAddrSent[8]),
        .I2(countAddrSent[9]),
        .I3(countAddrToBeSent[9]),
        .O(\countAddrSent[39]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_37 
       (.I0(countAddrToBeSent[6]),
        .I1(countAddrSent[6]),
        .I2(countAddrSent[7]),
        .I3(countAddrToBeSent[7]),
        .O(\countAddrSent[39]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_38 
       (.I0(countAddrToBeSent[4]),
        .I1(countAddrSent[4]),
        .I2(countAddrSent[5]),
        .I3(countAddrToBeSent[5]),
        .O(\countAddrSent[39]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_39 
       (.I0(countAddrToBeSent[2]),
        .I1(countAddrSent[2]),
        .I2(countAddrSent[3]),
        .I3(countAddrToBeSent[3]),
        .O(\countAddrSent[39]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_40 
       (.I0(countAddrToBeSent[0]),
        .I1(countAddrSent[0]),
        .I2(countAddrSent[1]),
        .I3(countAddrToBeSent[1]),
        .O(\countAddrSent[39]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_41 
       (.I0(countAddrToBeSent[14]),
        .I1(countAddrSent[14]),
        .I2(countAddrToBeSent[15]),
        .I3(countAddrSent[15]),
        .O(\countAddrSent[39]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_42 
       (.I0(countAddrToBeSent[12]),
        .I1(countAddrSent[12]),
        .I2(countAddrToBeSent[13]),
        .I3(countAddrSent[13]),
        .O(\countAddrSent[39]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_43 
       (.I0(countAddrToBeSent[10]),
        .I1(countAddrSent[10]),
        .I2(countAddrToBeSent[11]),
        .I3(countAddrSent[11]),
        .O(\countAddrSent[39]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_44 
       (.I0(countAddrToBeSent[8]),
        .I1(countAddrSent[8]),
        .I2(countAddrToBeSent[9]),
        .I3(countAddrSent[9]),
        .O(\countAddrSent[39]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_45 
       (.I0(countAddrToBeSent[6]),
        .I1(countAddrSent[6]),
        .I2(countAddrToBeSent[7]),
        .I3(countAddrSent[7]),
        .O(\countAddrSent[39]_i_45_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_46 
       (.I0(countAddrToBeSent[4]),
        .I1(countAddrSent[4]),
        .I2(countAddrToBeSent[5]),
        .I3(countAddrSent[5]),
        .O(\countAddrSent[39]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_47 
       (.I0(countAddrToBeSent[2]),
        .I1(countAddrSent[2]),
        .I2(countAddrToBeSent[3]),
        .I3(countAddrSent[3]),
        .O(\countAddrSent[39]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrSent[39]_i_48 
       (.I0(countAddrToBeSent[0]),
        .I1(countAddrSent[0]),
        .I2(countAddrToBeSent[1]),
        .I3(countAddrSent[1]),
        .O(\countAddrSent[39]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \countAddrSent[39]_i_5 
       (.I0(active_runtime0),
        .I1(active_runtime1),
        .I2(active_blocking),
        .I3(\countDataReceived[39]_i_7_n_0 ),
        .I4(active_runtime2),
        .I5(active_runtime3),
        .O(\countAddrSent[39]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_8 
       (.I0(countAddrToBeSent[38]),
        .I1(countAddrSent[38]),
        .I2(countAddrSent[39]),
        .I3(countAddrToBeSent[39]),
        .O(\countAddrSent[39]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrSent[39]_i_9 
       (.I0(countAddrToBeSent[36]),
        .I1(countAddrSent[36]),
        .I2(countAddrSent[37]),
        .I3(countAddrToBeSent[37]),
        .O(\countAddrSent[39]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[0] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_295),
        .Q(countAddrSent[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[10] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_285),
        .Q(countAddrSent[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[11] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_284),
        .Q(countAddrSent[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[12] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_283),
        .Q(countAddrSent[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[13] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_282),
        .Q(countAddrSent[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[14] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_281),
        .Q(countAddrSent[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[15] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_280),
        .Q(countAddrSent[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[16] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_279),
        .Q(countAddrSent[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[16]_i_2 
       (.CI(\countAddrSent_reg[8]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrSent_reg[16]_i_2_n_0 ,\countAddrSent_reg[16]_i_2_n_1 ,\countAddrSent_reg[16]_i_2_n_2 ,\countAddrSent_reg[16]_i_2_n_3 ,\NLW_countAddrSent_reg[16]_i_2_CO_UNCONNECTED [3],\countAddrSent_reg[16]_i_2_n_5 ,\countAddrSent_reg[16]_i_2_n_6 ,\countAddrSent_reg[16]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrSent0[16:9]),
        .S(countAddrSent[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[17] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_278),
        .Q(countAddrSent[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[18] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_277),
        .Q(countAddrSent[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[19] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_276),
        .Q(countAddrSent[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[1] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_294),
        .Q(countAddrSent[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[20] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_275),
        .Q(countAddrSent[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[21] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_274),
        .Q(countAddrSent[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[22] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_273),
        .Q(countAddrSent[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[23] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_272),
        .Q(countAddrSent[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[24] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_271),
        .Q(countAddrSent[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[24]_i_2 
       (.CI(\countAddrSent_reg[16]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrSent_reg[24]_i_2_n_0 ,\countAddrSent_reg[24]_i_2_n_1 ,\countAddrSent_reg[24]_i_2_n_2 ,\countAddrSent_reg[24]_i_2_n_3 ,\NLW_countAddrSent_reg[24]_i_2_CO_UNCONNECTED [3],\countAddrSent_reg[24]_i_2_n_5 ,\countAddrSent_reg[24]_i_2_n_6 ,\countAddrSent_reg[24]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrSent0[24:17]),
        .S(countAddrSent[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[25] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_270),
        .Q(countAddrSent[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[26] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_269),
        .Q(countAddrSent[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[27] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_268),
        .Q(countAddrSent[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[28] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_267),
        .Q(countAddrSent[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[29] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_266),
        .Q(countAddrSent[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[2] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_293),
        .Q(countAddrSent[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[30] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_265),
        .Q(countAddrSent[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[31] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_264),
        .Q(countAddrSent[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[32] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[32]_i_1_n_0 ),
        .Q(countAddrSent[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[32]_i_2 
       (.CI(\countAddrSent_reg[24]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrSent_reg[32]_i_2_n_0 ,\countAddrSent_reg[32]_i_2_n_1 ,\countAddrSent_reg[32]_i_2_n_2 ,\countAddrSent_reg[32]_i_2_n_3 ,\NLW_countAddrSent_reg[32]_i_2_CO_UNCONNECTED [3],\countAddrSent_reg[32]_i_2_n_5 ,\countAddrSent_reg[32]_i_2_n_6 ,\countAddrSent_reg[32]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrSent0[32:25]),
        .S(countAddrSent[32:25]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[33] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[33]_i_1_n_0 ),
        .Q(countAddrSent[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[34] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[34]_i_1_n_0 ),
        .Q(countAddrSent[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[35] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[35]_i_1_n_0 ),
        .Q(countAddrSent[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[36] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[36]_i_1_n_0 ),
        .Q(countAddrSent[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[37] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[37]_i_1_n_0 ),
        .Q(countAddrSent[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[38] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[38]_i_1_n_0 ),
        .Q(countAddrSent[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[39] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countAddrSent[39]_i_2_n_0 ),
        .Q(countAddrSent[39]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[39]_i_16 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countAddrSent_reg[39]_i_16_n_0 ,\countAddrSent_reg[39]_i_16_n_1 ,\countAddrSent_reg[39]_i_16_n_2 ,\countAddrSent_reg[39]_i_16_n_3 ,\NLW_countAddrSent_reg[39]_i_16_CO_UNCONNECTED [3],\countAddrSent_reg[39]_i_16_n_5 ,\countAddrSent_reg[39]_i_16_n_6 ,\countAddrSent_reg[39]_i_16_n_7 }),
        .DI({\countAddrSent[39]_i_33_n_0 ,\countAddrSent[39]_i_34_n_0 ,\countAddrSent[39]_i_35_n_0 ,\countAddrSent[39]_i_36_n_0 ,\countAddrSent[39]_i_37_n_0 ,\countAddrSent[39]_i_38_n_0 ,\countAddrSent[39]_i_39_n_0 ,\countAddrSent[39]_i_40_n_0 }),
        .O(\NLW_countAddrSent_reg[39]_i_16_O_UNCONNECTED [7:0]),
        .S({\countAddrSent[39]_i_41_n_0 ,\countAddrSent[39]_i_42_n_0 ,\countAddrSent[39]_i_43_n_0 ,\countAddrSent[39]_i_44_n_0 ,\countAddrSent[39]_i_45_n_0 ,\countAddrSent[39]_i_46_n_0 ,\countAddrSent[39]_i_47_n_0 ,\countAddrSent[39]_i_48_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[39]_i_4 
       (.CI(\countAddrSent_reg[39]_i_7_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrSent_reg[39]_i_4_CO_UNCONNECTED [7:4],\countAddrSent_reg[1]_0 ,\countAddrSent_reg[39]_i_4_n_5 ,\countAddrSent_reg[39]_i_4_n_6 ,\countAddrSent_reg[39]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,\countAddrSent[39]_i_8_n_0 ,\countAddrSent[39]_i_9_n_0 ,\countAddrSent[39]_i_10_n_0 ,\countAddrSent[39]_i_11_n_0 }),
        .O(\NLW_countAddrSent_reg[39]_i_4_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,\countAddrSent[39]_i_12_n_0 ,\countAddrSent[39]_i_13_n_0 ,\countAddrSent[39]_i_14_n_0 ,\countAddrSent[39]_i_15_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[39]_i_6 
       (.CI(\countAddrSent_reg[32]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrSent_reg[39]_i_6_CO_UNCONNECTED [7:6],\countAddrSent_reg[39]_i_6_n_2 ,\countAddrSent_reg[39]_i_6_n_3 ,\NLW_countAddrSent_reg[39]_i_6_CO_UNCONNECTED [3],\countAddrSent_reg[39]_i_6_n_5 ,\countAddrSent_reg[39]_i_6_n_6 ,\countAddrSent_reg[39]_i_6_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countAddrSent_reg[39]_i_6_O_UNCONNECTED [7],countAddrSent0[39:33]}),
        .S({1'b0,countAddrSent[39:33]}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[39]_i_7 
       (.CI(\countAddrSent_reg[39]_i_16_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrSent_reg[39]_i_7_n_0 ,\countAddrSent_reg[39]_i_7_n_1 ,\countAddrSent_reg[39]_i_7_n_2 ,\countAddrSent_reg[39]_i_7_n_3 ,\NLW_countAddrSent_reg[39]_i_7_CO_UNCONNECTED [3],\countAddrSent_reg[39]_i_7_n_5 ,\countAddrSent_reg[39]_i_7_n_6 ,\countAddrSent_reg[39]_i_7_n_7 }),
        .DI({\countAddrSent[39]_i_17_n_0 ,\countAddrSent[39]_i_18_n_0 ,\countAddrSent[39]_i_19_n_0 ,\countAddrSent[39]_i_20_n_0 ,\countAddrSent[39]_i_21_n_0 ,\countAddrSent[39]_i_22_n_0 ,\countAddrSent[39]_i_23_n_0 ,\countAddrSent[39]_i_24_n_0 }),
        .O(\NLW_countAddrSent_reg[39]_i_7_O_UNCONNECTED [7:0]),
        .S({\countAddrSent[39]_i_25_n_0 ,\countAddrSent[39]_i_26_n_0 ,\countAddrSent[39]_i_27_n_0 ,\countAddrSent[39]_i_28_n_0 ,\countAddrSent[39]_i_29_n_0 ,\countAddrSent[39]_i_30_n_0 ,\countAddrSent[39]_i_31_n_0 ,\countAddrSent[39]_i_32_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[3] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_292),
        .Q(countAddrSent[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[4] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_291),
        .Q(countAddrSent[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[5] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_290),
        .Q(countAddrSent[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[6] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_289),
        .Q(countAddrSent[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[7] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_288),
        .Q(countAddrSent[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[8] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_287),
        .Q(countAddrSent[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrSent_reg[8]_i_2 
       (.CI(countAddrSent[0]),
        .CI_TOP(1'b0),
        .CO({\countAddrSent_reg[8]_i_2_n_0 ,\countAddrSent_reg[8]_i_2_n_1 ,\countAddrSent_reg[8]_i_2_n_2 ,\countAddrSent_reg[8]_i_2_n_3 ,\NLW_countAddrSent_reg[8]_i_2_CO_UNCONNECTED [3],\countAddrSent_reg[8]_i_2_n_5 ,\countAddrSent_reg[8]_i_2_n_6 ,\countAddrSent_reg[8]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrSent0[8:1]),
        .S(countAddrSent[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrSent_reg[9] 
       (.C(clk),
        .CE(sactn_n_71),
        .D(sactn_n_286),
        .Q(countAddrSent[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[0]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[0]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8000BFFF)) 
    \countAddrToBeSent[0]_i_2 
       (.I0(countAddrToBeSent00_in[0]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent[0]),
        .O(\countAddrToBeSent[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[10]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[10]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[10]_i_2 
       (.I0(countAddrToBeSent00_in[10]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[10]),
        .O(\countAddrToBeSent[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[11]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[11]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[11]_i_2 
       (.I0(countAddrToBeSent00_in[11]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[11]),
        .O(\countAddrToBeSent[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[12]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[12]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[12]_i_2 
       (.I0(countAddrToBeSent00_in[12]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[12]),
        .O(\countAddrToBeSent[12]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[13]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[13]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[13]_i_2 
       (.I0(countAddrToBeSent00_in[13]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[13]),
        .O(\countAddrToBeSent[13]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[14]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[14]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[14]_i_2 
       (.I0(countAddrToBeSent00_in[14]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[14]),
        .O(\countAddrToBeSent[14]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[15]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[15]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_10 
       (.I0(countAddrToBeSent[9]),
        .I1(write_blocking_ratio[9]),
        .O(\countAddrToBeSent[15]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_11 
       (.I0(countAddrToBeSent[8]),
        .I1(write_blocking_ratio[8]),
        .O(\countAddrToBeSent[15]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[15]_i_2 
       (.I0(countAddrToBeSent00_in[15]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[15]),
        .O(\countAddrToBeSent[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_4 
       (.I0(countAddrToBeSent[15]),
        .I1(write_blocking_ratio[15]),
        .O(\countAddrToBeSent[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_5 
       (.I0(countAddrToBeSent[14]),
        .I1(write_blocking_ratio[14]),
        .O(\countAddrToBeSent[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_6 
       (.I0(countAddrToBeSent[13]),
        .I1(write_blocking_ratio[13]),
        .O(\countAddrToBeSent[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_7 
       (.I0(countAddrToBeSent[12]),
        .I1(write_blocking_ratio[12]),
        .O(\countAddrToBeSent[15]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_8 
       (.I0(countAddrToBeSent[11]),
        .I1(write_blocking_ratio[11]),
        .O(\countAddrToBeSent[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[15]_i_9 
       (.I0(countAddrToBeSent[10]),
        .I1(write_blocking_ratio[10]),
        .O(\countAddrToBeSent[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[16]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[16]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[16]_i_2 
       (.I0(countAddrToBeSent00_in[16]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[16]),
        .O(\countAddrToBeSent[16]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[17]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[17]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[17]_i_2 
       (.I0(countAddrToBeSent00_in[17]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[17]),
        .O(\countAddrToBeSent[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[18]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[18]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[18]_i_2 
       (.I0(countAddrToBeSent00_in[18]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[18]),
        .O(\countAddrToBeSent[18]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[19]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[19]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[19]_i_2 
       (.I0(countAddrToBeSent00_in[19]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[19]),
        .O(\countAddrToBeSent[19]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[1]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[1]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[1]_i_2 
       (.I0(countAddrToBeSent00_in[1]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[1]),
        .O(\countAddrToBeSent[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[20]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[20]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[20]_i_2 
       (.I0(countAddrToBeSent00_in[20]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[20]),
        .O(\countAddrToBeSent[20]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[21]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[21]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[21]_i_2 
       (.I0(countAddrToBeSent00_in[21]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[21]),
        .O(\countAddrToBeSent[21]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[22]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[22]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[22]_i_2 
       (.I0(countAddrToBeSent00_in[22]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[22]),
        .O(\countAddrToBeSent[22]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[23]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[23]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_10 
       (.I0(countAddrToBeSent[17]),
        .I1(write_blocking_ratio[17]),
        .O(\countAddrToBeSent[23]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_11 
       (.I0(countAddrToBeSent[16]),
        .I1(write_blocking_ratio[16]),
        .O(\countAddrToBeSent[23]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[23]_i_2 
       (.I0(countAddrToBeSent00_in[23]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[23]),
        .O(\countAddrToBeSent[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_4 
       (.I0(countAddrToBeSent[23]),
        .I1(write_blocking_ratio[23]),
        .O(\countAddrToBeSent[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_5 
       (.I0(countAddrToBeSent[22]),
        .I1(write_blocking_ratio[22]),
        .O(\countAddrToBeSent[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_6 
       (.I0(countAddrToBeSent[21]),
        .I1(write_blocking_ratio[21]),
        .O(\countAddrToBeSent[23]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_7 
       (.I0(countAddrToBeSent[20]),
        .I1(write_blocking_ratio[20]),
        .O(\countAddrToBeSent[23]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_8 
       (.I0(countAddrToBeSent[19]),
        .I1(write_blocking_ratio[19]),
        .O(\countAddrToBeSent[23]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[23]_i_9 
       (.I0(countAddrToBeSent[18]),
        .I1(write_blocking_ratio[18]),
        .O(\countAddrToBeSent[23]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[24]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[24]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[24]_i_2 
       (.I0(countAddrToBeSent00_in[24]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[24]),
        .O(\countAddrToBeSent[24]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[25]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[25]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[25]_i_2 
       (.I0(countAddrToBeSent00_in[25]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[25]),
        .O(\countAddrToBeSent[25]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[26]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[26]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[26]_i_2 
       (.I0(countAddrToBeSent00_in[26]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[26]),
        .O(\countAddrToBeSent[26]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[27]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[27]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[27]_i_2 
       (.I0(countAddrToBeSent00_in[27]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[27]),
        .O(\countAddrToBeSent[27]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[28]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[28]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[28]_i_2 
       (.I0(countAddrToBeSent00_in[28]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[28]),
        .O(\countAddrToBeSent[28]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[29]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[29]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[29]_i_2 
       (.I0(countAddrToBeSent00_in[29]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[29]),
        .O(\countAddrToBeSent[29]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[2]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[2]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[2]_i_2 
       (.I0(countAddrToBeSent00_in[2]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[2]),
        .O(\countAddrToBeSent[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[30]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[30]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[30]_i_2 
       (.I0(countAddrToBeSent00_in[30]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[30]),
        .O(\countAddrToBeSent[30]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[31]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[31]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_10 
       (.I0(countAddrToBeSent[25]),
        .I1(write_blocking_ratio[25]),
        .O(\countAddrToBeSent[31]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_11 
       (.I0(countAddrToBeSent[24]),
        .I1(write_blocking_ratio[24]),
        .O(\countAddrToBeSent[31]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[31]_i_2 
       (.I0(countAddrToBeSent00_in[31]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[31]),
        .O(\countAddrToBeSent[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_4 
       (.I0(countAddrToBeSent[31]),
        .I1(write_blocking_ratio[31]),
        .O(\countAddrToBeSent[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_5 
       (.I0(countAddrToBeSent[30]),
        .I1(write_blocking_ratio[30]),
        .O(\countAddrToBeSent[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_6 
       (.I0(countAddrToBeSent[29]),
        .I1(write_blocking_ratio[29]),
        .O(\countAddrToBeSent[31]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_7 
       (.I0(countAddrToBeSent[28]),
        .I1(write_blocking_ratio[28]),
        .O(\countAddrToBeSent[31]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_8 
       (.I0(countAddrToBeSent[27]),
        .I1(write_blocking_ratio[27]),
        .O(\countAddrToBeSent[31]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[31]_i_9 
       (.I0(countAddrToBeSent[26]),
        .I1(write_blocking_ratio[26]),
        .O(\countAddrToBeSent[31]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[32]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[32]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[32]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[32]_i_2 
       (.I0(countAddrToBeSent00_in[32]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[32]),
        .O(\countAddrToBeSent[32]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[33]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[33]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[33]_i_2 
       (.I0(countAddrToBeSent00_in[33]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[33]),
        .O(\countAddrToBeSent[33]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[34]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[34]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[34]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[34]_i_2 
       (.I0(countAddrToBeSent00_in[34]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[34]),
        .O(\countAddrToBeSent[34]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[35]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[35]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[35]_i_2 
       (.I0(countAddrToBeSent00_in[35]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[35]),
        .O(\countAddrToBeSent[35]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[36]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[36]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[36]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[36]_i_2 
       (.I0(countAddrToBeSent00_in[36]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[36]),
        .O(\countAddrToBeSent[36]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[37]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[37]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[37]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[37]_i_2 
       (.I0(countAddrToBeSent00_in[37]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[37]),
        .O(\countAddrToBeSent[37]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[38]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[38]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[38]_i_2 
       (.I0(countAddrToBeSent00_in[38]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[38]),
        .O(\countAddrToBeSent[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFF4F4F4F4F4F4F4)) 
    \countAddrToBeSent[39]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(countAddrToBeSent__0),
        .I3(active_blocking),
        .I4(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I5(write_ticks1),
        .O(\countAddrToBeSent[39]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \countAddrToBeSent[39]_i_10 
       (.I0(write_ticks21_out[36]),
        .I1(write_ticks21_out[37]),
        .O(\countAddrToBeSent[39]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_100 
       (.I0(countAddrToBeSent[34]),
        .I1(countAddrSent[34]),
        .O(\countAddrToBeSent[39]_i_100_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_101 
       (.I0(countAddrToBeSent[33]),
        .I1(countAddrSent[33]),
        .O(\countAddrToBeSent[39]_i_101_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_102 
       (.I0(countAddrToBeSent[32]),
        .I1(countAddrSent[32]),
        .O(\countAddrToBeSent[39]_i_102_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_105 
       (.I0(write_ticks22_out[31]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_8 ),
        .O(\countAddrToBeSent[39]_i_105_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_106 
       (.I0(write_ticks22_out[30]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_9 ),
        .O(\countAddrToBeSent[39]_i_106_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_107 
       (.I0(write_ticks22_out[29]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_10 ),
        .O(\countAddrToBeSent[39]_i_107_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_108 
       (.I0(write_ticks22_out[28]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_11 ),
        .O(\countAddrToBeSent[39]_i_108_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_109 
       (.I0(write_ticks22_out[27]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_12 ),
        .O(\countAddrToBeSent[39]_i_109_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \countAddrToBeSent[39]_i_11 
       (.I0(write_ticks21_out[34]),
        .I1(write_ticks21_out[35]),
        .O(\countAddrToBeSent[39]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_110 
       (.I0(write_ticks22_out[26]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_13 ),
        .O(\countAddrToBeSent[39]_i_110_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_111 
       (.I0(write_ticks22_out[25]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_14 ),
        .O(\countAddrToBeSent[39]_i_111_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_112 
       (.I0(write_ticks22_out[24]),
        .I1(\countAddrToBeSent_reg[39]_i_158_n_15 ),
        .O(\countAddrToBeSent[39]_i_112_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_113 
       (.I0(countAddrToBeSent[39]),
        .I1(countAddrSentRatioFix_reg_n_0_[39]),
        .O(\countAddrToBeSent[39]_i_113_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_114 
       (.I0(countAddrToBeSent[38]),
        .I1(countAddrSentRatioFix_reg_n_0_[38]),
        .O(\countAddrToBeSent[39]_i_114_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_115 
       (.I0(countAddrToBeSent[37]),
        .I1(countAddrSentRatioFix_reg_n_0_[37]),
        .O(\countAddrToBeSent[39]_i_115_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_116 
       (.I0(countAddrToBeSent[36]),
        .I1(countAddrSentRatioFix_reg_n_0_[36]),
        .O(\countAddrToBeSent[39]_i_116_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_117 
       (.I0(countAddrToBeSent[35]),
        .I1(countAddrSentRatioFix_reg_n_0_[35]),
        .O(\countAddrToBeSent[39]_i_117_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_118 
       (.I0(countAddrToBeSent[34]),
        .I1(countAddrSentRatioFix_reg_n_0_[34]),
        .O(\countAddrToBeSent[39]_i_118_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_119 
       (.I0(countAddrToBeSent[33]),
        .I1(countAddrSentRatioFix_reg_n_0_[33]),
        .O(\countAddrToBeSent[39]_i_119_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \countAddrToBeSent[39]_i_12 
       (.I0(write_ticks21_out[32]),
        .I1(write_ticks21_out[33]),
        .O(\countAddrToBeSent[39]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_120 
       (.I0(countAddrToBeSent[32]),
        .I1(countAddrSentRatioFix_reg_n_0_[32]),
        .O(\countAddrToBeSent[39]_i_120_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_124 
       (.I0(countAddrToBeSent[31]),
        .I1(countAddrSent[31]),
        .O(\countAddrToBeSent[39]_i_124_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_125 
       (.I0(countAddrToBeSent[30]),
        .I1(countAddrSent[30]),
        .O(\countAddrToBeSent[39]_i_125_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_126 
       (.I0(countAddrToBeSent[29]),
        .I1(countAddrSent[29]),
        .O(\countAddrToBeSent[39]_i_126_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_127 
       (.I0(countAddrToBeSent[28]),
        .I1(countAddrSent[28]),
        .O(\countAddrToBeSent[39]_i_127_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_128 
       (.I0(countAddrToBeSent[27]),
        .I1(countAddrSent[27]),
        .O(\countAddrToBeSent[39]_i_128_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_129 
       (.I0(countAddrToBeSent[26]),
        .I1(countAddrSent[26]),
        .O(\countAddrToBeSent[39]_i_129_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_130 
       (.I0(countAddrToBeSent[25]),
        .I1(countAddrSent[25]),
        .O(\countAddrToBeSent[39]_i_130_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_131 
       (.I0(countAddrToBeSent[24]),
        .I1(countAddrSent[24]),
        .O(\countAddrToBeSent[39]_i_131_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_132 
       (.I0(countAddrToBeSent[23]),
        .I1(countAddrSent[23]),
        .O(\countAddrToBeSent[39]_i_132_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_133 
       (.I0(countAddrToBeSent[22]),
        .I1(countAddrSent[22]),
        .O(\countAddrToBeSent[39]_i_133_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_134 
       (.I0(countAddrToBeSent[21]),
        .I1(countAddrSent[21]),
        .O(\countAddrToBeSent[39]_i_134_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_135 
       (.I0(countAddrToBeSent[20]),
        .I1(countAddrSent[20]),
        .O(\countAddrToBeSent[39]_i_135_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_136 
       (.I0(countAddrToBeSent[19]),
        .I1(countAddrSent[19]),
        .O(\countAddrToBeSent[39]_i_136_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_137 
       (.I0(countAddrToBeSent[18]),
        .I1(countAddrSent[18]),
        .O(\countAddrToBeSent[39]_i_137_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_138 
       (.I0(countAddrToBeSent[17]),
        .I1(countAddrSent[17]),
        .O(\countAddrToBeSent[39]_i_138_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_139 
       (.I0(countAddrToBeSent[16]),
        .I1(countAddrSent[16]),
        .O(\countAddrToBeSent[39]_i_139_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_142 
       (.I0(write_ticks22_out[23]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_8 ),
        .O(\countAddrToBeSent[39]_i_142_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_143 
       (.I0(write_ticks22_out[22]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_9 ),
        .O(\countAddrToBeSent[39]_i_143_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_144 
       (.I0(write_ticks22_out[21]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_10 ),
        .O(\countAddrToBeSent[39]_i_144_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_145 
       (.I0(write_ticks22_out[20]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_11 ),
        .O(\countAddrToBeSent[39]_i_145_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_146 
       (.I0(write_ticks22_out[19]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_12 ),
        .O(\countAddrToBeSent[39]_i_146_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_147 
       (.I0(write_ticks22_out[18]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_13 ),
        .O(\countAddrToBeSent[39]_i_147_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_148 
       (.I0(write_ticks22_out[17]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_14 ),
        .O(\countAddrToBeSent[39]_i_148_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_149 
       (.I0(write_ticks22_out[16]),
        .I1(\countAddrToBeSent_reg[39]_i_201_n_15 ),
        .O(\countAddrToBeSent[39]_i_149_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_150 
       (.I0(countAddrToBeSent[31]),
        .I1(countAddrSentRatioFix_reg_n_0_[31]),
        .O(\countAddrToBeSent[39]_i_150_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_151 
       (.I0(countAddrToBeSent[30]),
        .I1(countAddrSentRatioFix_reg_n_0_[30]),
        .O(\countAddrToBeSent[39]_i_151_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_152 
       (.I0(countAddrToBeSent[29]),
        .I1(countAddrSentRatioFix_reg_n_0_[29]),
        .O(\countAddrToBeSent[39]_i_152_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_153 
       (.I0(countAddrToBeSent[28]),
        .I1(countAddrSentRatioFix_reg_n_0_[28]),
        .O(\countAddrToBeSent[39]_i_153_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_154 
       (.I0(countAddrToBeSent[27]),
        .I1(countAddrSentRatioFix_reg_n_0_[27]),
        .O(\countAddrToBeSent[39]_i_154_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_155 
       (.I0(countAddrToBeSent[26]),
        .I1(countAddrSentRatioFix_reg_n_0_[26]),
        .O(\countAddrToBeSent[39]_i_155_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_156 
       (.I0(countAddrToBeSent[25]),
        .I1(countAddrSentRatioFix_reg_n_0_[25]),
        .O(\countAddrToBeSent[39]_i_156_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_157 
       (.I0(countAddrToBeSent[24]),
        .I1(countAddrSentRatioFix_reg_n_0_[24]),
        .O(\countAddrToBeSent[39]_i_157_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_159 
       (.I0(countDataReceived[39]),
        .I1(countDataReceivedRatioFix_reg_n_0_[39]),
        .O(\countAddrToBeSent[39]_i_159_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_160 
       (.I0(countDataReceived[38]),
        .I1(countDataReceivedRatioFix_reg_n_0_[38]),
        .O(\countAddrToBeSent[39]_i_160_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_161 
       (.I0(countDataReceived[37]),
        .I1(countDataReceivedRatioFix_reg_n_0_[37]),
        .O(\countAddrToBeSent[39]_i_161_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_162 
       (.I0(countDataReceived[36]),
        .I1(countDataReceivedRatioFix_reg_n_0_[36]),
        .O(\countAddrToBeSent[39]_i_162_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_163 
       (.I0(countDataReceived[35]),
        .I1(countDataReceivedRatioFix_reg_n_0_[35]),
        .O(\countAddrToBeSent[39]_i_163_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_164 
       (.I0(countDataReceived[34]),
        .I1(countDataReceivedRatioFix_reg_n_0_[34]),
        .O(\countAddrToBeSent[39]_i_164_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_165 
       (.I0(countDataReceived[33]),
        .I1(countDataReceivedRatioFix_reg_n_0_[33]),
        .O(\countAddrToBeSent[39]_i_165_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_166 
       (.I0(countDataReceived[32]),
        .I1(countDataReceivedRatioFix_reg_n_0_[32]),
        .O(\countAddrToBeSent[39]_i_166_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_167 
       (.I0(countAddrToBeSent[15]),
        .I1(countAddrSent[15]),
        .O(\countAddrToBeSent[39]_i_167_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_168 
       (.I0(countAddrToBeSent[14]),
        .I1(countAddrSent[14]),
        .O(\countAddrToBeSent[39]_i_168_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_169 
       (.I0(countAddrToBeSent[13]),
        .I1(countAddrSent[13]),
        .O(\countAddrToBeSent[39]_i_169_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_17 
       (.I0(write_ticks2[30]),
        .I1(write_ticks_per_burst[30]),
        .I2(write_ticks_per_burst[31]),
        .I3(write_ticks2[31]),
        .O(\countAddrToBeSent[39]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_170 
       (.I0(countAddrToBeSent[12]),
        .I1(countAddrSent[12]),
        .O(\countAddrToBeSent[39]_i_170_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_171 
       (.I0(countAddrToBeSent[11]),
        .I1(countAddrSent[11]),
        .O(\countAddrToBeSent[39]_i_171_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_172 
       (.I0(countAddrToBeSent[10]),
        .I1(countAddrSent[10]),
        .O(\countAddrToBeSent[39]_i_172_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_173 
       (.I0(countAddrToBeSent[9]),
        .I1(countAddrSent[9]),
        .O(\countAddrToBeSent[39]_i_173_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_174 
       (.I0(countAddrToBeSent[8]),
        .I1(countAddrSent[8]),
        .O(\countAddrToBeSent[39]_i_174_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_175 
       (.I0(countAddrToBeSent[7]),
        .I1(countAddrSent[7]),
        .O(\countAddrToBeSent[39]_i_175_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_176 
       (.I0(countAddrToBeSent[6]),
        .I1(countAddrSent[6]),
        .O(\countAddrToBeSent[39]_i_176_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_177 
       (.I0(countAddrToBeSent[5]),
        .I1(countAddrSent[5]),
        .O(\countAddrToBeSent[39]_i_177_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_178 
       (.I0(countAddrToBeSent[4]),
        .I1(countAddrSent[4]),
        .O(\countAddrToBeSent[39]_i_178_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_179 
       (.I0(countAddrToBeSent[3]),
        .I1(countAddrSent[3]),
        .O(\countAddrToBeSent[39]_i_179_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_18 
       (.I0(write_ticks2[28]),
        .I1(write_ticks_per_burst[28]),
        .I2(write_ticks_per_burst[29]),
        .I3(write_ticks2[29]),
        .O(\countAddrToBeSent[39]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_180 
       (.I0(countAddrToBeSent[2]),
        .I1(countAddrSent[2]),
        .O(\countAddrToBeSent[39]_i_180_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_181 
       (.I0(countAddrToBeSent[1]),
        .I1(countAddrSent[1]),
        .O(\countAddrToBeSent[39]_i_181_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_182 
       (.I0(countAddrToBeSent[0]),
        .I1(countAddrSent[0]),
        .O(\countAddrToBeSent[39]_i_182_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_185 
       (.I0(write_ticks22_out[15]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_8 ),
        .O(\countAddrToBeSent[39]_i_185_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_186 
       (.I0(write_ticks22_out[14]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_9 ),
        .O(\countAddrToBeSent[39]_i_186_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_187 
       (.I0(write_ticks22_out[13]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_10 ),
        .O(\countAddrToBeSent[39]_i_187_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_188 
       (.I0(write_ticks22_out[12]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_11 ),
        .O(\countAddrToBeSent[39]_i_188_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_189 
       (.I0(write_ticks22_out[11]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_12 ),
        .O(\countAddrToBeSent[39]_i_189_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_19 
       (.I0(write_ticks2[26]),
        .I1(write_ticks_per_burst[26]),
        .I2(write_ticks_per_burst[27]),
        .I3(write_ticks2[27]),
        .O(\countAddrToBeSent[39]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_190 
       (.I0(write_ticks22_out[10]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_13 ),
        .O(\countAddrToBeSent[39]_i_190_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_191 
       (.I0(write_ticks22_out[9]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_14 ),
        .O(\countAddrToBeSent[39]_i_191_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_192 
       (.I0(write_ticks22_out[8]),
        .I1(\countAddrToBeSent_reg[39]_i_227_n_15 ),
        .O(\countAddrToBeSent[39]_i_192_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_193 
       (.I0(countAddrToBeSent[23]),
        .I1(countAddrSentRatioFix_reg_n_0_[23]),
        .O(\countAddrToBeSent[39]_i_193_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_194 
       (.I0(countAddrToBeSent[22]),
        .I1(countAddrSentRatioFix_reg_n_0_[22]),
        .O(\countAddrToBeSent[39]_i_194_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_195 
       (.I0(countAddrToBeSent[21]),
        .I1(countAddrSentRatioFix_reg_n_0_[21]),
        .O(\countAddrToBeSent[39]_i_195_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_196 
       (.I0(countAddrToBeSent[20]),
        .I1(countAddrSentRatioFix_reg_n_0_[20]),
        .O(\countAddrToBeSent[39]_i_196_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_197 
       (.I0(countAddrToBeSent[19]),
        .I1(countAddrSentRatioFix_reg_n_0_[19]),
        .O(\countAddrToBeSent[39]_i_197_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_198 
       (.I0(countAddrToBeSent[18]),
        .I1(countAddrSentRatioFix_reg_n_0_[18]),
        .O(\countAddrToBeSent[39]_i_198_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_199 
       (.I0(countAddrToBeSent[17]),
        .I1(countAddrSentRatioFix_reg_n_0_[17]),
        .O(\countAddrToBeSent[39]_i_199_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[39]_i_2 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[39]_i_6_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[39]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_20 
       (.I0(write_ticks2[24]),
        .I1(write_ticks_per_burst[24]),
        .I2(write_ticks_per_burst[25]),
        .I3(write_ticks2[25]),
        .O(\countAddrToBeSent[39]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_200 
       (.I0(countAddrToBeSent[16]),
        .I1(countAddrSentRatioFix_reg_n_0_[16]),
        .O(\countAddrToBeSent[39]_i_200_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_202 
       (.I0(countDataReceived[31]),
        .I1(countDataReceivedRatioFix_reg_n_0_[31]),
        .O(\countAddrToBeSent[39]_i_202_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_203 
       (.I0(countDataReceived[30]),
        .I1(countDataReceivedRatioFix_reg_n_0_[30]),
        .O(\countAddrToBeSent[39]_i_203_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_204 
       (.I0(countDataReceived[29]),
        .I1(countDataReceivedRatioFix_reg_n_0_[29]),
        .O(\countAddrToBeSent[39]_i_204_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_205 
       (.I0(countDataReceived[28]),
        .I1(countDataReceivedRatioFix_reg_n_0_[28]),
        .O(\countAddrToBeSent[39]_i_205_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_206 
       (.I0(countDataReceived[27]),
        .I1(countDataReceivedRatioFix_reg_n_0_[27]),
        .O(\countAddrToBeSent[39]_i_206_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_207 
       (.I0(countDataReceived[26]),
        .I1(countDataReceivedRatioFix_reg_n_0_[26]),
        .O(\countAddrToBeSent[39]_i_207_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_208 
       (.I0(countDataReceived[25]),
        .I1(countDataReceivedRatioFix_reg_n_0_[25]),
        .O(\countAddrToBeSent[39]_i_208_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_209 
       (.I0(countDataReceived[24]),
        .I1(countDataReceivedRatioFix_reg_n_0_[24]),
        .O(\countAddrToBeSent[39]_i_209_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_21 
       (.I0(write_ticks2[22]),
        .I1(write_ticks_per_burst[22]),
        .I2(write_ticks_per_burst[23]),
        .I3(write_ticks2[23]),
        .O(\countAddrToBeSent[39]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_211 
       (.I0(write_ticks22_out[7]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_8 ),
        .O(\countAddrToBeSent[39]_i_211_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_212 
       (.I0(write_ticks22_out[6]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_9 ),
        .O(\countAddrToBeSent[39]_i_212_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_213 
       (.I0(write_ticks22_out[5]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_10 ),
        .O(\countAddrToBeSent[39]_i_213_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_214 
       (.I0(write_ticks22_out[4]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_11 ),
        .O(\countAddrToBeSent[39]_i_214_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_215 
       (.I0(write_ticks22_out[3]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_12 ),
        .O(\countAddrToBeSent[39]_i_215_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_216 
       (.I0(write_ticks22_out[2]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_13 ),
        .O(\countAddrToBeSent[39]_i_216_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_217 
       (.I0(write_ticks22_out[1]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_14 ),
        .O(\countAddrToBeSent[39]_i_217_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_218 
       (.I0(write_ticks22_out[0]),
        .I1(\countAddrToBeSent_reg[39]_i_244_n_15 ),
        .O(\countAddrToBeSent[39]_i_218_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_219 
       (.I0(countAddrToBeSent[15]),
        .I1(countAddrSentRatioFix_reg_n_0_[15]),
        .O(\countAddrToBeSent[39]_i_219_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_22 
       (.I0(write_ticks2[20]),
        .I1(write_ticks_per_burst[20]),
        .I2(write_ticks_per_burst[21]),
        .I3(write_ticks2[21]),
        .O(\countAddrToBeSent[39]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_220 
       (.I0(countAddrToBeSent[14]),
        .I1(countAddrSentRatioFix_reg_n_0_[14]),
        .O(\countAddrToBeSent[39]_i_220_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_221 
       (.I0(countAddrToBeSent[13]),
        .I1(countAddrSentRatioFix_reg_n_0_[13]),
        .O(\countAddrToBeSent[39]_i_221_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_222 
       (.I0(countAddrToBeSent[12]),
        .I1(countAddrSentRatioFix_reg_n_0_[12]),
        .O(\countAddrToBeSent[39]_i_222_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_223 
       (.I0(countAddrToBeSent[11]),
        .I1(countAddrSentRatioFix_reg_n_0_[11]),
        .O(\countAddrToBeSent[39]_i_223_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_224 
       (.I0(countAddrToBeSent[10]),
        .I1(countAddrSentRatioFix_reg_n_0_[10]),
        .O(\countAddrToBeSent[39]_i_224_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_225 
       (.I0(countAddrToBeSent[9]),
        .I1(countAddrSentRatioFix_reg_n_0_[9]),
        .O(\countAddrToBeSent[39]_i_225_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_226 
       (.I0(countAddrToBeSent[8]),
        .I1(countAddrSentRatioFix_reg_n_0_[8]),
        .O(\countAddrToBeSent[39]_i_226_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_228 
       (.I0(countDataReceived[23]),
        .I1(countDataReceivedRatioFix_reg_n_0_[23]),
        .O(\countAddrToBeSent[39]_i_228_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_229 
       (.I0(countDataReceived[22]),
        .I1(countDataReceivedRatioFix_reg_n_0_[22]),
        .O(\countAddrToBeSent[39]_i_229_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_23 
       (.I0(write_ticks2[18]),
        .I1(write_ticks_per_burst[18]),
        .I2(write_ticks_per_burst[19]),
        .I3(write_ticks2[19]),
        .O(\countAddrToBeSent[39]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_230 
       (.I0(countDataReceived[21]),
        .I1(countDataReceivedRatioFix_reg_n_0_[21]),
        .O(\countAddrToBeSent[39]_i_230_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_231 
       (.I0(countDataReceived[20]),
        .I1(countDataReceivedRatioFix_reg_n_0_[20]),
        .O(\countAddrToBeSent[39]_i_231_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_232 
       (.I0(countDataReceived[19]),
        .I1(countDataReceivedRatioFix_reg_n_0_[19]),
        .O(\countAddrToBeSent[39]_i_232_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_233 
       (.I0(countDataReceived[18]),
        .I1(countDataReceivedRatioFix_reg_n_0_[18]),
        .O(\countAddrToBeSent[39]_i_233_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_234 
       (.I0(countDataReceived[17]),
        .I1(countDataReceivedRatioFix_reg_n_0_[17]),
        .O(\countAddrToBeSent[39]_i_234_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_235 
       (.I0(countDataReceived[16]),
        .I1(countDataReceivedRatioFix_reg_n_0_[16]),
        .O(\countAddrToBeSent[39]_i_235_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_236 
       (.I0(countAddrToBeSent[7]),
        .I1(countAddrSentRatioFix_reg_n_0_[7]),
        .O(\countAddrToBeSent[39]_i_236_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_237 
       (.I0(countAddrToBeSent[6]),
        .I1(countAddrSentRatioFix_reg_n_0_[6]),
        .O(\countAddrToBeSent[39]_i_237_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_238 
       (.I0(countAddrToBeSent[5]),
        .I1(countAddrSentRatioFix_reg_n_0_[5]),
        .O(\countAddrToBeSent[39]_i_238_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_239 
       (.I0(countAddrToBeSent[4]),
        .I1(countAddrSentRatioFix_reg_n_0_[4]),
        .O(\countAddrToBeSent[39]_i_239_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_24 
       (.I0(write_ticks2[16]),
        .I1(write_ticks_per_burst[16]),
        .I2(write_ticks_per_burst[17]),
        .I3(write_ticks2[17]),
        .O(\countAddrToBeSent[39]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_240 
       (.I0(countAddrToBeSent[3]),
        .I1(countAddrSentRatioFix_reg_n_0_[3]),
        .O(\countAddrToBeSent[39]_i_240_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_241 
       (.I0(countAddrToBeSent[2]),
        .I1(countAddrSentRatioFix_reg_n_0_[2]),
        .O(\countAddrToBeSent[39]_i_241_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_242 
       (.I0(countAddrToBeSent[1]),
        .I1(countAddrSentRatioFix_reg_n_0_[1]),
        .O(\countAddrToBeSent[39]_i_242_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_243 
       (.I0(countAddrToBeSent[0]),
        .I1(countAddrSentRatioFix_reg_n_0_[0]),
        .O(\countAddrToBeSent[39]_i_243_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_245 
       (.I0(countDataReceived[15]),
        .I1(countDataReceivedRatioFix_reg_n_0_[15]),
        .O(\countAddrToBeSent[39]_i_245_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_246 
       (.I0(countDataReceived[14]),
        .I1(countDataReceivedRatioFix_reg_n_0_[14]),
        .O(\countAddrToBeSent[39]_i_246_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_247 
       (.I0(countDataReceived[13]),
        .I1(countDataReceivedRatioFix_reg_n_0_[13]),
        .O(\countAddrToBeSent[39]_i_247_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_248 
       (.I0(countDataReceived[12]),
        .I1(countDataReceivedRatioFix_reg_n_0_[12]),
        .O(\countAddrToBeSent[39]_i_248_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_249 
       (.I0(countDataReceived[11]),
        .I1(countDataReceivedRatioFix_reg_n_0_[11]),
        .O(\countAddrToBeSent[39]_i_249_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_25 
       (.I0(write_ticks2[30]),
        .I1(write_ticks_per_burst[30]),
        .I2(write_ticks2[31]),
        .I3(write_ticks_per_burst[31]),
        .O(\countAddrToBeSent[39]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_250 
       (.I0(countDataReceived[10]),
        .I1(countDataReceivedRatioFix_reg_n_0_[10]),
        .O(\countAddrToBeSent[39]_i_250_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_251 
       (.I0(countDataReceived[9]),
        .I1(countDataReceivedRatioFix_reg_n_0_[9]),
        .O(\countAddrToBeSent[39]_i_251_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_252 
       (.I0(countDataReceived[8]),
        .I1(countDataReceivedRatioFix_reg_n_0_[8]),
        .O(\countAddrToBeSent[39]_i_252_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_253 
       (.I0(countDataReceived[7]),
        .I1(countDataReceivedRatioFix_reg_n_0_[7]),
        .O(\countAddrToBeSent[39]_i_253_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_254 
       (.I0(countDataReceived[6]),
        .I1(countDataReceivedRatioFix_reg_n_0_[6]),
        .O(\countAddrToBeSent[39]_i_254_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_255 
       (.I0(countDataReceived[5]),
        .I1(countDataReceivedRatioFix_reg_n_0_[5]),
        .O(\countAddrToBeSent[39]_i_255_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_256 
       (.I0(countDataReceived[4]),
        .I1(countDataReceivedRatioFix_reg_n_0_[4]),
        .O(\countAddrToBeSent[39]_i_256_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_257 
       (.I0(countDataReceived[3]),
        .I1(countDataReceivedRatioFix_reg_n_0_[3]),
        .O(\countAddrToBeSent[39]_i_257_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_258 
       (.I0(countDataReceived[2]),
        .I1(countDataReceivedRatioFix_reg_n_0_[2]),
        .O(\countAddrToBeSent[39]_i_258_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_259 
       (.I0(countDataReceived[1]),
        .I1(countDataReceivedRatioFix_reg_n_0_[1]),
        .O(\countAddrToBeSent[39]_i_259_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_26 
       (.I0(write_ticks2[28]),
        .I1(write_ticks_per_burst[28]),
        .I2(write_ticks2[29]),
        .I3(write_ticks_per_burst[29]),
        .O(\countAddrToBeSent[39]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[39]_i_260 
       (.I0(countDataReceived[0]),
        .I1(countDataReceivedRatioFix_reg_n_0_[0]),
        .O(\countAddrToBeSent[39]_i_260_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_27 
       (.I0(write_ticks2[26]),
        .I1(write_ticks_per_burst[26]),
        .I2(write_ticks2[27]),
        .I3(write_ticks_per_burst[27]),
        .O(\countAddrToBeSent[39]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_28 
       (.I0(write_ticks2[24]),
        .I1(write_ticks_per_burst[24]),
        .I2(write_ticks2[25]),
        .I3(write_ticks_per_burst[25]),
        .O(\countAddrToBeSent[39]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_29 
       (.I0(write_ticks2[22]),
        .I1(write_ticks_per_burst[22]),
        .I2(write_ticks2[23]),
        .I3(write_ticks_per_burst[23]),
        .O(\countAddrToBeSent[39]_i_29_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \countAddrToBeSent[39]_i_3 
       (.I0(active_write),
        .I1(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .O(countAddrToBeSent__0));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_30 
       (.I0(write_ticks2[20]),
        .I1(write_ticks_per_burst[20]),
        .I2(write_ticks2[21]),
        .I3(write_ticks_per_burst[21]),
        .O(\countAddrToBeSent[39]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_31 
       (.I0(write_ticks2[18]),
        .I1(write_ticks_per_burst[18]),
        .I2(write_ticks2[19]),
        .I3(write_ticks_per_burst[19]),
        .O(\countAddrToBeSent[39]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_32 
       (.I0(write_ticks2[16]),
        .I1(write_ticks_per_burst[16]),
        .I2(write_ticks2[17]),
        .I3(write_ticks_per_burst[17]),
        .O(\countAddrToBeSent[39]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_34 
       (.I0(write_max_queue_size[30]),
        .I1(write_ticks21_out[30]),
        .I2(write_ticks21_out[31]),
        .I3(write_max_queue_size[31]),
        .O(\countAddrToBeSent[39]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_35 
       (.I0(write_max_queue_size[28]),
        .I1(write_ticks21_out[28]),
        .I2(write_ticks21_out[29]),
        .I3(write_max_queue_size[29]),
        .O(\countAddrToBeSent[39]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_36 
       (.I0(write_max_queue_size[26]),
        .I1(write_ticks21_out[26]),
        .I2(write_ticks21_out[27]),
        .I3(write_max_queue_size[27]),
        .O(\countAddrToBeSent[39]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_37 
       (.I0(write_max_queue_size[24]),
        .I1(write_ticks21_out[24]),
        .I2(write_ticks21_out[25]),
        .I3(write_max_queue_size[25]),
        .O(\countAddrToBeSent[39]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_38 
       (.I0(write_max_queue_size[22]),
        .I1(write_ticks21_out[22]),
        .I2(write_ticks21_out[23]),
        .I3(write_max_queue_size[23]),
        .O(\countAddrToBeSent[39]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_39 
       (.I0(write_max_queue_size[20]),
        .I1(write_ticks21_out[20]),
        .I2(write_ticks21_out[21]),
        .I3(write_max_queue_size[21]),
        .O(\countAddrToBeSent[39]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_40 
       (.I0(write_max_queue_size[18]),
        .I1(write_ticks21_out[18]),
        .I2(write_ticks21_out[19]),
        .I3(write_max_queue_size[19]),
        .O(\countAddrToBeSent[39]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_41 
       (.I0(write_max_queue_size[16]),
        .I1(write_ticks21_out[16]),
        .I2(write_ticks21_out[17]),
        .I3(write_max_queue_size[17]),
        .O(\countAddrToBeSent[39]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_42 
       (.I0(write_max_queue_size[30]),
        .I1(write_ticks21_out[30]),
        .I2(write_max_queue_size[31]),
        .I3(write_ticks21_out[31]),
        .O(\countAddrToBeSent[39]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_43 
       (.I0(write_max_queue_size[28]),
        .I1(write_ticks21_out[28]),
        .I2(write_max_queue_size[29]),
        .I3(write_ticks21_out[29]),
        .O(\countAddrToBeSent[39]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_44 
       (.I0(write_max_queue_size[26]),
        .I1(write_ticks21_out[26]),
        .I2(write_max_queue_size[27]),
        .I3(write_ticks21_out[27]),
        .O(\countAddrToBeSent[39]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_45 
       (.I0(write_max_queue_size[24]),
        .I1(write_ticks21_out[24]),
        .I2(write_max_queue_size[25]),
        .I3(write_ticks21_out[25]),
        .O(\countAddrToBeSent[39]_i_45_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_46 
       (.I0(write_max_queue_size[22]),
        .I1(write_ticks21_out[22]),
        .I2(write_max_queue_size[23]),
        .I3(write_ticks21_out[23]),
        .O(\countAddrToBeSent[39]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_47 
       (.I0(write_max_queue_size[20]),
        .I1(write_ticks21_out[20]),
        .I2(write_max_queue_size[21]),
        .I3(write_ticks21_out[21]),
        .O(\countAddrToBeSent[39]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_48 
       (.I0(write_max_queue_size[18]),
        .I1(write_ticks21_out[18]),
        .I2(write_max_queue_size[19]),
        .I3(write_ticks21_out[19]),
        .O(\countAddrToBeSent[39]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_49 
       (.I0(write_max_queue_size[16]),
        .I1(write_ticks21_out[16]),
        .I2(write_max_queue_size[17]),
        .I3(write_ticks21_out[17]),
        .O(\countAddrToBeSent[39]_i_49_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_53 
       (.I0(write_ticks22_out[39]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_8 ),
        .O(\countAddrToBeSent[39]_i_53_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_54 
       (.I0(write_ticks22_out[38]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_9 ),
        .O(\countAddrToBeSent[39]_i_54_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_55 
       (.I0(write_ticks22_out[37]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_10 ),
        .O(\countAddrToBeSent[39]_i_55_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_56 
       (.I0(write_ticks22_out[36]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_11 ),
        .O(\countAddrToBeSent[39]_i_56_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_57 
       (.I0(write_ticks22_out[35]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_12 ),
        .O(\countAddrToBeSent[39]_i_57_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_58 
       (.I0(write_ticks22_out[34]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_13 ),
        .O(\countAddrToBeSent[39]_i_58_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_59 
       (.I0(write_ticks22_out[33]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_14 ),
        .O(\countAddrToBeSent[39]_i_59_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[39]_i_6 
       (.I0(countAddrToBeSent00_in[39]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[39]),
        .O(\countAddrToBeSent[39]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_60 
       (.I0(write_ticks22_out[32]),
        .I1(\countAddrToBeSent_reg[39]_i_121_n_15 ),
        .O(\countAddrToBeSent[39]_i_60_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_61 
       (.I0(write_ticks2[14]),
        .I1(write_ticks_per_burst[14]),
        .I2(write_ticks_per_burst[15]),
        .I3(write_ticks2[15]),
        .O(\countAddrToBeSent[39]_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_62 
       (.I0(write_ticks2[12]),
        .I1(write_ticks_per_burst[12]),
        .I2(write_ticks_per_burst[13]),
        .I3(write_ticks2[13]),
        .O(\countAddrToBeSent[39]_i_62_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_63 
       (.I0(write_ticks2[10]),
        .I1(write_ticks_per_burst[10]),
        .I2(write_ticks_per_burst[11]),
        .I3(write_ticks2[11]),
        .O(\countAddrToBeSent[39]_i_63_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_64 
       (.I0(write_ticks2[8]),
        .I1(write_ticks_per_burst[8]),
        .I2(write_ticks_per_burst[9]),
        .I3(write_ticks2[9]),
        .O(\countAddrToBeSent[39]_i_64_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_65 
       (.I0(write_ticks2[6]),
        .I1(write_ticks_per_burst[6]),
        .I2(write_ticks_per_burst[7]),
        .I3(write_ticks2[7]),
        .O(\countAddrToBeSent[39]_i_65_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_66 
       (.I0(write_ticks2[4]),
        .I1(write_ticks_per_burst[4]),
        .I2(write_ticks_per_burst[5]),
        .I3(write_ticks2[5]),
        .O(\countAddrToBeSent[39]_i_66_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_67 
       (.I0(write_ticks2[2]),
        .I1(write_ticks_per_burst[2]),
        .I2(write_ticks_per_burst[3]),
        .I3(write_ticks2[3]),
        .O(\countAddrToBeSent[39]_i_67_n_0 ));
  LUT4 #(
    .INIT(16'h1F01)) 
    \countAddrToBeSent[39]_i_68 
       (.I0(write_ticks_per_burst[0]),
        .I1(write_ticks[0]),
        .I2(write_ticks_per_burst[1]),
        .I3(write_ticks2[1]),
        .O(\countAddrToBeSent[39]_i_68_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_69 
       (.I0(write_ticks2[14]),
        .I1(write_ticks_per_burst[14]),
        .I2(write_ticks2[15]),
        .I3(write_ticks_per_burst[15]),
        .O(\countAddrToBeSent[39]_i_69_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_70 
       (.I0(write_ticks2[12]),
        .I1(write_ticks_per_burst[12]),
        .I2(write_ticks2[13]),
        .I3(write_ticks_per_burst[13]),
        .O(\countAddrToBeSent[39]_i_70_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_71 
       (.I0(write_ticks2[10]),
        .I1(write_ticks_per_burst[10]),
        .I2(write_ticks2[11]),
        .I3(write_ticks_per_burst[11]),
        .O(\countAddrToBeSent[39]_i_71_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_72 
       (.I0(write_ticks2[8]),
        .I1(write_ticks_per_burst[8]),
        .I2(write_ticks2[9]),
        .I3(write_ticks_per_burst[9]),
        .O(\countAddrToBeSent[39]_i_72_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_73 
       (.I0(write_ticks2[6]),
        .I1(write_ticks_per_burst[6]),
        .I2(write_ticks2[7]),
        .I3(write_ticks_per_burst[7]),
        .O(\countAddrToBeSent[39]_i_73_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_74 
       (.I0(write_ticks2[4]),
        .I1(write_ticks_per_burst[4]),
        .I2(write_ticks2[5]),
        .I3(write_ticks_per_burst[5]),
        .O(\countAddrToBeSent[39]_i_74_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_75 
       (.I0(write_ticks2[2]),
        .I1(write_ticks_per_burst[2]),
        .I2(write_ticks2[3]),
        .I3(write_ticks_per_burst[3]),
        .O(\countAddrToBeSent[39]_i_75_n_0 ));
  LUT4 #(
    .INIT(16'h6006)) 
    \countAddrToBeSent[39]_i_76 
       (.I0(write_ticks[0]),
        .I1(write_ticks_per_burst[0]),
        .I2(write_ticks2[1]),
        .I3(write_ticks_per_burst[1]),
        .O(\countAddrToBeSent[39]_i_76_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_77 
       (.I0(write_max_queue_size[14]),
        .I1(write_ticks21_out[14]),
        .I2(write_ticks21_out[15]),
        .I3(write_max_queue_size[15]),
        .O(\countAddrToBeSent[39]_i_77_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_78 
       (.I0(write_max_queue_size[12]),
        .I1(write_ticks21_out[12]),
        .I2(write_ticks21_out[13]),
        .I3(write_max_queue_size[13]),
        .O(\countAddrToBeSent[39]_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_79 
       (.I0(write_max_queue_size[10]),
        .I1(write_ticks21_out[10]),
        .I2(write_ticks21_out[11]),
        .I3(write_max_queue_size[11]),
        .O(\countAddrToBeSent[39]_i_79_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_80 
       (.I0(write_max_queue_size[8]),
        .I1(write_ticks21_out[8]),
        .I2(write_ticks21_out[9]),
        .I3(write_max_queue_size[9]),
        .O(\countAddrToBeSent[39]_i_80_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_81 
       (.I0(write_max_queue_size[6]),
        .I1(write_ticks21_out[6]),
        .I2(write_ticks21_out[7]),
        .I3(write_max_queue_size[7]),
        .O(\countAddrToBeSent[39]_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_82 
       (.I0(write_max_queue_size[4]),
        .I1(write_ticks21_out[4]),
        .I2(write_ticks21_out[5]),
        .I3(write_max_queue_size[5]),
        .O(\countAddrToBeSent[39]_i_82_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_83 
       (.I0(write_max_queue_size[2]),
        .I1(write_ticks21_out[2]),
        .I2(write_ticks21_out[3]),
        .I3(write_max_queue_size[3]),
        .O(\countAddrToBeSent[39]_i_83_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countAddrToBeSent[39]_i_84 
       (.I0(write_max_queue_size[0]),
        .I1(write_ticks21_out[0]),
        .I2(write_ticks21_out[1]),
        .I3(write_max_queue_size[1]),
        .O(\countAddrToBeSent[39]_i_84_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_85 
       (.I0(write_max_queue_size[14]),
        .I1(write_ticks21_out[14]),
        .I2(write_max_queue_size[15]),
        .I3(write_ticks21_out[15]),
        .O(\countAddrToBeSent[39]_i_85_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_86 
       (.I0(write_max_queue_size[12]),
        .I1(write_ticks21_out[12]),
        .I2(write_max_queue_size[13]),
        .I3(write_ticks21_out[13]),
        .O(\countAddrToBeSent[39]_i_86_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_87 
       (.I0(write_max_queue_size[10]),
        .I1(write_ticks21_out[10]),
        .I2(write_max_queue_size[11]),
        .I3(write_ticks21_out[11]),
        .O(\countAddrToBeSent[39]_i_87_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_88 
       (.I0(write_max_queue_size[8]),
        .I1(write_ticks21_out[8]),
        .I2(write_max_queue_size[9]),
        .I3(write_ticks21_out[9]),
        .O(\countAddrToBeSent[39]_i_88_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_89 
       (.I0(write_max_queue_size[6]),
        .I1(write_ticks21_out[6]),
        .I2(write_max_queue_size[7]),
        .I3(write_ticks21_out[7]),
        .O(\countAddrToBeSent[39]_i_89_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \countAddrToBeSent[39]_i_9 
       (.I0(write_ticks21_out[38]),
        .I1(write_ticks21_out[39]),
        .O(\countAddrToBeSent[39]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_90 
       (.I0(write_max_queue_size[4]),
        .I1(write_ticks21_out[4]),
        .I2(write_max_queue_size[5]),
        .I3(write_ticks21_out[5]),
        .O(\countAddrToBeSent[39]_i_90_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_91 
       (.I0(write_max_queue_size[2]),
        .I1(write_ticks21_out[2]),
        .I2(write_max_queue_size[3]),
        .I3(write_ticks21_out[3]),
        .O(\countAddrToBeSent[39]_i_91_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countAddrToBeSent[39]_i_92 
       (.I0(write_max_queue_size[0]),
        .I1(write_ticks21_out[0]),
        .I2(write_max_queue_size[1]),
        .I3(write_ticks21_out[1]),
        .O(\countAddrToBeSent[39]_i_92_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_95 
       (.I0(countAddrToBeSent[39]),
        .I1(countAddrSent[39]),
        .O(\countAddrToBeSent[39]_i_95_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_96 
       (.I0(countAddrToBeSent[38]),
        .I1(countAddrSent[38]),
        .O(\countAddrToBeSent[39]_i_96_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_97 
       (.I0(countAddrToBeSent[37]),
        .I1(countAddrSent[37]),
        .O(\countAddrToBeSent[39]_i_97_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_98 
       (.I0(countAddrToBeSent[36]),
        .I1(countAddrSent[36]),
        .O(\countAddrToBeSent[39]_i_98_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countAddrToBeSent[39]_i_99 
       (.I0(countAddrToBeSent[35]),
        .I1(countAddrSent[35]),
        .O(\countAddrToBeSent[39]_i_99_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[3]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[3]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[3]_i_2 
       (.I0(countAddrToBeSent00_in[3]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[3]),
        .O(\countAddrToBeSent[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[4]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[4]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[4]_i_2 
       (.I0(countAddrToBeSent00_in[4]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[4]),
        .O(\countAddrToBeSent[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[5]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[5]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[5]_i_2 
       (.I0(countAddrToBeSent00_in[5]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[5]),
        .O(\countAddrToBeSent[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[6]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[6]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[6]_i_2 
       (.I0(countAddrToBeSent00_in[6]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[6]),
        .O(\countAddrToBeSent[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[7]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[7]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_10 
       (.I0(countAddrToBeSent[1]),
        .I1(write_blocking_ratio[1]),
        .O(\countAddrToBeSent[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_11 
       (.I0(countAddrToBeSent[0]),
        .I1(write_blocking_ratio[0]),
        .O(\countAddrToBeSent[7]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[7]_i_2 
       (.I0(countAddrToBeSent00_in[7]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[7]),
        .O(\countAddrToBeSent[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_4 
       (.I0(countAddrToBeSent[7]),
        .I1(write_blocking_ratio[7]),
        .O(\countAddrToBeSent[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_5 
       (.I0(countAddrToBeSent[6]),
        .I1(write_blocking_ratio[6]),
        .O(\countAddrToBeSent[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_6 
       (.I0(countAddrToBeSent[5]),
        .I1(write_blocking_ratio[5]),
        .O(\countAddrToBeSent[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_7 
       (.I0(countAddrToBeSent[4]),
        .I1(write_blocking_ratio[4]),
        .O(\countAddrToBeSent[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_8 
       (.I0(countAddrToBeSent[3]),
        .I1(write_blocking_ratio[3]),
        .O(\countAddrToBeSent[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countAddrToBeSent[7]_i_9 
       (.I0(countAddrToBeSent[2]),
        .I1(write_blocking_ratio[2]),
        .O(\countAddrToBeSent[7]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[8]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[8]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[8]_i_2 
       (.I0(countAddrToBeSent00_in[8]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[8]),
        .O(\countAddrToBeSent[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countAddrToBeSent[9]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(\countAddrToBeSent[9]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countAddrToBeSent[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countAddrToBeSent[9]_i_2 
       (.I0(countAddrToBeSent00_in[9]),
        .I1(write_ticks1),
        .I2(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I3(active_blocking),
        .I4(countAddrToBeSent0[9]),
        .O(\countAddrToBeSent[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[0] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[0]_i_1_n_0 ),
        .Q(countAddrToBeSent[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[10] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[10]_i_1_n_0 ),
        .Q(countAddrToBeSent[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[11] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[11]_i_1_n_0 ),
        .Q(countAddrToBeSent[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[12] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[12]_i_1_n_0 ),
        .Q(countAddrToBeSent[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[13] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[13]_i_1_n_0 ),
        .Q(countAddrToBeSent[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[14] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[14]_i_1_n_0 ),
        .Q(countAddrToBeSent[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[15] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[15]_i_1_n_0 ),
        .Q(countAddrToBeSent[15]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[15]_i_3 
       (.CI(\countAddrToBeSent_reg[7]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[15]_i_3_n_0 ,\countAddrToBeSent_reg[15]_i_3_n_1 ,\countAddrToBeSent_reg[15]_i_3_n_2 ,\countAddrToBeSent_reg[15]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[15]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[15]_i_3_n_5 ,\countAddrToBeSent_reg[15]_i_3_n_6 ,\countAddrToBeSent_reg[15]_i_3_n_7 }),
        .DI(countAddrToBeSent[15:8]),
        .O(countAddrToBeSent00_in[15:8]),
        .S({\countAddrToBeSent[15]_i_4_n_0 ,\countAddrToBeSent[15]_i_5_n_0 ,\countAddrToBeSent[15]_i_6_n_0 ,\countAddrToBeSent[15]_i_7_n_0 ,\countAddrToBeSent[15]_i_8_n_0 ,\countAddrToBeSent[15]_i_9_n_0 ,\countAddrToBeSent[15]_i_10_n_0 ,\countAddrToBeSent[15]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[16] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[16]_i_1_n_0 ),
        .Q(countAddrToBeSent[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[16]_i_3 
       (.CI(\countAddrToBeSent_reg[8]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[16]_i_3_n_0 ,\countAddrToBeSent_reg[16]_i_3_n_1 ,\countAddrToBeSent_reg[16]_i_3_n_2 ,\countAddrToBeSent_reg[16]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[16]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[16]_i_3_n_5 ,\countAddrToBeSent_reg[16]_i_3_n_6 ,\countAddrToBeSent_reg[16]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrToBeSent0[16:9]),
        .S(countAddrToBeSent[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[17] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[17]_i_1_n_0 ),
        .Q(countAddrToBeSent[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[18] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[18]_i_1_n_0 ),
        .Q(countAddrToBeSent[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[19] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[19]_i_1_n_0 ),
        .Q(countAddrToBeSent[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[1] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[1]_i_1_n_0 ),
        .Q(countAddrToBeSent[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[20] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[20]_i_1_n_0 ),
        .Q(countAddrToBeSent[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[21] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[21]_i_1_n_0 ),
        .Q(countAddrToBeSent[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[22] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[22]_i_1_n_0 ),
        .Q(countAddrToBeSent[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[23] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[23]_i_1_n_0 ),
        .Q(countAddrToBeSent[23]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[23]_i_3 
       (.CI(\countAddrToBeSent_reg[15]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[23]_i_3_n_0 ,\countAddrToBeSent_reg[23]_i_3_n_1 ,\countAddrToBeSent_reg[23]_i_3_n_2 ,\countAddrToBeSent_reg[23]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[23]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[23]_i_3_n_5 ,\countAddrToBeSent_reg[23]_i_3_n_6 ,\countAddrToBeSent_reg[23]_i_3_n_7 }),
        .DI(countAddrToBeSent[23:16]),
        .O(countAddrToBeSent00_in[23:16]),
        .S({\countAddrToBeSent[23]_i_4_n_0 ,\countAddrToBeSent[23]_i_5_n_0 ,\countAddrToBeSent[23]_i_6_n_0 ,\countAddrToBeSent[23]_i_7_n_0 ,\countAddrToBeSent[23]_i_8_n_0 ,\countAddrToBeSent[23]_i_9_n_0 ,\countAddrToBeSent[23]_i_10_n_0 ,\countAddrToBeSent[23]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[24] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[24]_i_1_n_0 ),
        .Q(countAddrToBeSent[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[24]_i_3 
       (.CI(\countAddrToBeSent_reg[16]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[24]_i_3_n_0 ,\countAddrToBeSent_reg[24]_i_3_n_1 ,\countAddrToBeSent_reg[24]_i_3_n_2 ,\countAddrToBeSent_reg[24]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[24]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[24]_i_3_n_5 ,\countAddrToBeSent_reg[24]_i_3_n_6 ,\countAddrToBeSent_reg[24]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrToBeSent0[24:17]),
        .S(countAddrToBeSent[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[25] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[25]_i_1_n_0 ),
        .Q(countAddrToBeSent[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[26] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[26]_i_1_n_0 ),
        .Q(countAddrToBeSent[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[27] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[27]_i_1_n_0 ),
        .Q(countAddrToBeSent[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[28] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[28]_i_1_n_0 ),
        .Q(countAddrToBeSent[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[29] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[29]_i_1_n_0 ),
        .Q(countAddrToBeSent[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[2] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[2]_i_1_n_0 ),
        .Q(countAddrToBeSent[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[30] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[30]_i_1_n_0 ),
        .Q(countAddrToBeSent[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[31] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[31]_i_1_n_0 ),
        .Q(countAddrToBeSent[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[31]_i_3 
       (.CI(\countAddrToBeSent_reg[23]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[31]_i_3_n_0 ,\countAddrToBeSent_reg[31]_i_3_n_1 ,\countAddrToBeSent_reg[31]_i_3_n_2 ,\countAddrToBeSent_reg[31]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[31]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[31]_i_3_n_5 ,\countAddrToBeSent_reg[31]_i_3_n_6 ,\countAddrToBeSent_reg[31]_i_3_n_7 }),
        .DI(countAddrToBeSent[31:24]),
        .O(countAddrToBeSent00_in[31:24]),
        .S({\countAddrToBeSent[31]_i_4_n_0 ,\countAddrToBeSent[31]_i_5_n_0 ,\countAddrToBeSent[31]_i_6_n_0 ,\countAddrToBeSent[31]_i_7_n_0 ,\countAddrToBeSent[31]_i_8_n_0 ,\countAddrToBeSent[31]_i_9_n_0 ,\countAddrToBeSent[31]_i_10_n_0 ,\countAddrToBeSent[31]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[32] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[32]_i_1_n_0 ),
        .Q(countAddrToBeSent[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[32]_i_3 
       (.CI(\countAddrToBeSent_reg[24]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[32]_i_3_n_0 ,\countAddrToBeSent_reg[32]_i_3_n_1 ,\countAddrToBeSent_reg[32]_i_3_n_2 ,\countAddrToBeSent_reg[32]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[32]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[32]_i_3_n_5 ,\countAddrToBeSent_reg[32]_i_3_n_6 ,\countAddrToBeSent_reg[32]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrToBeSent0[32:25]),
        .S(countAddrToBeSent[32:25]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[33] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[33]_i_1_n_0 ),
        .Q(countAddrToBeSent[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[34] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[34]_i_1_n_0 ),
        .Q(countAddrToBeSent[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[35] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[35]_i_1_n_0 ),
        .Q(countAddrToBeSent[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[36] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[36]_i_1_n_0 ),
        .Q(countAddrToBeSent[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[37] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[37]_i_1_n_0 ),
        .Q(countAddrToBeSent[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[38] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[38]_i_1_n_0 ),
        .Q(countAddrToBeSent[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[39] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[39]_i_2_n_0 ),
        .Q(countAddrToBeSent[39]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_103 
       (.CI(\countAddrToBeSent_reg[39]_i_140_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_103_n_0 ,\countAddrToBeSent_reg[39]_i_103_n_1 ,\countAddrToBeSent_reg[39]_i_103_n_2 ,\countAddrToBeSent_reg[39]_i_103_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_103_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_103_n_5 ,\countAddrToBeSent_reg[39]_i_103_n_6 ,\countAddrToBeSent_reg[39]_i_103_n_7 }),
        .DI(write_ticks22_out[23:16]),
        .O(\NLW_countAddrToBeSent_reg[39]_i_103_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_142_n_0 ,\countAddrToBeSent[39]_i_143_n_0 ,\countAddrToBeSent[39]_i_144_n_0 ,\countAddrToBeSent[39]_i_145_n_0 ,\countAddrToBeSent[39]_i_146_n_0 ,\countAddrToBeSent[39]_i_147_n_0 ,\countAddrToBeSent[39]_i_148_n_0 ,\countAddrToBeSent[39]_i_149_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_104 
       (.CI(\countAddrToBeSent_reg[39]_i_141_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_104_n_0 ,\countAddrToBeSent_reg[39]_i_104_n_1 ,\countAddrToBeSent_reg[39]_i_104_n_2 ,\countAddrToBeSent_reg[39]_i_104_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_104_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_104_n_5 ,\countAddrToBeSent_reg[39]_i_104_n_6 ,\countAddrToBeSent_reg[39]_i_104_n_7 }),
        .DI(countAddrToBeSent[31:24]),
        .O(write_ticks22_out[31:24]),
        .S({\countAddrToBeSent[39]_i_150_n_0 ,\countAddrToBeSent[39]_i_151_n_0 ,\countAddrToBeSent[39]_i_152_n_0 ,\countAddrToBeSent[39]_i_153_n_0 ,\countAddrToBeSent[39]_i_154_n_0 ,\countAddrToBeSent[39]_i_155_n_0 ,\countAddrToBeSent[39]_i_156_n_0 ,\countAddrToBeSent[39]_i_157_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_121 
       (.CI(\countAddrToBeSent_reg[39]_i_158_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrToBeSent_reg[39]_i_121_CO_UNCONNECTED [7],\countAddrToBeSent_reg[39]_i_121_n_1 ,\countAddrToBeSent_reg[39]_i_121_n_2 ,\countAddrToBeSent_reg[39]_i_121_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_121_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_121_n_5 ,\countAddrToBeSent_reg[39]_i_121_n_6 ,\countAddrToBeSent_reg[39]_i_121_n_7 }),
        .DI({1'b0,countDataReceived[38:32]}),
        .O({\countAddrToBeSent_reg[39]_i_121_n_8 ,\countAddrToBeSent_reg[39]_i_121_n_9 ,\countAddrToBeSent_reg[39]_i_121_n_10 ,\countAddrToBeSent_reg[39]_i_121_n_11 ,\countAddrToBeSent_reg[39]_i_121_n_12 ,\countAddrToBeSent_reg[39]_i_121_n_13 ,\countAddrToBeSent_reg[39]_i_121_n_14 ,\countAddrToBeSent_reg[39]_i_121_n_15 }),
        .S({\countAddrToBeSent[39]_i_159_n_0 ,\countAddrToBeSent[39]_i_160_n_0 ,\countAddrToBeSent[39]_i_161_n_0 ,\countAddrToBeSent[39]_i_162_n_0 ,\countAddrToBeSent[39]_i_163_n_0 ,\countAddrToBeSent[39]_i_164_n_0 ,\countAddrToBeSent[39]_i_165_n_0 ,\countAddrToBeSent[39]_i_166_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_122 
       (.CI(\countAddrToBeSent_reg[39]_i_123_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_122_n_0 ,\countAddrToBeSent_reg[39]_i_122_n_1 ,\countAddrToBeSent_reg[39]_i_122_n_2 ,\countAddrToBeSent_reg[39]_i_122_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_122_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_122_n_5 ,\countAddrToBeSent_reg[39]_i_122_n_6 ,\countAddrToBeSent_reg[39]_i_122_n_7 }),
        .DI(countAddrToBeSent[15:8]),
        .O(write_ticks21_out[15:8]),
        .S({\countAddrToBeSent[39]_i_167_n_0 ,\countAddrToBeSent[39]_i_168_n_0 ,\countAddrToBeSent[39]_i_169_n_0 ,\countAddrToBeSent[39]_i_170_n_0 ,\countAddrToBeSent[39]_i_171_n_0 ,\countAddrToBeSent[39]_i_172_n_0 ,\countAddrToBeSent[39]_i_173_n_0 ,\countAddrToBeSent[39]_i_174_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_123 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_123_n_0 ,\countAddrToBeSent_reg[39]_i_123_n_1 ,\countAddrToBeSent_reg[39]_i_123_n_2 ,\countAddrToBeSent_reg[39]_i_123_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_123_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_123_n_5 ,\countAddrToBeSent_reg[39]_i_123_n_6 ,\countAddrToBeSent_reg[39]_i_123_n_7 }),
        .DI(countAddrToBeSent[7:0]),
        .O(write_ticks21_out[7:0]),
        .S({\countAddrToBeSent[39]_i_175_n_0 ,\countAddrToBeSent[39]_i_176_n_0 ,\countAddrToBeSent[39]_i_177_n_0 ,\countAddrToBeSent[39]_i_178_n_0 ,\countAddrToBeSent[39]_i_179_n_0 ,\countAddrToBeSent[39]_i_180_n_0 ,\countAddrToBeSent[39]_i_181_n_0 ,\countAddrToBeSent[39]_i_182_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_13 
       (.CI(\countAddrToBeSent_reg[39]_i_51_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_13_n_0 ,\countAddrToBeSent_reg[39]_i_13_n_1 ,\countAddrToBeSent_reg[39]_i_13_n_2 ,\countAddrToBeSent_reg[39]_i_13_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_13_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_13_n_5 ,\countAddrToBeSent_reg[39]_i_13_n_6 ,\countAddrToBeSent_reg[39]_i_13_n_7 }),
        .DI(write_ticks22_out[39:32]),
        .O(\NLW_countAddrToBeSent_reg[39]_i_13_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_53_n_0 ,\countAddrToBeSent[39]_i_54_n_0 ,\countAddrToBeSent[39]_i_55_n_0 ,\countAddrToBeSent[39]_i_56_n_0 ,\countAddrToBeSent[39]_i_57_n_0 ,\countAddrToBeSent[39]_i_58_n_0 ,\countAddrToBeSent[39]_i_59_n_0 ,\countAddrToBeSent[39]_i_60_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_14 
       (.CI(\countAddrToBeSent_reg[31]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrToBeSent_reg[39]_i_14_CO_UNCONNECTED [7],\countAddrToBeSent_reg[39]_i_14_n_1 ,\countAddrToBeSent_reg[39]_i_14_n_2 ,\countAddrToBeSent_reg[39]_i_14_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_14_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_14_n_5 ,\countAddrToBeSent_reg[39]_i_14_n_6 ,\countAddrToBeSent_reg[39]_i_14_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrToBeSent00_in[39:32]),
        .S(countAddrToBeSent[39:32]));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_140 
       (.CI(\countAddrToBeSent_reg[39]_i_183_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_140_n_0 ,\countAddrToBeSent_reg[39]_i_140_n_1 ,\countAddrToBeSent_reg[39]_i_140_n_2 ,\countAddrToBeSent_reg[39]_i_140_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_140_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_140_n_5 ,\countAddrToBeSent_reg[39]_i_140_n_6 ,\countAddrToBeSent_reg[39]_i_140_n_7 }),
        .DI(write_ticks22_out[15:8]),
        .O(\NLW_countAddrToBeSent_reg[39]_i_140_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_185_n_0 ,\countAddrToBeSent[39]_i_186_n_0 ,\countAddrToBeSent[39]_i_187_n_0 ,\countAddrToBeSent[39]_i_188_n_0 ,\countAddrToBeSent[39]_i_189_n_0 ,\countAddrToBeSent[39]_i_190_n_0 ,\countAddrToBeSent[39]_i_191_n_0 ,\countAddrToBeSent[39]_i_192_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_141 
       (.CI(\countAddrToBeSent_reg[39]_i_184_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_141_n_0 ,\countAddrToBeSent_reg[39]_i_141_n_1 ,\countAddrToBeSent_reg[39]_i_141_n_2 ,\countAddrToBeSent_reg[39]_i_141_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_141_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_141_n_5 ,\countAddrToBeSent_reg[39]_i_141_n_6 ,\countAddrToBeSent_reg[39]_i_141_n_7 }),
        .DI(countAddrToBeSent[23:16]),
        .O(write_ticks22_out[23:16]),
        .S({\countAddrToBeSent[39]_i_193_n_0 ,\countAddrToBeSent[39]_i_194_n_0 ,\countAddrToBeSent[39]_i_195_n_0 ,\countAddrToBeSent[39]_i_196_n_0 ,\countAddrToBeSent[39]_i_197_n_0 ,\countAddrToBeSent[39]_i_198_n_0 ,\countAddrToBeSent[39]_i_199_n_0 ,\countAddrToBeSent[39]_i_200_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_15 
       (.CI(\countAddrToBeSent_reg[32]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrToBeSent_reg[39]_i_15_CO_UNCONNECTED [7:6],\countAddrToBeSent_reg[39]_i_15_n_2 ,\countAddrToBeSent_reg[39]_i_15_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_15_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_15_n_5 ,\countAddrToBeSent_reg[39]_i_15_n_6 ,\countAddrToBeSent_reg[39]_i_15_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countAddrToBeSent_reg[39]_i_15_O_UNCONNECTED [7],countAddrToBeSent0[39:33]}),
        .S({1'b0,countAddrToBeSent[39:33]}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_158 
       (.CI(\countAddrToBeSent_reg[39]_i_201_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_158_n_0 ,\countAddrToBeSent_reg[39]_i_158_n_1 ,\countAddrToBeSent_reg[39]_i_158_n_2 ,\countAddrToBeSent_reg[39]_i_158_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_158_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_158_n_5 ,\countAddrToBeSent_reg[39]_i_158_n_6 ,\countAddrToBeSent_reg[39]_i_158_n_7 }),
        .DI(countDataReceived[31:24]),
        .O({\countAddrToBeSent_reg[39]_i_158_n_8 ,\countAddrToBeSent_reg[39]_i_158_n_9 ,\countAddrToBeSent_reg[39]_i_158_n_10 ,\countAddrToBeSent_reg[39]_i_158_n_11 ,\countAddrToBeSent_reg[39]_i_158_n_12 ,\countAddrToBeSent_reg[39]_i_158_n_13 ,\countAddrToBeSent_reg[39]_i_158_n_14 ,\countAddrToBeSent_reg[39]_i_158_n_15 }),
        .S({\countAddrToBeSent[39]_i_202_n_0 ,\countAddrToBeSent[39]_i_203_n_0 ,\countAddrToBeSent[39]_i_204_n_0 ,\countAddrToBeSent[39]_i_205_n_0 ,\countAddrToBeSent[39]_i_206_n_0 ,\countAddrToBeSent[39]_i_207_n_0 ,\countAddrToBeSent[39]_i_208_n_0 ,\countAddrToBeSent[39]_i_209_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_16 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_16_n_0 ,\countAddrToBeSent_reg[39]_i_16_n_1 ,\countAddrToBeSent_reg[39]_i_16_n_2 ,\countAddrToBeSent_reg[39]_i_16_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_16_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_16_n_5 ,\countAddrToBeSent_reg[39]_i_16_n_6 ,\countAddrToBeSent_reg[39]_i_16_n_7 }),
        .DI({\countAddrToBeSent[39]_i_61_n_0 ,\countAddrToBeSent[39]_i_62_n_0 ,\countAddrToBeSent[39]_i_63_n_0 ,\countAddrToBeSent[39]_i_64_n_0 ,\countAddrToBeSent[39]_i_65_n_0 ,\countAddrToBeSent[39]_i_66_n_0 ,\countAddrToBeSent[39]_i_67_n_0 ,\countAddrToBeSent[39]_i_68_n_0 }),
        .O(\NLW_countAddrToBeSent_reg[39]_i_16_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_69_n_0 ,\countAddrToBeSent[39]_i_70_n_0 ,\countAddrToBeSent[39]_i_71_n_0 ,\countAddrToBeSent[39]_i_72_n_0 ,\countAddrToBeSent[39]_i_73_n_0 ,\countAddrToBeSent[39]_i_74_n_0 ,\countAddrToBeSent[39]_i_75_n_0 ,\countAddrToBeSent[39]_i_76_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_183 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_183_n_0 ,\countAddrToBeSent_reg[39]_i_183_n_1 ,\countAddrToBeSent_reg[39]_i_183_n_2 ,\countAddrToBeSent_reg[39]_i_183_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_183_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_183_n_5 ,\countAddrToBeSent_reg[39]_i_183_n_6 ,\countAddrToBeSent_reg[39]_i_183_n_7 }),
        .DI(write_ticks22_out[7:0]),
        .O(\NLW_countAddrToBeSent_reg[39]_i_183_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_211_n_0 ,\countAddrToBeSent[39]_i_212_n_0 ,\countAddrToBeSent[39]_i_213_n_0 ,\countAddrToBeSent[39]_i_214_n_0 ,\countAddrToBeSent[39]_i_215_n_0 ,\countAddrToBeSent[39]_i_216_n_0 ,\countAddrToBeSent[39]_i_217_n_0 ,\countAddrToBeSent[39]_i_218_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_184 
       (.CI(\countAddrToBeSent_reg[39]_i_210_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_184_n_0 ,\countAddrToBeSent_reg[39]_i_184_n_1 ,\countAddrToBeSent_reg[39]_i_184_n_2 ,\countAddrToBeSent_reg[39]_i_184_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_184_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_184_n_5 ,\countAddrToBeSent_reg[39]_i_184_n_6 ,\countAddrToBeSent_reg[39]_i_184_n_7 }),
        .DI(countAddrToBeSent[15:8]),
        .O(write_ticks22_out[15:8]),
        .S({\countAddrToBeSent[39]_i_219_n_0 ,\countAddrToBeSent[39]_i_220_n_0 ,\countAddrToBeSent[39]_i_221_n_0 ,\countAddrToBeSent[39]_i_222_n_0 ,\countAddrToBeSent[39]_i_223_n_0 ,\countAddrToBeSent[39]_i_224_n_0 ,\countAddrToBeSent[39]_i_225_n_0 ,\countAddrToBeSent[39]_i_226_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_201 
       (.CI(\countAddrToBeSent_reg[39]_i_227_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_201_n_0 ,\countAddrToBeSent_reg[39]_i_201_n_1 ,\countAddrToBeSent_reg[39]_i_201_n_2 ,\countAddrToBeSent_reg[39]_i_201_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_201_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_201_n_5 ,\countAddrToBeSent_reg[39]_i_201_n_6 ,\countAddrToBeSent_reg[39]_i_201_n_7 }),
        .DI(countDataReceived[23:16]),
        .O({\countAddrToBeSent_reg[39]_i_201_n_8 ,\countAddrToBeSent_reg[39]_i_201_n_9 ,\countAddrToBeSent_reg[39]_i_201_n_10 ,\countAddrToBeSent_reg[39]_i_201_n_11 ,\countAddrToBeSent_reg[39]_i_201_n_12 ,\countAddrToBeSent_reg[39]_i_201_n_13 ,\countAddrToBeSent_reg[39]_i_201_n_14 ,\countAddrToBeSent_reg[39]_i_201_n_15 }),
        .S({\countAddrToBeSent[39]_i_228_n_0 ,\countAddrToBeSent[39]_i_229_n_0 ,\countAddrToBeSent[39]_i_230_n_0 ,\countAddrToBeSent[39]_i_231_n_0 ,\countAddrToBeSent[39]_i_232_n_0 ,\countAddrToBeSent[39]_i_233_n_0 ,\countAddrToBeSent[39]_i_234_n_0 ,\countAddrToBeSent[39]_i_235_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_210 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_210_n_0 ,\countAddrToBeSent_reg[39]_i_210_n_1 ,\countAddrToBeSent_reg[39]_i_210_n_2 ,\countAddrToBeSent_reg[39]_i_210_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_210_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_210_n_5 ,\countAddrToBeSent_reg[39]_i_210_n_6 ,\countAddrToBeSent_reg[39]_i_210_n_7 }),
        .DI(countAddrToBeSent[7:0]),
        .O(write_ticks22_out[7:0]),
        .S({\countAddrToBeSent[39]_i_236_n_0 ,\countAddrToBeSent[39]_i_237_n_0 ,\countAddrToBeSent[39]_i_238_n_0 ,\countAddrToBeSent[39]_i_239_n_0 ,\countAddrToBeSent[39]_i_240_n_0 ,\countAddrToBeSent[39]_i_241_n_0 ,\countAddrToBeSent[39]_i_242_n_0 ,\countAddrToBeSent[39]_i_243_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_227 
       (.CI(\countAddrToBeSent_reg[39]_i_244_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_227_n_0 ,\countAddrToBeSent_reg[39]_i_227_n_1 ,\countAddrToBeSent_reg[39]_i_227_n_2 ,\countAddrToBeSent_reg[39]_i_227_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_227_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_227_n_5 ,\countAddrToBeSent_reg[39]_i_227_n_6 ,\countAddrToBeSent_reg[39]_i_227_n_7 }),
        .DI(countDataReceived[15:8]),
        .O({\countAddrToBeSent_reg[39]_i_227_n_8 ,\countAddrToBeSent_reg[39]_i_227_n_9 ,\countAddrToBeSent_reg[39]_i_227_n_10 ,\countAddrToBeSent_reg[39]_i_227_n_11 ,\countAddrToBeSent_reg[39]_i_227_n_12 ,\countAddrToBeSent_reg[39]_i_227_n_13 ,\countAddrToBeSent_reg[39]_i_227_n_14 ,\countAddrToBeSent_reg[39]_i_227_n_15 }),
        .S({\countAddrToBeSent[39]_i_245_n_0 ,\countAddrToBeSent[39]_i_246_n_0 ,\countAddrToBeSent[39]_i_247_n_0 ,\countAddrToBeSent[39]_i_248_n_0 ,\countAddrToBeSent[39]_i_249_n_0 ,\countAddrToBeSent[39]_i_250_n_0 ,\countAddrToBeSent[39]_i_251_n_0 ,\countAddrToBeSent[39]_i_252_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_244 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_244_n_0 ,\countAddrToBeSent_reg[39]_i_244_n_1 ,\countAddrToBeSent_reg[39]_i_244_n_2 ,\countAddrToBeSent_reg[39]_i_244_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_244_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_244_n_5 ,\countAddrToBeSent_reg[39]_i_244_n_6 ,\countAddrToBeSent_reg[39]_i_244_n_7 }),
        .DI(countDataReceived[7:0]),
        .O({\countAddrToBeSent_reg[39]_i_244_n_8 ,\countAddrToBeSent_reg[39]_i_244_n_9 ,\countAddrToBeSent_reg[39]_i_244_n_10 ,\countAddrToBeSent_reg[39]_i_244_n_11 ,\countAddrToBeSent_reg[39]_i_244_n_12 ,\countAddrToBeSent_reg[39]_i_244_n_13 ,\countAddrToBeSent_reg[39]_i_244_n_14 ,\countAddrToBeSent_reg[39]_i_244_n_15 }),
        .S({\countAddrToBeSent[39]_i_253_n_0 ,\countAddrToBeSent[39]_i_254_n_0 ,\countAddrToBeSent[39]_i_255_n_0 ,\countAddrToBeSent[39]_i_256_n_0 ,\countAddrToBeSent[39]_i_257_n_0 ,\countAddrToBeSent[39]_i_258_n_0 ,\countAddrToBeSent[39]_i_259_n_0 ,\countAddrToBeSent[39]_i_260_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_33 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_33_n_0 ,\countAddrToBeSent_reg[39]_i_33_n_1 ,\countAddrToBeSent_reg[39]_i_33_n_2 ,\countAddrToBeSent_reg[39]_i_33_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_33_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_33_n_5 ,\countAddrToBeSent_reg[39]_i_33_n_6 ,\countAddrToBeSent_reg[39]_i_33_n_7 }),
        .DI({\countAddrToBeSent[39]_i_77_n_0 ,\countAddrToBeSent[39]_i_78_n_0 ,\countAddrToBeSent[39]_i_79_n_0 ,\countAddrToBeSent[39]_i_80_n_0 ,\countAddrToBeSent[39]_i_81_n_0 ,\countAddrToBeSent[39]_i_82_n_0 ,\countAddrToBeSent[39]_i_83_n_0 ,\countAddrToBeSent[39]_i_84_n_0 }),
        .O(\NLW_countAddrToBeSent_reg[39]_i_33_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_85_n_0 ,\countAddrToBeSent[39]_i_86_n_0 ,\countAddrToBeSent[39]_i_87_n_0 ,\countAddrToBeSent[39]_i_88_n_0 ,\countAddrToBeSent[39]_i_89_n_0 ,\countAddrToBeSent[39]_i_90_n_0 ,\countAddrToBeSent[39]_i_91_n_0 ,\countAddrToBeSent[39]_i_92_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_4 
       (.CI(\countAddrToBeSent_reg[39]_i_8_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrToBeSent_reg[39]_i_4_CO_UNCONNECTED [7:4],\countAddrToBeSent_reg[39]_i_4_n_4 ,\countAddrToBeSent_reg[39]_i_4_n_5 ,\countAddrToBeSent_reg[39]_i_4_n_6 ,\countAddrToBeSent_reg[39]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_countAddrToBeSent_reg[39]_i_4_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,\countAddrToBeSent[39]_i_9_n_0 ,\countAddrToBeSent[39]_i_10_n_0 ,\countAddrToBeSent[39]_i_11_n_0 ,\countAddrToBeSent[39]_i_12_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_5 
       (.CI(\countAddrToBeSent_reg[39]_i_13_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_countAddrToBeSent_reg[39]_i_5_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countAddrToBeSent_reg[39]_i_5_O_UNCONNECTED [7:1],write_ticks1}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_50 
       (.CI(\countAddrToBeSent_reg[39]_i_93_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrToBeSent_reg[39]_i_50_CO_UNCONNECTED [7],\countAddrToBeSent_reg[39]_i_50_n_1 ,\countAddrToBeSent_reg[39]_i_50_n_2 ,\countAddrToBeSent_reg[39]_i_50_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_50_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_50_n_5 ,\countAddrToBeSent_reg[39]_i_50_n_6 ,\countAddrToBeSent_reg[39]_i_50_n_7 }),
        .DI({1'b0,countAddrToBeSent[38:32]}),
        .O(write_ticks21_out[39:32]),
        .S({\countAddrToBeSent[39]_i_95_n_0 ,\countAddrToBeSent[39]_i_96_n_0 ,\countAddrToBeSent[39]_i_97_n_0 ,\countAddrToBeSent[39]_i_98_n_0 ,\countAddrToBeSent[39]_i_99_n_0 ,\countAddrToBeSent[39]_i_100_n_0 ,\countAddrToBeSent[39]_i_101_n_0 ,\countAddrToBeSent[39]_i_102_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_51 
       (.CI(\countAddrToBeSent_reg[39]_i_103_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_51_n_0 ,\countAddrToBeSent_reg[39]_i_51_n_1 ,\countAddrToBeSent_reg[39]_i_51_n_2 ,\countAddrToBeSent_reg[39]_i_51_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_51_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_51_n_5 ,\countAddrToBeSent_reg[39]_i_51_n_6 ,\countAddrToBeSent_reg[39]_i_51_n_7 }),
        .DI(write_ticks22_out[31:24]),
        .O(\NLW_countAddrToBeSent_reg[39]_i_51_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_105_n_0 ,\countAddrToBeSent[39]_i_106_n_0 ,\countAddrToBeSent[39]_i_107_n_0 ,\countAddrToBeSent[39]_i_108_n_0 ,\countAddrToBeSent[39]_i_109_n_0 ,\countAddrToBeSent[39]_i_110_n_0 ,\countAddrToBeSent[39]_i_111_n_0 ,\countAddrToBeSent[39]_i_112_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_52 
       (.CI(\countAddrToBeSent_reg[39]_i_104_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countAddrToBeSent_reg[39]_i_52_CO_UNCONNECTED [7],\countAddrToBeSent_reg[39]_i_52_n_1 ,\countAddrToBeSent_reg[39]_i_52_n_2 ,\countAddrToBeSent_reg[39]_i_52_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_52_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_52_n_5 ,\countAddrToBeSent_reg[39]_i_52_n_6 ,\countAddrToBeSent_reg[39]_i_52_n_7 }),
        .DI({1'b0,countAddrToBeSent[38:32]}),
        .O(write_ticks22_out[39:32]),
        .S({\countAddrToBeSent[39]_i_113_n_0 ,\countAddrToBeSent[39]_i_114_n_0 ,\countAddrToBeSent[39]_i_115_n_0 ,\countAddrToBeSent[39]_i_116_n_0 ,\countAddrToBeSent[39]_i_117_n_0 ,\countAddrToBeSent[39]_i_118_n_0 ,\countAddrToBeSent[39]_i_119_n_0 ,\countAddrToBeSent[39]_i_120_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_7 
       (.CI(\countAddrToBeSent_reg[39]_i_16_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_7_n_0 ,\countAddrToBeSent_reg[39]_i_7_n_1 ,\countAddrToBeSent_reg[39]_i_7_n_2 ,\countAddrToBeSent_reg[39]_i_7_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_7_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_7_n_5 ,\countAddrToBeSent_reg[39]_i_7_n_6 ,\countAddrToBeSent_reg[39]_i_7_n_7 }),
        .DI({\countAddrToBeSent[39]_i_17_n_0 ,\countAddrToBeSent[39]_i_18_n_0 ,\countAddrToBeSent[39]_i_19_n_0 ,\countAddrToBeSent[39]_i_20_n_0 ,\countAddrToBeSent[39]_i_21_n_0 ,\countAddrToBeSent[39]_i_22_n_0 ,\countAddrToBeSent[39]_i_23_n_0 ,\countAddrToBeSent[39]_i_24_n_0 }),
        .O(\NLW_countAddrToBeSent_reg[39]_i_7_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_25_n_0 ,\countAddrToBeSent[39]_i_26_n_0 ,\countAddrToBeSent[39]_i_27_n_0 ,\countAddrToBeSent[39]_i_28_n_0 ,\countAddrToBeSent[39]_i_29_n_0 ,\countAddrToBeSent[39]_i_30_n_0 ,\countAddrToBeSent[39]_i_31_n_0 ,\countAddrToBeSent[39]_i_32_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_8 
       (.CI(\countAddrToBeSent_reg[39]_i_33_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_8_n_0 ,\countAddrToBeSent_reg[39]_i_8_n_1 ,\countAddrToBeSent_reg[39]_i_8_n_2 ,\countAddrToBeSent_reg[39]_i_8_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_8_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_8_n_5 ,\countAddrToBeSent_reg[39]_i_8_n_6 ,\countAddrToBeSent_reg[39]_i_8_n_7 }),
        .DI({\countAddrToBeSent[39]_i_34_n_0 ,\countAddrToBeSent[39]_i_35_n_0 ,\countAddrToBeSent[39]_i_36_n_0 ,\countAddrToBeSent[39]_i_37_n_0 ,\countAddrToBeSent[39]_i_38_n_0 ,\countAddrToBeSent[39]_i_39_n_0 ,\countAddrToBeSent[39]_i_40_n_0 ,\countAddrToBeSent[39]_i_41_n_0 }),
        .O(\NLW_countAddrToBeSent_reg[39]_i_8_O_UNCONNECTED [7:0]),
        .S({\countAddrToBeSent[39]_i_42_n_0 ,\countAddrToBeSent[39]_i_43_n_0 ,\countAddrToBeSent[39]_i_44_n_0 ,\countAddrToBeSent[39]_i_45_n_0 ,\countAddrToBeSent[39]_i_46_n_0 ,\countAddrToBeSent[39]_i_47_n_0 ,\countAddrToBeSent[39]_i_48_n_0 ,\countAddrToBeSent[39]_i_49_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_93 
       (.CI(\countAddrToBeSent_reg[39]_i_94_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_93_n_0 ,\countAddrToBeSent_reg[39]_i_93_n_1 ,\countAddrToBeSent_reg[39]_i_93_n_2 ,\countAddrToBeSent_reg[39]_i_93_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_93_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_93_n_5 ,\countAddrToBeSent_reg[39]_i_93_n_6 ,\countAddrToBeSent_reg[39]_i_93_n_7 }),
        .DI(countAddrToBeSent[31:24]),
        .O(write_ticks21_out[31:24]),
        .S({\countAddrToBeSent[39]_i_124_n_0 ,\countAddrToBeSent[39]_i_125_n_0 ,\countAddrToBeSent[39]_i_126_n_0 ,\countAddrToBeSent[39]_i_127_n_0 ,\countAddrToBeSent[39]_i_128_n_0 ,\countAddrToBeSent[39]_i_129_n_0 ,\countAddrToBeSent[39]_i_130_n_0 ,\countAddrToBeSent[39]_i_131_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[39]_i_94 
       (.CI(\countAddrToBeSent_reg[39]_i_122_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[39]_i_94_n_0 ,\countAddrToBeSent_reg[39]_i_94_n_1 ,\countAddrToBeSent_reg[39]_i_94_n_2 ,\countAddrToBeSent_reg[39]_i_94_n_3 ,\NLW_countAddrToBeSent_reg[39]_i_94_CO_UNCONNECTED [3],\countAddrToBeSent_reg[39]_i_94_n_5 ,\countAddrToBeSent_reg[39]_i_94_n_6 ,\countAddrToBeSent_reg[39]_i_94_n_7 }),
        .DI(countAddrToBeSent[23:16]),
        .O(write_ticks21_out[23:16]),
        .S({\countAddrToBeSent[39]_i_132_n_0 ,\countAddrToBeSent[39]_i_133_n_0 ,\countAddrToBeSent[39]_i_134_n_0 ,\countAddrToBeSent[39]_i_135_n_0 ,\countAddrToBeSent[39]_i_136_n_0 ,\countAddrToBeSent[39]_i_137_n_0 ,\countAddrToBeSent[39]_i_138_n_0 ,\countAddrToBeSent[39]_i_139_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[3] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[3]_i_1_n_0 ),
        .Q(countAddrToBeSent[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[4] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[4]_i_1_n_0 ),
        .Q(countAddrToBeSent[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[5] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[5]_i_1_n_0 ),
        .Q(countAddrToBeSent[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[6] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[6]_i_1_n_0 ),
        .Q(countAddrToBeSent[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[7] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[7]_i_1_n_0 ),
        .Q(countAddrToBeSent[7]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[7]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[7]_i_3_n_0 ,\countAddrToBeSent_reg[7]_i_3_n_1 ,\countAddrToBeSent_reg[7]_i_3_n_2 ,\countAddrToBeSent_reg[7]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[7]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[7]_i_3_n_5 ,\countAddrToBeSent_reg[7]_i_3_n_6 ,\countAddrToBeSent_reg[7]_i_3_n_7 }),
        .DI(countAddrToBeSent[7:0]),
        .O(countAddrToBeSent00_in[7:0]),
        .S({\countAddrToBeSent[7]_i_4_n_0 ,\countAddrToBeSent[7]_i_5_n_0 ,\countAddrToBeSent[7]_i_6_n_0 ,\countAddrToBeSent[7]_i_7_n_0 ,\countAddrToBeSent[7]_i_8_n_0 ,\countAddrToBeSent[7]_i_9_n_0 ,\countAddrToBeSent[7]_i_10_n_0 ,\countAddrToBeSent[7]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[8] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[8]_i_1_n_0 ),
        .Q(countAddrToBeSent[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countAddrToBeSent_reg[8]_i_3 
       (.CI(countAddrToBeSent[0]),
        .CI_TOP(1'b0),
        .CO({\countAddrToBeSent_reg[8]_i_3_n_0 ,\countAddrToBeSent_reg[8]_i_3_n_1 ,\countAddrToBeSent_reg[8]_i_3_n_2 ,\countAddrToBeSent_reg[8]_i_3_n_3 ,\NLW_countAddrToBeSent_reg[8]_i_3_CO_UNCONNECTED [3],\countAddrToBeSent_reg[8]_i_3_n_5 ,\countAddrToBeSent_reg[8]_i_3_n_6 ,\countAddrToBeSent_reg[8]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countAddrToBeSent0[8:1]),
        .S(countAddrToBeSent[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \countAddrToBeSent_reg[9] 
       (.C(clk),
        .CE(\countAddrToBeSent[39]_i_1_n_0 ),
        .D(\countAddrToBeSent[9]_i_1_n_0 ),
        .Q(countAddrToBeSent[9]),
        .R(1'b0));
  (* HLUTNM = "lutpair14" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_10 
       (.I0(countDataReceivedRatioFix_reg_n_0_[15]),
        .I1(write_blocking_ratio[15]),
        .I2(read_blocking_ratio[15]),
        .I3(\countDataReceivedRatioFix[15]_i_2_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_10_n_0 ));
  (* HLUTNM = "lutpair13" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_11 
       (.I0(countDataReceivedRatioFix_reg_n_0_[14]),
        .I1(write_blocking_ratio[14]),
        .I2(read_blocking_ratio[14]),
        .I3(\countDataReceivedRatioFix[15]_i_3_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_11_n_0 ));
  (* HLUTNM = "lutpair12" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_12 
       (.I0(countDataReceivedRatioFix_reg_n_0_[13]),
        .I1(write_blocking_ratio[13]),
        .I2(read_blocking_ratio[13]),
        .I3(\countDataReceivedRatioFix[15]_i_4_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_12_n_0 ));
  (* HLUTNM = "lutpair11" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_13 
       (.I0(countDataReceivedRatioFix_reg_n_0_[12]),
        .I1(write_blocking_ratio[12]),
        .I2(read_blocking_ratio[12]),
        .I3(\countDataReceivedRatioFix[15]_i_5_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_13_n_0 ));
  (* HLUTNM = "lutpair10" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_14 
       (.I0(countDataReceivedRatioFix_reg_n_0_[11]),
        .I1(write_blocking_ratio[11]),
        .I2(read_blocking_ratio[11]),
        .I3(\countDataReceivedRatioFix[15]_i_6_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_14_n_0 ));
  (* HLUTNM = "lutpair9" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_15 
       (.I0(countDataReceivedRatioFix_reg_n_0_[10]),
        .I1(write_blocking_ratio[10]),
        .I2(read_blocking_ratio[10]),
        .I3(\countDataReceivedRatioFix[15]_i_7_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_15_n_0 ));
  (* HLUTNM = "lutpair8" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_16 
       (.I0(countDataReceivedRatioFix_reg_n_0_[9]),
        .I1(write_blocking_ratio[9]),
        .I2(read_blocking_ratio[9]),
        .I3(\countDataReceivedRatioFix[15]_i_8_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_16_n_0 ));
  (* HLUTNM = "lutpair7" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[15]_i_17 
       (.I0(countDataReceivedRatioFix_reg_n_0_[8]),
        .I1(write_blocking_ratio[8]),
        .I2(read_blocking_ratio[8]),
        .I3(\countDataReceivedRatioFix[15]_i_9_n_0 ),
        .O(\countDataReceivedRatioFix[15]_i_17_n_0 ));
  (* HLUTNM = "lutpair13" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_2 
       (.I0(countDataReceivedRatioFix_reg_n_0_[14]),
        .I1(write_blocking_ratio[14]),
        .I2(read_blocking_ratio[14]),
        .O(\countDataReceivedRatioFix[15]_i_2_n_0 ));
  (* HLUTNM = "lutpair12" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_3 
       (.I0(countDataReceivedRatioFix_reg_n_0_[13]),
        .I1(write_blocking_ratio[13]),
        .I2(read_blocking_ratio[13]),
        .O(\countDataReceivedRatioFix[15]_i_3_n_0 ));
  (* HLUTNM = "lutpair11" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_4 
       (.I0(countDataReceivedRatioFix_reg_n_0_[12]),
        .I1(write_blocking_ratio[12]),
        .I2(read_blocking_ratio[12]),
        .O(\countDataReceivedRatioFix[15]_i_4_n_0 ));
  (* HLUTNM = "lutpair10" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_5 
       (.I0(countDataReceivedRatioFix_reg_n_0_[11]),
        .I1(write_blocking_ratio[11]),
        .I2(read_blocking_ratio[11]),
        .O(\countDataReceivedRatioFix[15]_i_5_n_0 ));
  (* HLUTNM = "lutpair9" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_6 
       (.I0(countDataReceivedRatioFix_reg_n_0_[10]),
        .I1(write_blocking_ratio[10]),
        .I2(read_blocking_ratio[10]),
        .O(\countDataReceivedRatioFix[15]_i_6_n_0 ));
  (* HLUTNM = "lutpair8" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_7 
       (.I0(countDataReceivedRatioFix_reg_n_0_[9]),
        .I1(write_blocking_ratio[9]),
        .I2(read_blocking_ratio[9]),
        .O(\countDataReceivedRatioFix[15]_i_7_n_0 ));
  (* HLUTNM = "lutpair7" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_8 
       (.I0(countDataReceivedRatioFix_reg_n_0_[8]),
        .I1(write_blocking_ratio[8]),
        .I2(read_blocking_ratio[8]),
        .O(\countDataReceivedRatioFix[15]_i_8_n_0 ));
  (* HLUTNM = "lutpair6" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[15]_i_9 
       (.I0(countDataReceivedRatioFix_reg_n_0_[7]),
        .I1(write_blocking_ratio[7]),
        .I2(read_blocking_ratio[7]),
        .O(\countDataReceivedRatioFix[15]_i_9_n_0 ));
  (* HLUTNM = "lutpair22" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_10 
       (.I0(countDataReceivedRatioFix_reg_n_0_[23]),
        .I1(write_blocking_ratio[23]),
        .I2(read_blocking_ratio[23]),
        .I3(\countDataReceivedRatioFix[23]_i_2_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_10_n_0 ));
  (* HLUTNM = "lutpair21" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_11 
       (.I0(countDataReceivedRatioFix_reg_n_0_[22]),
        .I1(write_blocking_ratio[22]),
        .I2(read_blocking_ratio[22]),
        .I3(\countDataReceivedRatioFix[23]_i_3_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_11_n_0 ));
  (* HLUTNM = "lutpair20" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_12 
       (.I0(countDataReceivedRatioFix_reg_n_0_[21]),
        .I1(write_blocking_ratio[21]),
        .I2(read_blocking_ratio[21]),
        .I3(\countDataReceivedRatioFix[23]_i_4_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_12_n_0 ));
  (* HLUTNM = "lutpair19" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_13 
       (.I0(countDataReceivedRatioFix_reg_n_0_[20]),
        .I1(write_blocking_ratio[20]),
        .I2(read_blocking_ratio[20]),
        .I3(\countDataReceivedRatioFix[23]_i_5_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_13_n_0 ));
  (* HLUTNM = "lutpair18" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_14 
       (.I0(countDataReceivedRatioFix_reg_n_0_[19]),
        .I1(write_blocking_ratio[19]),
        .I2(read_blocking_ratio[19]),
        .I3(\countDataReceivedRatioFix[23]_i_6_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_14_n_0 ));
  (* HLUTNM = "lutpair17" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_15 
       (.I0(countDataReceivedRatioFix_reg_n_0_[18]),
        .I1(write_blocking_ratio[18]),
        .I2(read_blocking_ratio[18]),
        .I3(\countDataReceivedRatioFix[23]_i_7_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_15_n_0 ));
  (* HLUTNM = "lutpair16" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_16 
       (.I0(countDataReceivedRatioFix_reg_n_0_[17]),
        .I1(write_blocking_ratio[17]),
        .I2(read_blocking_ratio[17]),
        .I3(\countDataReceivedRatioFix[23]_i_8_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_16_n_0 ));
  (* HLUTNM = "lutpair15" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[23]_i_17 
       (.I0(countDataReceivedRatioFix_reg_n_0_[16]),
        .I1(write_blocking_ratio[16]),
        .I2(read_blocking_ratio[16]),
        .I3(\countDataReceivedRatioFix[23]_i_9_n_0 ),
        .O(\countDataReceivedRatioFix[23]_i_17_n_0 ));
  (* HLUTNM = "lutpair21" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_2 
       (.I0(countDataReceivedRatioFix_reg_n_0_[22]),
        .I1(write_blocking_ratio[22]),
        .I2(read_blocking_ratio[22]),
        .O(\countDataReceivedRatioFix[23]_i_2_n_0 ));
  (* HLUTNM = "lutpair20" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_3 
       (.I0(countDataReceivedRatioFix_reg_n_0_[21]),
        .I1(write_blocking_ratio[21]),
        .I2(read_blocking_ratio[21]),
        .O(\countDataReceivedRatioFix[23]_i_3_n_0 ));
  (* HLUTNM = "lutpair19" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_4 
       (.I0(countDataReceivedRatioFix_reg_n_0_[20]),
        .I1(write_blocking_ratio[20]),
        .I2(read_blocking_ratio[20]),
        .O(\countDataReceivedRatioFix[23]_i_4_n_0 ));
  (* HLUTNM = "lutpair18" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_5 
       (.I0(countDataReceivedRatioFix_reg_n_0_[19]),
        .I1(write_blocking_ratio[19]),
        .I2(read_blocking_ratio[19]),
        .O(\countDataReceivedRatioFix[23]_i_5_n_0 ));
  (* HLUTNM = "lutpair17" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_6 
       (.I0(countDataReceivedRatioFix_reg_n_0_[18]),
        .I1(write_blocking_ratio[18]),
        .I2(read_blocking_ratio[18]),
        .O(\countDataReceivedRatioFix[23]_i_6_n_0 ));
  (* HLUTNM = "lutpair16" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_7 
       (.I0(countDataReceivedRatioFix_reg_n_0_[17]),
        .I1(write_blocking_ratio[17]),
        .I2(read_blocking_ratio[17]),
        .O(\countDataReceivedRatioFix[23]_i_7_n_0 ));
  (* HLUTNM = "lutpair15" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_8 
       (.I0(countDataReceivedRatioFix_reg_n_0_[16]),
        .I1(write_blocking_ratio[16]),
        .I2(read_blocking_ratio[16]),
        .O(\countDataReceivedRatioFix[23]_i_8_n_0 ));
  (* HLUTNM = "lutpair14" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[23]_i_9 
       (.I0(countDataReceivedRatioFix_reg_n_0_[15]),
        .I1(write_blocking_ratio[15]),
        .I2(read_blocking_ratio[15]),
        .O(\countDataReceivedRatioFix[23]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_10 
       (.I0(\countDataReceivedRatioFix[31]_i_2_n_0 ),
        .I1(write_blocking_ratio[31]),
        .I2(countDataReceivedRatioFix_reg_n_0_[31]),
        .I3(read_blocking_ratio[31]),
        .O(\countDataReceivedRatioFix[31]_i_10_n_0 ));
  (* HLUTNM = "lutpair29" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_11 
       (.I0(countDataReceivedRatioFix_reg_n_0_[30]),
        .I1(write_blocking_ratio[30]),
        .I2(read_blocking_ratio[30]),
        .I3(\countDataReceivedRatioFix[31]_i_3_n_0 ),
        .O(\countDataReceivedRatioFix[31]_i_11_n_0 ));
  (* HLUTNM = "lutpair28" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_12 
       (.I0(countDataReceivedRatioFix_reg_n_0_[29]),
        .I1(write_blocking_ratio[29]),
        .I2(read_blocking_ratio[29]),
        .I3(\countDataReceivedRatioFix[31]_i_4_n_0 ),
        .O(\countDataReceivedRatioFix[31]_i_12_n_0 ));
  (* HLUTNM = "lutpair27" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_13 
       (.I0(countDataReceivedRatioFix_reg_n_0_[28]),
        .I1(write_blocking_ratio[28]),
        .I2(read_blocking_ratio[28]),
        .I3(\countDataReceivedRatioFix[31]_i_5_n_0 ),
        .O(\countDataReceivedRatioFix[31]_i_13_n_0 ));
  (* HLUTNM = "lutpair26" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_14 
       (.I0(countDataReceivedRatioFix_reg_n_0_[27]),
        .I1(write_blocking_ratio[27]),
        .I2(read_blocking_ratio[27]),
        .I3(\countDataReceivedRatioFix[31]_i_6_n_0 ),
        .O(\countDataReceivedRatioFix[31]_i_14_n_0 ));
  (* HLUTNM = "lutpair25" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_15 
       (.I0(countDataReceivedRatioFix_reg_n_0_[26]),
        .I1(write_blocking_ratio[26]),
        .I2(read_blocking_ratio[26]),
        .I3(\countDataReceivedRatioFix[31]_i_7_n_0 ),
        .O(\countDataReceivedRatioFix[31]_i_15_n_0 ));
  (* HLUTNM = "lutpair24" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_16 
       (.I0(countDataReceivedRatioFix_reg_n_0_[25]),
        .I1(write_blocking_ratio[25]),
        .I2(read_blocking_ratio[25]),
        .I3(\countDataReceivedRatioFix[31]_i_8_n_0 ),
        .O(\countDataReceivedRatioFix[31]_i_16_n_0 ));
  (* HLUTNM = "lutpair23" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[31]_i_17 
       (.I0(countDataReceivedRatioFix_reg_n_0_[24]),
        .I1(write_blocking_ratio[24]),
        .I2(read_blocking_ratio[24]),
        .I3(\countDataReceivedRatioFix[31]_i_9_n_0 ),
        .O(\countDataReceivedRatioFix[31]_i_17_n_0 ));
  (* HLUTNM = "lutpair29" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_2 
       (.I0(countDataReceivedRatioFix_reg_n_0_[30]),
        .I1(write_blocking_ratio[30]),
        .I2(read_blocking_ratio[30]),
        .O(\countDataReceivedRatioFix[31]_i_2_n_0 ));
  (* HLUTNM = "lutpair28" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_3 
       (.I0(countDataReceivedRatioFix_reg_n_0_[29]),
        .I1(write_blocking_ratio[29]),
        .I2(read_blocking_ratio[29]),
        .O(\countDataReceivedRatioFix[31]_i_3_n_0 ));
  (* HLUTNM = "lutpair27" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_4 
       (.I0(countDataReceivedRatioFix_reg_n_0_[28]),
        .I1(write_blocking_ratio[28]),
        .I2(read_blocking_ratio[28]),
        .O(\countDataReceivedRatioFix[31]_i_4_n_0 ));
  (* HLUTNM = "lutpair26" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_5 
       (.I0(countDataReceivedRatioFix_reg_n_0_[27]),
        .I1(write_blocking_ratio[27]),
        .I2(read_blocking_ratio[27]),
        .O(\countDataReceivedRatioFix[31]_i_5_n_0 ));
  (* HLUTNM = "lutpair25" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_6 
       (.I0(countDataReceivedRatioFix_reg_n_0_[26]),
        .I1(write_blocking_ratio[26]),
        .I2(read_blocking_ratio[26]),
        .O(\countDataReceivedRatioFix[31]_i_6_n_0 ));
  (* HLUTNM = "lutpair24" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_7 
       (.I0(countDataReceivedRatioFix_reg_n_0_[25]),
        .I1(write_blocking_ratio[25]),
        .I2(read_blocking_ratio[25]),
        .O(\countDataReceivedRatioFix[31]_i_7_n_0 ));
  (* HLUTNM = "lutpair23" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_8 
       (.I0(countDataReceivedRatioFix_reg_n_0_[24]),
        .I1(write_blocking_ratio[24]),
        .I2(read_blocking_ratio[24]),
        .O(\countDataReceivedRatioFix[31]_i_8_n_0 ));
  (* HLUTNM = "lutpair22" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[31]_i_9 
       (.I0(countDataReceivedRatioFix_reg_n_0_[23]),
        .I1(write_blocking_ratio[23]),
        .I2(read_blocking_ratio[23]),
        .O(\countDataReceivedRatioFix[31]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \countDataReceivedRatioFix[39]_i_1 
       (.I0(\read_ticks_reg[31]_i_3_n_4 ),
        .I1(active_blocking),
        .I2(\countDataReceivedRatioFix_reg[39]_i_3_n_0 ),
        .I3(\read_ticks_reg[31]_i_4_n_0 ),
        .O(countDataReceivedRatioFix));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[39]_i_10 
       (.I0(countDataReceivedRatioFix_reg_n_0_[33]),
        .I1(countDataReceivedRatioFix_reg_n_0_[34]),
        .O(\countDataReceivedRatioFix[39]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[39]_i_11 
       (.I0(countDataReceivedRatioFix_reg_n_0_[32]),
        .I1(countDataReceivedRatioFix_reg_n_0_[33]),
        .O(\countDataReceivedRatioFix[39]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hD42B)) 
    \countDataReceivedRatioFix[39]_i_12 
       (.I0(read_blocking_ratio[31]),
        .I1(write_blocking_ratio[31]),
        .I2(countDataReceivedRatioFix_reg_n_0_[31]),
        .I3(countDataReceivedRatioFix_reg_n_0_[32]),
        .O(\countDataReceivedRatioFix[39]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_14 
       (.I0(write_blocking_ratio[30]),
        .I1(read_blocking_ratio[30]),
        .I2(read_blocking_ratio[31]),
        .I3(write_blocking_ratio[31]),
        .O(\countDataReceivedRatioFix[39]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_15 
       (.I0(write_blocking_ratio[28]),
        .I1(read_blocking_ratio[28]),
        .I2(read_blocking_ratio[29]),
        .I3(write_blocking_ratio[29]),
        .O(\countDataReceivedRatioFix[39]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_16 
       (.I0(write_blocking_ratio[26]),
        .I1(read_blocking_ratio[26]),
        .I2(read_blocking_ratio[27]),
        .I3(write_blocking_ratio[27]),
        .O(\countDataReceivedRatioFix[39]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_17 
       (.I0(write_blocking_ratio[24]),
        .I1(read_blocking_ratio[24]),
        .I2(read_blocking_ratio[25]),
        .I3(write_blocking_ratio[25]),
        .O(\countDataReceivedRatioFix[39]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_18 
       (.I0(write_blocking_ratio[22]),
        .I1(read_blocking_ratio[22]),
        .I2(read_blocking_ratio[23]),
        .I3(write_blocking_ratio[23]),
        .O(\countDataReceivedRatioFix[39]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_19 
       (.I0(write_blocking_ratio[20]),
        .I1(read_blocking_ratio[20]),
        .I2(read_blocking_ratio[21]),
        .I3(write_blocking_ratio[21]),
        .O(\countDataReceivedRatioFix[39]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_20 
       (.I0(write_blocking_ratio[18]),
        .I1(read_blocking_ratio[18]),
        .I2(read_blocking_ratio[19]),
        .I3(write_blocking_ratio[19]),
        .O(\countDataReceivedRatioFix[39]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_21 
       (.I0(write_blocking_ratio[16]),
        .I1(read_blocking_ratio[16]),
        .I2(read_blocking_ratio[17]),
        .I3(write_blocking_ratio[17]),
        .O(\countDataReceivedRatioFix[39]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_22 
       (.I0(write_blocking_ratio[30]),
        .I1(read_blocking_ratio[30]),
        .I2(write_blocking_ratio[31]),
        .I3(read_blocking_ratio[31]),
        .O(\countDataReceivedRatioFix[39]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_23 
       (.I0(write_blocking_ratio[28]),
        .I1(read_blocking_ratio[28]),
        .I2(write_blocking_ratio[29]),
        .I3(read_blocking_ratio[29]),
        .O(\countDataReceivedRatioFix[39]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_24 
       (.I0(write_blocking_ratio[26]),
        .I1(read_blocking_ratio[26]),
        .I2(write_blocking_ratio[27]),
        .I3(read_blocking_ratio[27]),
        .O(\countDataReceivedRatioFix[39]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_25 
       (.I0(write_blocking_ratio[24]),
        .I1(read_blocking_ratio[24]),
        .I2(write_blocking_ratio[25]),
        .I3(read_blocking_ratio[25]),
        .O(\countDataReceivedRatioFix[39]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_26 
       (.I0(write_blocking_ratio[22]),
        .I1(read_blocking_ratio[22]),
        .I2(write_blocking_ratio[23]),
        .I3(read_blocking_ratio[23]),
        .O(\countDataReceivedRatioFix[39]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_27 
       (.I0(write_blocking_ratio[20]),
        .I1(read_blocking_ratio[20]),
        .I2(write_blocking_ratio[21]),
        .I3(read_blocking_ratio[21]),
        .O(\countDataReceivedRatioFix[39]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_28 
       (.I0(write_blocking_ratio[18]),
        .I1(read_blocking_ratio[18]),
        .I2(write_blocking_ratio[19]),
        .I3(read_blocking_ratio[19]),
        .O(\countDataReceivedRatioFix[39]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_29 
       (.I0(write_blocking_ratio[16]),
        .I1(read_blocking_ratio[16]),
        .I2(write_blocking_ratio[17]),
        .I3(read_blocking_ratio[17]),
        .O(\countDataReceivedRatioFix[39]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_30 
       (.I0(write_blocking_ratio[14]),
        .I1(read_blocking_ratio[14]),
        .I2(read_blocking_ratio[15]),
        .I3(write_blocking_ratio[15]),
        .O(\countDataReceivedRatioFix[39]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_31 
       (.I0(write_blocking_ratio[12]),
        .I1(read_blocking_ratio[12]),
        .I2(read_blocking_ratio[13]),
        .I3(write_blocking_ratio[13]),
        .O(\countDataReceivedRatioFix[39]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_32 
       (.I0(write_blocking_ratio[10]),
        .I1(read_blocking_ratio[10]),
        .I2(read_blocking_ratio[11]),
        .I3(write_blocking_ratio[11]),
        .O(\countDataReceivedRatioFix[39]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_33 
       (.I0(write_blocking_ratio[8]),
        .I1(read_blocking_ratio[8]),
        .I2(read_blocking_ratio[9]),
        .I3(write_blocking_ratio[9]),
        .O(\countDataReceivedRatioFix[39]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_34 
       (.I0(write_blocking_ratio[6]),
        .I1(read_blocking_ratio[6]),
        .I2(read_blocking_ratio[7]),
        .I3(write_blocking_ratio[7]),
        .O(\countDataReceivedRatioFix[39]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_35 
       (.I0(write_blocking_ratio[4]),
        .I1(read_blocking_ratio[4]),
        .I2(read_blocking_ratio[5]),
        .I3(write_blocking_ratio[5]),
        .O(\countDataReceivedRatioFix[39]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \countDataReceivedRatioFix[39]_i_36 
       (.I0(write_blocking_ratio[2]),
        .I1(read_blocking_ratio[2]),
        .I2(read_blocking_ratio[3]),
        .I3(write_blocking_ratio[3]),
        .O(\countDataReceivedRatioFix[39]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h20F2)) 
    \countDataReceivedRatioFix[39]_i_37 
       (.I0(write_blocking_ratio[0]),
        .I1(read_blocking_ratio[0]),
        .I2(write_blocking_ratio[1]),
        .I3(read_blocking_ratio[1]),
        .O(\countDataReceivedRatioFix[39]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_38 
       (.I0(write_blocking_ratio[14]),
        .I1(read_blocking_ratio[14]),
        .I2(write_blocking_ratio[15]),
        .I3(read_blocking_ratio[15]),
        .O(\countDataReceivedRatioFix[39]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_39 
       (.I0(write_blocking_ratio[12]),
        .I1(read_blocking_ratio[12]),
        .I2(write_blocking_ratio[13]),
        .I3(read_blocking_ratio[13]),
        .O(\countDataReceivedRatioFix[39]_i_39_n_0 ));
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[39]_i_4 
       (.I0(countDataReceivedRatioFix_reg_n_0_[31]),
        .I1(write_blocking_ratio[31]),
        .I2(read_blocking_ratio[31]),
        .O(\countDataReceivedRatioFix[39]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_40 
       (.I0(write_blocking_ratio[10]),
        .I1(read_blocking_ratio[10]),
        .I2(write_blocking_ratio[11]),
        .I3(read_blocking_ratio[11]),
        .O(\countDataReceivedRatioFix[39]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_41 
       (.I0(write_blocking_ratio[8]),
        .I1(read_blocking_ratio[8]),
        .I2(write_blocking_ratio[9]),
        .I3(read_blocking_ratio[9]),
        .O(\countDataReceivedRatioFix[39]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_42 
       (.I0(write_blocking_ratio[6]),
        .I1(read_blocking_ratio[6]),
        .I2(write_blocking_ratio[7]),
        .I3(read_blocking_ratio[7]),
        .O(\countDataReceivedRatioFix[39]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_43 
       (.I0(write_blocking_ratio[4]),
        .I1(read_blocking_ratio[4]),
        .I2(write_blocking_ratio[5]),
        .I3(read_blocking_ratio[5]),
        .O(\countDataReceivedRatioFix[39]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_44 
       (.I0(write_blocking_ratio[2]),
        .I1(read_blocking_ratio[2]),
        .I2(write_blocking_ratio[3]),
        .I3(read_blocking_ratio[3]),
        .O(\countDataReceivedRatioFix[39]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \countDataReceivedRatioFix[39]_i_45 
       (.I0(write_blocking_ratio[0]),
        .I1(read_blocking_ratio[0]),
        .I2(write_blocking_ratio[1]),
        .I3(read_blocking_ratio[1]),
        .O(\countDataReceivedRatioFix[39]_i_45_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[39]_i_5 
       (.I0(countDataReceivedRatioFix_reg_n_0_[38]),
        .I1(countDataReceivedRatioFix_reg_n_0_[39]),
        .O(\countDataReceivedRatioFix[39]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[39]_i_6 
       (.I0(countDataReceivedRatioFix_reg_n_0_[37]),
        .I1(countDataReceivedRatioFix_reg_n_0_[38]),
        .O(\countDataReceivedRatioFix[39]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[39]_i_7 
       (.I0(countDataReceivedRatioFix_reg_n_0_[36]),
        .I1(countDataReceivedRatioFix_reg_n_0_[37]),
        .O(\countDataReceivedRatioFix[39]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[39]_i_8 
       (.I0(countDataReceivedRatioFix_reg_n_0_[35]),
        .I1(countDataReceivedRatioFix_reg_n_0_[36]),
        .O(\countDataReceivedRatioFix[39]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[39]_i_9 
       (.I0(countDataReceivedRatioFix_reg_n_0_[34]),
        .I1(countDataReceivedRatioFix_reg_n_0_[35]),
        .O(\countDataReceivedRatioFix[39]_i_9_n_0 ));
  (* HLUTNM = "lutpair6" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[7]_i_10 
       (.I0(countDataReceivedRatioFix_reg_n_0_[7]),
        .I1(write_blocking_ratio[7]),
        .I2(read_blocking_ratio[7]),
        .I3(\countDataReceivedRatioFix[7]_i_2_n_0 ),
        .O(\countDataReceivedRatioFix[7]_i_10_n_0 ));
  (* HLUTNM = "lutpair5" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[7]_i_11 
       (.I0(countDataReceivedRatioFix_reg_n_0_[6]),
        .I1(write_blocking_ratio[6]),
        .I2(read_blocking_ratio[6]),
        .I3(\countDataReceivedRatioFix[7]_i_3_n_0 ),
        .O(\countDataReceivedRatioFix[7]_i_11_n_0 ));
  (* HLUTNM = "lutpair4" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[7]_i_12 
       (.I0(countDataReceivedRatioFix_reg_n_0_[5]),
        .I1(write_blocking_ratio[5]),
        .I2(read_blocking_ratio[5]),
        .I3(\countDataReceivedRatioFix[7]_i_4_n_0 ),
        .O(\countDataReceivedRatioFix[7]_i_12_n_0 ));
  (* HLUTNM = "lutpair3" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[7]_i_13 
       (.I0(countDataReceivedRatioFix_reg_n_0_[4]),
        .I1(write_blocking_ratio[4]),
        .I2(read_blocking_ratio[4]),
        .I3(\countDataReceivedRatioFix[7]_i_5_n_0 ),
        .O(\countDataReceivedRatioFix[7]_i_13_n_0 ));
  (* HLUTNM = "lutpair2" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[7]_i_14 
       (.I0(countDataReceivedRatioFix_reg_n_0_[3]),
        .I1(write_blocking_ratio[3]),
        .I2(read_blocking_ratio[3]),
        .I3(\countDataReceivedRatioFix[7]_i_6_n_0 ),
        .O(\countDataReceivedRatioFix[7]_i_14_n_0 ));
  (* HLUTNM = "lutpair1" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[7]_i_15 
       (.I0(countDataReceivedRatioFix_reg_n_0_[2]),
        .I1(write_blocking_ratio[2]),
        .I2(read_blocking_ratio[2]),
        .I3(\countDataReceivedRatioFix[7]_i_7_n_0 ),
        .O(\countDataReceivedRatioFix[7]_i_15_n_0 ));
  (* HLUTNM = "lutpair0" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \countDataReceivedRatioFix[7]_i_16 
       (.I0(countDataReceivedRatioFix_reg_n_0_[1]),
        .I1(write_blocking_ratio[1]),
        .I2(read_blocking_ratio[1]),
        .I3(\countDataReceivedRatioFix[7]_i_8_n_0 ),
        .O(\countDataReceivedRatioFix[7]_i_16_n_0 ));
  (* HLUTNM = "lutpair98" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \countDataReceivedRatioFix[7]_i_17 
       (.I0(write_blocking_ratio[0]),
        .I1(countDataReceivedRatioFix_reg_n_0_[0]),
        .I2(read_blocking_ratio[0]),
        .O(\countDataReceivedRatioFix[7]_i_17_n_0 ));
  (* HLUTNM = "lutpair5" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[7]_i_2 
       (.I0(countDataReceivedRatioFix_reg_n_0_[6]),
        .I1(write_blocking_ratio[6]),
        .I2(read_blocking_ratio[6]),
        .O(\countDataReceivedRatioFix[7]_i_2_n_0 ));
  (* HLUTNM = "lutpair4" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[7]_i_3 
       (.I0(countDataReceivedRatioFix_reg_n_0_[5]),
        .I1(write_blocking_ratio[5]),
        .I2(read_blocking_ratio[5]),
        .O(\countDataReceivedRatioFix[7]_i_3_n_0 ));
  (* HLUTNM = "lutpair3" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[7]_i_4 
       (.I0(countDataReceivedRatioFix_reg_n_0_[4]),
        .I1(write_blocking_ratio[4]),
        .I2(read_blocking_ratio[4]),
        .O(\countDataReceivedRatioFix[7]_i_4_n_0 ));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[7]_i_5 
       (.I0(countDataReceivedRatioFix_reg_n_0_[3]),
        .I1(write_blocking_ratio[3]),
        .I2(read_blocking_ratio[3]),
        .O(\countDataReceivedRatioFix[7]_i_5_n_0 ));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[7]_i_6 
       (.I0(countDataReceivedRatioFix_reg_n_0_[2]),
        .I1(write_blocking_ratio[2]),
        .I2(read_blocking_ratio[2]),
        .O(\countDataReceivedRatioFix[7]_i_6_n_0 ));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h8E)) 
    \countDataReceivedRatioFix[7]_i_7 
       (.I0(countDataReceivedRatioFix_reg_n_0_[1]),
        .I1(write_blocking_ratio[1]),
        .I2(read_blocking_ratio[1]),
        .O(\countDataReceivedRatioFix[7]_i_7_n_0 ));
  (* HLUTNM = "lutpair98" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \countDataReceivedRatioFix[7]_i_8 
       (.I0(write_blocking_ratio[0]),
        .I1(countDataReceivedRatioFix_reg_n_0_[0]),
        .O(\countDataReceivedRatioFix[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceivedRatioFix[7]_i_9 
       (.I0(countDataReceivedRatioFix_reg_n_0_[0]),
        .I1(write_blocking_ratio[0]),
        .O(\countDataReceivedRatioFix[7]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[0] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_15 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[10] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_13 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[11] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_12 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[12] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_11 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[13] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_10 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[14] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_9 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[15] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_8 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[15]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceivedRatioFix_reg[15]_i_1 
       (.CI(\countDataReceivedRatioFix_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataReceivedRatioFix_reg[15]_i_1_n_0 ,\countDataReceivedRatioFix_reg[15]_i_1_n_1 ,\countDataReceivedRatioFix_reg[15]_i_1_n_2 ,\countDataReceivedRatioFix_reg[15]_i_1_n_3 ,\NLW_countDataReceivedRatioFix_reg[15]_i_1_CO_UNCONNECTED [3],\countDataReceivedRatioFix_reg[15]_i_1_n_5 ,\countDataReceivedRatioFix_reg[15]_i_1_n_6 ,\countDataReceivedRatioFix_reg[15]_i_1_n_7 }),
        .DI({\countDataReceivedRatioFix[15]_i_2_n_0 ,\countDataReceivedRatioFix[15]_i_3_n_0 ,\countDataReceivedRatioFix[15]_i_4_n_0 ,\countDataReceivedRatioFix[15]_i_5_n_0 ,\countDataReceivedRatioFix[15]_i_6_n_0 ,\countDataReceivedRatioFix[15]_i_7_n_0 ,\countDataReceivedRatioFix[15]_i_8_n_0 ,\countDataReceivedRatioFix[15]_i_9_n_0 }),
        .O({\countDataReceivedRatioFix_reg[15]_i_1_n_8 ,\countDataReceivedRatioFix_reg[15]_i_1_n_9 ,\countDataReceivedRatioFix_reg[15]_i_1_n_10 ,\countDataReceivedRatioFix_reg[15]_i_1_n_11 ,\countDataReceivedRatioFix_reg[15]_i_1_n_12 ,\countDataReceivedRatioFix_reg[15]_i_1_n_13 ,\countDataReceivedRatioFix_reg[15]_i_1_n_14 ,\countDataReceivedRatioFix_reg[15]_i_1_n_15 }),
        .S({\countDataReceivedRatioFix[15]_i_10_n_0 ,\countDataReceivedRatioFix[15]_i_11_n_0 ,\countDataReceivedRatioFix[15]_i_12_n_0 ,\countDataReceivedRatioFix[15]_i_13_n_0 ,\countDataReceivedRatioFix[15]_i_14_n_0 ,\countDataReceivedRatioFix[15]_i_15_n_0 ,\countDataReceivedRatioFix[15]_i_16_n_0 ,\countDataReceivedRatioFix[15]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[16] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_15 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[17] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_14 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[18] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_13 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[19] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_12 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[1] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_14 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[20] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_11 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[21] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_10 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[22] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_9 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[23] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[23]_i_1_n_8 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[23]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceivedRatioFix_reg[23]_i_1 
       (.CI(\countDataReceivedRatioFix_reg[15]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataReceivedRatioFix_reg[23]_i_1_n_0 ,\countDataReceivedRatioFix_reg[23]_i_1_n_1 ,\countDataReceivedRatioFix_reg[23]_i_1_n_2 ,\countDataReceivedRatioFix_reg[23]_i_1_n_3 ,\NLW_countDataReceivedRatioFix_reg[23]_i_1_CO_UNCONNECTED [3],\countDataReceivedRatioFix_reg[23]_i_1_n_5 ,\countDataReceivedRatioFix_reg[23]_i_1_n_6 ,\countDataReceivedRatioFix_reg[23]_i_1_n_7 }),
        .DI({\countDataReceivedRatioFix[23]_i_2_n_0 ,\countDataReceivedRatioFix[23]_i_3_n_0 ,\countDataReceivedRatioFix[23]_i_4_n_0 ,\countDataReceivedRatioFix[23]_i_5_n_0 ,\countDataReceivedRatioFix[23]_i_6_n_0 ,\countDataReceivedRatioFix[23]_i_7_n_0 ,\countDataReceivedRatioFix[23]_i_8_n_0 ,\countDataReceivedRatioFix[23]_i_9_n_0 }),
        .O({\countDataReceivedRatioFix_reg[23]_i_1_n_8 ,\countDataReceivedRatioFix_reg[23]_i_1_n_9 ,\countDataReceivedRatioFix_reg[23]_i_1_n_10 ,\countDataReceivedRatioFix_reg[23]_i_1_n_11 ,\countDataReceivedRatioFix_reg[23]_i_1_n_12 ,\countDataReceivedRatioFix_reg[23]_i_1_n_13 ,\countDataReceivedRatioFix_reg[23]_i_1_n_14 ,\countDataReceivedRatioFix_reg[23]_i_1_n_15 }),
        .S({\countDataReceivedRatioFix[23]_i_10_n_0 ,\countDataReceivedRatioFix[23]_i_11_n_0 ,\countDataReceivedRatioFix[23]_i_12_n_0 ,\countDataReceivedRatioFix[23]_i_13_n_0 ,\countDataReceivedRatioFix[23]_i_14_n_0 ,\countDataReceivedRatioFix[23]_i_15_n_0 ,\countDataReceivedRatioFix[23]_i_16_n_0 ,\countDataReceivedRatioFix[23]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[24] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_15 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[25] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_14 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[26] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_13 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[27] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_12 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[28] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_11 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[29] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_10 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[2] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_13 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[30] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_9 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[31] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[31]_i_1_n_8 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceivedRatioFix_reg[31]_i_1 
       (.CI(\countDataReceivedRatioFix_reg[23]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataReceivedRatioFix_reg[31]_i_1_n_0 ,\countDataReceivedRatioFix_reg[31]_i_1_n_1 ,\countDataReceivedRatioFix_reg[31]_i_1_n_2 ,\countDataReceivedRatioFix_reg[31]_i_1_n_3 ,\NLW_countDataReceivedRatioFix_reg[31]_i_1_CO_UNCONNECTED [3],\countDataReceivedRatioFix_reg[31]_i_1_n_5 ,\countDataReceivedRatioFix_reg[31]_i_1_n_6 ,\countDataReceivedRatioFix_reg[31]_i_1_n_7 }),
        .DI({\countDataReceivedRatioFix[31]_i_2_n_0 ,\countDataReceivedRatioFix[31]_i_3_n_0 ,\countDataReceivedRatioFix[31]_i_4_n_0 ,\countDataReceivedRatioFix[31]_i_5_n_0 ,\countDataReceivedRatioFix[31]_i_6_n_0 ,\countDataReceivedRatioFix[31]_i_7_n_0 ,\countDataReceivedRatioFix[31]_i_8_n_0 ,\countDataReceivedRatioFix[31]_i_9_n_0 }),
        .O({\countDataReceivedRatioFix_reg[31]_i_1_n_8 ,\countDataReceivedRatioFix_reg[31]_i_1_n_9 ,\countDataReceivedRatioFix_reg[31]_i_1_n_10 ,\countDataReceivedRatioFix_reg[31]_i_1_n_11 ,\countDataReceivedRatioFix_reg[31]_i_1_n_12 ,\countDataReceivedRatioFix_reg[31]_i_1_n_13 ,\countDataReceivedRatioFix_reg[31]_i_1_n_14 ,\countDataReceivedRatioFix_reg[31]_i_1_n_15 }),
        .S({\countDataReceivedRatioFix[31]_i_10_n_0 ,\countDataReceivedRatioFix[31]_i_11_n_0 ,\countDataReceivedRatioFix[31]_i_12_n_0 ,\countDataReceivedRatioFix[31]_i_13_n_0 ,\countDataReceivedRatioFix[31]_i_14_n_0 ,\countDataReceivedRatioFix[31]_i_15_n_0 ,\countDataReceivedRatioFix[31]_i_16_n_0 ,\countDataReceivedRatioFix[31]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[32] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_15 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[33] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_14 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[34] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_13 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[35] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_12 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[36] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_11 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[37] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_10 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[38] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_9 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[39] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[39]_i_2_n_8 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[39]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceivedRatioFix_reg[39]_i_13 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\countDataReceivedRatioFix_reg[39]_i_13_n_0 ,\countDataReceivedRatioFix_reg[39]_i_13_n_1 ,\countDataReceivedRatioFix_reg[39]_i_13_n_2 ,\countDataReceivedRatioFix_reg[39]_i_13_n_3 ,\NLW_countDataReceivedRatioFix_reg[39]_i_13_CO_UNCONNECTED [3],\countDataReceivedRatioFix_reg[39]_i_13_n_5 ,\countDataReceivedRatioFix_reg[39]_i_13_n_6 ,\countDataReceivedRatioFix_reg[39]_i_13_n_7 }),
        .DI({\countDataReceivedRatioFix[39]_i_30_n_0 ,\countDataReceivedRatioFix[39]_i_31_n_0 ,\countDataReceivedRatioFix[39]_i_32_n_0 ,\countDataReceivedRatioFix[39]_i_33_n_0 ,\countDataReceivedRatioFix[39]_i_34_n_0 ,\countDataReceivedRatioFix[39]_i_35_n_0 ,\countDataReceivedRatioFix[39]_i_36_n_0 ,\countDataReceivedRatioFix[39]_i_37_n_0 }),
        .O(\NLW_countDataReceivedRatioFix_reg[39]_i_13_O_UNCONNECTED [7:0]),
        .S({\countDataReceivedRatioFix[39]_i_38_n_0 ,\countDataReceivedRatioFix[39]_i_39_n_0 ,\countDataReceivedRatioFix[39]_i_40_n_0 ,\countDataReceivedRatioFix[39]_i_41_n_0 ,\countDataReceivedRatioFix[39]_i_42_n_0 ,\countDataReceivedRatioFix[39]_i_43_n_0 ,\countDataReceivedRatioFix[39]_i_44_n_0 ,\countDataReceivedRatioFix[39]_i_45_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceivedRatioFix_reg[39]_i_2 
       (.CI(\countDataReceivedRatioFix_reg[31]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataReceivedRatioFix_reg[39]_i_2_CO_UNCONNECTED [7],\countDataReceivedRatioFix_reg[39]_i_2_n_1 ,\countDataReceivedRatioFix_reg[39]_i_2_n_2 ,\countDataReceivedRatioFix_reg[39]_i_2_n_3 ,\NLW_countDataReceivedRatioFix_reg[39]_i_2_CO_UNCONNECTED [3],\countDataReceivedRatioFix_reg[39]_i_2_n_5 ,\countDataReceivedRatioFix_reg[39]_i_2_n_6 ,\countDataReceivedRatioFix_reg[39]_i_2_n_7 }),
        .DI({1'b0,countDataReceivedRatioFix_reg_n_0_[37:32],\countDataReceivedRatioFix[39]_i_4_n_0 }),
        .O({\countDataReceivedRatioFix_reg[39]_i_2_n_8 ,\countDataReceivedRatioFix_reg[39]_i_2_n_9 ,\countDataReceivedRatioFix_reg[39]_i_2_n_10 ,\countDataReceivedRatioFix_reg[39]_i_2_n_11 ,\countDataReceivedRatioFix_reg[39]_i_2_n_12 ,\countDataReceivedRatioFix_reg[39]_i_2_n_13 ,\countDataReceivedRatioFix_reg[39]_i_2_n_14 ,\countDataReceivedRatioFix_reg[39]_i_2_n_15 }),
        .S({\countDataReceivedRatioFix[39]_i_5_n_0 ,\countDataReceivedRatioFix[39]_i_6_n_0 ,\countDataReceivedRatioFix[39]_i_7_n_0 ,\countDataReceivedRatioFix[39]_i_8_n_0 ,\countDataReceivedRatioFix[39]_i_9_n_0 ,\countDataReceivedRatioFix[39]_i_10_n_0 ,\countDataReceivedRatioFix[39]_i_11_n_0 ,\countDataReceivedRatioFix[39]_i_12_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceivedRatioFix_reg[39]_i_3 
       (.CI(\countDataReceivedRatioFix_reg[39]_i_13_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataReceivedRatioFix_reg[39]_i_3_n_0 ,\countDataReceivedRatioFix_reg[39]_i_3_n_1 ,\countDataReceivedRatioFix_reg[39]_i_3_n_2 ,\countDataReceivedRatioFix_reg[39]_i_3_n_3 ,\NLW_countDataReceivedRatioFix_reg[39]_i_3_CO_UNCONNECTED [3],\countDataReceivedRatioFix_reg[39]_i_3_n_5 ,\countDataReceivedRatioFix_reg[39]_i_3_n_6 ,\countDataReceivedRatioFix_reg[39]_i_3_n_7 }),
        .DI({\countDataReceivedRatioFix[39]_i_14_n_0 ,\countDataReceivedRatioFix[39]_i_15_n_0 ,\countDataReceivedRatioFix[39]_i_16_n_0 ,\countDataReceivedRatioFix[39]_i_17_n_0 ,\countDataReceivedRatioFix[39]_i_18_n_0 ,\countDataReceivedRatioFix[39]_i_19_n_0 ,\countDataReceivedRatioFix[39]_i_20_n_0 ,\countDataReceivedRatioFix[39]_i_21_n_0 }),
        .O(\NLW_countDataReceivedRatioFix_reg[39]_i_3_O_UNCONNECTED [7:0]),
        .S({\countDataReceivedRatioFix[39]_i_22_n_0 ,\countDataReceivedRatioFix[39]_i_23_n_0 ,\countDataReceivedRatioFix[39]_i_24_n_0 ,\countDataReceivedRatioFix[39]_i_25_n_0 ,\countDataReceivedRatioFix[39]_i_26_n_0 ,\countDataReceivedRatioFix[39]_i_27_n_0 ,\countDataReceivedRatioFix[39]_i_28_n_0 ,\countDataReceivedRatioFix[39]_i_29_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[3] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_12 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[4] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_11 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[5] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_10 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[6] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_9 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[7] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[7]_i_1_n_8 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[7]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceivedRatioFix_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataReceivedRatioFix_reg[7]_i_1_n_0 ,\countDataReceivedRatioFix_reg[7]_i_1_n_1 ,\countDataReceivedRatioFix_reg[7]_i_1_n_2 ,\countDataReceivedRatioFix_reg[7]_i_1_n_3 ,\NLW_countDataReceivedRatioFix_reg[7]_i_1_CO_UNCONNECTED [3],\countDataReceivedRatioFix_reg[7]_i_1_n_5 ,\countDataReceivedRatioFix_reg[7]_i_1_n_6 ,\countDataReceivedRatioFix_reg[7]_i_1_n_7 }),
        .DI({\countDataReceivedRatioFix[7]_i_2_n_0 ,\countDataReceivedRatioFix[7]_i_3_n_0 ,\countDataReceivedRatioFix[7]_i_4_n_0 ,\countDataReceivedRatioFix[7]_i_5_n_0 ,\countDataReceivedRatioFix[7]_i_6_n_0 ,\countDataReceivedRatioFix[7]_i_7_n_0 ,\countDataReceivedRatioFix[7]_i_8_n_0 ,\countDataReceivedRatioFix[7]_i_9_n_0 }),
        .O({\countDataReceivedRatioFix_reg[7]_i_1_n_8 ,\countDataReceivedRatioFix_reg[7]_i_1_n_9 ,\countDataReceivedRatioFix_reg[7]_i_1_n_10 ,\countDataReceivedRatioFix_reg[7]_i_1_n_11 ,\countDataReceivedRatioFix_reg[7]_i_1_n_12 ,\countDataReceivedRatioFix_reg[7]_i_1_n_13 ,\countDataReceivedRatioFix_reg[7]_i_1_n_14 ,\countDataReceivedRatioFix_reg[7]_i_1_n_15 }),
        .S({\countDataReceivedRatioFix[7]_i_10_n_0 ,\countDataReceivedRatioFix[7]_i_11_n_0 ,\countDataReceivedRatioFix[7]_i_12_n_0 ,\countDataReceivedRatioFix[7]_i_13_n_0 ,\countDataReceivedRatioFix[7]_i_14_n_0 ,\countDataReceivedRatioFix[7]_i_15_n_0 ,\countDataReceivedRatioFix[7]_i_16_n_0 ,\countDataReceivedRatioFix[7]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[8] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_15 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceivedRatioFix_reg[9] 
       (.C(clk),
        .CE(countDataReceivedRatioFix),
        .D(\countDataReceivedRatioFix_reg[15]_i_1_n_14 ),
        .Q(countDataReceivedRatioFix_reg_n_0_[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[32]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[32]),
        .I2(reset_cmd),
        .O(p_1_in__0[32]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[33]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[33]),
        .I2(reset_cmd),
        .O(p_1_in__0[33]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[34]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[34]),
        .I2(reset_cmd),
        .O(p_1_in__0[34]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[35]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[35]),
        .I2(reset_cmd),
        .O(p_1_in__0[35]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[36]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[36]),
        .I2(reset_cmd),
        .O(p_1_in__0[36]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[37]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[37]),
        .I2(reset_cmd),
        .O(p_1_in__0[37]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[38]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[38]),
        .I2(reset_cmd),
        .O(p_1_in__0[38]));
  LUT4 #(
    .INIT(16'hF444)) 
    \countDataReceived[39]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(readDataLast),
        .I3(readDataValid),
        .O(\countDataReceived[39]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceived[39]_i_11 
       (.I0(countDataSent_reg[39]),
        .I1(countDataToBeSent_reg[39]),
        .O(\countDataReceived[39]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_12 
       (.I0(countDataToBeSent_reg[36]),
        .I1(countDataSent_reg[36]),
        .I2(countDataSent_reg[38]),
        .I3(countDataToBeSent_reg[38]),
        .I4(countDataSent_reg[37]),
        .I5(countDataToBeSent_reg[37]),
        .O(\countDataReceived[39]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_13 
       (.I0(countDataToBeSent_reg[33]),
        .I1(countDataSent_reg[33]),
        .I2(countDataSent_reg[35]),
        .I3(countDataToBeSent_reg[35]),
        .I4(countDataSent_reg[34]),
        .I5(countDataToBeSent_reg[34]),
        .O(\countDataReceived[39]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_14 
       (.I0(countDataToBeSent_reg[30]),
        .I1(countDataSent_reg[30]),
        .I2(countDataSent_reg[32]),
        .I3(countDataToBeSent_reg[32]),
        .I4(countDataSent_reg[31]),
        .I5(countDataToBeSent_reg[31]),
        .O(\countDataReceived[39]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_15 
       (.I0(countDataToBeSent_reg[27]),
        .I1(countDataSent_reg[27]),
        .I2(countDataSent_reg[29]),
        .I3(countDataToBeSent_reg[29]),
        .I4(countDataSent_reg[28]),
        .I5(countDataToBeSent_reg[28]),
        .O(\countDataReceived[39]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_16 
       (.I0(countDataToBeSent_reg[24]),
        .I1(countDataSent_reg[24]),
        .I2(countDataSent_reg[26]),
        .I3(countDataToBeSent_reg[26]),
        .I4(countDataSent_reg[25]),
        .I5(countDataToBeSent_reg[25]),
        .O(\countDataReceived[39]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceived[39]_i_18 
       (.I0(countAddrSent[39]),
        .I1(countAddrToBeSent[39]),
        .O(\countDataReceived[39]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_19 
       (.I0(countAddrToBeSent[36]),
        .I1(countAddrSent[36]),
        .I2(countAddrSent[38]),
        .I3(countAddrToBeSent[38]),
        .I4(countAddrSent[37]),
        .I5(countAddrToBeSent[37]),
        .O(\countDataReceived[39]_i_19_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countDataReceived[39]_i_2 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(countDataReceived0[39]),
        .I2(reset_cmd),
        .O(p_1_in__0[39]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_20 
       (.I0(countAddrToBeSent[33]),
        .I1(countAddrSent[33]),
        .I2(countAddrSent[35]),
        .I3(countAddrToBeSent[35]),
        .I4(countAddrSent[34]),
        .I5(countAddrToBeSent[34]),
        .O(\countDataReceived[39]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_21 
       (.I0(countAddrToBeSent[30]),
        .I1(countAddrSent[30]),
        .I2(countAddrSent[32]),
        .I3(countAddrToBeSent[32]),
        .I4(countAddrSent[31]),
        .I5(countAddrToBeSent[31]),
        .O(\countDataReceived[39]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_22 
       (.I0(countAddrToBeSent[27]),
        .I1(countAddrSent[27]),
        .I2(countAddrSent[29]),
        .I3(countAddrToBeSent[29]),
        .I4(countAddrSent[28]),
        .I5(countAddrToBeSent[28]),
        .O(\countDataReceived[39]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_23 
       (.I0(countAddrToBeSent[24]),
        .I1(countAddrSent[24]),
        .I2(countAddrSent[26]),
        .I3(countAddrToBeSent[26]),
        .I4(countAddrSent[25]),
        .I5(countAddrToBeSent[25]),
        .O(\countDataReceived[39]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceived[39]_i_25 
       (.I0(countDataReceived[39]),
        .I1(countDataToBeReceived_reg[39]),
        .O(\countDataReceived[39]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_26 
       (.I0(countDataToBeReceived_reg[36]),
        .I1(countDataReceived[36]),
        .I2(countDataReceived[38]),
        .I3(countDataToBeReceived_reg[38]),
        .I4(countDataReceived[37]),
        .I5(countDataToBeReceived_reg[37]),
        .O(\countDataReceived[39]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_27 
       (.I0(countDataToBeReceived_reg[33]),
        .I1(countDataReceived[33]),
        .I2(countDataReceived[35]),
        .I3(countDataToBeReceived_reg[35]),
        .I4(countDataReceived[34]),
        .I5(countDataToBeReceived_reg[34]),
        .O(\countDataReceived[39]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_28 
       (.I0(countDataToBeReceived_reg[30]),
        .I1(countDataReceived[30]),
        .I2(countDataReceived[32]),
        .I3(countDataToBeReceived_reg[32]),
        .I4(countDataReceived[31]),
        .I5(countDataToBeReceived_reg[31]),
        .O(\countDataReceived[39]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_29 
       (.I0(countDataToBeReceived_reg[27]),
        .I1(countDataReceived[27]),
        .I2(countDataReceived[29]),
        .I3(countDataToBeReceived_reg[29]),
        .I4(countDataReceived[28]),
        .I5(countDataToBeReceived_reg[28]),
        .O(\countDataReceived[39]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \countDataReceived[39]_i_3 
       (.I0(active_runtime0),
        .I1(active_runtime1),
        .I2(active_blocking),
        .I3(\countDataReceived[39]_i_7_n_0 ),
        .I4(active_runtime2),
        .I5(active_runtime3),
        .O(\countDataReceived[39]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_30 
       (.I0(countDataToBeReceived_reg[24]),
        .I1(countDataReceived[24]),
        .I2(countDataReceived[26]),
        .I3(countDataToBeReceived_reg[26]),
        .I4(countDataReceived[25]),
        .I5(countDataToBeReceived_reg[25]),
        .O(\countDataReceived[39]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \countDataReceived[39]_i_32 
       (.I0(countReadReqSent_reg[39]),
        .I1(countReadReqToBeSent[39]),
        .O(\countDataReceived[39]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_33 
       (.I0(countReadReqToBeSent[36]),
        .I1(countReadReqSent_reg[36]),
        .I2(countReadReqSent_reg[38]),
        .I3(countReadReqToBeSent[38]),
        .I4(countReadReqSent_reg[37]),
        .I5(countReadReqToBeSent[37]),
        .O(\countDataReceived[39]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_34 
       (.I0(countReadReqToBeSent[33]),
        .I1(countReadReqSent_reg[33]),
        .I2(countReadReqSent_reg[35]),
        .I3(countReadReqToBeSent[35]),
        .I4(countReadReqSent_reg[34]),
        .I5(countReadReqToBeSent[34]),
        .O(\countDataReceived[39]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_35 
       (.I0(countReadReqToBeSent[30]),
        .I1(countReadReqSent_reg[30]),
        .I2(countReadReqSent_reg[32]),
        .I3(countReadReqToBeSent[32]),
        .I4(countReadReqSent_reg[31]),
        .I5(countReadReqToBeSent[31]),
        .O(\countDataReceived[39]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_36 
       (.I0(countReadReqToBeSent[27]),
        .I1(countReadReqSent_reg[27]),
        .I2(countReadReqSent_reg[29]),
        .I3(countReadReqToBeSent[29]),
        .I4(countReadReqSent_reg[28]),
        .I5(countReadReqToBeSent[28]),
        .O(\countDataReceived[39]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_37 
       (.I0(countReadReqToBeSent[24]),
        .I1(countReadReqSent_reg[24]),
        .I2(countReadReqSent_reg[26]),
        .I3(countReadReqToBeSent[26]),
        .I4(countReadReqSent_reg[25]),
        .I5(countReadReqToBeSent[25]),
        .O(\countDataReceived[39]_i_37_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_38 
       (.I0(countDataToBeSent_reg[21]),
        .I1(countDataSent_reg[21]),
        .I2(countDataSent_reg[23]),
        .I3(countDataToBeSent_reg[23]),
        .I4(countDataSent_reg[22]),
        .I5(countDataToBeSent_reg[22]),
        .O(\countDataReceived[39]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_39 
       (.I0(countDataToBeSent_reg[18]),
        .I1(countDataSent_reg[18]),
        .I2(countDataSent_reg[20]),
        .I3(countDataToBeSent_reg[20]),
        .I4(countDataSent_reg[19]),
        .I5(countDataToBeSent_reg[19]),
        .O(\countDataReceived[39]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_40 
       (.I0(countDataToBeSent_reg[15]),
        .I1(countDataSent_reg[15]),
        .I2(countDataSent_reg[17]),
        .I3(countDataToBeSent_reg[17]),
        .I4(countDataSent_reg[16]),
        .I5(countDataToBeSent_reg[16]),
        .O(\countDataReceived[39]_i_40_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_41 
       (.I0(countDataToBeSent_reg[12]),
        .I1(countDataSent_reg[12]),
        .I2(countDataSent_reg[14]),
        .I3(countDataToBeSent_reg[14]),
        .I4(countDataSent_reg[13]),
        .I5(countDataToBeSent_reg[13]),
        .O(\countDataReceived[39]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_42 
       (.I0(countDataToBeSent_reg[9]),
        .I1(countDataSent_reg[9]),
        .I2(countDataSent_reg[11]),
        .I3(countDataToBeSent_reg[11]),
        .I4(countDataSent_reg[10]),
        .I5(countDataToBeSent_reg[10]),
        .O(\countDataReceived[39]_i_42_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_43 
       (.I0(countDataToBeSent_reg[6]),
        .I1(countDataSent_reg[6]),
        .I2(countDataSent_reg[8]),
        .I3(countDataToBeSent_reg[8]),
        .I4(countDataSent_reg[7]),
        .I5(countDataToBeSent_reg[7]),
        .O(\countDataReceived[39]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_44 
       (.I0(countDataToBeSent_reg[3]),
        .I1(countDataSent_reg[3]),
        .I2(countDataSent_reg[5]),
        .I3(countDataToBeSent_reg[5]),
        .I4(countDataSent_reg[4]),
        .I5(countDataToBeSent_reg[4]),
        .O(\countDataReceived[39]_i_44_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_45 
       (.I0(countDataToBeSent_reg[0]),
        .I1(countDataSent_reg[0]),
        .I2(countDataSent_reg[2]),
        .I3(countDataToBeSent_reg[2]),
        .I4(countDataSent_reg[1]),
        .I5(countDataToBeSent_reg[1]),
        .O(\countDataReceived[39]_i_45_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_46 
       (.I0(countAddrToBeSent[21]),
        .I1(countAddrSent[21]),
        .I2(countAddrSent[23]),
        .I3(countAddrToBeSent[23]),
        .I4(countAddrSent[22]),
        .I5(countAddrToBeSent[22]),
        .O(\countDataReceived[39]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_47 
       (.I0(countAddrToBeSent[18]),
        .I1(countAddrSent[18]),
        .I2(countAddrSent[20]),
        .I3(countAddrToBeSent[20]),
        .I4(countAddrSent[19]),
        .I5(countAddrToBeSent[19]),
        .O(\countDataReceived[39]_i_47_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_48 
       (.I0(countAddrToBeSent[15]),
        .I1(countAddrSent[15]),
        .I2(countAddrSent[17]),
        .I3(countAddrToBeSent[17]),
        .I4(countAddrSent[16]),
        .I5(countAddrToBeSent[16]),
        .O(\countDataReceived[39]_i_48_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_49 
       (.I0(countAddrToBeSent[12]),
        .I1(countAddrSent[12]),
        .I2(countAddrSent[14]),
        .I3(countAddrToBeSent[14]),
        .I4(countAddrSent[13]),
        .I5(countAddrToBeSent[13]),
        .O(\countDataReceived[39]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_50 
       (.I0(countAddrToBeSent[9]),
        .I1(countAddrSent[9]),
        .I2(countAddrSent[11]),
        .I3(countAddrToBeSent[11]),
        .I4(countAddrSent[10]),
        .I5(countAddrToBeSent[10]),
        .O(\countDataReceived[39]_i_50_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_51 
       (.I0(countAddrToBeSent[6]),
        .I1(countAddrSent[6]),
        .I2(countAddrSent[8]),
        .I3(countAddrToBeSent[8]),
        .I4(countAddrSent[7]),
        .I5(countAddrToBeSent[7]),
        .O(\countDataReceived[39]_i_51_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_52 
       (.I0(countAddrToBeSent[3]),
        .I1(countAddrSent[3]),
        .I2(countAddrSent[5]),
        .I3(countAddrToBeSent[5]),
        .I4(countAddrSent[4]),
        .I5(countAddrToBeSent[4]),
        .O(\countDataReceived[39]_i_52_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_53 
       (.I0(countAddrToBeSent[0]),
        .I1(countAddrSent[0]),
        .I2(countAddrSent[2]),
        .I3(countAddrToBeSent[2]),
        .I4(countAddrSent[1]),
        .I5(countAddrToBeSent[1]),
        .O(\countDataReceived[39]_i_53_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_54 
       (.I0(countDataToBeReceived_reg[21]),
        .I1(countDataReceived[21]),
        .I2(countDataReceived[23]),
        .I3(countDataToBeReceived_reg[23]),
        .I4(countDataReceived[22]),
        .I5(countDataToBeReceived_reg[22]),
        .O(\countDataReceived[39]_i_54_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_55 
       (.I0(countDataToBeReceived_reg[18]),
        .I1(countDataReceived[18]),
        .I2(countDataReceived[20]),
        .I3(countDataToBeReceived_reg[20]),
        .I4(countDataReceived[19]),
        .I5(countDataToBeReceived_reg[19]),
        .O(\countDataReceived[39]_i_55_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_56 
       (.I0(countDataToBeReceived_reg[15]),
        .I1(countDataReceived[15]),
        .I2(countDataReceived[17]),
        .I3(countDataToBeReceived_reg[17]),
        .I4(countDataReceived[16]),
        .I5(countDataToBeReceived_reg[16]),
        .O(\countDataReceived[39]_i_56_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_57 
       (.I0(countDataToBeReceived_reg[12]),
        .I1(countDataReceived[12]),
        .I2(countDataReceived[14]),
        .I3(countDataToBeReceived_reg[14]),
        .I4(countDataReceived[13]),
        .I5(countDataToBeReceived_reg[13]),
        .O(\countDataReceived[39]_i_57_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_58 
       (.I0(countDataToBeReceived_reg[9]),
        .I1(countDataReceived[9]),
        .I2(countDataReceived[11]),
        .I3(countDataToBeReceived_reg[11]),
        .I4(countDataReceived[10]),
        .I5(countDataToBeReceived_reg[10]),
        .O(\countDataReceived[39]_i_58_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_59 
       (.I0(countDataToBeReceived_reg[6]),
        .I1(countDataReceived[6]),
        .I2(countDataReceived[8]),
        .I3(countDataToBeReceived_reg[8]),
        .I4(countDataReceived[7]),
        .I5(countDataToBeReceived_reg[7]),
        .O(\countDataReceived[39]_i_59_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_60 
       (.I0(countDataToBeReceived_reg[3]),
        .I1(countDataReceived[3]),
        .I2(countDataReceived[5]),
        .I3(countDataToBeReceived_reg[5]),
        .I4(countDataReceived[4]),
        .I5(countDataToBeReceived_reg[4]),
        .O(\countDataReceived[39]_i_60_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_61 
       (.I0(countDataToBeReceived_reg[0]),
        .I1(countDataReceived[0]),
        .I2(countDataReceived[2]),
        .I3(countDataToBeReceived_reg[2]),
        .I4(countDataReceived[1]),
        .I5(countDataToBeReceived_reg[1]),
        .O(\countDataReceived[39]_i_61_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_62 
       (.I0(countReadReqToBeSent[21]),
        .I1(countReadReqSent_reg[21]),
        .I2(countReadReqSent_reg[23]),
        .I3(countReadReqToBeSent[23]),
        .I4(countReadReqSent_reg[22]),
        .I5(countReadReqToBeSent[22]),
        .O(\countDataReceived[39]_i_62_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_63 
       (.I0(countReadReqToBeSent[18]),
        .I1(countReadReqSent_reg[18]),
        .I2(countReadReqSent_reg[20]),
        .I3(countReadReqToBeSent[20]),
        .I4(countReadReqSent_reg[19]),
        .I5(countReadReqToBeSent[19]),
        .O(\countDataReceived[39]_i_63_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_64 
       (.I0(countReadReqToBeSent[15]),
        .I1(countReadReqSent_reg[15]),
        .I2(countReadReqSent_reg[17]),
        .I3(countReadReqToBeSent[17]),
        .I4(countReadReqSent_reg[16]),
        .I5(countReadReqToBeSent[16]),
        .O(\countDataReceived[39]_i_64_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_65 
       (.I0(countReadReqToBeSent[12]),
        .I1(countReadReqSent_reg[12]),
        .I2(countReadReqSent_reg[14]),
        .I3(countReadReqToBeSent[14]),
        .I4(countReadReqSent_reg[13]),
        .I5(countReadReqToBeSent[13]),
        .O(\countDataReceived[39]_i_65_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_66 
       (.I0(countReadReqToBeSent[9]),
        .I1(countReadReqSent_reg[9]),
        .I2(countReadReqSent_reg[11]),
        .I3(countReadReqToBeSent[11]),
        .I4(countReadReqSent_reg[10]),
        .I5(countReadReqToBeSent[10]),
        .O(\countDataReceived[39]_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_67 
       (.I0(countReadReqToBeSent[6]),
        .I1(countReadReqSent_reg[6]),
        .I2(countReadReqSent_reg[8]),
        .I3(countReadReqToBeSent[8]),
        .I4(countReadReqSent_reg[7]),
        .I5(countReadReqToBeSent[7]),
        .O(\countDataReceived[39]_i_67_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_68 
       (.I0(countReadReqToBeSent[3]),
        .I1(countReadReqSent_reg[3]),
        .I2(countReadReqSent_reg[5]),
        .I3(countReadReqToBeSent[5]),
        .I4(countReadReqSent_reg[4]),
        .I5(countReadReqToBeSent[4]),
        .O(\countDataReceived[39]_i_68_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \countDataReceived[39]_i_69 
       (.I0(countReadReqToBeSent[0]),
        .I1(countReadReqSent_reg[0]),
        .I2(countReadReqSent_reg[2]),
        .I3(countReadReqToBeSent[2]),
        .I4(countReadReqSent_reg[1]),
        .I5(countReadReqToBeSent[1]),
        .O(\countDataReceived[39]_i_69_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \countDataReceived[39]_i_7 
       (.I0(active_read),
        .I1(active_write),
        .O(\countDataReceived[39]_i_7_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[0] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[0]),
        .Q(countDataReceived[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[10] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[10]),
        .Q(countDataReceived[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[11] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[11]),
        .Q(countDataReceived[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[12] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[12]),
        .Q(countDataReceived[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[13] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[13]),
        .Q(countDataReceived[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[14] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[14]),
        .Q(countDataReceived[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[15] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[15]),
        .Q(countDataReceived[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[16] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[16]),
        .Q(countDataReceived[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[16]_i_2 
       (.CI(\countDataReceived_reg[8]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[16]_i_2_n_0 ,\countDataReceived_reg[16]_i_2_n_1 ,\countDataReceived_reg[16]_i_2_n_2 ,\countDataReceived_reg[16]_i_2_n_3 ,\NLW_countDataReceived_reg[16]_i_2_CO_UNCONNECTED [3],\countDataReceived_reg[16]_i_2_n_5 ,\countDataReceived_reg[16]_i_2_n_6 ,\countDataReceived_reg[16]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataReceived0[16:9]),
        .S(countDataReceived[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[17] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[17]),
        .Q(countDataReceived[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[18] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[18]),
        .Q(countDataReceived[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[19] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[19]),
        .Q(countDataReceived[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[1] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[1]),
        .Q(countDataReceived[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[20] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[20]),
        .Q(countDataReceived[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[21] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[21]),
        .Q(countDataReceived[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[22] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[22]),
        .Q(countDataReceived[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[23] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[23]),
        .Q(countDataReceived[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[24] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[24]),
        .Q(countDataReceived[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[24]_i_2 
       (.CI(\countDataReceived_reg[16]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[24]_i_2_n_0 ,\countDataReceived_reg[24]_i_2_n_1 ,\countDataReceived_reg[24]_i_2_n_2 ,\countDataReceived_reg[24]_i_2_n_3 ,\NLW_countDataReceived_reg[24]_i_2_CO_UNCONNECTED [3],\countDataReceived_reg[24]_i_2_n_5 ,\countDataReceived_reg[24]_i_2_n_6 ,\countDataReceived_reg[24]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataReceived0[24:17]),
        .S(countDataReceived[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[25] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[25]),
        .Q(countDataReceived[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[26] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[26]),
        .Q(countDataReceived[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[27] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[27]),
        .Q(countDataReceived[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[28] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[28]),
        .Q(countDataReceived[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[29] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[29]),
        .Q(countDataReceived[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[2] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[2]),
        .Q(countDataReceived[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[30] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[30]),
        .Q(countDataReceived[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[31] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[31]),
        .Q(countDataReceived[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[32] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[32]),
        .Q(countDataReceived[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[32]_i_2 
       (.CI(\countDataReceived_reg[24]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[32]_i_2_n_0 ,\countDataReceived_reg[32]_i_2_n_1 ,\countDataReceived_reg[32]_i_2_n_2 ,\countDataReceived_reg[32]_i_2_n_3 ,\NLW_countDataReceived_reg[32]_i_2_CO_UNCONNECTED [3],\countDataReceived_reg[32]_i_2_n_5 ,\countDataReceived_reg[32]_i_2_n_6 ,\countDataReceived_reg[32]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataReceived0[32:25]),
        .S(countDataReceived[32:25]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[33] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[33]),
        .Q(countDataReceived[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[34] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[34]),
        .Q(countDataReceived[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[35] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[35]),
        .Q(countDataReceived[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[36] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[36]),
        .Q(countDataReceived[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[37] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[37]),
        .Q(countDataReceived[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[38] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[38]),
        .Q(countDataReceived[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[39] 
       (.C(clk),
        .CE(\countDataReceived[39]_i_1_n_0 ),
        .D(p_1_in__0[39]),
        .Q(countDataReceived[39]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_10 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[39]_i_10_n_0 ,\countDataReceived_reg[39]_i_10_n_1 ,\countDataReceived_reg[39]_i_10_n_2 ,\countDataReceived_reg[39]_i_10_n_3 ,\NLW_countDataReceived_reg[39]_i_10_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_10_n_5 ,\countDataReceived_reg[39]_i_10_n_6 ,\countDataReceived_reg[39]_i_10_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_10_O_UNCONNECTED [7:0]),
        .S({\countDataReceived[39]_i_38_n_0 ,\countDataReceived[39]_i_39_n_0 ,\countDataReceived[39]_i_40_n_0 ,\countDataReceived[39]_i_41_n_0 ,\countDataReceived[39]_i_42_n_0 ,\countDataReceived[39]_i_43_n_0 ,\countDataReceived[39]_i_44_n_0 ,\countDataReceived[39]_i_45_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_17 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[39]_i_17_n_0 ,\countDataReceived_reg[39]_i_17_n_1 ,\countDataReceived_reg[39]_i_17_n_2 ,\countDataReceived_reg[39]_i_17_n_3 ,\NLW_countDataReceived_reg[39]_i_17_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_17_n_5 ,\countDataReceived_reg[39]_i_17_n_6 ,\countDataReceived_reg[39]_i_17_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_17_O_UNCONNECTED [7:0]),
        .S({\countDataReceived[39]_i_46_n_0 ,\countDataReceived[39]_i_47_n_0 ,\countDataReceived[39]_i_48_n_0 ,\countDataReceived[39]_i_49_n_0 ,\countDataReceived[39]_i_50_n_0 ,\countDataReceived[39]_i_51_n_0 ,\countDataReceived[39]_i_52_n_0 ,\countDataReceived[39]_i_53_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_24 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[39]_i_24_n_0 ,\countDataReceived_reg[39]_i_24_n_1 ,\countDataReceived_reg[39]_i_24_n_2 ,\countDataReceived_reg[39]_i_24_n_3 ,\NLW_countDataReceived_reg[39]_i_24_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_24_n_5 ,\countDataReceived_reg[39]_i_24_n_6 ,\countDataReceived_reg[39]_i_24_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_24_O_UNCONNECTED [7:0]),
        .S({\countDataReceived[39]_i_54_n_0 ,\countDataReceived[39]_i_55_n_0 ,\countDataReceived[39]_i_56_n_0 ,\countDataReceived[39]_i_57_n_0 ,\countDataReceived[39]_i_58_n_0 ,\countDataReceived[39]_i_59_n_0 ,\countDataReceived[39]_i_60_n_0 ,\countDataReceived[39]_i_61_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_31 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[39]_i_31_n_0 ,\countDataReceived_reg[39]_i_31_n_1 ,\countDataReceived_reg[39]_i_31_n_2 ,\countDataReceived_reg[39]_i_31_n_3 ,\NLW_countDataReceived_reg[39]_i_31_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_31_n_5 ,\countDataReceived_reg[39]_i_31_n_6 ,\countDataReceived_reg[39]_i_31_n_7 }),
        .DI({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_31_O_UNCONNECTED [7:0]),
        .S({\countDataReceived[39]_i_62_n_0 ,\countDataReceived[39]_i_63_n_0 ,\countDataReceived[39]_i_64_n_0 ,\countDataReceived[39]_i_65_n_0 ,\countDataReceived[39]_i_66_n_0 ,\countDataReceived[39]_i_67_n_0 ,\countDataReceived[39]_i_68_n_0 ,\countDataReceived[39]_i_69_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_4 
       (.CI(\countDataReceived_reg[32]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataReceived_reg[39]_i_4_CO_UNCONNECTED [7:6],\countDataReceived_reg[39]_i_4_n_2 ,\countDataReceived_reg[39]_i_4_n_3 ,\NLW_countDataReceived_reg[39]_i_4_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_4_n_5 ,\countDataReceived_reg[39]_i_4_n_6 ,\countDataReceived_reg[39]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countDataReceived_reg[39]_i_4_O_UNCONNECTED [7],countDataReceived0[39:33]}),
        .S({1'b0,countDataReceived[39:33]}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_5 
       (.CI(\countDataReceived_reg[39]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataReceived_reg[39]_i_5_CO_UNCONNECTED [7:6],active_runtime0,\countDataReceived_reg[39]_i_5_n_3 ,\NLW_countDataReceived_reg[39]_i_5_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_5_n_5 ,\countDataReceived_reg[39]_i_5_n_6 ,\countDataReceived_reg[39]_i_5_n_7 }),
        .DI({1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_5_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,\countDataReceived[39]_i_11_n_0 ,\countDataReceived[39]_i_12_n_0 ,\countDataReceived[39]_i_13_n_0 ,\countDataReceived[39]_i_14_n_0 ,\countDataReceived[39]_i_15_n_0 ,\countDataReceived[39]_i_16_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_6 
       (.CI(\countDataReceived_reg[39]_i_17_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataReceived_reg[39]_i_6_CO_UNCONNECTED [7:6],active_runtime1,\countDataReceived_reg[39]_i_6_n_3 ,\NLW_countDataReceived_reg[39]_i_6_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_6_n_5 ,\countDataReceived_reg[39]_i_6_n_6 ,\countDataReceived_reg[39]_i_6_n_7 }),
        .DI({1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_6_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,\countDataReceived[39]_i_18_n_0 ,\countDataReceived[39]_i_19_n_0 ,\countDataReceived[39]_i_20_n_0 ,\countDataReceived[39]_i_21_n_0 ,\countDataReceived[39]_i_22_n_0 ,\countDataReceived[39]_i_23_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_8 
       (.CI(\countDataReceived_reg[39]_i_24_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataReceived_reg[39]_i_8_CO_UNCONNECTED [7:6],active_runtime2,\countDataReceived_reg[39]_i_8_n_3 ,\NLW_countDataReceived_reg[39]_i_8_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_8_n_5 ,\countDataReceived_reg[39]_i_8_n_6 ,\countDataReceived_reg[39]_i_8_n_7 }),
        .DI({1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_8_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,\countDataReceived[39]_i_25_n_0 ,\countDataReceived[39]_i_26_n_0 ,\countDataReceived[39]_i_27_n_0 ,\countDataReceived[39]_i_28_n_0 ,\countDataReceived[39]_i_29_n_0 ,\countDataReceived[39]_i_30_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[39]_i_9 
       (.CI(\countDataReceived_reg[39]_i_31_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataReceived_reg[39]_i_9_CO_UNCONNECTED [7:6],active_runtime3,\countDataReceived_reg[39]_i_9_n_3 ,\NLW_countDataReceived_reg[39]_i_9_CO_UNCONNECTED [3],\countDataReceived_reg[39]_i_9_n_5 ,\countDataReceived_reg[39]_i_9_n_6 ,\countDataReceived_reg[39]_i_9_n_7 }),
        .DI({1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_countDataReceived_reg[39]_i_9_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,\countDataReceived[39]_i_32_n_0 ,\countDataReceived[39]_i_33_n_0 ,\countDataReceived[39]_i_34_n_0 ,\countDataReceived[39]_i_35_n_0 ,\countDataReceived[39]_i_36_n_0 ,\countDataReceived[39]_i_37_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[3] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[3]),
        .Q(countDataReceived[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[4] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[4]),
        .Q(countDataReceived[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[5] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[5]),
        .Q(countDataReceived[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[6] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[6]),
        .Q(countDataReceived[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[7] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[7]),
        .Q(countDataReceived[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[8] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[8]),
        .Q(countDataReceived[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataReceived_reg[8]_i_2 
       (.CI(countDataReceived[0]),
        .CI_TOP(1'b0),
        .CO({\countDataReceived_reg[8]_i_2_n_0 ,\countDataReceived_reg[8]_i_2_n_1 ,\countDataReceived_reg[8]_i_2_n_2 ,\countDataReceived_reg[8]_i_2_n_3 ,\NLW_countDataReceived_reg[8]_i_2_CO_UNCONNECTED [3],\countDataReceived_reg[8]_i_2_n_5 ,\countDataReceived_reg[8]_i_2_n_6 ,\countDataReceived_reg[8]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataReceived0[8:1]),
        .S(countDataReceived[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataReceived_reg[9] 
       (.C(clk),
        .CE(sactn_n_67),
        .D(p_1_in__0[9]),
        .Q(countDataReceived[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h31)) 
    \countDataSent[0]_i_10 
       (.I0(reset_cmd),
        .I1(countDataSent_reg[0]),
        .I2(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataSent[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h89)) 
    \countDataSent[0]_i_2 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(countDataSent_reg[0]),
        .I2(reset_cmd),
        .O(\countDataSent[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[0]_i_3 
       (.I0(countDataSent_reg[7]),
        .I1(active_runtime),
        .I2(countDataSent0[7]),
        .I3(reset_cmd),
        .O(\countDataSent[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[0]_i_4 
       (.I0(countDataSent_reg[6]),
        .I1(active_runtime),
        .I2(countDataSent0[6]),
        .I3(reset_cmd),
        .O(\countDataSent[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[0]_i_5 
       (.I0(countDataSent_reg[5]),
        .I1(active_runtime),
        .I2(countDataSent0[5]),
        .I3(reset_cmd),
        .O(\countDataSent[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[0]_i_6 
       (.I0(countDataSent_reg[4]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[4]),
        .I3(reset_cmd),
        .O(\countDataSent[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[0]_i_7 
       (.I0(countDataSent_reg[3]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[3]),
        .I3(reset_cmd),
        .O(\countDataSent[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[0]_i_8 
       (.I0(countDataSent_reg[2]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[2]),
        .I3(reset_cmd),
        .O(\countDataSent[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[0]_i_9 
       (.I0(countDataSent_reg[1]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[1]),
        .I3(reset_cmd),
        .O(\countDataSent[0]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_2 
       (.I0(countDataSent_reg[23]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[23]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_3 
       (.I0(countDataSent_reg[22]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[22]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_4 
       (.I0(countDataSent_reg[21]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[21]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_5 
       (.I0(countDataSent_reg[20]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[20]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_6 
       (.I0(countDataSent_reg[19]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[19]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_7 
       (.I0(countDataSent_reg[18]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[18]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_8 
       (.I0(countDataSent_reg[17]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[17]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[16]_i_9 
       (.I0(countDataSent_reg[16]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[16]),
        .I3(reset_cmd),
        .O(\countDataSent[16]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_2 
       (.I0(countDataSent_reg[31]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[31]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_3 
       (.I0(countDataSent_reg[30]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[30]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_4 
       (.I0(countDataSent_reg[29]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[29]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_5 
       (.I0(countDataSent_reg[28]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[28]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_6 
       (.I0(countDataSent_reg[27]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[27]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_7 
       (.I0(countDataSent_reg[26]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[26]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_8 
       (.I0(countDataSent_reg[25]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[25]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[24]_i_9 
       (.I0(countDataSent_reg[24]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[24]),
        .I3(reset_cmd),
        .O(\countDataSent[24]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_2 
       (.I0(countDataSent_reg[39]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[39]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_3 
       (.I0(countDataSent_reg[38]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[38]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_4 
       (.I0(countDataSent_reg[37]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[37]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_5 
       (.I0(countDataSent_reg[36]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[36]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_6 
       (.I0(countDataSent_reg[35]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[35]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_7 
       (.I0(countDataSent_reg[34]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[34]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_8 
       (.I0(countDataSent_reg[33]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[33]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[32]_i_9 
       (.I0(countDataSent_reg[32]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[32]),
        .I3(reset_cmd),
        .O(\countDataSent[32]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_2 
       (.I0(countDataSent_reg[15]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[15]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_3 
       (.I0(countDataSent_reg[14]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[14]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_4 
       (.I0(countDataSent_reg[13]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[13]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_5 
       (.I0(countDataSent_reg[12]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[12]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_6 
       (.I0(countDataSent_reg[11]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[11]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_7 
       (.I0(countDataSent_reg[10]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[10]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_8 
       (.I0(countDataSent_reg[9]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[9]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataSent[8]_i_9 
       (.I0(countDataSent_reg[8]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataSent0[8]),
        .I3(reset_cmd),
        .O(\countDataSent[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[0] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_15 ),
        .Q(countDataSent_reg[0]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[0]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[0]_i_1_n_0 ,\countDataSent_reg[0]_i_1_n_1 ,\countDataSent_reg[0]_i_1_n_2 ,\countDataSent_reg[0]_i_1_n_3 ,\NLW_countDataSent_reg[0]_i_1_CO_UNCONNECTED [3],\countDataSent_reg[0]_i_1_n_5 ,\countDataSent_reg[0]_i_1_n_6 ,\countDataSent_reg[0]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\countDataSent[0]_i_2_n_0 }),
        .O({\countDataSent_reg[0]_i_1_n_8 ,\countDataSent_reg[0]_i_1_n_9 ,\countDataSent_reg[0]_i_1_n_10 ,\countDataSent_reg[0]_i_1_n_11 ,\countDataSent_reg[0]_i_1_n_12 ,\countDataSent_reg[0]_i_1_n_13 ,\countDataSent_reg[0]_i_1_n_14 ,\countDataSent_reg[0]_i_1_n_15 }),
        .S({\countDataSent[0]_i_3_n_0 ,\countDataSent[0]_i_4_n_0 ,\countDataSent[0]_i_5_n_0 ,\countDataSent[0]_i_6_n_0 ,\countDataSent[0]_i_7_n_0 ,\countDataSent[0]_i_8_n_0 ,\countDataSent[0]_i_9_n_0 ,\countDataSent[0]_i_10_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[0]_i_11 
       (.CI(countDataSent_reg[0]),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[0]_i_11_n_0 ,\countDataSent_reg[0]_i_11_n_1 ,\countDataSent_reg[0]_i_11_n_2 ,\countDataSent_reg[0]_i_11_n_3 ,\NLW_countDataSent_reg[0]_i_11_CO_UNCONNECTED [3],\countDataSent_reg[0]_i_11_n_5 ,\countDataSent_reg[0]_i_11_n_6 ,\countDataSent_reg[0]_i_11_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataSent0[8:1]),
        .S(countDataSent_reg[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[10] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_13 ),
        .Q(countDataSent_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[11] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_12 ),
        .Q(countDataSent_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[12] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_11 ),
        .Q(countDataSent_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[13] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_10 ),
        .Q(countDataSent_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[14] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_9 ),
        .Q(countDataSent_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[15] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_8 ),
        .Q(countDataSent_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[16] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_15 ),
        .Q(countDataSent_reg[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[16]_i_1 
       (.CI(\countDataSent_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[16]_i_1_n_0 ,\countDataSent_reg[16]_i_1_n_1 ,\countDataSent_reg[16]_i_1_n_2 ,\countDataSent_reg[16]_i_1_n_3 ,\NLW_countDataSent_reg[16]_i_1_CO_UNCONNECTED [3],\countDataSent_reg[16]_i_1_n_5 ,\countDataSent_reg[16]_i_1_n_6 ,\countDataSent_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataSent_reg[16]_i_1_n_8 ,\countDataSent_reg[16]_i_1_n_9 ,\countDataSent_reg[16]_i_1_n_10 ,\countDataSent_reg[16]_i_1_n_11 ,\countDataSent_reg[16]_i_1_n_12 ,\countDataSent_reg[16]_i_1_n_13 ,\countDataSent_reg[16]_i_1_n_14 ,\countDataSent_reg[16]_i_1_n_15 }),
        .S({\countDataSent[16]_i_2_n_0 ,\countDataSent[16]_i_3_n_0 ,\countDataSent[16]_i_4_n_0 ,\countDataSent[16]_i_5_n_0 ,\countDataSent[16]_i_6_n_0 ,\countDataSent[16]_i_7_n_0 ,\countDataSent[16]_i_8_n_0 ,\countDataSent[16]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[16]_i_10 
       (.CI(\countDataSent_reg[8]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[16]_i_10_n_0 ,\countDataSent_reg[16]_i_10_n_1 ,\countDataSent_reg[16]_i_10_n_2 ,\countDataSent_reg[16]_i_10_n_3 ,\NLW_countDataSent_reg[16]_i_10_CO_UNCONNECTED [3],\countDataSent_reg[16]_i_10_n_5 ,\countDataSent_reg[16]_i_10_n_6 ,\countDataSent_reg[16]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataSent0[24:17]),
        .S(countDataSent_reg[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[17] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_14 ),
        .Q(countDataSent_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[18] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_13 ),
        .Q(countDataSent_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[19] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_12 ),
        .Q(countDataSent_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[1] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_14 ),
        .Q(countDataSent_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[20] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_11 ),
        .Q(countDataSent_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[21] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_10 ),
        .Q(countDataSent_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[22] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_9 ),
        .Q(countDataSent_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[23] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[16]_i_1_n_8 ),
        .Q(countDataSent_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[24] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_15 ),
        .Q(countDataSent_reg[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[24]_i_1 
       (.CI(\countDataSent_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[24]_i_1_n_0 ,\countDataSent_reg[24]_i_1_n_1 ,\countDataSent_reg[24]_i_1_n_2 ,\countDataSent_reg[24]_i_1_n_3 ,\NLW_countDataSent_reg[24]_i_1_CO_UNCONNECTED [3],\countDataSent_reg[24]_i_1_n_5 ,\countDataSent_reg[24]_i_1_n_6 ,\countDataSent_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataSent_reg[24]_i_1_n_8 ,\countDataSent_reg[24]_i_1_n_9 ,\countDataSent_reg[24]_i_1_n_10 ,\countDataSent_reg[24]_i_1_n_11 ,\countDataSent_reg[24]_i_1_n_12 ,\countDataSent_reg[24]_i_1_n_13 ,\countDataSent_reg[24]_i_1_n_14 ,\countDataSent_reg[24]_i_1_n_15 }),
        .S({\countDataSent[24]_i_2_n_0 ,\countDataSent[24]_i_3_n_0 ,\countDataSent[24]_i_4_n_0 ,\countDataSent[24]_i_5_n_0 ,\countDataSent[24]_i_6_n_0 ,\countDataSent[24]_i_7_n_0 ,\countDataSent[24]_i_8_n_0 ,\countDataSent[24]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[24]_i_10 
       (.CI(\countDataSent_reg[16]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[24]_i_10_n_0 ,\countDataSent_reg[24]_i_10_n_1 ,\countDataSent_reg[24]_i_10_n_2 ,\countDataSent_reg[24]_i_10_n_3 ,\NLW_countDataSent_reg[24]_i_10_CO_UNCONNECTED [3],\countDataSent_reg[24]_i_10_n_5 ,\countDataSent_reg[24]_i_10_n_6 ,\countDataSent_reg[24]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataSent0[32:25]),
        .S(countDataSent_reg[32:25]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[25] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_14 ),
        .Q(countDataSent_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[26] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_13 ),
        .Q(countDataSent_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[27] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_12 ),
        .Q(countDataSent_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[28] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_11 ),
        .Q(countDataSent_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[29] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_10 ),
        .Q(countDataSent_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[2] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_13 ),
        .Q(countDataSent_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[30] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_9 ),
        .Q(countDataSent_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[31] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[24]_i_1_n_8 ),
        .Q(countDataSent_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[32] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_15 ),
        .Q(countDataSent_reg[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[32]_i_1 
       (.CI(\countDataSent_reg[24]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataSent_reg[32]_i_1_CO_UNCONNECTED [7],\countDataSent_reg[32]_i_1_n_1 ,\countDataSent_reg[32]_i_1_n_2 ,\countDataSent_reg[32]_i_1_n_3 ,\NLW_countDataSent_reg[32]_i_1_CO_UNCONNECTED [3],\countDataSent_reg[32]_i_1_n_5 ,\countDataSent_reg[32]_i_1_n_6 ,\countDataSent_reg[32]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataSent_reg[32]_i_1_n_8 ,\countDataSent_reg[32]_i_1_n_9 ,\countDataSent_reg[32]_i_1_n_10 ,\countDataSent_reg[32]_i_1_n_11 ,\countDataSent_reg[32]_i_1_n_12 ,\countDataSent_reg[32]_i_1_n_13 ,\countDataSent_reg[32]_i_1_n_14 ,\countDataSent_reg[32]_i_1_n_15 }),
        .S({\countDataSent[32]_i_2_n_0 ,\countDataSent[32]_i_3_n_0 ,\countDataSent[32]_i_4_n_0 ,\countDataSent[32]_i_5_n_0 ,\countDataSent[32]_i_6_n_0 ,\countDataSent[32]_i_7_n_0 ,\countDataSent[32]_i_8_n_0 ,\countDataSent[32]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[32]_i_10 
       (.CI(\countDataSent_reg[24]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataSent_reg[32]_i_10_CO_UNCONNECTED [7:6],\countDataSent_reg[32]_i_10_n_2 ,\countDataSent_reg[32]_i_10_n_3 ,\NLW_countDataSent_reg[32]_i_10_CO_UNCONNECTED [3],\countDataSent_reg[32]_i_10_n_5 ,\countDataSent_reg[32]_i_10_n_6 ,\countDataSent_reg[32]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countDataSent_reg[32]_i_10_O_UNCONNECTED [7],countDataSent0[39:33]}),
        .S({1'b0,countDataSent_reg[39:33]}));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[33] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_14 ),
        .Q(countDataSent_reg[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[34] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_13 ),
        .Q(countDataSent_reg[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[35] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_12 ),
        .Q(countDataSent_reg[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[36] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_11 ),
        .Q(countDataSent_reg[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[37] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_10 ),
        .Q(countDataSent_reg[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[38] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_9 ),
        .Q(countDataSent_reg[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[39] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[32]_i_1_n_8 ),
        .Q(countDataSent_reg[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[3] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_12 ),
        .Q(countDataSent_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[4] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_11 ),
        .Q(countDataSent_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[5] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_10 ),
        .Q(countDataSent_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[6] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_9 ),
        .Q(countDataSent_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[7] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[0]_i_1_n_8 ),
        .Q(countDataSent_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[8] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_15 ),
        .Q(countDataSent_reg[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[8]_i_1 
       (.CI(\countDataSent_reg[0]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[8]_i_1_n_0 ,\countDataSent_reg[8]_i_1_n_1 ,\countDataSent_reg[8]_i_1_n_2 ,\countDataSent_reg[8]_i_1_n_3 ,\NLW_countDataSent_reg[8]_i_1_CO_UNCONNECTED [3],\countDataSent_reg[8]_i_1_n_5 ,\countDataSent_reg[8]_i_1_n_6 ,\countDataSent_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataSent_reg[8]_i_1_n_8 ,\countDataSent_reg[8]_i_1_n_9 ,\countDataSent_reg[8]_i_1_n_10 ,\countDataSent_reg[8]_i_1_n_11 ,\countDataSent_reg[8]_i_1_n_12 ,\countDataSent_reg[8]_i_1_n_13 ,\countDataSent_reg[8]_i_1_n_14 ,\countDataSent_reg[8]_i_1_n_15 }),
        .S({\countDataSent[8]_i_2_n_0 ,\countDataSent[8]_i_3_n_0 ,\countDataSent[8]_i_4_n_0 ,\countDataSent[8]_i_5_n_0 ,\countDataSent[8]_i_6_n_0 ,\countDataSent[8]_i_7_n_0 ,\countDataSent[8]_i_8_n_0 ,\countDataSent[8]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataSent_reg[8]_i_10 
       (.CI(\countDataSent_reg[0]_i_11_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataSent_reg[8]_i_10_n_0 ,\countDataSent_reg[8]_i_10_n_1 ,\countDataSent_reg[8]_i_10_n_2 ,\countDataSent_reg[8]_i_10_n_3 ,\NLW_countDataSent_reg[8]_i_10_CO_UNCONNECTED [3],\countDataSent_reg[8]_i_10_n_5 ,\countDataSent_reg[8]_i_10_n_6 ,\countDataSent_reg[8]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataSent0[16:9]),
        .S(countDataSent_reg[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataSent_reg[9] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\countDataSent_reg[8]_i_1_n_14 ),
        .Q(countDataSent_reg[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h31)) 
    \countDataToBeReceived[0]_i_10 
       (.I0(reset_cmd),
        .I1(countDataToBeReceived_reg[0]),
        .I2(\countAddrSent[31]_i_3_n_0 ),
        .O(\countDataToBeReceived[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h89)) 
    \countDataToBeReceived[0]_i_2 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(countDataToBeReceived_reg[0]),
        .I2(reset_cmd),
        .O(\countDataToBeReceived[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[0]_i_3 
       (.I0(countDataToBeReceived_reg[7]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[7]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[0]_i_4 
       (.I0(countDataToBeReceived_reg[6]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[6]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[0]_i_5 
       (.I0(countDataToBeReceived_reg[5]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[5]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[0]_i_6 
       (.I0(countDataToBeReceived_reg[4]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[4]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[0]_i_7 
       (.I0(countDataToBeReceived_reg[3]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[3]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[0]_i_8 
       (.I0(countDataToBeReceived_reg[2]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[2]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[0]_i_9 
       (.I0(countDataToBeReceived_reg[1]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[1]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[0]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_2 
       (.I0(countDataToBeReceived_reg[23]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[23]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_3 
       (.I0(countDataToBeReceived_reg[22]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[22]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_4 
       (.I0(countDataToBeReceived_reg[21]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[21]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_5 
       (.I0(countDataToBeReceived_reg[20]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[20]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_6 
       (.I0(countDataToBeReceived_reg[19]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[19]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_7 
       (.I0(countDataToBeReceived_reg[18]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[18]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_8 
       (.I0(countDataToBeReceived_reg[17]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[17]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[16]_i_9 
       (.I0(countDataToBeReceived_reg[16]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[16]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[16]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_2 
       (.I0(countDataToBeReceived_reg[31]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[31]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_3 
       (.I0(countDataToBeReceived_reg[30]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[30]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_4 
       (.I0(countDataToBeReceived_reg[29]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[29]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_5 
       (.I0(countDataToBeReceived_reg[28]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[28]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_6 
       (.I0(countDataToBeReceived_reg[27]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[27]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_7 
       (.I0(countDataToBeReceived_reg[26]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[26]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_8 
       (.I0(countDataToBeReceived_reg[25]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[25]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[24]_i_9 
       (.I0(countDataToBeReceived_reg[24]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[24]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[24]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_2 
       (.I0(countDataToBeReceived_reg[39]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[39]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_3 
       (.I0(countDataToBeReceived_reg[38]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[38]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_4 
       (.I0(countDataToBeReceived_reg[37]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[37]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_5 
       (.I0(countDataToBeReceived_reg[36]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[36]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_6 
       (.I0(countDataToBeReceived_reg[35]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[35]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_7 
       (.I0(countDataToBeReceived_reg[34]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[34]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_8 
       (.I0(countDataToBeReceived_reg[33]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[33]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[32]_i_9 
       (.I0(countDataToBeReceived_reg[32]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[32]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[32]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_2 
       (.I0(countDataToBeReceived_reg[15]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[15]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_3 
       (.I0(countDataToBeReceived_reg[14]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[14]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_4 
       (.I0(countDataToBeReceived_reg[13]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[13]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_5 
       (.I0(countDataToBeReceived_reg[12]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[12]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_6 
       (.I0(countDataToBeReceived_reg[11]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[11]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_7 
       (.I0(countDataToBeReceived_reg[10]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[10]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_8 
       (.I0(countDataToBeReceived_reg[9]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[9]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeReceived[8]_i_9 
       (.I0(countDataToBeReceived_reg[8]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countDataToBeReceived0[8]),
        .I3(reset_cmd),
        .O(\countDataToBeReceived[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[0] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_15 ),
        .Q(countDataToBeReceived_reg[0]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[0]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[0]_i_1_n_0 ,\countDataToBeReceived_reg[0]_i_1_n_1 ,\countDataToBeReceived_reg[0]_i_1_n_2 ,\countDataToBeReceived_reg[0]_i_1_n_3 ,\NLW_countDataToBeReceived_reg[0]_i_1_CO_UNCONNECTED [3],\countDataToBeReceived_reg[0]_i_1_n_5 ,\countDataToBeReceived_reg[0]_i_1_n_6 ,\countDataToBeReceived_reg[0]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\countDataToBeReceived[0]_i_2_n_0 }),
        .O({\countDataToBeReceived_reg[0]_i_1_n_8 ,\countDataToBeReceived_reg[0]_i_1_n_9 ,\countDataToBeReceived_reg[0]_i_1_n_10 ,\countDataToBeReceived_reg[0]_i_1_n_11 ,\countDataToBeReceived_reg[0]_i_1_n_12 ,\countDataToBeReceived_reg[0]_i_1_n_13 ,\countDataToBeReceived_reg[0]_i_1_n_14 ,\countDataToBeReceived_reg[0]_i_1_n_15 }),
        .S({\countDataToBeReceived[0]_i_3_n_0 ,\countDataToBeReceived[0]_i_4_n_0 ,\countDataToBeReceived[0]_i_5_n_0 ,\countDataToBeReceived[0]_i_6_n_0 ,\countDataToBeReceived[0]_i_7_n_0 ,\countDataToBeReceived[0]_i_8_n_0 ,\countDataToBeReceived[0]_i_9_n_0 ,\countDataToBeReceived[0]_i_10_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[0]_i_11 
       (.CI(countDataToBeReceived_reg[0]),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[0]_i_11_n_0 ,\countDataToBeReceived_reg[0]_i_11_n_1 ,\countDataToBeReceived_reg[0]_i_11_n_2 ,\countDataToBeReceived_reg[0]_i_11_n_3 ,\NLW_countDataToBeReceived_reg[0]_i_11_CO_UNCONNECTED [3],\countDataToBeReceived_reg[0]_i_11_n_5 ,\countDataToBeReceived_reg[0]_i_11_n_6 ,\countDataToBeReceived_reg[0]_i_11_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataToBeReceived0[8:1]),
        .S(countDataToBeReceived_reg[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[10] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_13 ),
        .Q(countDataToBeReceived_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[11] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_12 ),
        .Q(countDataToBeReceived_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[12] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_11 ),
        .Q(countDataToBeReceived_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[13] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_10 ),
        .Q(countDataToBeReceived_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[14] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_9 ),
        .Q(countDataToBeReceived_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[15] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_8 ),
        .Q(countDataToBeReceived_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[16] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_15 ),
        .Q(countDataToBeReceived_reg[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[16]_i_1 
       (.CI(\countDataToBeReceived_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[16]_i_1_n_0 ,\countDataToBeReceived_reg[16]_i_1_n_1 ,\countDataToBeReceived_reg[16]_i_1_n_2 ,\countDataToBeReceived_reg[16]_i_1_n_3 ,\NLW_countDataToBeReceived_reg[16]_i_1_CO_UNCONNECTED [3],\countDataToBeReceived_reg[16]_i_1_n_5 ,\countDataToBeReceived_reg[16]_i_1_n_6 ,\countDataToBeReceived_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataToBeReceived_reg[16]_i_1_n_8 ,\countDataToBeReceived_reg[16]_i_1_n_9 ,\countDataToBeReceived_reg[16]_i_1_n_10 ,\countDataToBeReceived_reg[16]_i_1_n_11 ,\countDataToBeReceived_reg[16]_i_1_n_12 ,\countDataToBeReceived_reg[16]_i_1_n_13 ,\countDataToBeReceived_reg[16]_i_1_n_14 ,\countDataToBeReceived_reg[16]_i_1_n_15 }),
        .S({\countDataToBeReceived[16]_i_2_n_0 ,\countDataToBeReceived[16]_i_3_n_0 ,\countDataToBeReceived[16]_i_4_n_0 ,\countDataToBeReceived[16]_i_5_n_0 ,\countDataToBeReceived[16]_i_6_n_0 ,\countDataToBeReceived[16]_i_7_n_0 ,\countDataToBeReceived[16]_i_8_n_0 ,\countDataToBeReceived[16]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[16]_i_10 
       (.CI(\countDataToBeReceived_reg[8]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[16]_i_10_n_0 ,\countDataToBeReceived_reg[16]_i_10_n_1 ,\countDataToBeReceived_reg[16]_i_10_n_2 ,\countDataToBeReceived_reg[16]_i_10_n_3 ,\NLW_countDataToBeReceived_reg[16]_i_10_CO_UNCONNECTED [3],\countDataToBeReceived_reg[16]_i_10_n_5 ,\countDataToBeReceived_reg[16]_i_10_n_6 ,\countDataToBeReceived_reg[16]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataToBeReceived0[24:17]),
        .S(countDataToBeReceived_reg[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[17] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_14 ),
        .Q(countDataToBeReceived_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[18] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_13 ),
        .Q(countDataToBeReceived_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[19] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_12 ),
        .Q(countDataToBeReceived_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[1] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_14 ),
        .Q(countDataToBeReceived_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[20] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_11 ),
        .Q(countDataToBeReceived_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[21] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_10 ),
        .Q(countDataToBeReceived_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[22] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_9 ),
        .Q(countDataToBeReceived_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[23] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[16]_i_1_n_8 ),
        .Q(countDataToBeReceived_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[24] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_15 ),
        .Q(countDataToBeReceived_reg[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[24]_i_1 
       (.CI(\countDataToBeReceived_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[24]_i_1_n_0 ,\countDataToBeReceived_reg[24]_i_1_n_1 ,\countDataToBeReceived_reg[24]_i_1_n_2 ,\countDataToBeReceived_reg[24]_i_1_n_3 ,\NLW_countDataToBeReceived_reg[24]_i_1_CO_UNCONNECTED [3],\countDataToBeReceived_reg[24]_i_1_n_5 ,\countDataToBeReceived_reg[24]_i_1_n_6 ,\countDataToBeReceived_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataToBeReceived_reg[24]_i_1_n_8 ,\countDataToBeReceived_reg[24]_i_1_n_9 ,\countDataToBeReceived_reg[24]_i_1_n_10 ,\countDataToBeReceived_reg[24]_i_1_n_11 ,\countDataToBeReceived_reg[24]_i_1_n_12 ,\countDataToBeReceived_reg[24]_i_1_n_13 ,\countDataToBeReceived_reg[24]_i_1_n_14 ,\countDataToBeReceived_reg[24]_i_1_n_15 }),
        .S({\countDataToBeReceived[24]_i_2_n_0 ,\countDataToBeReceived[24]_i_3_n_0 ,\countDataToBeReceived[24]_i_4_n_0 ,\countDataToBeReceived[24]_i_5_n_0 ,\countDataToBeReceived[24]_i_6_n_0 ,\countDataToBeReceived[24]_i_7_n_0 ,\countDataToBeReceived[24]_i_8_n_0 ,\countDataToBeReceived[24]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[24]_i_10 
       (.CI(\countDataToBeReceived_reg[16]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[24]_i_10_n_0 ,\countDataToBeReceived_reg[24]_i_10_n_1 ,\countDataToBeReceived_reg[24]_i_10_n_2 ,\countDataToBeReceived_reg[24]_i_10_n_3 ,\NLW_countDataToBeReceived_reg[24]_i_10_CO_UNCONNECTED [3],\countDataToBeReceived_reg[24]_i_10_n_5 ,\countDataToBeReceived_reg[24]_i_10_n_6 ,\countDataToBeReceived_reg[24]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataToBeReceived0[32:25]),
        .S(countDataToBeReceived_reg[32:25]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[25] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_14 ),
        .Q(countDataToBeReceived_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[26] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_13 ),
        .Q(countDataToBeReceived_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[27] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_12 ),
        .Q(countDataToBeReceived_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[28] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_11 ),
        .Q(countDataToBeReceived_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[29] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_10 ),
        .Q(countDataToBeReceived_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[2] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_13 ),
        .Q(countDataToBeReceived_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[30] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_9 ),
        .Q(countDataToBeReceived_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[31] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[24]_i_1_n_8 ),
        .Q(countDataToBeReceived_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[32] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_15 ),
        .Q(countDataToBeReceived_reg[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[32]_i_1 
       (.CI(\countDataToBeReceived_reg[24]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataToBeReceived_reg[32]_i_1_CO_UNCONNECTED [7],\countDataToBeReceived_reg[32]_i_1_n_1 ,\countDataToBeReceived_reg[32]_i_1_n_2 ,\countDataToBeReceived_reg[32]_i_1_n_3 ,\NLW_countDataToBeReceived_reg[32]_i_1_CO_UNCONNECTED [3],\countDataToBeReceived_reg[32]_i_1_n_5 ,\countDataToBeReceived_reg[32]_i_1_n_6 ,\countDataToBeReceived_reg[32]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataToBeReceived_reg[32]_i_1_n_8 ,\countDataToBeReceived_reg[32]_i_1_n_9 ,\countDataToBeReceived_reg[32]_i_1_n_10 ,\countDataToBeReceived_reg[32]_i_1_n_11 ,\countDataToBeReceived_reg[32]_i_1_n_12 ,\countDataToBeReceived_reg[32]_i_1_n_13 ,\countDataToBeReceived_reg[32]_i_1_n_14 ,\countDataToBeReceived_reg[32]_i_1_n_15 }),
        .S({\countDataToBeReceived[32]_i_2_n_0 ,\countDataToBeReceived[32]_i_3_n_0 ,\countDataToBeReceived[32]_i_4_n_0 ,\countDataToBeReceived[32]_i_5_n_0 ,\countDataToBeReceived[32]_i_6_n_0 ,\countDataToBeReceived[32]_i_7_n_0 ,\countDataToBeReceived[32]_i_8_n_0 ,\countDataToBeReceived[32]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[32]_i_10 
       (.CI(\countDataToBeReceived_reg[24]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataToBeReceived_reg[32]_i_10_CO_UNCONNECTED [7:6],\countDataToBeReceived_reg[32]_i_10_n_2 ,\countDataToBeReceived_reg[32]_i_10_n_3 ,\NLW_countDataToBeReceived_reg[32]_i_10_CO_UNCONNECTED [3],\countDataToBeReceived_reg[32]_i_10_n_5 ,\countDataToBeReceived_reg[32]_i_10_n_6 ,\countDataToBeReceived_reg[32]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countDataToBeReceived_reg[32]_i_10_O_UNCONNECTED [7],countDataToBeReceived0[39:33]}),
        .S({1'b0,countDataToBeReceived_reg[39:33]}));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[33] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_14 ),
        .Q(countDataToBeReceived_reg[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[34] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_13 ),
        .Q(countDataToBeReceived_reg[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[35] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_12 ),
        .Q(countDataToBeReceived_reg[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[36] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_11 ),
        .Q(countDataToBeReceived_reg[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[37] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_10 ),
        .Q(countDataToBeReceived_reg[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[38] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_9 ),
        .Q(countDataToBeReceived_reg[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[39] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[32]_i_1_n_8 ),
        .Q(countDataToBeReceived_reg[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[3] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_12 ),
        .Q(countDataToBeReceived_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[4] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_11 ),
        .Q(countDataToBeReceived_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[5] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_10 ),
        .Q(countDataToBeReceived_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[6] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_9 ),
        .Q(countDataToBeReceived_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[7] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[0]_i_1_n_8 ),
        .Q(countDataToBeReceived_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[8] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_15 ),
        .Q(countDataToBeReceived_reg[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[8]_i_1 
       (.CI(\countDataToBeReceived_reg[0]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[8]_i_1_n_0 ,\countDataToBeReceived_reg[8]_i_1_n_1 ,\countDataToBeReceived_reg[8]_i_1_n_2 ,\countDataToBeReceived_reg[8]_i_1_n_3 ,\NLW_countDataToBeReceived_reg[8]_i_1_CO_UNCONNECTED [3],\countDataToBeReceived_reg[8]_i_1_n_5 ,\countDataToBeReceived_reg[8]_i_1_n_6 ,\countDataToBeReceived_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataToBeReceived_reg[8]_i_1_n_8 ,\countDataToBeReceived_reg[8]_i_1_n_9 ,\countDataToBeReceived_reg[8]_i_1_n_10 ,\countDataToBeReceived_reg[8]_i_1_n_11 ,\countDataToBeReceived_reg[8]_i_1_n_12 ,\countDataToBeReceived_reg[8]_i_1_n_13 ,\countDataToBeReceived_reg[8]_i_1_n_14 ,\countDataToBeReceived_reg[8]_i_1_n_15 }),
        .S({\countDataToBeReceived[8]_i_2_n_0 ,\countDataToBeReceived[8]_i_3_n_0 ,\countDataToBeReceived[8]_i_4_n_0 ,\countDataToBeReceived[8]_i_5_n_0 ,\countDataToBeReceived[8]_i_6_n_0 ,\countDataToBeReceived[8]_i_7_n_0 ,\countDataToBeReceived[8]_i_8_n_0 ,\countDataToBeReceived[8]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeReceived_reg[8]_i_10 
       (.CI(\countDataToBeReceived_reg[0]_i_11_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeReceived_reg[8]_i_10_n_0 ,\countDataToBeReceived_reg[8]_i_10_n_1 ,\countDataToBeReceived_reg[8]_i_10_n_2 ,\countDataToBeReceived_reg[8]_i_10_n_3 ,\NLW_countDataToBeReceived_reg[8]_i_10_CO_UNCONNECTED [3],\countDataToBeReceived_reg[8]_i_10_n_5 ,\countDataToBeReceived_reg[8]_i_10_n_6 ,\countDataToBeReceived_reg[8]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataToBeReceived0[16:9]),
        .S(countDataToBeReceived_reg[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeReceived_reg[9] 
       (.C(clk),
        .CE(read_count),
        .D(\countDataToBeReceived_reg[8]_i_1_n_14 ),
        .Q(countDataToBeReceived_reg[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_10 
       (.I0(write_burst_size[7]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[7]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[7]),
        .O(\countDataToBeSent[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_11 
       (.I0(write_burst_size[6]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[6]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[6]),
        .O(\countDataToBeSent[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_12 
       (.I0(write_burst_size[5]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[5]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[5]),
        .O(\countDataToBeSent[0]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_13 
       (.I0(write_burst_size[4]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[4]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[4]),
        .O(\countDataToBeSent[0]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_14 
       (.I0(write_burst_size[3]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[3]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[3]),
        .O(\countDataToBeSent[0]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_15 
       (.I0(write_burst_size[2]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[2]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[2]),
        .O(\countDataToBeSent[0]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_16 
       (.I0(write_burst_size[1]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[1]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[1]),
        .O(\countDataToBeSent[0]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[0]_i_17 
       (.I0(write_burst_size[0]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[0]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[0]),
        .O(\countDataToBeSent[0]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_19 
       (.I0(countDataToBeSent_reg[7]),
        .I1(write_burst_size[7]),
        .O(\countDataToBeSent[0]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_2 
       (.I0(write_burst_size[7]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_20 
       (.I0(countDataToBeSent_reg[6]),
        .I1(write_burst_size[6]),
        .O(\countDataToBeSent[0]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_21 
       (.I0(countDataToBeSent_reg[5]),
        .I1(write_burst_size[5]),
        .O(\countDataToBeSent[0]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_22 
       (.I0(countDataToBeSent_reg[4]),
        .I1(write_burst_size[4]),
        .O(\countDataToBeSent[0]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_23 
       (.I0(countDataToBeSent_reg[3]),
        .I1(write_burst_size[3]),
        .O(\countDataToBeSent[0]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_24 
       (.I0(countDataToBeSent_reg[2]),
        .I1(write_burst_size[2]),
        .O(\countDataToBeSent[0]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_25 
       (.I0(countDataToBeSent_reg[1]),
        .I1(write_burst_size[1]),
        .O(\countDataToBeSent[0]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[0]_i_26 
       (.I0(countDataToBeSent_reg[0]),
        .I1(write_burst_size[0]),
        .O(\countDataToBeSent[0]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_3 
       (.I0(write_burst_size[6]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_4 
       (.I0(write_burst_size[5]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_5 
       (.I0(write_burst_size[4]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_6 
       (.I0(write_burst_size[3]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_7 
       (.I0(write_burst_size[2]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_8 
       (.I0(write_burst_size[1]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[0]_i_9 
       (.I0(write_burst_size[0]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_10 
       (.I0(write_burst_size[23]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[23]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[23]),
        .O(\countDataToBeSent[16]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_11 
       (.I0(write_burst_size[22]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[22]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[22]),
        .O(\countDataToBeSent[16]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_12 
       (.I0(write_burst_size[21]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[21]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[21]),
        .O(\countDataToBeSent[16]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_13 
       (.I0(write_burst_size[20]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[20]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[20]),
        .O(\countDataToBeSent[16]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_14 
       (.I0(write_burst_size[19]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[19]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[19]),
        .O(\countDataToBeSent[16]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_15 
       (.I0(write_burst_size[18]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[18]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[18]),
        .O(\countDataToBeSent[16]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_16 
       (.I0(write_burst_size[17]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[17]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[17]),
        .O(\countDataToBeSent[16]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[16]_i_17 
       (.I0(write_burst_size[16]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[16]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[16]),
        .O(\countDataToBeSent[16]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_19 
       (.I0(countDataToBeSent_reg[23]),
        .I1(write_burst_size[23]),
        .O(\countDataToBeSent[16]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_2 
       (.I0(write_burst_size[23]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_20 
       (.I0(countDataToBeSent_reg[22]),
        .I1(write_burst_size[22]),
        .O(\countDataToBeSent[16]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_21 
       (.I0(countDataToBeSent_reg[21]),
        .I1(write_burst_size[21]),
        .O(\countDataToBeSent[16]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_22 
       (.I0(countDataToBeSent_reg[20]),
        .I1(write_burst_size[20]),
        .O(\countDataToBeSent[16]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_23 
       (.I0(countDataToBeSent_reg[19]),
        .I1(write_burst_size[19]),
        .O(\countDataToBeSent[16]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_24 
       (.I0(countDataToBeSent_reg[18]),
        .I1(write_burst_size[18]),
        .O(\countDataToBeSent[16]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_25 
       (.I0(countDataToBeSent_reg[17]),
        .I1(write_burst_size[17]),
        .O(\countDataToBeSent[16]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[16]_i_26 
       (.I0(countDataToBeSent_reg[16]),
        .I1(write_burst_size[16]),
        .O(\countDataToBeSent[16]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_3 
       (.I0(write_burst_size[22]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_4 
       (.I0(write_burst_size[21]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_5 
       (.I0(write_burst_size[20]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_6 
       (.I0(write_burst_size[19]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_7 
       (.I0(write_burst_size[18]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_8 
       (.I0(write_burst_size[17]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[16]_i_9 
       (.I0(write_burst_size[16]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[16]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_10 
       (.I0(write_burst_size[31]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[31]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[31]),
        .O(\countDataToBeSent[24]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_11 
       (.I0(write_burst_size[30]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[30]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[30]),
        .O(\countDataToBeSent[24]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_12 
       (.I0(write_burst_size[29]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[29]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[29]),
        .O(\countDataToBeSent[24]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_13 
       (.I0(write_burst_size[28]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[28]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[28]),
        .O(\countDataToBeSent[24]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_14 
       (.I0(write_burst_size[27]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[27]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[27]),
        .O(\countDataToBeSent[24]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_15 
       (.I0(write_burst_size[26]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[26]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[26]),
        .O(\countDataToBeSent[24]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_16 
       (.I0(write_burst_size[25]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[25]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[25]),
        .O(\countDataToBeSent[24]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[24]_i_17 
       (.I0(write_burst_size[24]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[24]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[24]),
        .O(\countDataToBeSent[24]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_19 
       (.I0(countDataToBeSent_reg[31]),
        .I1(write_burst_size[31]),
        .O(\countDataToBeSent[24]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_2 
       (.I0(write_burst_size[31]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_20 
       (.I0(countDataToBeSent_reg[30]),
        .I1(write_burst_size[30]),
        .O(\countDataToBeSent[24]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_21 
       (.I0(countDataToBeSent_reg[29]),
        .I1(write_burst_size[29]),
        .O(\countDataToBeSent[24]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_22 
       (.I0(countDataToBeSent_reg[28]),
        .I1(write_burst_size[28]),
        .O(\countDataToBeSent[24]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_23 
       (.I0(countDataToBeSent_reg[27]),
        .I1(write_burst_size[27]),
        .O(\countDataToBeSent[24]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_24 
       (.I0(countDataToBeSent_reg[26]),
        .I1(write_burst_size[26]),
        .O(\countDataToBeSent[24]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_25 
       (.I0(countDataToBeSent_reg[25]),
        .I1(write_burst_size[25]),
        .O(\countDataToBeSent[24]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[24]_i_26 
       (.I0(countDataToBeSent_reg[24]),
        .I1(write_burst_size[24]),
        .O(\countDataToBeSent[24]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_3 
       (.I0(write_burst_size[30]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_4 
       (.I0(write_burst_size[29]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_5 
       (.I0(write_burst_size[28]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_6 
       (.I0(write_burst_size[27]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_7 
       (.I0(write_burst_size[26]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_8 
       (.I0(write_burst_size[25]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[24]_i_9 
       (.I0(write_burst_size[24]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[24]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_2 
       (.I0(countDataToBeSent_reg[39]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[39]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_3 
       (.I0(countDataToBeSent_reg[38]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[38]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_4 
       (.I0(countDataToBeSent_reg[37]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[37]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_5 
       (.I0(countDataToBeSent_reg[36]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[36]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_6 
       (.I0(countDataToBeSent_reg[35]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[35]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_7 
       (.I0(countDataToBeSent_reg[34]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[34]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_8 
       (.I0(countDataToBeSent_reg[33]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[33]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countDataToBeSent[32]_i_9 
       (.I0(countDataToBeSent_reg[32]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .I2(countDataToBeSent0[32]),
        .I3(reset_cmd),
        .O(\countDataToBeSent[32]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_10 
       (.I0(write_burst_size[15]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[15]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[15]),
        .O(\countDataToBeSent[8]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_11 
       (.I0(write_burst_size[14]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[14]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[14]),
        .O(\countDataToBeSent[8]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_12 
       (.I0(write_burst_size[13]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[13]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[13]),
        .O(\countDataToBeSent[8]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_13 
       (.I0(write_burst_size[12]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[12]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[12]),
        .O(\countDataToBeSent[8]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_14 
       (.I0(write_burst_size[11]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[11]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[11]),
        .O(\countDataToBeSent[8]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_15 
       (.I0(write_burst_size[10]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[10]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[10]),
        .O(\countDataToBeSent[8]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_16 
       (.I0(write_burst_size[9]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[9]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[9]),
        .O(\countDataToBeSent[8]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h5530AA30)) 
    \countDataToBeSent[8]_i_17 
       (.I0(write_burst_size[8]),
        .I1(reset_cmd),
        .I2(countDataToBeSent0[8]),
        .I3(\countAddrSent[39]_i_5_n_0 ),
        .I4(countDataToBeSent_reg[8]),
        .O(\countDataToBeSent[8]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_19 
       (.I0(countDataToBeSent_reg[15]),
        .I1(write_burst_size[15]),
        .O(\countDataToBeSent[8]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_2 
       (.I0(write_burst_size[15]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_20 
       (.I0(countDataToBeSent_reg[14]),
        .I1(write_burst_size[14]),
        .O(\countDataToBeSent[8]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_21 
       (.I0(countDataToBeSent_reg[13]),
        .I1(write_burst_size[13]),
        .O(\countDataToBeSent[8]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_22 
       (.I0(countDataToBeSent_reg[12]),
        .I1(write_burst_size[12]),
        .O(\countDataToBeSent[8]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_23 
       (.I0(countDataToBeSent_reg[11]),
        .I1(write_burst_size[11]),
        .O(\countDataToBeSent[8]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_24 
       (.I0(countDataToBeSent_reg[10]),
        .I1(write_burst_size[10]),
        .O(\countDataToBeSent[8]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_25 
       (.I0(countDataToBeSent_reg[9]),
        .I1(write_burst_size[9]),
        .O(\countDataToBeSent[8]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countDataToBeSent[8]_i_26 
       (.I0(countDataToBeSent_reg[8]),
        .I1(write_burst_size[8]),
        .O(\countDataToBeSent[8]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_3 
       (.I0(write_burst_size[14]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_4 
       (.I0(write_burst_size[13]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_5 
       (.I0(write_burst_size[12]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_6 
       (.I0(write_burst_size[11]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_7 
       (.I0(write_burst_size[10]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_8 
       (.I0(write_burst_size[9]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \countDataToBeSent[8]_i_9 
       (.I0(write_burst_size[8]),
        .I1(\countAddrSent[39]_i_5_n_0 ),
        .O(\countDataToBeSent[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[0] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_15 ),
        .Q(countDataToBeSent_reg[0]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[0]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[0]_i_1_n_0 ,\countDataToBeSent_reg[0]_i_1_n_1 ,\countDataToBeSent_reg[0]_i_1_n_2 ,\countDataToBeSent_reg[0]_i_1_n_3 ,\NLW_countDataToBeSent_reg[0]_i_1_CO_UNCONNECTED [3],\countDataToBeSent_reg[0]_i_1_n_5 ,\countDataToBeSent_reg[0]_i_1_n_6 ,\countDataToBeSent_reg[0]_i_1_n_7 }),
        .DI({\countDataToBeSent[0]_i_2_n_0 ,\countDataToBeSent[0]_i_3_n_0 ,\countDataToBeSent[0]_i_4_n_0 ,\countDataToBeSent[0]_i_5_n_0 ,\countDataToBeSent[0]_i_6_n_0 ,\countDataToBeSent[0]_i_7_n_0 ,\countDataToBeSent[0]_i_8_n_0 ,\countDataToBeSent[0]_i_9_n_0 }),
        .O({\countDataToBeSent_reg[0]_i_1_n_8 ,\countDataToBeSent_reg[0]_i_1_n_9 ,\countDataToBeSent_reg[0]_i_1_n_10 ,\countDataToBeSent_reg[0]_i_1_n_11 ,\countDataToBeSent_reg[0]_i_1_n_12 ,\countDataToBeSent_reg[0]_i_1_n_13 ,\countDataToBeSent_reg[0]_i_1_n_14 ,\countDataToBeSent_reg[0]_i_1_n_15 }),
        .S({\countDataToBeSent[0]_i_10_n_0 ,\countDataToBeSent[0]_i_11_n_0 ,\countDataToBeSent[0]_i_12_n_0 ,\countDataToBeSent[0]_i_13_n_0 ,\countDataToBeSent[0]_i_14_n_0 ,\countDataToBeSent[0]_i_15_n_0 ,\countDataToBeSent[0]_i_16_n_0 ,\countDataToBeSent[0]_i_17_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[0]_i_18 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[0]_i_18_n_0 ,\countDataToBeSent_reg[0]_i_18_n_1 ,\countDataToBeSent_reg[0]_i_18_n_2 ,\countDataToBeSent_reg[0]_i_18_n_3 ,\NLW_countDataToBeSent_reg[0]_i_18_CO_UNCONNECTED [3],\countDataToBeSent_reg[0]_i_18_n_5 ,\countDataToBeSent_reg[0]_i_18_n_6 ,\countDataToBeSent_reg[0]_i_18_n_7 }),
        .DI(countDataToBeSent_reg[7:0]),
        .O(countDataToBeSent0[7:0]),
        .S({\countDataToBeSent[0]_i_19_n_0 ,\countDataToBeSent[0]_i_20_n_0 ,\countDataToBeSent[0]_i_21_n_0 ,\countDataToBeSent[0]_i_22_n_0 ,\countDataToBeSent[0]_i_23_n_0 ,\countDataToBeSent[0]_i_24_n_0 ,\countDataToBeSent[0]_i_25_n_0 ,\countDataToBeSent[0]_i_26_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[10] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_13 ),
        .Q(countDataToBeSent_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[11] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_12 ),
        .Q(countDataToBeSent_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[12] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_11 ),
        .Q(countDataToBeSent_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[13] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_10 ),
        .Q(countDataToBeSent_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[14] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_9 ),
        .Q(countDataToBeSent_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[15] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_8 ),
        .Q(countDataToBeSent_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[16] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_15 ),
        .Q(countDataToBeSent_reg[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[16]_i_1 
       (.CI(\countDataToBeSent_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[16]_i_1_n_0 ,\countDataToBeSent_reg[16]_i_1_n_1 ,\countDataToBeSent_reg[16]_i_1_n_2 ,\countDataToBeSent_reg[16]_i_1_n_3 ,\NLW_countDataToBeSent_reg[16]_i_1_CO_UNCONNECTED [3],\countDataToBeSent_reg[16]_i_1_n_5 ,\countDataToBeSent_reg[16]_i_1_n_6 ,\countDataToBeSent_reg[16]_i_1_n_7 }),
        .DI({\countDataToBeSent[16]_i_2_n_0 ,\countDataToBeSent[16]_i_3_n_0 ,\countDataToBeSent[16]_i_4_n_0 ,\countDataToBeSent[16]_i_5_n_0 ,\countDataToBeSent[16]_i_6_n_0 ,\countDataToBeSent[16]_i_7_n_0 ,\countDataToBeSent[16]_i_8_n_0 ,\countDataToBeSent[16]_i_9_n_0 }),
        .O({\countDataToBeSent_reg[16]_i_1_n_8 ,\countDataToBeSent_reg[16]_i_1_n_9 ,\countDataToBeSent_reg[16]_i_1_n_10 ,\countDataToBeSent_reg[16]_i_1_n_11 ,\countDataToBeSent_reg[16]_i_1_n_12 ,\countDataToBeSent_reg[16]_i_1_n_13 ,\countDataToBeSent_reg[16]_i_1_n_14 ,\countDataToBeSent_reg[16]_i_1_n_15 }),
        .S({\countDataToBeSent[16]_i_10_n_0 ,\countDataToBeSent[16]_i_11_n_0 ,\countDataToBeSent[16]_i_12_n_0 ,\countDataToBeSent[16]_i_13_n_0 ,\countDataToBeSent[16]_i_14_n_0 ,\countDataToBeSent[16]_i_15_n_0 ,\countDataToBeSent[16]_i_16_n_0 ,\countDataToBeSent[16]_i_17_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[16]_i_18 
       (.CI(\countDataToBeSent_reg[8]_i_18_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[16]_i_18_n_0 ,\countDataToBeSent_reg[16]_i_18_n_1 ,\countDataToBeSent_reg[16]_i_18_n_2 ,\countDataToBeSent_reg[16]_i_18_n_3 ,\NLW_countDataToBeSent_reg[16]_i_18_CO_UNCONNECTED [3],\countDataToBeSent_reg[16]_i_18_n_5 ,\countDataToBeSent_reg[16]_i_18_n_6 ,\countDataToBeSent_reg[16]_i_18_n_7 }),
        .DI(countDataToBeSent_reg[23:16]),
        .O(countDataToBeSent0[23:16]),
        .S({\countDataToBeSent[16]_i_19_n_0 ,\countDataToBeSent[16]_i_20_n_0 ,\countDataToBeSent[16]_i_21_n_0 ,\countDataToBeSent[16]_i_22_n_0 ,\countDataToBeSent[16]_i_23_n_0 ,\countDataToBeSent[16]_i_24_n_0 ,\countDataToBeSent[16]_i_25_n_0 ,\countDataToBeSent[16]_i_26_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[17] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_14 ),
        .Q(countDataToBeSent_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[18] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_13 ),
        .Q(countDataToBeSent_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[19] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_12 ),
        .Q(countDataToBeSent_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[1] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_14 ),
        .Q(countDataToBeSent_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[20] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_11 ),
        .Q(countDataToBeSent_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[21] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_10 ),
        .Q(countDataToBeSent_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[22] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_9 ),
        .Q(countDataToBeSent_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[23] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[16]_i_1_n_8 ),
        .Q(countDataToBeSent_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[24] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_15 ),
        .Q(countDataToBeSent_reg[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[24]_i_1 
       (.CI(\countDataToBeSent_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[24]_i_1_n_0 ,\countDataToBeSent_reg[24]_i_1_n_1 ,\countDataToBeSent_reg[24]_i_1_n_2 ,\countDataToBeSent_reg[24]_i_1_n_3 ,\NLW_countDataToBeSent_reg[24]_i_1_CO_UNCONNECTED [3],\countDataToBeSent_reg[24]_i_1_n_5 ,\countDataToBeSent_reg[24]_i_1_n_6 ,\countDataToBeSent_reg[24]_i_1_n_7 }),
        .DI({\countDataToBeSent[24]_i_2_n_0 ,\countDataToBeSent[24]_i_3_n_0 ,\countDataToBeSent[24]_i_4_n_0 ,\countDataToBeSent[24]_i_5_n_0 ,\countDataToBeSent[24]_i_6_n_0 ,\countDataToBeSent[24]_i_7_n_0 ,\countDataToBeSent[24]_i_8_n_0 ,\countDataToBeSent[24]_i_9_n_0 }),
        .O({\countDataToBeSent_reg[24]_i_1_n_8 ,\countDataToBeSent_reg[24]_i_1_n_9 ,\countDataToBeSent_reg[24]_i_1_n_10 ,\countDataToBeSent_reg[24]_i_1_n_11 ,\countDataToBeSent_reg[24]_i_1_n_12 ,\countDataToBeSent_reg[24]_i_1_n_13 ,\countDataToBeSent_reg[24]_i_1_n_14 ,\countDataToBeSent_reg[24]_i_1_n_15 }),
        .S({\countDataToBeSent[24]_i_10_n_0 ,\countDataToBeSent[24]_i_11_n_0 ,\countDataToBeSent[24]_i_12_n_0 ,\countDataToBeSent[24]_i_13_n_0 ,\countDataToBeSent[24]_i_14_n_0 ,\countDataToBeSent[24]_i_15_n_0 ,\countDataToBeSent[24]_i_16_n_0 ,\countDataToBeSent[24]_i_17_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[24]_i_18 
       (.CI(\countDataToBeSent_reg[16]_i_18_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[24]_i_18_n_0 ,\countDataToBeSent_reg[24]_i_18_n_1 ,\countDataToBeSent_reg[24]_i_18_n_2 ,\countDataToBeSent_reg[24]_i_18_n_3 ,\NLW_countDataToBeSent_reg[24]_i_18_CO_UNCONNECTED [3],\countDataToBeSent_reg[24]_i_18_n_5 ,\countDataToBeSent_reg[24]_i_18_n_6 ,\countDataToBeSent_reg[24]_i_18_n_7 }),
        .DI(countDataToBeSent_reg[31:24]),
        .O(countDataToBeSent0[31:24]),
        .S({\countDataToBeSent[24]_i_19_n_0 ,\countDataToBeSent[24]_i_20_n_0 ,\countDataToBeSent[24]_i_21_n_0 ,\countDataToBeSent[24]_i_22_n_0 ,\countDataToBeSent[24]_i_23_n_0 ,\countDataToBeSent[24]_i_24_n_0 ,\countDataToBeSent[24]_i_25_n_0 ,\countDataToBeSent[24]_i_26_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[25] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_14 ),
        .Q(countDataToBeSent_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[26] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_13 ),
        .Q(countDataToBeSent_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[27] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_12 ),
        .Q(countDataToBeSent_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[28] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_11 ),
        .Q(countDataToBeSent_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[29] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_10 ),
        .Q(countDataToBeSent_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[2] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_13 ),
        .Q(countDataToBeSent_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[30] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_9 ),
        .Q(countDataToBeSent_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[31] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[24]_i_1_n_8 ),
        .Q(countDataToBeSent_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[32] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_15 ),
        .Q(countDataToBeSent_reg[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[32]_i_1 
       (.CI(\countDataToBeSent_reg[24]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataToBeSent_reg[32]_i_1_CO_UNCONNECTED [7],\countDataToBeSent_reg[32]_i_1_n_1 ,\countDataToBeSent_reg[32]_i_1_n_2 ,\countDataToBeSent_reg[32]_i_1_n_3 ,\NLW_countDataToBeSent_reg[32]_i_1_CO_UNCONNECTED [3],\countDataToBeSent_reg[32]_i_1_n_5 ,\countDataToBeSent_reg[32]_i_1_n_6 ,\countDataToBeSent_reg[32]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countDataToBeSent_reg[32]_i_1_n_8 ,\countDataToBeSent_reg[32]_i_1_n_9 ,\countDataToBeSent_reg[32]_i_1_n_10 ,\countDataToBeSent_reg[32]_i_1_n_11 ,\countDataToBeSent_reg[32]_i_1_n_12 ,\countDataToBeSent_reg[32]_i_1_n_13 ,\countDataToBeSent_reg[32]_i_1_n_14 ,\countDataToBeSent_reg[32]_i_1_n_15 }),
        .S({\countDataToBeSent[32]_i_2_n_0 ,\countDataToBeSent[32]_i_3_n_0 ,\countDataToBeSent[32]_i_4_n_0 ,\countDataToBeSent[32]_i_5_n_0 ,\countDataToBeSent[32]_i_6_n_0 ,\countDataToBeSent[32]_i_7_n_0 ,\countDataToBeSent[32]_i_8_n_0 ,\countDataToBeSent[32]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[32]_i_10 
       (.CI(\countDataToBeSent_reg[24]_i_18_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countDataToBeSent_reg[32]_i_10_CO_UNCONNECTED [7],\countDataToBeSent_reg[32]_i_10_n_1 ,\countDataToBeSent_reg[32]_i_10_n_2 ,\countDataToBeSent_reg[32]_i_10_n_3 ,\NLW_countDataToBeSent_reg[32]_i_10_CO_UNCONNECTED [3],\countDataToBeSent_reg[32]_i_10_n_5 ,\countDataToBeSent_reg[32]_i_10_n_6 ,\countDataToBeSent_reg[32]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countDataToBeSent0[39:32]),
        .S(countDataToBeSent_reg[39:32]));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[33] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_14 ),
        .Q(countDataToBeSent_reg[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[34] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_13 ),
        .Q(countDataToBeSent_reg[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[35] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_12 ),
        .Q(countDataToBeSent_reg[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[36] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_11 ),
        .Q(countDataToBeSent_reg[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[37] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_10 ),
        .Q(countDataToBeSent_reg[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[38] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_9 ),
        .Q(countDataToBeSent_reg[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[39] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[32]_i_1_n_8 ),
        .Q(countDataToBeSent_reg[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[3] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_12 ),
        .Q(countDataToBeSent_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[4] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_11 ),
        .Q(countDataToBeSent_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[5] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_10 ),
        .Q(countDataToBeSent_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[6] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_9 ),
        .Q(countDataToBeSent_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[7] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[0]_i_1_n_8 ),
        .Q(countDataToBeSent_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[8] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_15 ),
        .Q(countDataToBeSent_reg[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[8]_i_1 
       (.CI(\countDataToBeSent_reg[0]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[8]_i_1_n_0 ,\countDataToBeSent_reg[8]_i_1_n_1 ,\countDataToBeSent_reg[8]_i_1_n_2 ,\countDataToBeSent_reg[8]_i_1_n_3 ,\NLW_countDataToBeSent_reg[8]_i_1_CO_UNCONNECTED [3],\countDataToBeSent_reg[8]_i_1_n_5 ,\countDataToBeSent_reg[8]_i_1_n_6 ,\countDataToBeSent_reg[8]_i_1_n_7 }),
        .DI({\countDataToBeSent[8]_i_2_n_0 ,\countDataToBeSent[8]_i_3_n_0 ,\countDataToBeSent[8]_i_4_n_0 ,\countDataToBeSent[8]_i_5_n_0 ,\countDataToBeSent[8]_i_6_n_0 ,\countDataToBeSent[8]_i_7_n_0 ,\countDataToBeSent[8]_i_8_n_0 ,\countDataToBeSent[8]_i_9_n_0 }),
        .O({\countDataToBeSent_reg[8]_i_1_n_8 ,\countDataToBeSent_reg[8]_i_1_n_9 ,\countDataToBeSent_reg[8]_i_1_n_10 ,\countDataToBeSent_reg[8]_i_1_n_11 ,\countDataToBeSent_reg[8]_i_1_n_12 ,\countDataToBeSent_reg[8]_i_1_n_13 ,\countDataToBeSent_reg[8]_i_1_n_14 ,\countDataToBeSent_reg[8]_i_1_n_15 }),
        .S({\countDataToBeSent[8]_i_10_n_0 ,\countDataToBeSent[8]_i_11_n_0 ,\countDataToBeSent[8]_i_12_n_0 ,\countDataToBeSent[8]_i_13_n_0 ,\countDataToBeSent[8]_i_14_n_0 ,\countDataToBeSent[8]_i_15_n_0 ,\countDataToBeSent[8]_i_16_n_0 ,\countDataToBeSent[8]_i_17_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countDataToBeSent_reg[8]_i_18 
       (.CI(\countDataToBeSent_reg[0]_i_18_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countDataToBeSent_reg[8]_i_18_n_0 ,\countDataToBeSent_reg[8]_i_18_n_1 ,\countDataToBeSent_reg[8]_i_18_n_2 ,\countDataToBeSent_reg[8]_i_18_n_3 ,\NLW_countDataToBeSent_reg[8]_i_18_CO_UNCONNECTED [3],\countDataToBeSent_reg[8]_i_18_n_5 ,\countDataToBeSent_reg[8]_i_18_n_6 ,\countDataToBeSent_reg[8]_i_18_n_7 }),
        .DI(countDataToBeSent_reg[15:8]),
        .O(countDataToBeSent0[15:8]),
        .S({\countDataToBeSent[8]_i_19_n_0 ,\countDataToBeSent[8]_i_20_n_0 ,\countDataToBeSent[8]_i_21_n_0 ,\countDataToBeSent[8]_i_22_n_0 ,\countDataToBeSent[8]_i_23_n_0 ,\countDataToBeSent[8]_i_24_n_0 ,\countDataToBeSent[8]_i_25_n_0 ,\countDataToBeSent[8]_i_26_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countDataToBeSent_reg[9] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\countDataToBeSent_reg[8]_i_1_n_14 ),
        .Q(countDataToBeSent_reg[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h31)) 
    \countReadReqSent[0]_i_10 
       (.I0(reset_cmd),
        .I1(countReadReqSent_reg[0]),
        .I2(\countAddrSent[31]_i_3_n_0 ),
        .O(\countReadReqSent[0]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h89)) 
    \countReadReqSent[0]_i_2 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(countReadReqSent_reg[0]),
        .I2(reset_cmd),
        .O(\countReadReqSent[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[0]_i_3 
       (.I0(countReadReqSent_reg[7]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[7]),
        .I3(reset_cmd),
        .O(\countReadReqSent[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[0]_i_4 
       (.I0(countReadReqSent_reg[6]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[6]),
        .I3(reset_cmd),
        .O(\countReadReqSent[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[0]_i_5 
       (.I0(countReadReqSent_reg[5]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[5]),
        .I3(reset_cmd),
        .O(\countReadReqSent[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[0]_i_6 
       (.I0(countReadReqSent_reg[4]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[4]),
        .I3(reset_cmd),
        .O(\countReadReqSent[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[0]_i_7 
       (.I0(countReadReqSent_reg[3]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[3]),
        .I3(reset_cmd),
        .O(\countReadReqSent[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[0]_i_8 
       (.I0(countReadReqSent_reg[2]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[2]),
        .I3(reset_cmd),
        .O(\countReadReqSent[0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[0]_i_9 
       (.I0(countReadReqSent_reg[1]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[1]),
        .I3(reset_cmd),
        .O(\countReadReqSent[0]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_2 
       (.I0(countReadReqSent_reg[23]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[23]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_3 
       (.I0(countReadReqSent_reg[22]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[22]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_4 
       (.I0(countReadReqSent_reg[21]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[21]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_5 
       (.I0(countReadReqSent_reg[20]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[20]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_6 
       (.I0(countReadReqSent_reg[19]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[19]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_7 
       (.I0(countReadReqSent_reg[18]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[18]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_8 
       (.I0(countReadReqSent_reg[17]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[17]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[16]_i_9 
       (.I0(countReadReqSent_reg[16]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[16]),
        .I3(reset_cmd),
        .O(\countReadReqSent[16]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_2 
       (.I0(countReadReqSent_reg[31]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[31]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_3 
       (.I0(countReadReqSent_reg[30]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[30]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_4 
       (.I0(countReadReqSent_reg[29]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[29]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_5 
       (.I0(countReadReqSent_reg[28]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[28]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_6 
       (.I0(countReadReqSent_reg[27]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[27]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_7 
       (.I0(countReadReqSent_reg[26]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[26]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_8 
       (.I0(countReadReqSent_reg[25]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[25]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[24]_i_9 
       (.I0(countReadReqSent_reg[24]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[24]),
        .I3(reset_cmd),
        .O(\countReadReqSent[24]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_2 
       (.I0(countReadReqSent_reg[39]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[39]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_3 
       (.I0(countReadReqSent_reg[38]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[38]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_4 
       (.I0(countReadReqSent_reg[37]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[37]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_5 
       (.I0(countReadReqSent_reg[36]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[36]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_6 
       (.I0(countReadReqSent_reg[35]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[35]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_7 
       (.I0(countReadReqSent_reg[34]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[34]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_8 
       (.I0(countReadReqSent_reg[33]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[33]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[32]_i_9 
       (.I0(countReadReqSent_reg[32]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[32]),
        .I3(reset_cmd),
        .O(\countReadReqSent[32]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_2 
       (.I0(countReadReqSent_reg[15]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[15]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_3 
       (.I0(countReadReqSent_reg[14]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[14]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_4 
       (.I0(countReadReqSent_reg[13]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[13]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_5 
       (.I0(countReadReqSent_reg[12]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[12]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_6 
       (.I0(countReadReqSent_reg[11]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[11]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_7 
       (.I0(countReadReqSent_reg[10]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[10]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_8 
       (.I0(countReadReqSent_reg[9]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[9]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \countReadReqSent[8]_i_9 
       (.I0(countReadReqSent_reg[8]),
        .I1(\countAddrSent[31]_i_3_n_0 ),
        .I2(countReadReqSent0[8]),
        .I3(reset_cmd),
        .O(\countReadReqSent[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[0] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_15 ),
        .Q(countReadReqSent_reg[0]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[0]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[0]_i_1_n_0 ,\countReadReqSent_reg[0]_i_1_n_1 ,\countReadReqSent_reg[0]_i_1_n_2 ,\countReadReqSent_reg[0]_i_1_n_3 ,\NLW_countReadReqSent_reg[0]_i_1_CO_UNCONNECTED [3],\countReadReqSent_reg[0]_i_1_n_5 ,\countReadReqSent_reg[0]_i_1_n_6 ,\countReadReqSent_reg[0]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\countReadReqSent[0]_i_2_n_0 }),
        .O({\countReadReqSent_reg[0]_i_1_n_8 ,\countReadReqSent_reg[0]_i_1_n_9 ,\countReadReqSent_reg[0]_i_1_n_10 ,\countReadReqSent_reg[0]_i_1_n_11 ,\countReadReqSent_reg[0]_i_1_n_12 ,\countReadReqSent_reg[0]_i_1_n_13 ,\countReadReqSent_reg[0]_i_1_n_14 ,\countReadReqSent_reg[0]_i_1_n_15 }),
        .S({\countReadReqSent[0]_i_3_n_0 ,\countReadReqSent[0]_i_4_n_0 ,\countReadReqSent[0]_i_5_n_0 ,\countReadReqSent[0]_i_6_n_0 ,\countReadReqSent[0]_i_7_n_0 ,\countReadReqSent[0]_i_8_n_0 ,\countReadReqSent[0]_i_9_n_0 ,\countReadReqSent[0]_i_10_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[0]_i_11 
       (.CI(countReadReqSent_reg[0]),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[0]_i_11_n_0 ,\countReadReqSent_reg[0]_i_11_n_1 ,\countReadReqSent_reg[0]_i_11_n_2 ,\countReadReqSent_reg[0]_i_11_n_3 ,\NLW_countReadReqSent_reg[0]_i_11_CO_UNCONNECTED [3],\countReadReqSent_reg[0]_i_11_n_5 ,\countReadReqSent_reg[0]_i_11_n_6 ,\countReadReqSent_reg[0]_i_11_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqSent0[8:1]),
        .S(countReadReqSent_reg[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[10] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_13 ),
        .Q(countReadReqSent_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[11] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_12 ),
        .Q(countReadReqSent_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[12] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_11 ),
        .Q(countReadReqSent_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[13] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_10 ),
        .Q(countReadReqSent_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[14] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_9 ),
        .Q(countReadReqSent_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[15] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_8 ),
        .Q(countReadReqSent_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[16] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_15 ),
        .Q(countReadReqSent_reg[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[16]_i_1 
       (.CI(\countReadReqSent_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[16]_i_1_n_0 ,\countReadReqSent_reg[16]_i_1_n_1 ,\countReadReqSent_reg[16]_i_1_n_2 ,\countReadReqSent_reg[16]_i_1_n_3 ,\NLW_countReadReqSent_reg[16]_i_1_CO_UNCONNECTED [3],\countReadReqSent_reg[16]_i_1_n_5 ,\countReadReqSent_reg[16]_i_1_n_6 ,\countReadReqSent_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countReadReqSent_reg[16]_i_1_n_8 ,\countReadReqSent_reg[16]_i_1_n_9 ,\countReadReqSent_reg[16]_i_1_n_10 ,\countReadReqSent_reg[16]_i_1_n_11 ,\countReadReqSent_reg[16]_i_1_n_12 ,\countReadReqSent_reg[16]_i_1_n_13 ,\countReadReqSent_reg[16]_i_1_n_14 ,\countReadReqSent_reg[16]_i_1_n_15 }),
        .S({\countReadReqSent[16]_i_2_n_0 ,\countReadReqSent[16]_i_3_n_0 ,\countReadReqSent[16]_i_4_n_0 ,\countReadReqSent[16]_i_5_n_0 ,\countReadReqSent[16]_i_6_n_0 ,\countReadReqSent[16]_i_7_n_0 ,\countReadReqSent[16]_i_8_n_0 ,\countReadReqSent[16]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[16]_i_10 
       (.CI(\countReadReqSent_reg[8]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[16]_i_10_n_0 ,\countReadReqSent_reg[16]_i_10_n_1 ,\countReadReqSent_reg[16]_i_10_n_2 ,\countReadReqSent_reg[16]_i_10_n_3 ,\NLW_countReadReqSent_reg[16]_i_10_CO_UNCONNECTED [3],\countReadReqSent_reg[16]_i_10_n_5 ,\countReadReqSent_reg[16]_i_10_n_6 ,\countReadReqSent_reg[16]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqSent0[24:17]),
        .S(countReadReqSent_reg[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[17] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_14 ),
        .Q(countReadReqSent_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[18] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_13 ),
        .Q(countReadReqSent_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[19] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_12 ),
        .Q(countReadReqSent_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[1] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_14 ),
        .Q(countReadReqSent_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[20] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_11 ),
        .Q(countReadReqSent_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[21] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_10 ),
        .Q(countReadReqSent_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[22] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_9 ),
        .Q(countReadReqSent_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[23] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[16]_i_1_n_8 ),
        .Q(countReadReqSent_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[24] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_15 ),
        .Q(countReadReqSent_reg[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[24]_i_1 
       (.CI(\countReadReqSent_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[24]_i_1_n_0 ,\countReadReqSent_reg[24]_i_1_n_1 ,\countReadReqSent_reg[24]_i_1_n_2 ,\countReadReqSent_reg[24]_i_1_n_3 ,\NLW_countReadReqSent_reg[24]_i_1_CO_UNCONNECTED [3],\countReadReqSent_reg[24]_i_1_n_5 ,\countReadReqSent_reg[24]_i_1_n_6 ,\countReadReqSent_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countReadReqSent_reg[24]_i_1_n_8 ,\countReadReqSent_reg[24]_i_1_n_9 ,\countReadReqSent_reg[24]_i_1_n_10 ,\countReadReqSent_reg[24]_i_1_n_11 ,\countReadReqSent_reg[24]_i_1_n_12 ,\countReadReqSent_reg[24]_i_1_n_13 ,\countReadReqSent_reg[24]_i_1_n_14 ,\countReadReqSent_reg[24]_i_1_n_15 }),
        .S({\countReadReqSent[24]_i_2_n_0 ,\countReadReqSent[24]_i_3_n_0 ,\countReadReqSent[24]_i_4_n_0 ,\countReadReqSent[24]_i_5_n_0 ,\countReadReqSent[24]_i_6_n_0 ,\countReadReqSent[24]_i_7_n_0 ,\countReadReqSent[24]_i_8_n_0 ,\countReadReqSent[24]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[24]_i_10 
       (.CI(\countReadReqSent_reg[16]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[24]_i_10_n_0 ,\countReadReqSent_reg[24]_i_10_n_1 ,\countReadReqSent_reg[24]_i_10_n_2 ,\countReadReqSent_reg[24]_i_10_n_3 ,\NLW_countReadReqSent_reg[24]_i_10_CO_UNCONNECTED [3],\countReadReqSent_reg[24]_i_10_n_5 ,\countReadReqSent_reg[24]_i_10_n_6 ,\countReadReqSent_reg[24]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqSent0[32:25]),
        .S(countReadReqSent_reg[32:25]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[25] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_14 ),
        .Q(countReadReqSent_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[26] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_13 ),
        .Q(countReadReqSent_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[27] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_12 ),
        .Q(countReadReqSent_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[28] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_11 ),
        .Q(countReadReqSent_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[29] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_10 ),
        .Q(countReadReqSent_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[2] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_13 ),
        .Q(countReadReqSent_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[30] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_9 ),
        .Q(countReadReqSent_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[31] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[24]_i_1_n_8 ),
        .Q(countReadReqSent_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[32] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_15 ),
        .Q(countReadReqSent_reg[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[32]_i_1 
       (.CI(\countReadReqSent_reg[24]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countReadReqSent_reg[32]_i_1_CO_UNCONNECTED [7],\countReadReqSent_reg[32]_i_1_n_1 ,\countReadReqSent_reg[32]_i_1_n_2 ,\countReadReqSent_reg[32]_i_1_n_3 ,\NLW_countReadReqSent_reg[32]_i_1_CO_UNCONNECTED [3],\countReadReqSent_reg[32]_i_1_n_5 ,\countReadReqSent_reg[32]_i_1_n_6 ,\countReadReqSent_reg[32]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countReadReqSent_reg[32]_i_1_n_8 ,\countReadReqSent_reg[32]_i_1_n_9 ,\countReadReqSent_reg[32]_i_1_n_10 ,\countReadReqSent_reg[32]_i_1_n_11 ,\countReadReqSent_reg[32]_i_1_n_12 ,\countReadReqSent_reg[32]_i_1_n_13 ,\countReadReqSent_reg[32]_i_1_n_14 ,\countReadReqSent_reg[32]_i_1_n_15 }),
        .S({\countReadReqSent[32]_i_2_n_0 ,\countReadReqSent[32]_i_3_n_0 ,\countReadReqSent[32]_i_4_n_0 ,\countReadReqSent[32]_i_5_n_0 ,\countReadReqSent[32]_i_6_n_0 ,\countReadReqSent[32]_i_7_n_0 ,\countReadReqSent[32]_i_8_n_0 ,\countReadReqSent[32]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[32]_i_10 
       (.CI(\countReadReqSent_reg[24]_i_10_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countReadReqSent_reg[32]_i_10_CO_UNCONNECTED [7:6],\countReadReqSent_reg[32]_i_10_n_2 ,\countReadReqSent_reg[32]_i_10_n_3 ,\NLW_countReadReqSent_reg[32]_i_10_CO_UNCONNECTED [3],\countReadReqSent_reg[32]_i_10_n_5 ,\countReadReqSent_reg[32]_i_10_n_6 ,\countReadReqSent_reg[32]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countReadReqSent_reg[32]_i_10_O_UNCONNECTED [7],countReadReqSent0[39:33]}),
        .S({1'b0,countReadReqSent_reg[39:33]}));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[33] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_14 ),
        .Q(countReadReqSent_reg[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[34] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_13 ),
        .Q(countReadReqSent_reg[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[35] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_12 ),
        .Q(countReadReqSent_reg[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[36] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_11 ),
        .Q(countReadReqSent_reg[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[37] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_10 ),
        .Q(countReadReqSent_reg[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[38] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_9 ),
        .Q(countReadReqSent_reg[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[39] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[32]_i_1_n_8 ),
        .Q(countReadReqSent_reg[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[3] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_12 ),
        .Q(countReadReqSent_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[4] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_11 ),
        .Q(countReadReqSent_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[5] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_10 ),
        .Q(countReadReqSent_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[6] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_9 ),
        .Q(countReadReqSent_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[7] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[0]_i_1_n_8 ),
        .Q(countReadReqSent_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[8] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_15 ),
        .Q(countReadReqSent_reg[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[8]_i_1 
       (.CI(\countReadReqSent_reg[0]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[8]_i_1_n_0 ,\countReadReqSent_reg[8]_i_1_n_1 ,\countReadReqSent_reg[8]_i_1_n_2 ,\countReadReqSent_reg[8]_i_1_n_3 ,\NLW_countReadReqSent_reg[8]_i_1_CO_UNCONNECTED [3],\countReadReqSent_reg[8]_i_1_n_5 ,\countReadReqSent_reg[8]_i_1_n_6 ,\countReadReqSent_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\countReadReqSent_reg[8]_i_1_n_8 ,\countReadReqSent_reg[8]_i_1_n_9 ,\countReadReqSent_reg[8]_i_1_n_10 ,\countReadReqSent_reg[8]_i_1_n_11 ,\countReadReqSent_reg[8]_i_1_n_12 ,\countReadReqSent_reg[8]_i_1_n_13 ,\countReadReqSent_reg[8]_i_1_n_14 ,\countReadReqSent_reg[8]_i_1_n_15 }),
        .S({\countReadReqSent[8]_i_2_n_0 ,\countReadReqSent[8]_i_3_n_0 ,\countReadReqSent[8]_i_4_n_0 ,\countReadReqSent[8]_i_5_n_0 ,\countReadReqSent[8]_i_6_n_0 ,\countReadReqSent[8]_i_7_n_0 ,\countReadReqSent[8]_i_8_n_0 ,\countReadReqSent[8]_i_9_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqSent_reg[8]_i_10 
       (.CI(\countReadReqSent_reg[0]_i_11_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqSent_reg[8]_i_10_n_0 ,\countReadReqSent_reg[8]_i_10_n_1 ,\countReadReqSent_reg[8]_i_10_n_2 ,\countReadReqSent_reg[8]_i_10_n_3 ,\NLW_countReadReqSent_reg[8]_i_10_CO_UNCONNECTED [3],\countReadReqSent_reg[8]_i_10_n_5 ,\countReadReqSent_reg[8]_i_10_n_6 ,\countReadReqSent_reg[8]_i_10_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqSent0[16:9]),
        .S(countReadReqSent_reg[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqSent_reg[9] 
       (.C(clk),
        .CE(read_count),
        .D(\countReadReqSent_reg[8]_i_1_n_14 ),
        .Q(countReadReqSent_reg[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[0]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[0]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h8000BFFF)) 
    \countReadReqToBeSent[0]_i_2 
       (.I0(countReadReqToBeSent01_in[0]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent[0]),
        .O(\countReadReqToBeSent[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[10]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[10]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[10]_i_2 
       (.I0(countReadReqToBeSent01_in[10]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[10]),
        .O(\countReadReqToBeSent[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[11]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[11]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[11]_i_2 
       (.I0(countReadReqToBeSent01_in[11]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[11]),
        .O(\countReadReqToBeSent[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[12]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[12]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[12]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[12]_i_2 
       (.I0(countReadReqToBeSent01_in[12]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[12]),
        .O(\countReadReqToBeSent[12]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[13]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[13]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[13]_i_2 
       (.I0(countReadReqToBeSent01_in[13]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[13]),
        .O(\countReadReqToBeSent[13]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[14]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[14]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[14]_i_2 
       (.I0(countReadReqToBeSent01_in[14]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[14]),
        .O(\countReadReqToBeSent[14]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[15]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[15]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_10 
       (.I0(countReadReqToBeSent[9]),
        .I1(read_blocking_ratio[9]),
        .O(\countReadReqToBeSent[15]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_11 
       (.I0(countReadReqToBeSent[8]),
        .I1(read_blocking_ratio[8]),
        .O(\countReadReqToBeSent[15]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[15]_i_2 
       (.I0(countReadReqToBeSent01_in[15]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[15]),
        .O(\countReadReqToBeSent[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_4 
       (.I0(countReadReqToBeSent[15]),
        .I1(read_blocking_ratio[15]),
        .O(\countReadReqToBeSent[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_5 
       (.I0(countReadReqToBeSent[14]),
        .I1(read_blocking_ratio[14]),
        .O(\countReadReqToBeSent[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_6 
       (.I0(countReadReqToBeSent[13]),
        .I1(read_blocking_ratio[13]),
        .O(\countReadReqToBeSent[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_7 
       (.I0(countReadReqToBeSent[12]),
        .I1(read_blocking_ratio[12]),
        .O(\countReadReqToBeSent[15]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_8 
       (.I0(countReadReqToBeSent[11]),
        .I1(read_blocking_ratio[11]),
        .O(\countReadReqToBeSent[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[15]_i_9 
       (.I0(countReadReqToBeSent[10]),
        .I1(read_blocking_ratio[10]),
        .O(\countReadReqToBeSent[15]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[16]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[16]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[16]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[16]_i_2 
       (.I0(countReadReqToBeSent01_in[16]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[16]),
        .O(\countReadReqToBeSent[16]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[17]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[17]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[17]_i_2 
       (.I0(countReadReqToBeSent01_in[17]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[17]),
        .O(\countReadReqToBeSent[17]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[18]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[18]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[18]_i_2 
       (.I0(countReadReqToBeSent01_in[18]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[18]),
        .O(\countReadReqToBeSent[18]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[19]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[19]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[19]_i_2 
       (.I0(countReadReqToBeSent01_in[19]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[19]),
        .O(\countReadReqToBeSent[19]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[1]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[1]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[1]_i_2 
       (.I0(countReadReqToBeSent01_in[1]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[1]),
        .O(\countReadReqToBeSent[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[20]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[20]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[20]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[20]_i_2 
       (.I0(countReadReqToBeSent01_in[20]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[20]),
        .O(\countReadReqToBeSent[20]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[21]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[21]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[21]_i_2 
       (.I0(countReadReqToBeSent01_in[21]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[21]),
        .O(\countReadReqToBeSent[21]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[22]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[22]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[22]_i_2 
       (.I0(countReadReqToBeSent01_in[22]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[22]),
        .O(\countReadReqToBeSent[22]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[23]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[23]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_10 
       (.I0(countReadReqToBeSent[17]),
        .I1(read_blocking_ratio[17]),
        .O(\countReadReqToBeSent[23]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_11 
       (.I0(countReadReqToBeSent[16]),
        .I1(read_blocking_ratio[16]),
        .O(\countReadReqToBeSent[23]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[23]_i_2 
       (.I0(countReadReqToBeSent01_in[23]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[23]),
        .O(\countReadReqToBeSent[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_4 
       (.I0(countReadReqToBeSent[23]),
        .I1(read_blocking_ratio[23]),
        .O(\countReadReqToBeSent[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_5 
       (.I0(countReadReqToBeSent[22]),
        .I1(read_blocking_ratio[22]),
        .O(\countReadReqToBeSent[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_6 
       (.I0(countReadReqToBeSent[21]),
        .I1(read_blocking_ratio[21]),
        .O(\countReadReqToBeSent[23]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_7 
       (.I0(countReadReqToBeSent[20]),
        .I1(read_blocking_ratio[20]),
        .O(\countReadReqToBeSent[23]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_8 
       (.I0(countReadReqToBeSent[19]),
        .I1(read_blocking_ratio[19]),
        .O(\countReadReqToBeSent[23]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[23]_i_9 
       (.I0(countReadReqToBeSent[18]),
        .I1(read_blocking_ratio[18]),
        .O(\countReadReqToBeSent[23]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[24]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[24]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[24]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[24]_i_2 
       (.I0(countReadReqToBeSent01_in[24]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[24]),
        .O(\countReadReqToBeSent[24]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[25]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[25]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[25]_i_2 
       (.I0(countReadReqToBeSent01_in[25]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[25]),
        .O(\countReadReqToBeSent[25]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[26]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[26]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[26]_i_2 
       (.I0(countReadReqToBeSent01_in[26]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[26]),
        .O(\countReadReqToBeSent[26]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[27]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[27]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[27]_i_2 
       (.I0(countReadReqToBeSent01_in[27]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[27]),
        .O(\countReadReqToBeSent[27]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[28]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[28]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[28]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[28]_i_2 
       (.I0(countReadReqToBeSent01_in[28]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[28]),
        .O(\countReadReqToBeSent[28]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[29]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[29]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[29]_i_2 
       (.I0(countReadReqToBeSent01_in[29]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[29]),
        .O(\countReadReqToBeSent[29]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[2]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[2]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[2]_i_2 
       (.I0(countReadReqToBeSent01_in[2]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[2]),
        .O(\countReadReqToBeSent[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[30]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[30]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[30]_i_2 
       (.I0(countReadReqToBeSent01_in[30]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[30]),
        .O(\countReadReqToBeSent[30]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[31]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[31]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_10 
       (.I0(countReadReqToBeSent[25]),
        .I1(read_blocking_ratio[25]),
        .O(\countReadReqToBeSent[31]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_11 
       (.I0(countReadReqToBeSent[24]),
        .I1(read_blocking_ratio[24]),
        .O(\countReadReqToBeSent[31]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[31]_i_2 
       (.I0(countReadReqToBeSent01_in[31]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[31]),
        .O(\countReadReqToBeSent[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_4 
       (.I0(countReadReqToBeSent[31]),
        .I1(read_blocking_ratio[31]),
        .O(\countReadReqToBeSent[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_5 
       (.I0(countReadReqToBeSent[30]),
        .I1(read_blocking_ratio[30]),
        .O(\countReadReqToBeSent[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_6 
       (.I0(countReadReqToBeSent[29]),
        .I1(read_blocking_ratio[29]),
        .O(\countReadReqToBeSent[31]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_7 
       (.I0(countReadReqToBeSent[28]),
        .I1(read_blocking_ratio[28]),
        .O(\countReadReqToBeSent[31]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_8 
       (.I0(countReadReqToBeSent[27]),
        .I1(read_blocking_ratio[27]),
        .O(\countReadReqToBeSent[31]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[31]_i_9 
       (.I0(countReadReqToBeSent[26]),
        .I1(read_blocking_ratio[26]),
        .O(\countReadReqToBeSent[31]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[32]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[32]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[32]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[32]_i_2 
       (.I0(countReadReqToBeSent01_in[32]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[32]),
        .O(\countReadReqToBeSent[32]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[33]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[33]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[33]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[33]_i_2 
       (.I0(countReadReqToBeSent01_in[33]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[33]),
        .O(\countReadReqToBeSent[33]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[34]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[34]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[34]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[34]_i_2 
       (.I0(countReadReqToBeSent01_in[34]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[34]),
        .O(\countReadReqToBeSent[34]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[35]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[35]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[35]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[35]_i_2 
       (.I0(countReadReqToBeSent01_in[35]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[35]),
        .O(\countReadReqToBeSent[35]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[36]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[36]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[36]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[36]_i_2 
       (.I0(countReadReqToBeSent01_in[36]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[36]),
        .O(\countReadReqToBeSent[36]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[37]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[37]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[37]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[37]_i_2 
       (.I0(countReadReqToBeSent01_in[37]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[37]),
        .O(\countReadReqToBeSent[37]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[38]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[38]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[38]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[38]_i_2 
       (.I0(countReadReqToBeSent01_in[38]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[38]),
        .O(\countReadReqToBeSent[38]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF444F444F4444444)) 
    \countReadReqToBeSent[39]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(\read_ticks_reg[31]_i_4_n_0 ),
        .I4(active_read),
        .I5(active_blocking),
        .O(\countReadReqToBeSent[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[39]_i_2 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[39]_i_3_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[39]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[39]_i_3 
       (.I0(countReadReqToBeSent01_in[39]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[39]),
        .O(\countReadReqToBeSent[39]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[3]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[3]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[3]_i_2 
       (.I0(countReadReqToBeSent01_in[3]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[3]),
        .O(\countReadReqToBeSent[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[4]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[4]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[4]_i_2 
       (.I0(countReadReqToBeSent01_in[4]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[4]),
        .O(\countReadReqToBeSent[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[5]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[5]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[5]_i_2 
       (.I0(countReadReqToBeSent01_in[5]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[5]),
        .O(\countReadReqToBeSent[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[6]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[6]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[6]_i_2 
       (.I0(countReadReqToBeSent01_in[6]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[6]),
        .O(\countReadReqToBeSent[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[7]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[7]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_10 
       (.I0(countReadReqToBeSent[1]),
        .I1(read_blocking_ratio[1]),
        .O(\countReadReqToBeSent[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_11 
       (.I0(countReadReqToBeSent[0]),
        .I1(read_blocking_ratio[0]),
        .O(\countReadReqToBeSent[7]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[7]_i_2 
       (.I0(countReadReqToBeSent01_in[7]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[7]),
        .O(\countReadReqToBeSent[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_4 
       (.I0(countReadReqToBeSent[7]),
        .I1(read_blocking_ratio[7]),
        .O(\countReadReqToBeSent[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_5 
       (.I0(countReadReqToBeSent[6]),
        .I1(read_blocking_ratio[6]),
        .O(\countReadReqToBeSent[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_6 
       (.I0(countReadReqToBeSent[5]),
        .I1(read_blocking_ratio[5]),
        .O(\countReadReqToBeSent[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_7 
       (.I0(countReadReqToBeSent[4]),
        .I1(read_blocking_ratio[4]),
        .O(\countReadReqToBeSent[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_8 
       (.I0(countReadReqToBeSent[3]),
        .I1(read_blocking_ratio[3]),
        .O(\countReadReqToBeSent[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \countReadReqToBeSent[7]_i_9 
       (.I0(countReadReqToBeSent[2]),
        .I1(read_blocking_ratio[2]),
        .O(\countReadReqToBeSent[7]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[8]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[8]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[8]_i_2 
       (.I0(countReadReqToBeSent01_in[8]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[8]),
        .O(\countReadReqToBeSent[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h8C)) 
    \countReadReqToBeSent[9]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\countReadReqToBeSent[9]_i_2_n_0 ),
        .I2(reset_cmd),
        .O(\countReadReqToBeSent[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \countReadReqToBeSent[9]_i_2 
       (.I0(countReadReqToBeSent01_in[9]),
        .I1(\read_ticks_reg[31]_i_4_n_0 ),
        .I2(\read_ticks_reg[31]_i_3_n_4 ),
        .I3(active_blocking),
        .I4(countReadReqToBeSent0[9]),
        .O(\countReadReqToBeSent[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[0] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[0]_i_1_n_0 ),
        .Q(countReadReqToBeSent[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[10] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[10]_i_1_n_0 ),
        .Q(countReadReqToBeSent[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[11] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[11]_i_1_n_0 ),
        .Q(countReadReqToBeSent[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[12] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[12]_i_1_n_0 ),
        .Q(countReadReqToBeSent[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[13] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[13]_i_1_n_0 ),
        .Q(countReadReqToBeSent[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[14] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[14]_i_1_n_0 ),
        .Q(countReadReqToBeSent[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[15] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[15]_i_1_n_0 ),
        .Q(countReadReqToBeSent[15]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[15]_i_3 
       (.CI(\countReadReqToBeSent_reg[7]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[15]_i_3_n_0 ,\countReadReqToBeSent_reg[15]_i_3_n_1 ,\countReadReqToBeSent_reg[15]_i_3_n_2 ,\countReadReqToBeSent_reg[15]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[15]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[15]_i_3_n_5 ,\countReadReqToBeSent_reg[15]_i_3_n_6 ,\countReadReqToBeSent_reg[15]_i_3_n_7 }),
        .DI(countReadReqToBeSent[15:8]),
        .O(countReadReqToBeSent01_in[15:8]),
        .S({\countReadReqToBeSent[15]_i_4_n_0 ,\countReadReqToBeSent[15]_i_5_n_0 ,\countReadReqToBeSent[15]_i_6_n_0 ,\countReadReqToBeSent[15]_i_7_n_0 ,\countReadReqToBeSent[15]_i_8_n_0 ,\countReadReqToBeSent[15]_i_9_n_0 ,\countReadReqToBeSent[15]_i_10_n_0 ,\countReadReqToBeSent[15]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[16] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[16]_i_1_n_0 ),
        .Q(countReadReqToBeSent[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[16]_i_3 
       (.CI(\countReadReqToBeSent_reg[8]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[16]_i_3_n_0 ,\countReadReqToBeSent_reg[16]_i_3_n_1 ,\countReadReqToBeSent_reg[16]_i_3_n_2 ,\countReadReqToBeSent_reg[16]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[16]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[16]_i_3_n_5 ,\countReadReqToBeSent_reg[16]_i_3_n_6 ,\countReadReqToBeSent_reg[16]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqToBeSent0[16:9]),
        .S(countReadReqToBeSent[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[17] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[17]_i_1_n_0 ),
        .Q(countReadReqToBeSent[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[18] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[18]_i_1_n_0 ),
        .Q(countReadReqToBeSent[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[19] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[19]_i_1_n_0 ),
        .Q(countReadReqToBeSent[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[1] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[1]_i_1_n_0 ),
        .Q(countReadReqToBeSent[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[20] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[20]_i_1_n_0 ),
        .Q(countReadReqToBeSent[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[21] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[21]_i_1_n_0 ),
        .Q(countReadReqToBeSent[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[22] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[22]_i_1_n_0 ),
        .Q(countReadReqToBeSent[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[23] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[23]_i_1_n_0 ),
        .Q(countReadReqToBeSent[23]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[23]_i_3 
       (.CI(\countReadReqToBeSent_reg[15]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[23]_i_3_n_0 ,\countReadReqToBeSent_reg[23]_i_3_n_1 ,\countReadReqToBeSent_reg[23]_i_3_n_2 ,\countReadReqToBeSent_reg[23]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[23]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[23]_i_3_n_5 ,\countReadReqToBeSent_reg[23]_i_3_n_6 ,\countReadReqToBeSent_reg[23]_i_3_n_7 }),
        .DI(countReadReqToBeSent[23:16]),
        .O(countReadReqToBeSent01_in[23:16]),
        .S({\countReadReqToBeSent[23]_i_4_n_0 ,\countReadReqToBeSent[23]_i_5_n_0 ,\countReadReqToBeSent[23]_i_6_n_0 ,\countReadReqToBeSent[23]_i_7_n_0 ,\countReadReqToBeSent[23]_i_8_n_0 ,\countReadReqToBeSent[23]_i_9_n_0 ,\countReadReqToBeSent[23]_i_10_n_0 ,\countReadReqToBeSent[23]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[24] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[24]_i_1_n_0 ),
        .Q(countReadReqToBeSent[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[24]_i_3 
       (.CI(\countReadReqToBeSent_reg[16]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[24]_i_3_n_0 ,\countReadReqToBeSent_reg[24]_i_3_n_1 ,\countReadReqToBeSent_reg[24]_i_3_n_2 ,\countReadReqToBeSent_reg[24]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[24]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[24]_i_3_n_5 ,\countReadReqToBeSent_reg[24]_i_3_n_6 ,\countReadReqToBeSent_reg[24]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqToBeSent0[24:17]),
        .S(countReadReqToBeSent[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[25] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[25]_i_1_n_0 ),
        .Q(countReadReqToBeSent[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[26] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[26]_i_1_n_0 ),
        .Q(countReadReqToBeSent[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[27] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[27]_i_1_n_0 ),
        .Q(countReadReqToBeSent[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[28] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[28]_i_1_n_0 ),
        .Q(countReadReqToBeSent[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[29] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[29]_i_1_n_0 ),
        .Q(countReadReqToBeSent[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[2] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[2]_i_1_n_0 ),
        .Q(countReadReqToBeSent[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[30] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[30]_i_1_n_0 ),
        .Q(countReadReqToBeSent[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[31] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[31]_i_1_n_0 ),
        .Q(countReadReqToBeSent[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[31]_i_3 
       (.CI(\countReadReqToBeSent_reg[23]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[31]_i_3_n_0 ,\countReadReqToBeSent_reg[31]_i_3_n_1 ,\countReadReqToBeSent_reg[31]_i_3_n_2 ,\countReadReqToBeSent_reg[31]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[31]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[31]_i_3_n_5 ,\countReadReqToBeSent_reg[31]_i_3_n_6 ,\countReadReqToBeSent_reg[31]_i_3_n_7 }),
        .DI(countReadReqToBeSent[31:24]),
        .O(countReadReqToBeSent01_in[31:24]),
        .S({\countReadReqToBeSent[31]_i_4_n_0 ,\countReadReqToBeSent[31]_i_5_n_0 ,\countReadReqToBeSent[31]_i_6_n_0 ,\countReadReqToBeSent[31]_i_7_n_0 ,\countReadReqToBeSent[31]_i_8_n_0 ,\countReadReqToBeSent[31]_i_9_n_0 ,\countReadReqToBeSent[31]_i_10_n_0 ,\countReadReqToBeSent[31]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[32] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[32]_i_1_n_0 ),
        .Q(countReadReqToBeSent[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[32]_i_3 
       (.CI(\countReadReqToBeSent_reg[24]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[32]_i_3_n_0 ,\countReadReqToBeSent_reg[32]_i_3_n_1 ,\countReadReqToBeSent_reg[32]_i_3_n_2 ,\countReadReqToBeSent_reg[32]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[32]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[32]_i_3_n_5 ,\countReadReqToBeSent_reg[32]_i_3_n_6 ,\countReadReqToBeSent_reg[32]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqToBeSent0[32:25]),
        .S(countReadReqToBeSent[32:25]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[33] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[33]_i_1_n_0 ),
        .Q(countReadReqToBeSent[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[34] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[34]_i_1_n_0 ),
        .Q(countReadReqToBeSent[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[35] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[35]_i_1_n_0 ),
        .Q(countReadReqToBeSent[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[36] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[36]_i_1_n_0 ),
        .Q(countReadReqToBeSent[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[37] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[37]_i_1_n_0 ),
        .Q(countReadReqToBeSent[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[38] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[38]_i_1_n_0 ),
        .Q(countReadReqToBeSent[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[39] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[39]_i_2_n_0 ),
        .Q(countReadReqToBeSent[39]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[39]_i_4 
       (.CI(\countReadReqToBeSent_reg[31]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countReadReqToBeSent_reg[39]_i_4_CO_UNCONNECTED [7],\countReadReqToBeSent_reg[39]_i_4_n_1 ,\countReadReqToBeSent_reg[39]_i_4_n_2 ,\countReadReqToBeSent_reg[39]_i_4_n_3 ,\NLW_countReadReqToBeSent_reg[39]_i_4_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[39]_i_4_n_5 ,\countReadReqToBeSent_reg[39]_i_4_n_6 ,\countReadReqToBeSent_reg[39]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqToBeSent01_in[39:32]),
        .S(countReadReqToBeSent[39:32]));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[39]_i_5 
       (.CI(\countReadReqToBeSent_reg[32]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_countReadReqToBeSent_reg[39]_i_5_CO_UNCONNECTED [7:6],\countReadReqToBeSent_reg[39]_i_5_n_2 ,\countReadReqToBeSent_reg[39]_i_5_n_3 ,\NLW_countReadReqToBeSent_reg[39]_i_5_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[39]_i_5_n_5 ,\countReadReqToBeSent_reg[39]_i_5_n_6 ,\countReadReqToBeSent_reg[39]_i_5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_countReadReqToBeSent_reg[39]_i_5_O_UNCONNECTED [7],countReadReqToBeSent0[39:33]}),
        .S({1'b0,countReadReqToBeSent[39:33]}));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[3] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[3]_i_1_n_0 ),
        .Q(countReadReqToBeSent[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[4] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[4]_i_1_n_0 ),
        .Q(countReadReqToBeSent[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[5] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[5]_i_1_n_0 ),
        .Q(countReadReqToBeSent[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[6] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[6]_i_1_n_0 ),
        .Q(countReadReqToBeSent[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[7] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[7]_i_1_n_0 ),
        .Q(countReadReqToBeSent[7]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[7]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[7]_i_3_n_0 ,\countReadReqToBeSent_reg[7]_i_3_n_1 ,\countReadReqToBeSent_reg[7]_i_3_n_2 ,\countReadReqToBeSent_reg[7]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[7]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[7]_i_3_n_5 ,\countReadReqToBeSent_reg[7]_i_3_n_6 ,\countReadReqToBeSent_reg[7]_i_3_n_7 }),
        .DI(countReadReqToBeSent[7:0]),
        .O(countReadReqToBeSent01_in[7:0]),
        .S({\countReadReqToBeSent[7]_i_4_n_0 ,\countReadReqToBeSent[7]_i_5_n_0 ,\countReadReqToBeSent[7]_i_6_n_0 ,\countReadReqToBeSent[7]_i_7_n_0 ,\countReadReqToBeSent[7]_i_8_n_0 ,\countReadReqToBeSent[7]_i_9_n_0 ,\countReadReqToBeSent[7]_i_10_n_0 ,\countReadReqToBeSent[7]_i_11_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[8] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[8]_i_1_n_0 ),
        .Q(countReadReqToBeSent[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \countReadReqToBeSent_reg[8]_i_3 
       (.CI(countReadReqToBeSent[0]),
        .CI_TOP(1'b0),
        .CO({\countReadReqToBeSent_reg[8]_i_3_n_0 ,\countReadReqToBeSent_reg[8]_i_3_n_1 ,\countReadReqToBeSent_reg[8]_i_3_n_2 ,\countReadReqToBeSent_reg[8]_i_3_n_3 ,\NLW_countReadReqToBeSent_reg[8]_i_3_CO_UNCONNECTED [3],\countReadReqToBeSent_reg[8]_i_3_n_5 ,\countReadReqToBeSent_reg[8]_i_3_n_6 ,\countReadReqToBeSent_reg[8]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(countReadReqToBeSent0[8:1]),
        .S(countReadReqToBeSent[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \countReadReqToBeSent_reg[9] 
       (.C(clk),
        .CE(\countReadReqToBeSent[39]_i_1_n_0 ),
        .D(\countReadReqToBeSent[9]_i_1_n_0 ),
        .Q(countReadReqToBeSent[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[0]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[10]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[11]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[12]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[13]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[14]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[15]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[16]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[17]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[18]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[19]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[1]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[20]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[21]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[22]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[23]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[23]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[24]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[25]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[26]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[27]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[28]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[29]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[2]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[30]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[31]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[31]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[32]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[33]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[33]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[34]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[35]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[35]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[36]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[36]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[37]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[37]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[38]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[38]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[39]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[39]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[3]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[40]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[40]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[41]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[41]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[42]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[42]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[43]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[44]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[44]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[45]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[45]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[46]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[46]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[47]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[47]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[47]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[48]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[48]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[49]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[49]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[4]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[50]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[50]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[51]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[51]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[52]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[52]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[53]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[53]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[54]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[54]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[55]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[55]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[55]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[56]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[56]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[57]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[58]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[58]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[59]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[59]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[5]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[60]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[60]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[61]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[61]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[62]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[62]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[63]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[63]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[63]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[6]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[7]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[7]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \current_cycles_with_no_data_read[7]_i_3 
       (.I0(current_cycles_with_no_data_read[0]),
        .I1(data_read_in_this_test),
        .O(\current_cycles_with_no_data_read[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[8]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \current_cycles_with_no_data_read[9]_i_1 
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(readDataValid),
        .I2(\current_cycles_with_no_data_read_reg[15]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\current_cycles_with_no_data_read[9]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[0]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[10]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[11]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[12]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[13]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[14]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[15]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[15]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[15]_i_2 
       (.CI(\current_cycles_with_no_data_read_reg[7]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\current_cycles_with_no_data_read_reg[15]_i_2_n_0 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[15]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[15]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\current_cycles_with_no_data_read_reg[15]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[15]_i_2_n_15 }),
        .S(current_cycles_with_no_data_read[15:8]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[16]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[17]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[18]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[19]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[1]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[20]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[21]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[22]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[23]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[23]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[23]_i_2 
       (.CI(\current_cycles_with_no_data_read_reg[15]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\current_cycles_with_no_data_read_reg[23]_i_2_n_0 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[23]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[23]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\current_cycles_with_no_data_read_reg[23]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[23]_i_2_n_15 }),
        .S(current_cycles_with_no_data_read[23:16]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[24]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[25]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[26]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[27]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[28]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[29]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[2]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[30]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[31]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[31]_i_2 
       (.CI(\current_cycles_with_no_data_read_reg[23]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\current_cycles_with_no_data_read_reg[31]_i_2_n_0 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[31]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[31]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\current_cycles_with_no_data_read_reg[31]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[31]_i_2_n_15 }),
        .S(current_cycles_with_no_data_read[31:24]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[32] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[32]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[33] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[33]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[34] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[34]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[35] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[35]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[36] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[36]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[37] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[37]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[38] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[38]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[39] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[39]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[39]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[39]_i_2 
       (.CI(\current_cycles_with_no_data_read_reg[31]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\current_cycles_with_no_data_read_reg[39]_i_2_n_0 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[39]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[39]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\current_cycles_with_no_data_read_reg[39]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[39]_i_2_n_15 }),
        .S(current_cycles_with_no_data_read[39:32]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[3]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[40] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[40]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[41] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[41]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[42] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[42]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[43] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[43]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[44] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[44]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[45] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[45]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[46] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[46]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[47] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[47]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[47]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[47]_i_2 
       (.CI(\current_cycles_with_no_data_read_reg[39]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\current_cycles_with_no_data_read_reg[47]_i_2_n_0 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[47]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[47]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\current_cycles_with_no_data_read_reg[47]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[47]_i_2_n_15 }),
        .S(current_cycles_with_no_data_read[47:40]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[48] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[48]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[49] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[49]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[4]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[50] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[50]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[51] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[51]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[52] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[52]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[53] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[53]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[54] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[54]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[55] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[55]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[55]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[55]_i_2 
       (.CI(\current_cycles_with_no_data_read_reg[47]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\current_cycles_with_no_data_read_reg[55]_i_2_n_0 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[55]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[55]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\current_cycles_with_no_data_read_reg[55]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[55]_i_2_n_15 }),
        .S(current_cycles_with_no_data_read[55:48]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[56] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[56]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[57] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[57]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[58] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[58]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[59] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[59]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[5]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[60] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[60]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[61] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[61]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[62] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[62]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[63] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[63]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[63]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[63]_i_2 
       (.CI(\current_cycles_with_no_data_read_reg[55]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_current_cycles_with_no_data_read_reg[63]_i_2_CO_UNCONNECTED [7],\current_cycles_with_no_data_read_reg[63]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[63]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[63]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\current_cycles_with_no_data_read_reg[63]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[63]_i_2_n_15 }),
        .S(current_cycles_with_no_data_read[63:56]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[6]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[7]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[7]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \current_cycles_with_no_data_read_reg[7]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\current_cycles_with_no_data_read_reg[7]_i_2_n_0 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_1 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_2 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_3 ,\NLW_current_cycles_with_no_data_read_reg[7]_i_2_CO_UNCONNECTED [3],\current_cycles_with_no_data_read_reg[7]_i_2_n_5 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_6 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,current_cycles_with_no_data_read[0]}),
        .O({\current_cycles_with_no_data_read_reg[7]_i_2_n_8 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_9 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_10 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_11 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_12 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_13 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_14 ,\current_cycles_with_no_data_read_reg[7]_i_2_n_15 }),
        .S({current_cycles_with_no_data_read[7:1],\current_cycles_with_no_data_read[7]_i_3_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[8]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \current_cycles_with_no_data_read_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\current_cycles_with_no_data_read[9]_i_1_n_0 ),
        .Q(current_cycles_with_no_data_read[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(dataBuffer_S1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[100] 
       (.C(clk),
        .CE(1'b1),
        .D(D[100]),
        .Q(dataBuffer_S1[100]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[101] 
       (.C(clk),
        .CE(1'b1),
        .D(D[101]),
        .Q(dataBuffer_S1[101]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[102] 
       (.C(clk),
        .CE(1'b1),
        .D(D[102]),
        .Q(dataBuffer_S1[102]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[103] 
       (.C(clk),
        .CE(1'b1),
        .D(D[103]),
        .Q(dataBuffer_S1[103]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[104] 
       (.C(clk),
        .CE(1'b1),
        .D(D[104]),
        .Q(dataBuffer_S1[104]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[105] 
       (.C(clk),
        .CE(1'b1),
        .D(D[105]),
        .Q(dataBuffer_S1[105]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[106] 
       (.C(clk),
        .CE(1'b1),
        .D(D[106]),
        .Q(dataBuffer_S1[106]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[107] 
       (.C(clk),
        .CE(1'b1),
        .D(D[107]),
        .Q(dataBuffer_S1[107]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[108] 
       (.C(clk),
        .CE(1'b1),
        .D(D[108]),
        .Q(dataBuffer_S1[108]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[109] 
       (.C(clk),
        .CE(1'b1),
        .D(D[109]),
        .Q(dataBuffer_S1[109]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(D[10]),
        .Q(dataBuffer_S1[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[110] 
       (.C(clk),
        .CE(1'b1),
        .D(D[110]),
        .Q(dataBuffer_S1[110]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[111] 
       (.C(clk),
        .CE(1'b1),
        .D(D[111]),
        .Q(dataBuffer_S1[111]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[112] 
       (.C(clk),
        .CE(1'b1),
        .D(D[112]),
        .Q(dataBuffer_S1[112]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[113] 
       (.C(clk),
        .CE(1'b1),
        .D(D[113]),
        .Q(dataBuffer_S1[113]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[114] 
       (.C(clk),
        .CE(1'b1),
        .D(D[114]),
        .Q(dataBuffer_S1[114]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[115] 
       (.C(clk),
        .CE(1'b1),
        .D(D[115]),
        .Q(dataBuffer_S1[115]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[116] 
       (.C(clk),
        .CE(1'b1),
        .D(D[116]),
        .Q(dataBuffer_S1[116]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[117] 
       (.C(clk),
        .CE(1'b1),
        .D(D[117]),
        .Q(dataBuffer_S1[117]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[118] 
       (.C(clk),
        .CE(1'b1),
        .D(D[118]),
        .Q(dataBuffer_S1[118]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[119] 
       (.C(clk),
        .CE(1'b1),
        .D(D[119]),
        .Q(dataBuffer_S1[119]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(D[11]),
        .Q(dataBuffer_S1[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[120] 
       (.C(clk),
        .CE(1'b1),
        .D(D[120]),
        .Q(dataBuffer_S1[120]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[121] 
       (.C(clk),
        .CE(1'b1),
        .D(D[121]),
        .Q(dataBuffer_S1[121]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[122] 
       (.C(clk),
        .CE(1'b1),
        .D(D[122]),
        .Q(dataBuffer_S1[122]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[123] 
       (.C(clk),
        .CE(1'b1),
        .D(D[123]),
        .Q(dataBuffer_S1[123]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[124] 
       (.C(clk),
        .CE(1'b1),
        .D(D[124]),
        .Q(dataBuffer_S1[124]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[125] 
       (.C(clk),
        .CE(1'b1),
        .D(D[125]),
        .Q(dataBuffer_S1[125]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[126] 
       (.C(clk),
        .CE(1'b1),
        .D(D[126]),
        .Q(dataBuffer_S1[126]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[127] 
       (.C(clk),
        .CE(1'b1),
        .D(D[127]),
        .Q(dataBuffer_S1[127]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(D[12]),
        .Q(dataBuffer_S1[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(D[13]),
        .Q(dataBuffer_S1[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(D[14]),
        .Q(dataBuffer_S1[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(D[15]),
        .Q(dataBuffer_S1[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(D[16]),
        .Q(dataBuffer_S1[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(D[17]),
        .Q(dataBuffer_S1[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(D[18]),
        .Q(dataBuffer_S1[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(D[19]),
        .Q(dataBuffer_S1[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(dataBuffer_S1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(D[20]),
        .Q(dataBuffer_S1[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(D[21]),
        .Q(dataBuffer_S1[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(D[22]),
        .Q(dataBuffer_S1[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(D[23]),
        .Q(dataBuffer_S1[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(D[24]),
        .Q(dataBuffer_S1[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(D[25]),
        .Q(dataBuffer_S1[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(D[26]),
        .Q(dataBuffer_S1[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(D[27]),
        .Q(dataBuffer_S1[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(D[28]),
        .Q(dataBuffer_S1[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(D[29]),
        .Q(dataBuffer_S1[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(dataBuffer_S1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(D[30]),
        .Q(dataBuffer_S1[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(D[31]),
        .Q(dataBuffer_S1[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[32] 
       (.C(clk),
        .CE(1'b1),
        .D(D[32]),
        .Q(dataBuffer_S1[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[33] 
       (.C(clk),
        .CE(1'b1),
        .D(D[33]),
        .Q(dataBuffer_S1[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[34] 
       (.C(clk),
        .CE(1'b1),
        .D(D[34]),
        .Q(dataBuffer_S1[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[35] 
       (.C(clk),
        .CE(1'b1),
        .D(D[35]),
        .Q(dataBuffer_S1[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[36] 
       (.C(clk),
        .CE(1'b1),
        .D(D[36]),
        .Q(dataBuffer_S1[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[37] 
       (.C(clk),
        .CE(1'b1),
        .D(D[37]),
        .Q(dataBuffer_S1[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[38] 
       (.C(clk),
        .CE(1'b1),
        .D(D[38]),
        .Q(dataBuffer_S1[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[39] 
       (.C(clk),
        .CE(1'b1),
        .D(D[39]),
        .Q(dataBuffer_S1[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(dataBuffer_S1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[40] 
       (.C(clk),
        .CE(1'b1),
        .D(D[40]),
        .Q(dataBuffer_S1[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[41] 
       (.C(clk),
        .CE(1'b1),
        .D(D[41]),
        .Q(dataBuffer_S1[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[42] 
       (.C(clk),
        .CE(1'b1),
        .D(D[42]),
        .Q(dataBuffer_S1[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[43] 
       (.C(clk),
        .CE(1'b1),
        .D(D[43]),
        .Q(dataBuffer_S1[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[44] 
       (.C(clk),
        .CE(1'b1),
        .D(D[44]),
        .Q(dataBuffer_S1[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[45] 
       (.C(clk),
        .CE(1'b1),
        .D(D[45]),
        .Q(dataBuffer_S1[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[46] 
       (.C(clk),
        .CE(1'b1),
        .D(D[46]),
        .Q(dataBuffer_S1[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[47] 
       (.C(clk),
        .CE(1'b1),
        .D(D[47]),
        .Q(dataBuffer_S1[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[48] 
       (.C(clk),
        .CE(1'b1),
        .D(D[48]),
        .Q(dataBuffer_S1[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[49] 
       (.C(clk),
        .CE(1'b1),
        .D(D[49]),
        .Q(dataBuffer_S1[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(dataBuffer_S1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[50] 
       (.C(clk),
        .CE(1'b1),
        .D(D[50]),
        .Q(dataBuffer_S1[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[51] 
       (.C(clk),
        .CE(1'b1),
        .D(D[51]),
        .Q(dataBuffer_S1[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[52] 
       (.C(clk),
        .CE(1'b1),
        .D(D[52]),
        .Q(dataBuffer_S1[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[53] 
       (.C(clk),
        .CE(1'b1),
        .D(D[53]),
        .Q(dataBuffer_S1[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[54] 
       (.C(clk),
        .CE(1'b1),
        .D(D[54]),
        .Q(dataBuffer_S1[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[55] 
       (.C(clk),
        .CE(1'b1),
        .D(D[55]),
        .Q(dataBuffer_S1[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[56] 
       (.C(clk),
        .CE(1'b1),
        .D(D[56]),
        .Q(dataBuffer_S1[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[57] 
       (.C(clk),
        .CE(1'b1),
        .D(D[57]),
        .Q(dataBuffer_S1[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[58] 
       (.C(clk),
        .CE(1'b1),
        .D(D[58]),
        .Q(dataBuffer_S1[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[59] 
       (.C(clk),
        .CE(1'b1),
        .D(D[59]),
        .Q(dataBuffer_S1[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(dataBuffer_S1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[60] 
       (.C(clk),
        .CE(1'b1),
        .D(D[60]),
        .Q(dataBuffer_S1[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[61] 
       (.C(clk),
        .CE(1'b1),
        .D(D[61]),
        .Q(dataBuffer_S1[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[62] 
       (.C(clk),
        .CE(1'b1),
        .D(D[62]),
        .Q(dataBuffer_S1[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[63] 
       (.C(clk),
        .CE(1'b1),
        .D(D[63]),
        .Q(dataBuffer_S1[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[64] 
       (.C(clk),
        .CE(1'b1),
        .D(D[64]),
        .Q(dataBuffer_S1[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[65] 
       (.C(clk),
        .CE(1'b1),
        .D(D[65]),
        .Q(dataBuffer_S1[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[66] 
       (.C(clk),
        .CE(1'b1),
        .D(D[66]),
        .Q(dataBuffer_S1[66]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[67] 
       (.C(clk),
        .CE(1'b1),
        .D(D[67]),
        .Q(dataBuffer_S1[67]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[68] 
       (.C(clk),
        .CE(1'b1),
        .D(D[68]),
        .Q(dataBuffer_S1[68]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[69] 
       (.C(clk),
        .CE(1'b1),
        .D(D[69]),
        .Q(dataBuffer_S1[69]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(dataBuffer_S1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[70] 
       (.C(clk),
        .CE(1'b1),
        .D(D[70]),
        .Q(dataBuffer_S1[70]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[71] 
       (.C(clk),
        .CE(1'b1),
        .D(D[71]),
        .Q(dataBuffer_S1[71]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[72] 
       (.C(clk),
        .CE(1'b1),
        .D(D[72]),
        .Q(dataBuffer_S1[72]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[73] 
       (.C(clk),
        .CE(1'b1),
        .D(D[73]),
        .Q(dataBuffer_S1[73]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[74] 
       (.C(clk),
        .CE(1'b1),
        .D(D[74]),
        .Q(dataBuffer_S1[74]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[75] 
       (.C(clk),
        .CE(1'b1),
        .D(D[75]),
        .Q(dataBuffer_S1[75]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[76] 
       (.C(clk),
        .CE(1'b1),
        .D(D[76]),
        .Q(dataBuffer_S1[76]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[77] 
       (.C(clk),
        .CE(1'b1),
        .D(D[77]),
        .Q(dataBuffer_S1[77]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[78] 
       (.C(clk),
        .CE(1'b1),
        .D(D[78]),
        .Q(dataBuffer_S1[78]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[79] 
       (.C(clk),
        .CE(1'b1),
        .D(D[79]),
        .Q(dataBuffer_S1[79]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(dataBuffer_S1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[80] 
       (.C(clk),
        .CE(1'b1),
        .D(D[80]),
        .Q(dataBuffer_S1[80]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[81] 
       (.C(clk),
        .CE(1'b1),
        .D(D[81]),
        .Q(dataBuffer_S1[81]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[82] 
       (.C(clk),
        .CE(1'b1),
        .D(D[82]),
        .Q(dataBuffer_S1[82]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[83] 
       (.C(clk),
        .CE(1'b1),
        .D(D[83]),
        .Q(dataBuffer_S1[83]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[84] 
       (.C(clk),
        .CE(1'b1),
        .D(D[84]),
        .Q(dataBuffer_S1[84]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[85] 
       (.C(clk),
        .CE(1'b1),
        .D(D[85]),
        .Q(dataBuffer_S1[85]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[86] 
       (.C(clk),
        .CE(1'b1),
        .D(D[86]),
        .Q(dataBuffer_S1[86]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[87] 
       (.C(clk),
        .CE(1'b1),
        .D(D[87]),
        .Q(dataBuffer_S1[87]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[88] 
       (.C(clk),
        .CE(1'b1),
        .D(D[88]),
        .Q(dataBuffer_S1[88]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[89] 
       (.C(clk),
        .CE(1'b1),
        .D(D[89]),
        .Q(dataBuffer_S1[89]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(dataBuffer_S1[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[90] 
       (.C(clk),
        .CE(1'b1),
        .D(D[90]),
        .Q(dataBuffer_S1[90]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[91] 
       (.C(clk),
        .CE(1'b1),
        .D(D[91]),
        .Q(dataBuffer_S1[91]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[92] 
       (.C(clk),
        .CE(1'b1),
        .D(D[92]),
        .Q(dataBuffer_S1[92]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[93] 
       (.C(clk),
        .CE(1'b1),
        .D(D[93]),
        .Q(dataBuffer_S1[93]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[94] 
       (.C(clk),
        .CE(1'b1),
        .D(D[94]),
        .Q(dataBuffer_S1[94]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[95] 
       (.C(clk),
        .CE(1'b1),
        .D(D[95]),
        .Q(dataBuffer_S1[95]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[96] 
       (.C(clk),
        .CE(1'b1),
        .D(D[96]),
        .Q(dataBuffer_S1[96]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[97] 
       (.C(clk),
        .CE(1'b1),
        .D(D[97]),
        .Q(dataBuffer_S1[97]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[98] 
       (.C(clk),
        .CE(1'b1),
        .D(D[98]),
        .Q(dataBuffer_S1[98]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[99] 
       (.C(clk),
        .CE(1'b1),
        .D(D[99]),
        .Q(dataBuffer_S1[99]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S1_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(D[9]),
        .Q(dataBuffer_S1[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[0]_i_1 
       (.I0(dataBuffer_S1[0]),
        .I1(dataBuffer_S2[0]),
        .O(\dataBuffer_S2[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[100]_i_1 
       (.I0(dataBuffer_S1[100]),
        .I1(dataBuffer_S2[100]),
        .O(\dataBuffer_S2[100]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[101]_i_1 
       (.I0(dataBuffer_S1[101]),
        .I1(dataBuffer_S2[101]),
        .O(\dataBuffer_S2[101]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[102]_i_1 
       (.I0(dataBuffer_S1[102]),
        .I1(dataBuffer_S2[102]),
        .O(\dataBuffer_S2[102]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[103]_i_1 
       (.I0(dataBuffer_S1[103]),
        .I1(dataBuffer_S2[103]),
        .O(\dataBuffer_S2[103]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[104]_i_1 
       (.I0(dataBuffer_S1[104]),
        .I1(dataBuffer_S2[104]),
        .O(\dataBuffer_S2[104]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[105]_i_1 
       (.I0(dataBuffer_S1[105]),
        .I1(dataBuffer_S2[105]),
        .O(\dataBuffer_S2[105]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[106]_i_1 
       (.I0(dataBuffer_S1[106]),
        .I1(dataBuffer_S2[106]),
        .O(\dataBuffer_S2[106]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[107]_i_1 
       (.I0(dataBuffer_S1[107]),
        .I1(dataBuffer_S2[107]),
        .O(\dataBuffer_S2[107]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[108]_i_1 
       (.I0(dataBuffer_S1[108]),
        .I1(dataBuffer_S2[108]),
        .O(\dataBuffer_S2[108]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[109]_i_1 
       (.I0(dataBuffer_S1[109]),
        .I1(dataBuffer_S2[109]),
        .O(\dataBuffer_S2[109]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[10]_i_1 
       (.I0(dataBuffer_S1[10]),
        .I1(dataBuffer_S2[10]),
        .O(\dataBuffer_S2[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[110]_i_1 
       (.I0(dataBuffer_S1[110]),
        .I1(dataBuffer_S2[110]),
        .O(\dataBuffer_S2[110]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[111]_i_1 
       (.I0(dataBuffer_S1[111]),
        .I1(dataBuffer_S2[111]),
        .O(\dataBuffer_S2[111]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[112]_i_1 
       (.I0(dataBuffer_S1[112]),
        .I1(dataBuffer_S2[112]),
        .O(\dataBuffer_S2[112]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[113]_i_1 
       (.I0(dataBuffer_S1[113]),
        .I1(dataBuffer_S2[113]),
        .O(\dataBuffer_S2[113]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[114]_i_1 
       (.I0(dataBuffer_S1[114]),
        .I1(dataBuffer_S2[114]),
        .O(\dataBuffer_S2[114]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[115]_i_1 
       (.I0(dataBuffer_S1[115]),
        .I1(dataBuffer_S2[115]),
        .O(\dataBuffer_S2[115]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[116]_i_1 
       (.I0(dataBuffer_S1[116]),
        .I1(dataBuffer_S2[116]),
        .O(\dataBuffer_S2[116]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[117]_i_1 
       (.I0(dataBuffer_S1[117]),
        .I1(dataBuffer_S2[117]),
        .O(\dataBuffer_S2[117]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[118]_i_1 
       (.I0(dataBuffer_S1[118]),
        .I1(dataBuffer_S2[118]),
        .O(\dataBuffer_S2[118]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[119]_i_1 
       (.I0(dataBuffer_S1[119]),
        .I1(dataBuffer_S2[119]),
        .O(\dataBuffer_S2[119]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[11]_i_1 
       (.I0(dataBuffer_S1[11]),
        .I1(dataBuffer_S2[11]),
        .O(\dataBuffer_S2[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[120]_i_1 
       (.I0(dataBuffer_S1[120]),
        .I1(dataBuffer_S2[120]),
        .O(\dataBuffer_S2[120]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[121]_i_1 
       (.I0(dataBuffer_S1[121]),
        .I1(dataBuffer_S2[121]),
        .O(\dataBuffer_S2[121]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[122]_i_1 
       (.I0(dataBuffer_S1[122]),
        .I1(dataBuffer_S2[122]),
        .O(\dataBuffer_S2[122]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[123]_i_1 
       (.I0(dataBuffer_S1[123]),
        .I1(dataBuffer_S2[123]),
        .O(\dataBuffer_S2[123]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[124]_i_1 
       (.I0(dataBuffer_S1[124]),
        .I1(dataBuffer_S2[124]),
        .O(\dataBuffer_S2[124]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[125]_i_1 
       (.I0(dataBuffer_S1[125]),
        .I1(dataBuffer_S2[125]),
        .O(\dataBuffer_S2[125]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[126]_i_1 
       (.I0(dataBuffer_S1[126]),
        .I1(dataBuffer_S2[126]),
        .O(\dataBuffer_S2[126]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[127]_i_1 
       (.I0(dataBuffer_S1[127]),
        .I1(dataBuffer_S2[127]),
        .O(\dataBuffer_S2[127]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[12]_i_1 
       (.I0(dataBuffer_S1[12]),
        .I1(dataBuffer_S2[12]),
        .O(\dataBuffer_S2[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[13]_i_1 
       (.I0(dataBuffer_S1[13]),
        .I1(dataBuffer_S2[13]),
        .O(\dataBuffer_S2[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[14]_i_1 
       (.I0(dataBuffer_S1[14]),
        .I1(dataBuffer_S2[14]),
        .O(\dataBuffer_S2[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[15]_i_1 
       (.I0(dataBuffer_S1[15]),
        .I1(dataBuffer_S2[15]),
        .O(\dataBuffer_S2[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[16]_i_1 
       (.I0(dataBuffer_S1[16]),
        .I1(dataBuffer_S2[16]),
        .O(\dataBuffer_S2[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[17]_i_1 
       (.I0(dataBuffer_S1[17]),
        .I1(dataBuffer_S2[17]),
        .O(\dataBuffer_S2[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[18]_i_1 
       (.I0(dataBuffer_S1[18]),
        .I1(dataBuffer_S2[18]),
        .O(\dataBuffer_S2[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[19]_i_1 
       (.I0(dataBuffer_S1[19]),
        .I1(dataBuffer_S2[19]),
        .O(\dataBuffer_S2[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[1]_i_1 
       (.I0(dataBuffer_S1[1]),
        .I1(dataBuffer_S2[1]),
        .O(\dataBuffer_S2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[20]_i_1 
       (.I0(dataBuffer_S1[20]),
        .I1(dataBuffer_S2[20]),
        .O(\dataBuffer_S2[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[21]_i_1 
       (.I0(dataBuffer_S1[21]),
        .I1(dataBuffer_S2[21]),
        .O(\dataBuffer_S2[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[22]_i_1 
       (.I0(dataBuffer_S1[22]),
        .I1(dataBuffer_S2[22]),
        .O(\dataBuffer_S2[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[23]_i_1 
       (.I0(dataBuffer_S1[23]),
        .I1(dataBuffer_S2[23]),
        .O(\dataBuffer_S2[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[24]_i_1 
       (.I0(dataBuffer_S1[24]),
        .I1(dataBuffer_S2[24]),
        .O(\dataBuffer_S2[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[25]_i_1 
       (.I0(dataBuffer_S1[25]),
        .I1(dataBuffer_S2[25]),
        .O(\dataBuffer_S2[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[26]_i_1 
       (.I0(dataBuffer_S1[26]),
        .I1(dataBuffer_S2[26]),
        .O(\dataBuffer_S2[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[27]_i_1 
       (.I0(dataBuffer_S1[27]),
        .I1(dataBuffer_S2[27]),
        .O(\dataBuffer_S2[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[28]_i_1 
       (.I0(dataBuffer_S1[28]),
        .I1(dataBuffer_S2[28]),
        .O(\dataBuffer_S2[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[29]_i_1 
       (.I0(dataBuffer_S1[29]),
        .I1(dataBuffer_S2[29]),
        .O(\dataBuffer_S2[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[2]_i_1 
       (.I0(dataBuffer_S1[2]),
        .I1(dataBuffer_S2[2]),
        .O(\dataBuffer_S2[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[30]_i_1 
       (.I0(dataBuffer_S1[30]),
        .I1(dataBuffer_S2[30]),
        .O(\dataBuffer_S2[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[31]_i_1 
       (.I0(dataBuffer_S1[31]),
        .I1(dataBuffer_S2[31]),
        .O(\dataBuffer_S2[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[32]_i_1 
       (.I0(dataBuffer_S1[32]),
        .I1(dataBuffer_S2[32]),
        .O(\dataBuffer_S2[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[33]_i_1 
       (.I0(dataBuffer_S1[33]),
        .I1(dataBuffer_S2[33]),
        .O(\dataBuffer_S2[33]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[34]_i_1 
       (.I0(dataBuffer_S1[34]),
        .I1(dataBuffer_S2[34]),
        .O(\dataBuffer_S2[34]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[35]_i_1 
       (.I0(dataBuffer_S1[35]),
        .I1(dataBuffer_S2[35]),
        .O(\dataBuffer_S2[35]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[36]_i_1 
       (.I0(dataBuffer_S1[36]),
        .I1(dataBuffer_S2[36]),
        .O(\dataBuffer_S2[36]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[37]_i_1 
       (.I0(dataBuffer_S1[37]),
        .I1(dataBuffer_S2[37]),
        .O(\dataBuffer_S2[37]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[38]_i_1 
       (.I0(dataBuffer_S1[38]),
        .I1(dataBuffer_S2[38]),
        .O(\dataBuffer_S2[38]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[39]_i_1 
       (.I0(dataBuffer_S1[39]),
        .I1(dataBuffer_S2[39]),
        .O(\dataBuffer_S2[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[3]_i_1 
       (.I0(dataBuffer_S1[3]),
        .I1(dataBuffer_S2[3]),
        .O(\dataBuffer_S2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[40]_i_1 
       (.I0(dataBuffer_S1[40]),
        .I1(dataBuffer_S2[40]),
        .O(\dataBuffer_S2[40]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[41]_i_1 
       (.I0(dataBuffer_S1[41]),
        .I1(dataBuffer_S2[41]),
        .O(\dataBuffer_S2[41]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[42]_i_1 
       (.I0(dataBuffer_S1[42]),
        .I1(dataBuffer_S2[42]),
        .O(\dataBuffer_S2[42]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[43]_i_1 
       (.I0(dataBuffer_S1[43]),
        .I1(dataBuffer_S2[43]),
        .O(\dataBuffer_S2[43]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[44]_i_1 
       (.I0(dataBuffer_S1[44]),
        .I1(dataBuffer_S2[44]),
        .O(\dataBuffer_S2[44]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[45]_i_1 
       (.I0(dataBuffer_S1[45]),
        .I1(dataBuffer_S2[45]),
        .O(\dataBuffer_S2[45]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[46]_i_1 
       (.I0(dataBuffer_S1[46]),
        .I1(dataBuffer_S2[46]),
        .O(\dataBuffer_S2[46]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[47]_i_1 
       (.I0(dataBuffer_S1[47]),
        .I1(dataBuffer_S2[47]),
        .O(\dataBuffer_S2[47]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[48]_i_1 
       (.I0(dataBuffer_S1[48]),
        .I1(dataBuffer_S2[48]),
        .O(\dataBuffer_S2[48]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[49]_i_1 
       (.I0(dataBuffer_S1[49]),
        .I1(dataBuffer_S2[49]),
        .O(\dataBuffer_S2[49]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[4]_i_1 
       (.I0(dataBuffer_S1[4]),
        .I1(dataBuffer_S2[4]),
        .O(\dataBuffer_S2[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[50]_i_1 
       (.I0(dataBuffer_S1[50]),
        .I1(dataBuffer_S2[50]),
        .O(\dataBuffer_S2[50]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[51]_i_1 
       (.I0(dataBuffer_S1[51]),
        .I1(dataBuffer_S2[51]),
        .O(\dataBuffer_S2[51]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[52]_i_1 
       (.I0(dataBuffer_S1[52]),
        .I1(dataBuffer_S2[52]),
        .O(\dataBuffer_S2[52]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[53]_i_1 
       (.I0(dataBuffer_S1[53]),
        .I1(dataBuffer_S2[53]),
        .O(\dataBuffer_S2[53]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[54]_i_1 
       (.I0(dataBuffer_S1[54]),
        .I1(dataBuffer_S2[54]),
        .O(\dataBuffer_S2[54]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[55]_i_1 
       (.I0(dataBuffer_S1[55]),
        .I1(dataBuffer_S2[55]),
        .O(\dataBuffer_S2[55]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[56]_i_1 
       (.I0(dataBuffer_S1[56]),
        .I1(dataBuffer_S2[56]),
        .O(\dataBuffer_S2[56]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[57]_i_1 
       (.I0(dataBuffer_S1[57]),
        .I1(dataBuffer_S2[57]),
        .O(\dataBuffer_S2[57]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[58]_i_1 
       (.I0(dataBuffer_S1[58]),
        .I1(dataBuffer_S2[58]),
        .O(\dataBuffer_S2[58]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[59]_i_1 
       (.I0(dataBuffer_S1[59]),
        .I1(dataBuffer_S2[59]),
        .O(\dataBuffer_S2[59]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[5]_i_1 
       (.I0(dataBuffer_S1[5]),
        .I1(dataBuffer_S2[5]),
        .O(\dataBuffer_S2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[60]_i_1 
       (.I0(dataBuffer_S1[60]),
        .I1(dataBuffer_S2[60]),
        .O(\dataBuffer_S2[60]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[61]_i_1 
       (.I0(dataBuffer_S1[61]),
        .I1(dataBuffer_S2[61]),
        .O(\dataBuffer_S2[61]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[62]_i_1 
       (.I0(dataBuffer_S1[62]),
        .I1(dataBuffer_S2[62]),
        .O(\dataBuffer_S2[62]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[63]_i_1 
       (.I0(dataBuffer_S1[63]),
        .I1(dataBuffer_S2[63]),
        .O(\dataBuffer_S2[63]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[64]_i_1 
       (.I0(dataBuffer_S1[64]),
        .I1(dataBuffer_S2[64]),
        .O(\dataBuffer_S2[64]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[65]_i_1 
       (.I0(dataBuffer_S1[65]),
        .I1(dataBuffer_S2[65]),
        .O(\dataBuffer_S2[65]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[66]_i_1 
       (.I0(dataBuffer_S1[66]),
        .I1(dataBuffer_S2[66]),
        .O(\dataBuffer_S2[66]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[67]_i_1 
       (.I0(dataBuffer_S1[67]),
        .I1(dataBuffer_S2[67]),
        .O(\dataBuffer_S2[67]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[68]_i_1 
       (.I0(dataBuffer_S1[68]),
        .I1(dataBuffer_S2[68]),
        .O(\dataBuffer_S2[68]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[69]_i_1 
       (.I0(dataBuffer_S1[69]),
        .I1(dataBuffer_S2[69]),
        .O(\dataBuffer_S2[69]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[6]_i_1 
       (.I0(dataBuffer_S1[6]),
        .I1(dataBuffer_S2[6]),
        .O(\dataBuffer_S2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[70]_i_1 
       (.I0(dataBuffer_S1[70]),
        .I1(dataBuffer_S2[70]),
        .O(\dataBuffer_S2[70]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[71]_i_1 
       (.I0(dataBuffer_S1[71]),
        .I1(dataBuffer_S2[71]),
        .O(\dataBuffer_S2[71]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[72]_i_1 
       (.I0(dataBuffer_S1[72]),
        .I1(dataBuffer_S2[72]),
        .O(\dataBuffer_S2[72]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[73]_i_1 
       (.I0(dataBuffer_S1[73]),
        .I1(dataBuffer_S2[73]),
        .O(\dataBuffer_S2[73]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[74]_i_1 
       (.I0(dataBuffer_S1[74]),
        .I1(dataBuffer_S2[74]),
        .O(\dataBuffer_S2[74]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[75]_i_1 
       (.I0(dataBuffer_S1[75]),
        .I1(dataBuffer_S2[75]),
        .O(\dataBuffer_S2[75]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[76]_i_1 
       (.I0(dataBuffer_S1[76]),
        .I1(dataBuffer_S2[76]),
        .O(\dataBuffer_S2[76]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[77]_i_1 
       (.I0(dataBuffer_S1[77]),
        .I1(dataBuffer_S2[77]),
        .O(\dataBuffer_S2[77]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[78]_i_1 
       (.I0(dataBuffer_S1[78]),
        .I1(dataBuffer_S2[78]),
        .O(\dataBuffer_S2[78]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[79]_i_1 
       (.I0(dataBuffer_S1[79]),
        .I1(dataBuffer_S2[79]),
        .O(\dataBuffer_S2[79]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \dataBuffer_S2[7]_i_1 
       (.I0(dataBuffer_S1[7]),
        .I1(dataBuffer_S2[7]),
        .O(\dataBuffer_S2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[80]_i_1 
       (.I0(dataBuffer_S1[80]),
        .I1(dataBuffer_S2[80]),
        .O(\dataBuffer_S2[80]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[81]_i_1 
       (.I0(dataBuffer_S1[81]),
        .I1(dataBuffer_S2[81]),
        .O(\dataBuffer_S2[81]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[82]_i_1 
       (.I0(dataBuffer_S1[82]),
        .I1(dataBuffer_S2[82]),
        .O(\dataBuffer_S2[82]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[83]_i_1 
       (.I0(dataBuffer_S1[83]),
        .I1(dataBuffer_S2[83]),
        .O(\dataBuffer_S2[83]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[84]_i_1 
       (.I0(dataBuffer_S1[84]),
        .I1(dataBuffer_S2[84]),
        .O(\dataBuffer_S2[84]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[85]_i_1 
       (.I0(dataBuffer_S1[85]),
        .I1(dataBuffer_S2[85]),
        .O(\dataBuffer_S2[85]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[86]_i_1 
       (.I0(dataBuffer_S1[86]),
        .I1(dataBuffer_S2[86]),
        .O(\dataBuffer_S2[86]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[87]_i_1 
       (.I0(dataBuffer_S1[87]),
        .I1(dataBuffer_S2[87]),
        .O(\dataBuffer_S2[87]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[88]_i_1 
       (.I0(dataBuffer_S1[88]),
        .I1(dataBuffer_S2[88]),
        .O(\dataBuffer_S2[88]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[89]_i_1 
       (.I0(dataBuffer_S1[89]),
        .I1(dataBuffer_S2[89]),
        .O(\dataBuffer_S2[89]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[8]_i_1 
       (.I0(dataBuffer_S1[8]),
        .I1(dataBuffer_S2[8]),
        .O(\dataBuffer_S2[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[90]_i_1 
       (.I0(dataBuffer_S1[90]),
        .I1(dataBuffer_S2[90]),
        .O(\dataBuffer_S2[90]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[91]_i_1 
       (.I0(dataBuffer_S1[91]),
        .I1(dataBuffer_S2[91]),
        .O(\dataBuffer_S2[91]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[92]_i_1 
       (.I0(dataBuffer_S1[92]),
        .I1(dataBuffer_S2[92]),
        .O(\dataBuffer_S2[92]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[93]_i_1 
       (.I0(dataBuffer_S1[93]),
        .I1(dataBuffer_S2[93]),
        .O(\dataBuffer_S2[93]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[94]_i_1 
       (.I0(dataBuffer_S1[94]),
        .I1(dataBuffer_S2[94]),
        .O(\dataBuffer_S2[94]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[95]_i_1 
       (.I0(dataBuffer_S1[95]),
        .I1(dataBuffer_S2[95]),
        .O(\dataBuffer_S2[95]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[96]_i_1 
       (.I0(dataBuffer_S1[96]),
        .I1(dataBuffer_S2[96]),
        .O(\dataBuffer_S2[96]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[97]_i_1 
       (.I0(dataBuffer_S1[97]),
        .I1(dataBuffer_S2[97]),
        .O(\dataBuffer_S2[97]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[98]_i_1 
       (.I0(dataBuffer_S1[98]),
        .I1(dataBuffer_S2[98]),
        .O(\dataBuffer_S2[98]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[99]_i_1 
       (.I0(dataBuffer_S1[99]),
        .I1(dataBuffer_S2[99]),
        .O(\dataBuffer_S2[99]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dataBuffer_S2[9]_i_1 
       (.I0(dataBuffer_S1[9]),
        .I1(dataBuffer_S2[9]),
        .O(\dataBuffer_S2[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[0]_i_1_n_0 ),
        .Q(dataBuffer_S2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[100] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[100]_i_1_n_0 ),
        .Q(dataBuffer_S2[100]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[101] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[101]_i_1_n_0 ),
        .Q(dataBuffer_S2[101]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[102] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[102]_i_1_n_0 ),
        .Q(dataBuffer_S2[102]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[103] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[103]_i_1_n_0 ),
        .Q(dataBuffer_S2[103]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[104] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[104]_i_1_n_0 ),
        .Q(dataBuffer_S2[104]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[105] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[105]_i_1_n_0 ),
        .Q(dataBuffer_S2[105]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[106] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[106]_i_1_n_0 ),
        .Q(dataBuffer_S2[106]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[107] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[107]_i_1_n_0 ),
        .Q(dataBuffer_S2[107]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[108] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[108]_i_1_n_0 ),
        .Q(dataBuffer_S2[108]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[109] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[109]_i_1_n_0 ),
        .Q(dataBuffer_S2[109]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[10]_i_1_n_0 ),
        .Q(dataBuffer_S2[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[110] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[110]_i_1_n_0 ),
        .Q(dataBuffer_S2[110]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[111] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[111]_i_1_n_0 ),
        .Q(dataBuffer_S2[111]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[112] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[112]_i_1_n_0 ),
        .Q(dataBuffer_S2[112]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[113] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[113]_i_1_n_0 ),
        .Q(dataBuffer_S2[113]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[114] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[114]_i_1_n_0 ),
        .Q(dataBuffer_S2[114]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[115] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[115]_i_1_n_0 ),
        .Q(dataBuffer_S2[115]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[116] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[116]_i_1_n_0 ),
        .Q(dataBuffer_S2[116]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[117] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[117]_i_1_n_0 ),
        .Q(dataBuffer_S2[117]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[118] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[118]_i_1_n_0 ),
        .Q(dataBuffer_S2[118]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[119] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[119]_i_1_n_0 ),
        .Q(dataBuffer_S2[119]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[11]_i_1_n_0 ),
        .Q(dataBuffer_S2[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[120] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[120]_i_1_n_0 ),
        .Q(dataBuffer_S2[120]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[121] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[121]_i_1_n_0 ),
        .Q(dataBuffer_S2[121]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[122] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[122]_i_1_n_0 ),
        .Q(dataBuffer_S2[122]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[123] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[123]_i_1_n_0 ),
        .Q(dataBuffer_S2[123]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[124] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[124]_i_1_n_0 ),
        .Q(dataBuffer_S2[124]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[125] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[125]_i_1_n_0 ),
        .Q(dataBuffer_S2[125]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[126] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[126]_i_1_n_0 ),
        .Q(dataBuffer_S2[126]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[127] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[127]_i_1_n_0 ),
        .Q(dataBuffer_S2[127]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[12]_i_1_n_0 ),
        .Q(dataBuffer_S2[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[13]_i_1_n_0 ),
        .Q(dataBuffer_S2[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[14]_i_1_n_0 ),
        .Q(dataBuffer_S2[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[15]_i_1_n_0 ),
        .Q(dataBuffer_S2[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[16]_i_1_n_0 ),
        .Q(dataBuffer_S2[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[17]_i_1_n_0 ),
        .Q(dataBuffer_S2[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[18]_i_1_n_0 ),
        .Q(dataBuffer_S2[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[19]_i_1_n_0 ),
        .Q(dataBuffer_S2[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[1]_i_1_n_0 ),
        .Q(dataBuffer_S2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[20]_i_1_n_0 ),
        .Q(dataBuffer_S2[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[21]_i_1_n_0 ),
        .Q(dataBuffer_S2[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[22]_i_1_n_0 ),
        .Q(dataBuffer_S2[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[23]_i_1_n_0 ),
        .Q(dataBuffer_S2[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[24]_i_1_n_0 ),
        .Q(dataBuffer_S2[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[25]_i_1_n_0 ),
        .Q(dataBuffer_S2[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[26]_i_1_n_0 ),
        .Q(dataBuffer_S2[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[27]_i_1_n_0 ),
        .Q(dataBuffer_S2[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[28]_i_1_n_0 ),
        .Q(dataBuffer_S2[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[29]_i_1_n_0 ),
        .Q(dataBuffer_S2[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[2]_i_1_n_0 ),
        .Q(dataBuffer_S2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[30]_i_1_n_0 ),
        .Q(dataBuffer_S2[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[31]_i_1_n_0 ),
        .Q(dataBuffer_S2[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[32] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[32]_i_1_n_0 ),
        .Q(dataBuffer_S2[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[33] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[33]_i_1_n_0 ),
        .Q(dataBuffer_S2[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[34] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[34]_i_1_n_0 ),
        .Q(dataBuffer_S2[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[35] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[35]_i_1_n_0 ),
        .Q(dataBuffer_S2[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[36] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[36]_i_1_n_0 ),
        .Q(dataBuffer_S2[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[37] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[37]_i_1_n_0 ),
        .Q(dataBuffer_S2[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[38] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[38]_i_1_n_0 ),
        .Q(dataBuffer_S2[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[39] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[39]_i_1_n_0 ),
        .Q(dataBuffer_S2[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[3]_i_1_n_0 ),
        .Q(dataBuffer_S2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[40] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[40]_i_1_n_0 ),
        .Q(dataBuffer_S2[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[41] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[41]_i_1_n_0 ),
        .Q(dataBuffer_S2[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[42] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[42]_i_1_n_0 ),
        .Q(dataBuffer_S2[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[43] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[43]_i_1_n_0 ),
        .Q(dataBuffer_S2[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[44] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[44]_i_1_n_0 ),
        .Q(dataBuffer_S2[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[45] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[45]_i_1_n_0 ),
        .Q(dataBuffer_S2[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[46] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[46]_i_1_n_0 ),
        .Q(dataBuffer_S2[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[47] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[47]_i_1_n_0 ),
        .Q(dataBuffer_S2[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[48] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[48]_i_1_n_0 ),
        .Q(dataBuffer_S2[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[49] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[49]_i_1_n_0 ),
        .Q(dataBuffer_S2[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[4]_i_1_n_0 ),
        .Q(dataBuffer_S2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[50] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[50]_i_1_n_0 ),
        .Q(dataBuffer_S2[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[51] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[51]_i_1_n_0 ),
        .Q(dataBuffer_S2[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[52] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[52]_i_1_n_0 ),
        .Q(dataBuffer_S2[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[53] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[53]_i_1_n_0 ),
        .Q(dataBuffer_S2[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[54] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[54]_i_1_n_0 ),
        .Q(dataBuffer_S2[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[55] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[55]_i_1_n_0 ),
        .Q(dataBuffer_S2[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[56] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[56]_i_1_n_0 ),
        .Q(dataBuffer_S2[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[57] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[57]_i_1_n_0 ),
        .Q(dataBuffer_S2[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[58] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[58]_i_1_n_0 ),
        .Q(dataBuffer_S2[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[59] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[59]_i_1_n_0 ),
        .Q(dataBuffer_S2[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[5]_i_1_n_0 ),
        .Q(dataBuffer_S2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[60] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[60]_i_1_n_0 ),
        .Q(dataBuffer_S2[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[61] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[61]_i_1_n_0 ),
        .Q(dataBuffer_S2[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[62] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[62]_i_1_n_0 ),
        .Q(dataBuffer_S2[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[63] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[63]_i_1_n_0 ),
        .Q(dataBuffer_S2[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[64] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[64]_i_1_n_0 ),
        .Q(dataBuffer_S2[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[65] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[65]_i_1_n_0 ),
        .Q(dataBuffer_S2[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[66] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[66]_i_1_n_0 ),
        .Q(dataBuffer_S2[66]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[67] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[67]_i_1_n_0 ),
        .Q(dataBuffer_S2[67]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[68] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[68]_i_1_n_0 ),
        .Q(dataBuffer_S2[68]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[69] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[69]_i_1_n_0 ),
        .Q(dataBuffer_S2[69]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[6]_i_1_n_0 ),
        .Q(dataBuffer_S2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[70] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[70]_i_1_n_0 ),
        .Q(dataBuffer_S2[70]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[71] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[71]_i_1_n_0 ),
        .Q(dataBuffer_S2[71]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[72] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[72]_i_1_n_0 ),
        .Q(dataBuffer_S2[72]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[73] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[73]_i_1_n_0 ),
        .Q(dataBuffer_S2[73]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[74] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[74]_i_1_n_0 ),
        .Q(dataBuffer_S2[74]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[75] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[75]_i_1_n_0 ),
        .Q(dataBuffer_S2[75]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[76] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[76]_i_1_n_0 ),
        .Q(dataBuffer_S2[76]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[77] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[77]_i_1_n_0 ),
        .Q(dataBuffer_S2[77]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[78] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[78]_i_1_n_0 ),
        .Q(dataBuffer_S2[78]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[79] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[79]_i_1_n_0 ),
        .Q(dataBuffer_S2[79]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[7]_i_1_n_0 ),
        .Q(dataBuffer_S2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[80] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[80]_i_1_n_0 ),
        .Q(dataBuffer_S2[80]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[81] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[81]_i_1_n_0 ),
        .Q(dataBuffer_S2[81]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[82] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[82]_i_1_n_0 ),
        .Q(dataBuffer_S2[82]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[83] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[83]_i_1_n_0 ),
        .Q(dataBuffer_S2[83]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[84] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[84]_i_1_n_0 ),
        .Q(dataBuffer_S2[84]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[85] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[85]_i_1_n_0 ),
        .Q(dataBuffer_S2[85]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[86] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[86]_i_1_n_0 ),
        .Q(dataBuffer_S2[86]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[87] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[87]_i_1_n_0 ),
        .Q(dataBuffer_S2[87]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[88] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[88]_i_1_n_0 ),
        .Q(dataBuffer_S2[88]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[89] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[89]_i_1_n_0 ),
        .Q(dataBuffer_S2[89]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[8]_i_1_n_0 ),
        .Q(dataBuffer_S2[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[90] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[90]_i_1_n_0 ),
        .Q(dataBuffer_S2[90]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[91] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[91]_i_1_n_0 ),
        .Q(dataBuffer_S2[91]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[92] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[92]_i_1_n_0 ),
        .Q(dataBuffer_S2[92]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[93] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[93]_i_1_n_0 ),
        .Q(dataBuffer_S2[93]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[94] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[94]_i_1_n_0 ),
        .Q(dataBuffer_S2[94]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[95] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[95]_i_1_n_0 ),
        .Q(dataBuffer_S2[95]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[96] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[96]_i_1_n_0 ),
        .Q(dataBuffer_S2[96]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[97] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[97]_i_1_n_0 ),
        .Q(dataBuffer_S2[97]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[98] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[98]_i_1_n_0 ),
        .Q(dataBuffer_S2[98]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[99] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[99]_i_1_n_0 ),
        .Q(dataBuffer_S2[99]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dataBuffer_S2_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\dataBuffer_S2[9]_i_1_n_0 ),
        .Q(dataBuffer_S2[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hA8FC)) 
    data_read_in_this_test_i_1
       (.I0(data_read_in_this_test_i_2_n_0),
        .I1(data_read_in_this_test),
        .I2(readDataValid),
        .I3(reset_cmd),
        .O(data_read_in_this_test_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    data_read_in_this_test_i_2
       (.I0(active_runtime0),
        .I1(active_runtime1),
        .I2(active_blocking),
        .I3(\countDataReceived[39]_i_7_n_0 ),
        .I4(active_runtime2),
        .I5(active_runtime3),
        .O(data_read_in_this_test_i_2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    data_read_in_this_test_reg
       (.C(clk),
        .CE(1'b1),
        .D(data_read_in_this_test_i_1_n_0),
        .Q(data_read_in_this_test),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[0] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[10] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[11] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[12] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[13] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_control_reg[14] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[15] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[16] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[17] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[18] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[19] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[1] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[20] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_control_reg[21] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[22] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[22]),
        .Q(debug_axi_control_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[23] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[23]),
        .Q(debug_axi_control_reg_n_0_[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[24] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[24]),
        .Q(debug_axi_control_reg_n_0_[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[25] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[25]),
        .Q(debug_axi_control_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[26] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[26]),
        .Q(debug_axi_control_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[27] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[27]),
        .Q(debug_axi_control_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[28] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[28]),
        .Q(debug_axi_control_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[29] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[29]),
        .Q(debug_axi_control_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[2] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[30] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[30]),
        .Q(debug_axi_control_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[31] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[31]),
        .Q(debug_axi_control_reg_n_0_[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[3] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[4] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[5] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[6] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_control_reg[7] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_control_reg[8] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_control_reg[9] 
       (.C(clk),
        .CE(sactn_n_68),
        .D(axi_c_write_data[9]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[0] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[0]),
        .Q(\m_ddr_axi_ARSIZE[2] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[10] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[10]),
        .Q(\m_ddr_axi_ARSIZE[2] [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[11] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[11]),
        .Q(\m_ddr_axi_ARSIZE[2] [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[12] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[12]),
        .Q(\m_ddr_axi_ARSIZE[2] [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[13] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[13]),
        .Q(\m_ddr_axi_ARSIZE[2] [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_r_control_reg[14] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[14]),
        .Q(\m_ddr_axi_ARSIZE[2] [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[15] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[15]),
        .Q(\m_ddr_axi_ARSIZE[2] [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[16] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[16]),
        .Q(\m_ddr_axi_ARSIZE[2] [16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[17] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[17]),
        .Q(\m_ddr_axi_ARSIZE[2] [17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[18] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[18]),
        .Q(\m_ddr_axi_ARSIZE[2] [18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[19] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[19]),
        .Q(\m_ddr_axi_ARSIZE[2] [19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[1] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[1]),
        .Q(\m_ddr_axi_ARSIZE[2] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[20] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[20]),
        .Q(\m_ddr_axi_ARSIZE[2] [20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_r_control_reg[21] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[21]),
        .Q(\m_ddr_axi_ARSIZE[2] [21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[22] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[22]),
        .Q(debug_axi_r_control_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[23] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[23]),
        .Q(debug_axi_r_control_reg_n_0_[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[24] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[24]),
        .Q(debug_axi_r_control_reg_n_0_[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[25] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[25]),
        .Q(debug_axi_r_control_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[26] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[26]),
        .Q(debug_axi_r_control_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[27] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[27]),
        .Q(debug_axi_r_control_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[28] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[28]),
        .Q(debug_axi_r_control_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[29] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[29]),
        .Q(debug_axi_r_control_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[2] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[2]),
        .Q(\m_ddr_axi_ARSIZE[2] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[30] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[30]),
        .Q(debug_axi_r_control_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[31] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[31]),
        .Q(debug_axi_r_control_reg_n_0_[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[3] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[3]),
        .Q(\m_ddr_axi_ARSIZE[2] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[4] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[4]),
        .Q(\m_ddr_axi_ARSIZE[2] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[5] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[5]),
        .Q(\m_ddr_axi_ARSIZE[2] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[6] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[6]),
        .Q(\m_ddr_axi_ARSIZE[2] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \debug_axi_r_control_reg[7] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[7]),
        .Q(\m_ddr_axi_ARSIZE[2] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_r_control_reg[8] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[8]),
        .Q(\m_ddr_axi_ARSIZE[2] [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \debug_axi_r_control_reg[9] 
       (.C(clk),
        .CE(sactn_n_69),
        .D(axi_c_write_data[9]),
        .Q(\m_ddr_axi_ARSIZE[2] [9]),
        .R(1'b0));
  (* HLUTNM = "lutpair74" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_10 
       (.I0(countDataReceived[15]),
        .I1(countDataToBeReceived_reg[15]),
        .I2(latency[15]),
        .I3(\latency[15]_i_2_n_0 ),
        .O(\latency[15]_i_10_n_0 ));
  (* HLUTNM = "lutpair73" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_11 
       (.I0(countDataReceived[14]),
        .I1(countDataToBeReceived_reg[14]),
        .I2(latency[14]),
        .I3(\latency[15]_i_3_n_0 ),
        .O(\latency[15]_i_11_n_0 ));
  (* HLUTNM = "lutpair72" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_12 
       (.I0(countDataReceived[13]),
        .I1(countDataToBeReceived_reg[13]),
        .I2(latency[13]),
        .I3(\latency[15]_i_4_n_0 ),
        .O(\latency[15]_i_12_n_0 ));
  (* HLUTNM = "lutpair71" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_13 
       (.I0(countDataReceived[12]),
        .I1(countDataToBeReceived_reg[12]),
        .I2(latency[12]),
        .I3(\latency[15]_i_5_n_0 ),
        .O(\latency[15]_i_13_n_0 ));
  (* HLUTNM = "lutpair70" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_14 
       (.I0(countDataReceived[11]),
        .I1(countDataToBeReceived_reg[11]),
        .I2(latency[11]),
        .I3(\latency[15]_i_6_n_0 ),
        .O(\latency[15]_i_14_n_0 ));
  (* HLUTNM = "lutpair69" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_15 
       (.I0(countDataReceived[10]),
        .I1(countDataToBeReceived_reg[10]),
        .I2(latency[10]),
        .I3(\latency[15]_i_7_n_0 ),
        .O(\latency[15]_i_15_n_0 ));
  (* HLUTNM = "lutpair68" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_16 
       (.I0(countDataReceived[9]),
        .I1(countDataToBeReceived_reg[9]),
        .I2(latency[9]),
        .I3(\latency[15]_i_8_n_0 ),
        .O(\latency[15]_i_16_n_0 ));
  (* HLUTNM = "lutpair67" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[15]_i_17 
       (.I0(countDataReceived[8]),
        .I1(countDataToBeReceived_reg[8]),
        .I2(latency[8]),
        .I3(\latency[15]_i_9_n_0 ),
        .O(\latency[15]_i_17_n_0 ));
  (* HLUTNM = "lutpair73" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_2 
       (.I0(countDataReceived[14]),
        .I1(countDataToBeReceived_reg[14]),
        .I2(latency[14]),
        .O(\latency[15]_i_2_n_0 ));
  (* HLUTNM = "lutpair72" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_3 
       (.I0(countDataReceived[13]),
        .I1(countDataToBeReceived_reg[13]),
        .I2(latency[13]),
        .O(\latency[15]_i_3_n_0 ));
  (* HLUTNM = "lutpair71" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_4 
       (.I0(countDataReceived[12]),
        .I1(countDataToBeReceived_reg[12]),
        .I2(latency[12]),
        .O(\latency[15]_i_4_n_0 ));
  (* HLUTNM = "lutpair70" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_5 
       (.I0(countDataReceived[11]),
        .I1(countDataToBeReceived_reg[11]),
        .I2(latency[11]),
        .O(\latency[15]_i_5_n_0 ));
  (* HLUTNM = "lutpair69" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_6 
       (.I0(countDataReceived[10]),
        .I1(countDataToBeReceived_reg[10]),
        .I2(latency[10]),
        .O(\latency[15]_i_6_n_0 ));
  (* HLUTNM = "lutpair68" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_7 
       (.I0(countDataReceived[9]),
        .I1(countDataToBeReceived_reg[9]),
        .I2(latency[9]),
        .O(\latency[15]_i_7_n_0 ));
  (* HLUTNM = "lutpair67" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_8 
       (.I0(countDataReceived[8]),
        .I1(countDataToBeReceived_reg[8]),
        .I2(latency[8]),
        .O(\latency[15]_i_8_n_0 ));
  (* HLUTNM = "lutpair66" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[15]_i_9 
       (.I0(countDataReceived[7]),
        .I1(countDataToBeReceived_reg[7]),
        .I2(latency[7]),
        .O(\latency[15]_i_9_n_0 ));
  (* HLUTNM = "lutpair82" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_10 
       (.I0(countDataReceived[23]),
        .I1(countDataToBeReceived_reg[23]),
        .I2(latency[23]),
        .I3(\latency[23]_i_2_n_0 ),
        .O(\latency[23]_i_10_n_0 ));
  (* HLUTNM = "lutpair81" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_11 
       (.I0(countDataReceived[22]),
        .I1(countDataToBeReceived_reg[22]),
        .I2(latency[22]),
        .I3(\latency[23]_i_3_n_0 ),
        .O(\latency[23]_i_11_n_0 ));
  (* HLUTNM = "lutpair80" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_12 
       (.I0(countDataReceived[21]),
        .I1(countDataToBeReceived_reg[21]),
        .I2(latency[21]),
        .I3(\latency[23]_i_4_n_0 ),
        .O(\latency[23]_i_12_n_0 ));
  (* HLUTNM = "lutpair79" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_13 
       (.I0(countDataReceived[20]),
        .I1(countDataToBeReceived_reg[20]),
        .I2(latency[20]),
        .I3(\latency[23]_i_5_n_0 ),
        .O(\latency[23]_i_13_n_0 ));
  (* HLUTNM = "lutpair78" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_14 
       (.I0(countDataReceived[19]),
        .I1(countDataToBeReceived_reg[19]),
        .I2(latency[19]),
        .I3(\latency[23]_i_6_n_0 ),
        .O(\latency[23]_i_14_n_0 ));
  (* HLUTNM = "lutpair77" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_15 
       (.I0(countDataReceived[18]),
        .I1(countDataToBeReceived_reg[18]),
        .I2(latency[18]),
        .I3(\latency[23]_i_7_n_0 ),
        .O(\latency[23]_i_15_n_0 ));
  (* HLUTNM = "lutpair76" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_16 
       (.I0(countDataReceived[17]),
        .I1(countDataToBeReceived_reg[17]),
        .I2(latency[17]),
        .I3(\latency[23]_i_8_n_0 ),
        .O(\latency[23]_i_16_n_0 ));
  (* HLUTNM = "lutpair75" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[23]_i_17 
       (.I0(countDataReceived[16]),
        .I1(countDataToBeReceived_reg[16]),
        .I2(latency[16]),
        .I3(\latency[23]_i_9_n_0 ),
        .O(\latency[23]_i_17_n_0 ));
  (* HLUTNM = "lutpair81" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_2 
       (.I0(countDataReceived[22]),
        .I1(countDataToBeReceived_reg[22]),
        .I2(latency[22]),
        .O(\latency[23]_i_2_n_0 ));
  (* HLUTNM = "lutpair80" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_3 
       (.I0(countDataReceived[21]),
        .I1(countDataToBeReceived_reg[21]),
        .I2(latency[21]),
        .O(\latency[23]_i_3_n_0 ));
  (* HLUTNM = "lutpair79" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_4 
       (.I0(countDataReceived[20]),
        .I1(countDataToBeReceived_reg[20]),
        .I2(latency[20]),
        .O(\latency[23]_i_4_n_0 ));
  (* HLUTNM = "lutpair78" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_5 
       (.I0(countDataReceived[19]),
        .I1(countDataToBeReceived_reg[19]),
        .I2(latency[19]),
        .O(\latency[23]_i_5_n_0 ));
  (* HLUTNM = "lutpair77" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_6 
       (.I0(countDataReceived[18]),
        .I1(countDataToBeReceived_reg[18]),
        .I2(latency[18]),
        .O(\latency[23]_i_6_n_0 ));
  (* HLUTNM = "lutpair76" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_7 
       (.I0(countDataReceived[17]),
        .I1(countDataToBeReceived_reg[17]),
        .I2(latency[17]),
        .O(\latency[23]_i_7_n_0 ));
  (* HLUTNM = "lutpair75" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_8 
       (.I0(countDataReceived[16]),
        .I1(countDataToBeReceived_reg[16]),
        .I2(latency[16]),
        .O(\latency[23]_i_8_n_0 ));
  (* HLUTNM = "lutpair74" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[23]_i_9 
       (.I0(countDataReceived[15]),
        .I1(countDataToBeReceived_reg[15]),
        .I2(latency[15]),
        .O(\latency[23]_i_9_n_0 ));
  (* HLUTNM = "lutpair90" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_10 
       (.I0(countDataReceived[31]),
        .I1(countDataToBeReceived_reg[31]),
        .I2(latency[31]),
        .I3(\latency[31]_i_2_n_0 ),
        .O(\latency[31]_i_10_n_0 ));
  (* HLUTNM = "lutpair89" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_11 
       (.I0(countDataReceived[30]),
        .I1(countDataToBeReceived_reg[30]),
        .I2(latency[30]),
        .I3(\latency[31]_i_3_n_0 ),
        .O(\latency[31]_i_11_n_0 ));
  (* HLUTNM = "lutpair88" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_12 
       (.I0(countDataReceived[29]),
        .I1(countDataToBeReceived_reg[29]),
        .I2(latency[29]),
        .I3(\latency[31]_i_4_n_0 ),
        .O(\latency[31]_i_12_n_0 ));
  (* HLUTNM = "lutpair87" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_13 
       (.I0(countDataReceived[28]),
        .I1(countDataToBeReceived_reg[28]),
        .I2(latency[28]),
        .I3(\latency[31]_i_5_n_0 ),
        .O(\latency[31]_i_13_n_0 ));
  (* HLUTNM = "lutpair86" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_14 
       (.I0(countDataReceived[27]),
        .I1(countDataToBeReceived_reg[27]),
        .I2(latency[27]),
        .I3(\latency[31]_i_6_n_0 ),
        .O(\latency[31]_i_14_n_0 ));
  (* HLUTNM = "lutpair85" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_15 
       (.I0(countDataReceived[26]),
        .I1(countDataToBeReceived_reg[26]),
        .I2(latency[26]),
        .I3(\latency[31]_i_7_n_0 ),
        .O(\latency[31]_i_15_n_0 ));
  (* HLUTNM = "lutpair84" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_16 
       (.I0(countDataReceived[25]),
        .I1(countDataToBeReceived_reg[25]),
        .I2(latency[25]),
        .I3(\latency[31]_i_8_n_0 ),
        .O(\latency[31]_i_16_n_0 ));
  (* HLUTNM = "lutpair83" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[31]_i_17 
       (.I0(countDataReceived[24]),
        .I1(countDataToBeReceived_reg[24]),
        .I2(latency[24]),
        .I3(\latency[31]_i_9_n_0 ),
        .O(\latency[31]_i_17_n_0 ));
  (* HLUTNM = "lutpair89" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_2 
       (.I0(countDataReceived[30]),
        .I1(countDataToBeReceived_reg[30]),
        .I2(latency[30]),
        .O(\latency[31]_i_2_n_0 ));
  (* HLUTNM = "lutpair88" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_3 
       (.I0(countDataReceived[29]),
        .I1(countDataToBeReceived_reg[29]),
        .I2(latency[29]),
        .O(\latency[31]_i_3_n_0 ));
  (* HLUTNM = "lutpair87" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_4 
       (.I0(countDataReceived[28]),
        .I1(countDataToBeReceived_reg[28]),
        .I2(latency[28]),
        .O(\latency[31]_i_4_n_0 ));
  (* HLUTNM = "lutpair86" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_5 
       (.I0(countDataReceived[27]),
        .I1(countDataToBeReceived_reg[27]),
        .I2(latency[27]),
        .O(\latency[31]_i_5_n_0 ));
  (* HLUTNM = "lutpair85" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_6 
       (.I0(countDataReceived[26]),
        .I1(countDataToBeReceived_reg[26]),
        .I2(latency[26]),
        .O(\latency[31]_i_6_n_0 ));
  (* HLUTNM = "lutpair84" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_7 
       (.I0(countDataReceived[25]),
        .I1(countDataToBeReceived_reg[25]),
        .I2(latency[25]),
        .O(\latency[31]_i_7_n_0 ));
  (* HLUTNM = "lutpair83" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_8 
       (.I0(countDataReceived[24]),
        .I1(countDataToBeReceived_reg[24]),
        .I2(latency[24]),
        .O(\latency[31]_i_8_n_0 ));
  (* HLUTNM = "lutpair82" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[31]_i_9 
       (.I0(countDataReceived[23]),
        .I1(countDataToBeReceived_reg[23]),
        .I2(latency[23]),
        .O(\latency[31]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_10 
       (.I0(\latency[39]_i_2_n_0 ),
        .I1(countDataToBeReceived_reg[39]),
        .I2(countDataReceived[39]),
        .I3(latency[39]),
        .O(\latency[39]_i_10_n_0 ));
  (* HLUTNM = "lutpair97" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_11 
       (.I0(countDataReceived[38]),
        .I1(countDataToBeReceived_reg[38]),
        .I2(latency[38]),
        .I3(\latency[39]_i_3_n_0 ),
        .O(\latency[39]_i_11_n_0 ));
  (* HLUTNM = "lutpair96" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_12 
       (.I0(countDataReceived[37]),
        .I1(countDataToBeReceived_reg[37]),
        .I2(latency[37]),
        .I3(\latency[39]_i_4_n_0 ),
        .O(\latency[39]_i_12_n_0 ));
  (* HLUTNM = "lutpair95" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_13 
       (.I0(countDataReceived[36]),
        .I1(countDataToBeReceived_reg[36]),
        .I2(latency[36]),
        .I3(\latency[39]_i_5_n_0 ),
        .O(\latency[39]_i_13_n_0 ));
  (* HLUTNM = "lutpair94" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_14 
       (.I0(countDataReceived[35]),
        .I1(countDataToBeReceived_reg[35]),
        .I2(latency[35]),
        .I3(\latency[39]_i_6_n_0 ),
        .O(\latency[39]_i_14_n_0 ));
  (* HLUTNM = "lutpair93" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_15 
       (.I0(countDataReceived[34]),
        .I1(countDataToBeReceived_reg[34]),
        .I2(latency[34]),
        .I3(\latency[39]_i_7_n_0 ),
        .O(\latency[39]_i_15_n_0 ));
  (* HLUTNM = "lutpair92" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_16 
       (.I0(countDataReceived[33]),
        .I1(countDataToBeReceived_reg[33]),
        .I2(latency[33]),
        .I3(\latency[39]_i_8_n_0 ),
        .O(\latency[39]_i_16_n_0 ));
  (* HLUTNM = "lutpair91" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[39]_i_17 
       (.I0(countDataReceived[32]),
        .I1(countDataToBeReceived_reg[32]),
        .I2(latency[32]),
        .I3(\latency[39]_i_9_n_0 ),
        .O(\latency[39]_i_17_n_0 ));
  (* HLUTNM = "lutpair97" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_2 
       (.I0(countDataReceived[38]),
        .I1(countDataToBeReceived_reg[38]),
        .I2(latency[38]),
        .O(\latency[39]_i_2_n_0 ));
  (* HLUTNM = "lutpair96" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_3 
       (.I0(countDataReceived[37]),
        .I1(countDataToBeReceived_reg[37]),
        .I2(latency[37]),
        .O(\latency[39]_i_3_n_0 ));
  (* HLUTNM = "lutpair95" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_4 
       (.I0(countDataReceived[36]),
        .I1(countDataToBeReceived_reg[36]),
        .I2(latency[36]),
        .O(\latency[39]_i_4_n_0 ));
  (* HLUTNM = "lutpair94" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_5 
       (.I0(countDataReceived[35]),
        .I1(countDataToBeReceived_reg[35]),
        .I2(latency[35]),
        .O(\latency[39]_i_5_n_0 ));
  (* HLUTNM = "lutpair93" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_6 
       (.I0(countDataReceived[34]),
        .I1(countDataToBeReceived_reg[34]),
        .I2(latency[34]),
        .O(\latency[39]_i_6_n_0 ));
  (* HLUTNM = "lutpair92" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_7 
       (.I0(countDataReceived[33]),
        .I1(countDataToBeReceived_reg[33]),
        .I2(latency[33]),
        .O(\latency[39]_i_7_n_0 ));
  (* HLUTNM = "lutpair91" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_8 
       (.I0(countDataReceived[32]),
        .I1(countDataToBeReceived_reg[32]),
        .I2(latency[32]),
        .O(\latency[39]_i_8_n_0 ));
  (* HLUTNM = "lutpair90" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[39]_i_9 
       (.I0(countDataReceived[31]),
        .I1(countDataToBeReceived_reg[31]),
        .I2(latency[31]),
        .O(\latency[39]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h8E71)) 
    \latency[47]_i_10 
       (.I0(latency[39]),
        .I1(countDataToBeReceived_reg[39]),
        .I2(countDataReceived[39]),
        .I3(latency[40]),
        .O(\latency[47]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[47]_i_2 
       (.I0(countDataReceived[39]),
        .I1(countDataToBeReceived_reg[39]),
        .I2(latency[39]),
        .O(\latency[47]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[47]_i_3 
       (.I0(latency[46]),
        .I1(latency[47]),
        .O(\latency[47]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[47]_i_4 
       (.I0(latency[45]),
        .I1(latency[46]),
        .O(\latency[47]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[47]_i_5 
       (.I0(latency[44]),
        .I1(latency[45]),
        .O(\latency[47]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[47]_i_6 
       (.I0(latency[43]),
        .I1(latency[44]),
        .O(\latency[47]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[47]_i_7 
       (.I0(latency[42]),
        .I1(latency[43]),
        .O(\latency[47]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[47]_i_8 
       (.I0(latency[41]),
        .I1(latency[42]),
        .O(\latency[47]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[47]_i_9 
       (.I0(latency[40]),
        .I1(latency[41]),
        .O(\latency[47]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_2 
       (.I0(latency[54]),
        .I1(latency[55]),
        .O(\latency[55]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_3 
       (.I0(latency[53]),
        .I1(latency[54]),
        .O(\latency[55]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_4 
       (.I0(latency[52]),
        .I1(latency[53]),
        .O(\latency[55]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_5 
       (.I0(latency[51]),
        .I1(latency[52]),
        .O(\latency[55]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_6 
       (.I0(latency[50]),
        .I1(latency[51]),
        .O(\latency[55]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_7 
       (.I0(latency[49]),
        .I1(latency[50]),
        .O(\latency[55]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_8 
       (.I0(latency[48]),
        .I1(latency[49]),
        .O(\latency[55]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[55]_i_9 
       (.I0(latency[47]),
        .I1(latency[48]),
        .O(\latency[55]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_2 
       (.I0(latency[62]),
        .I1(latency[63]),
        .O(\latency[63]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_3 
       (.I0(latency[61]),
        .I1(latency[62]),
        .O(\latency[63]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_4 
       (.I0(latency[60]),
        .I1(latency[61]),
        .O(\latency[63]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_5 
       (.I0(latency[59]),
        .I1(latency[60]),
        .O(\latency[63]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_6 
       (.I0(latency[58]),
        .I1(latency[59]),
        .O(\latency[63]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_7 
       (.I0(latency[57]),
        .I1(latency[58]),
        .O(\latency[63]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_8 
       (.I0(latency[56]),
        .I1(latency[57]),
        .O(\latency[63]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \latency[63]_i_9 
       (.I0(latency[55]),
        .I1(latency[56]),
        .O(\latency[63]_i_9_n_0 ));
  (* HLUTNM = "lutpair65" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[7]_i_10 
       (.I0(countDataReceived[6]),
        .I1(countDataToBeReceived_reg[6]),
        .I2(latency[6]),
        .I3(\latency[7]_i_3_n_0 ),
        .O(\latency[7]_i_10_n_0 ));
  (* HLUTNM = "lutpair64" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[7]_i_11 
       (.I0(countDataReceived[5]),
        .I1(countDataToBeReceived_reg[5]),
        .I2(latency[5]),
        .I3(\latency[7]_i_4_n_0 ),
        .O(\latency[7]_i_11_n_0 ));
  (* HLUTNM = "lutpair63" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[7]_i_12 
       (.I0(countDataReceived[4]),
        .I1(countDataToBeReceived_reg[4]),
        .I2(latency[4]),
        .I3(\latency[7]_i_5_n_0 ),
        .O(\latency[7]_i_12_n_0 ));
  (* HLUTNM = "lutpair62" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[7]_i_13 
       (.I0(countDataReceived[3]),
        .I1(countDataToBeReceived_reg[3]),
        .I2(latency[3]),
        .I3(\latency[7]_i_6_n_0 ),
        .O(\latency[7]_i_13_n_0 ));
  (* HLUTNM = "lutpair61" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[7]_i_14 
       (.I0(countDataReceived[2]),
        .I1(countDataToBeReceived_reg[2]),
        .I2(latency[2]),
        .I3(\latency[7]_i_7_n_0 ),
        .O(\latency[7]_i_14_n_0 ));
  (* HLUTNM = "lutpair60" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[7]_i_15 
       (.I0(countDataReceived[1]),
        .I1(countDataToBeReceived_reg[1]),
        .I2(latency[1]),
        .I3(\latency[7]_i_8_n_0 ),
        .O(\latency[7]_i_15_n_0 ));
  (* HLUTNM = "lutpair100" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \latency[7]_i_16 
       (.I0(countDataToBeReceived_reg[0]),
        .I1(countDataReceived[0]),
        .I2(latency[0]),
        .O(\latency[7]_i_16_n_0 ));
  (* HLUTNM = "lutpair65" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[7]_i_2 
       (.I0(countDataReceived[6]),
        .I1(countDataToBeReceived_reg[6]),
        .I2(latency[6]),
        .O(\latency[7]_i_2_n_0 ));
  (* HLUTNM = "lutpair64" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[7]_i_3 
       (.I0(countDataReceived[5]),
        .I1(countDataToBeReceived_reg[5]),
        .I2(latency[5]),
        .O(\latency[7]_i_3_n_0 ));
  (* HLUTNM = "lutpair63" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[7]_i_4 
       (.I0(countDataReceived[4]),
        .I1(countDataToBeReceived_reg[4]),
        .I2(latency[4]),
        .O(\latency[7]_i_4_n_0 ));
  (* HLUTNM = "lutpair62" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[7]_i_5 
       (.I0(countDataReceived[3]),
        .I1(countDataToBeReceived_reg[3]),
        .I2(latency[3]),
        .O(\latency[7]_i_5_n_0 ));
  (* HLUTNM = "lutpair61" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[7]_i_6 
       (.I0(countDataReceived[2]),
        .I1(countDataToBeReceived_reg[2]),
        .I2(latency[2]),
        .O(\latency[7]_i_6_n_0 ));
  (* HLUTNM = "lutpair60" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    \latency[7]_i_7 
       (.I0(countDataReceived[1]),
        .I1(countDataToBeReceived_reg[1]),
        .I2(latency[1]),
        .O(\latency[7]_i_7_n_0 ));
  (* HLUTNM = "lutpair100" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \latency[7]_i_8 
       (.I0(countDataToBeReceived_reg[0]),
        .I1(countDataReceived[0]),
        .O(\latency[7]_i_8_n_0 ));
  (* HLUTNM = "lutpair66" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    \latency[7]_i_9 
       (.I0(countDataReceived[7]),
        .I1(countDataToBeReceived_reg[7]),
        .I2(latency[7]),
        .I3(\latency[7]_i_2_n_0 ),
        .O(\latency[7]_i_9_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_15 ),
        .Q(latency[0]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_13 ),
        .Q(latency[10]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_12 ),
        .Q(latency[11]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_11 ),
        .Q(latency[12]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_10 ),
        .Q(latency[13]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_9 ),
        .Q(latency[14]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_8 ),
        .Q(latency[15]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[15]_i_1 
       (.CI(\latency_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\latency_reg[15]_i_1_n_0 ,\latency_reg[15]_i_1_n_1 ,\latency_reg[15]_i_1_n_2 ,\latency_reg[15]_i_1_n_3 ,\NLW_latency_reg[15]_i_1_CO_UNCONNECTED [3],\latency_reg[15]_i_1_n_5 ,\latency_reg[15]_i_1_n_6 ,\latency_reg[15]_i_1_n_7 }),
        .DI({\latency[15]_i_2_n_0 ,\latency[15]_i_3_n_0 ,\latency[15]_i_4_n_0 ,\latency[15]_i_5_n_0 ,\latency[15]_i_6_n_0 ,\latency[15]_i_7_n_0 ,\latency[15]_i_8_n_0 ,\latency[15]_i_9_n_0 }),
        .O({\latency_reg[15]_i_1_n_8 ,\latency_reg[15]_i_1_n_9 ,\latency_reg[15]_i_1_n_10 ,\latency_reg[15]_i_1_n_11 ,\latency_reg[15]_i_1_n_12 ,\latency_reg[15]_i_1_n_13 ,\latency_reg[15]_i_1_n_14 ,\latency_reg[15]_i_1_n_15 }),
        .S({\latency[15]_i_10_n_0 ,\latency[15]_i_11_n_0 ,\latency[15]_i_12_n_0 ,\latency[15]_i_13_n_0 ,\latency[15]_i_14_n_0 ,\latency[15]_i_15_n_0 ,\latency[15]_i_16_n_0 ,\latency[15]_i_17_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_15 ),
        .Q(latency[16]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_14 ),
        .Q(latency[17]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_13 ),
        .Q(latency[18]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_12 ),
        .Q(latency[19]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_14 ),
        .Q(latency[1]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_11 ),
        .Q(latency[20]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_10 ),
        .Q(latency[21]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_9 ),
        .Q(latency[22]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[23]_i_1_n_8 ),
        .Q(latency[23]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[23]_i_1 
       (.CI(\latency_reg[15]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\latency_reg[23]_i_1_n_0 ,\latency_reg[23]_i_1_n_1 ,\latency_reg[23]_i_1_n_2 ,\latency_reg[23]_i_1_n_3 ,\NLW_latency_reg[23]_i_1_CO_UNCONNECTED [3],\latency_reg[23]_i_1_n_5 ,\latency_reg[23]_i_1_n_6 ,\latency_reg[23]_i_1_n_7 }),
        .DI({\latency[23]_i_2_n_0 ,\latency[23]_i_3_n_0 ,\latency[23]_i_4_n_0 ,\latency[23]_i_5_n_0 ,\latency[23]_i_6_n_0 ,\latency[23]_i_7_n_0 ,\latency[23]_i_8_n_0 ,\latency[23]_i_9_n_0 }),
        .O({\latency_reg[23]_i_1_n_8 ,\latency_reg[23]_i_1_n_9 ,\latency_reg[23]_i_1_n_10 ,\latency_reg[23]_i_1_n_11 ,\latency_reg[23]_i_1_n_12 ,\latency_reg[23]_i_1_n_13 ,\latency_reg[23]_i_1_n_14 ,\latency_reg[23]_i_1_n_15 }),
        .S({\latency[23]_i_10_n_0 ,\latency[23]_i_11_n_0 ,\latency[23]_i_12_n_0 ,\latency[23]_i_13_n_0 ,\latency[23]_i_14_n_0 ,\latency[23]_i_15_n_0 ,\latency[23]_i_16_n_0 ,\latency[23]_i_17_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_15 ),
        .Q(latency[24]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_14 ),
        .Q(latency[25]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_13 ),
        .Q(latency[26]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_12 ),
        .Q(latency[27]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_11 ),
        .Q(latency[28]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_10 ),
        .Q(latency[29]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_13 ),
        .Q(latency[2]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_9 ),
        .Q(latency[30]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[31]_i_1_n_8 ),
        .Q(latency[31]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[31]_i_1 
       (.CI(\latency_reg[23]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\latency_reg[31]_i_1_n_0 ,\latency_reg[31]_i_1_n_1 ,\latency_reg[31]_i_1_n_2 ,\latency_reg[31]_i_1_n_3 ,\NLW_latency_reg[31]_i_1_CO_UNCONNECTED [3],\latency_reg[31]_i_1_n_5 ,\latency_reg[31]_i_1_n_6 ,\latency_reg[31]_i_1_n_7 }),
        .DI({\latency[31]_i_2_n_0 ,\latency[31]_i_3_n_0 ,\latency[31]_i_4_n_0 ,\latency[31]_i_5_n_0 ,\latency[31]_i_6_n_0 ,\latency[31]_i_7_n_0 ,\latency[31]_i_8_n_0 ,\latency[31]_i_9_n_0 }),
        .O({\latency_reg[31]_i_1_n_8 ,\latency_reg[31]_i_1_n_9 ,\latency_reg[31]_i_1_n_10 ,\latency_reg[31]_i_1_n_11 ,\latency_reg[31]_i_1_n_12 ,\latency_reg[31]_i_1_n_13 ,\latency_reg[31]_i_1_n_14 ,\latency_reg[31]_i_1_n_15 }),
        .S({\latency[31]_i_10_n_0 ,\latency[31]_i_11_n_0 ,\latency[31]_i_12_n_0 ,\latency[31]_i_13_n_0 ,\latency[31]_i_14_n_0 ,\latency[31]_i_15_n_0 ,\latency[31]_i_16_n_0 ,\latency[31]_i_17_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[32] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_15 ),
        .Q(latency[32]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[33] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_14 ),
        .Q(latency[33]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[34] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_13 ),
        .Q(latency[34]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[35] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_12 ),
        .Q(latency[35]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[36] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_11 ),
        .Q(latency[36]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[37] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_10 ),
        .Q(latency[37]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[38] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_9 ),
        .Q(latency[38]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[39] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[39]_i_1_n_8 ),
        .Q(latency[39]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[39]_i_1 
       (.CI(\latency_reg[31]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\latency_reg[39]_i_1_n_0 ,\latency_reg[39]_i_1_n_1 ,\latency_reg[39]_i_1_n_2 ,\latency_reg[39]_i_1_n_3 ,\NLW_latency_reg[39]_i_1_CO_UNCONNECTED [3],\latency_reg[39]_i_1_n_5 ,\latency_reg[39]_i_1_n_6 ,\latency_reg[39]_i_1_n_7 }),
        .DI({\latency[39]_i_2_n_0 ,\latency[39]_i_3_n_0 ,\latency[39]_i_4_n_0 ,\latency[39]_i_5_n_0 ,\latency[39]_i_6_n_0 ,\latency[39]_i_7_n_0 ,\latency[39]_i_8_n_0 ,\latency[39]_i_9_n_0 }),
        .O({\latency_reg[39]_i_1_n_8 ,\latency_reg[39]_i_1_n_9 ,\latency_reg[39]_i_1_n_10 ,\latency_reg[39]_i_1_n_11 ,\latency_reg[39]_i_1_n_12 ,\latency_reg[39]_i_1_n_13 ,\latency_reg[39]_i_1_n_14 ,\latency_reg[39]_i_1_n_15 }),
        .S({\latency[39]_i_10_n_0 ,\latency[39]_i_11_n_0 ,\latency[39]_i_12_n_0 ,\latency[39]_i_13_n_0 ,\latency[39]_i_14_n_0 ,\latency[39]_i_15_n_0 ,\latency[39]_i_16_n_0 ,\latency[39]_i_17_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_12 ),
        .Q(latency[3]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[40] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_15 ),
        .Q(latency[40]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[41] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_14 ),
        .Q(latency[41]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[42] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_13 ),
        .Q(latency[42]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[43] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_12 ),
        .Q(latency[43]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[44] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_11 ),
        .Q(latency[44]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[45] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_10 ),
        .Q(latency[45]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[46] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_9 ),
        .Q(latency[46]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[47] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[47]_i_1_n_8 ),
        .Q(latency[47]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[47]_i_1 
       (.CI(\latency_reg[39]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\latency_reg[47]_i_1_n_0 ,\latency_reg[47]_i_1_n_1 ,\latency_reg[47]_i_1_n_2 ,\latency_reg[47]_i_1_n_3 ,\NLW_latency_reg[47]_i_1_CO_UNCONNECTED [3],\latency_reg[47]_i_1_n_5 ,\latency_reg[47]_i_1_n_6 ,\latency_reg[47]_i_1_n_7 }),
        .DI({latency[46:40],\latency[47]_i_2_n_0 }),
        .O({\latency_reg[47]_i_1_n_8 ,\latency_reg[47]_i_1_n_9 ,\latency_reg[47]_i_1_n_10 ,\latency_reg[47]_i_1_n_11 ,\latency_reg[47]_i_1_n_12 ,\latency_reg[47]_i_1_n_13 ,\latency_reg[47]_i_1_n_14 ,\latency_reg[47]_i_1_n_15 }),
        .S({\latency[47]_i_3_n_0 ,\latency[47]_i_4_n_0 ,\latency[47]_i_5_n_0 ,\latency[47]_i_6_n_0 ,\latency[47]_i_7_n_0 ,\latency[47]_i_8_n_0 ,\latency[47]_i_9_n_0 ,\latency[47]_i_10_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[48] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_15 ),
        .Q(latency[48]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[49] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_14 ),
        .Q(latency[49]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_11 ),
        .Q(latency[4]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[50] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_13 ),
        .Q(latency[50]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[51] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_12 ),
        .Q(latency[51]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[52] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_11 ),
        .Q(latency[52]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[53] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_10 ),
        .Q(latency[53]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[54] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_9 ),
        .Q(latency[54]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[55] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[55]_i_1_n_8 ),
        .Q(latency[55]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[55]_i_1 
       (.CI(\latency_reg[47]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\latency_reg[55]_i_1_n_0 ,\latency_reg[55]_i_1_n_1 ,\latency_reg[55]_i_1_n_2 ,\latency_reg[55]_i_1_n_3 ,\NLW_latency_reg[55]_i_1_CO_UNCONNECTED [3],\latency_reg[55]_i_1_n_5 ,\latency_reg[55]_i_1_n_6 ,\latency_reg[55]_i_1_n_7 }),
        .DI(latency[54:47]),
        .O({\latency_reg[55]_i_1_n_8 ,\latency_reg[55]_i_1_n_9 ,\latency_reg[55]_i_1_n_10 ,\latency_reg[55]_i_1_n_11 ,\latency_reg[55]_i_1_n_12 ,\latency_reg[55]_i_1_n_13 ,\latency_reg[55]_i_1_n_14 ,\latency_reg[55]_i_1_n_15 }),
        .S({\latency[55]_i_2_n_0 ,\latency[55]_i_3_n_0 ,\latency[55]_i_4_n_0 ,\latency[55]_i_5_n_0 ,\latency[55]_i_6_n_0 ,\latency[55]_i_7_n_0 ,\latency[55]_i_8_n_0 ,\latency[55]_i_9_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[56] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_15 ),
        .Q(latency[56]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[57] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_14 ),
        .Q(latency[57]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[58] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_13 ),
        .Q(latency[58]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[59] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_12 ),
        .Q(latency[59]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_10 ),
        .Q(latency[5]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[60] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_11 ),
        .Q(latency[60]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[61] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_10 ),
        .Q(latency[61]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[62] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_9 ),
        .Q(latency[62]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[63] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[63]_i_1_n_8 ),
        .Q(latency[63]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[63]_i_1 
       (.CI(\latency_reg[55]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_latency_reg[63]_i_1_CO_UNCONNECTED [7],\latency_reg[63]_i_1_n_1 ,\latency_reg[63]_i_1_n_2 ,\latency_reg[63]_i_1_n_3 ,\NLW_latency_reg[63]_i_1_CO_UNCONNECTED [3],\latency_reg[63]_i_1_n_5 ,\latency_reg[63]_i_1_n_6 ,\latency_reg[63]_i_1_n_7 }),
        .DI({1'b0,latency[61:55]}),
        .O({\latency_reg[63]_i_1_n_8 ,\latency_reg[63]_i_1_n_9 ,\latency_reg[63]_i_1_n_10 ,\latency_reg[63]_i_1_n_11 ,\latency_reg[63]_i_1_n_12 ,\latency_reg[63]_i_1_n_13 ,\latency_reg[63]_i_1_n_14 ,\latency_reg[63]_i_1_n_15 }),
        .S({\latency[63]_i_2_n_0 ,\latency[63]_i_3_n_0 ,\latency[63]_i_4_n_0 ,\latency[63]_i_5_n_0 ,\latency[63]_i_6_n_0 ,\latency[63]_i_7_n_0 ,\latency[63]_i_8_n_0 ,\latency[63]_i_9_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_9 ),
        .Q(latency[6]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[7]_i_1_n_8 ),
        .Q(latency[7]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \latency_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\latency_reg[7]_i_1_n_0 ,\latency_reg[7]_i_1_n_1 ,\latency_reg[7]_i_1_n_2 ,\latency_reg[7]_i_1_n_3 ,\NLW_latency_reg[7]_i_1_CO_UNCONNECTED [3],\latency_reg[7]_i_1_n_5 ,\latency_reg[7]_i_1_n_6 ,\latency_reg[7]_i_1_n_7 }),
        .DI({\latency[7]_i_2_n_0 ,\latency[7]_i_3_n_0 ,\latency[7]_i_4_n_0 ,\latency[7]_i_5_n_0 ,\latency[7]_i_6_n_0 ,\latency[7]_i_7_n_0 ,\latency[7]_i_8_n_0 ,latency[0]}),
        .O({\latency_reg[7]_i_1_n_8 ,\latency_reg[7]_i_1_n_9 ,\latency_reg[7]_i_1_n_10 ,\latency_reg[7]_i_1_n_11 ,\latency_reg[7]_i_1_n_12 ,\latency_reg[7]_i_1_n_13 ,\latency_reg[7]_i_1_n_14 ,\latency_reg[7]_i_1_n_15 }),
        .S({\latency[7]_i_9_n_0 ,\latency[7]_i_10_n_0 ,\latency[7]_i_11_n_0 ,\latency[7]_i_12_n_0 ,\latency[7]_i_13_n_0 ,\latency[7]_i_14_n_0 ,\latency[7]_i_15_n_0 ,\latency[7]_i_16_n_0 }));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_15 ),
        .Q(latency[8]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \latency_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\latency_reg[15]_i_1_n_14 ),
        .Q(latency[9]),
        .R(\runtime[63]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_10 
       (.I0(current_cycles_with_no_data_read[54]),
        .I1(current_cycles_with_no_data_read[55]),
        .O(\max_cycles_with_no_data_read[31]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_11 
       (.I0(current_cycles_with_no_data_read[52]),
        .I1(current_cycles_with_no_data_read[53]),
        .O(\max_cycles_with_no_data_read[31]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_12 
       (.I0(current_cycles_with_no_data_read[50]),
        .I1(current_cycles_with_no_data_read[51]),
        .O(\max_cycles_with_no_data_read[31]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_13 
       (.I0(current_cycles_with_no_data_read[48]),
        .I1(current_cycles_with_no_data_read[49]),
        .O(\max_cycles_with_no_data_read[31]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_14 
       (.I0(current_cycles_with_no_data_read[62]),
        .I1(current_cycles_with_no_data_read[63]),
        .O(\max_cycles_with_no_data_read[31]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_15 
       (.I0(current_cycles_with_no_data_read[60]),
        .I1(current_cycles_with_no_data_read[61]),
        .O(\max_cycles_with_no_data_read[31]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_16 
       (.I0(current_cycles_with_no_data_read[58]),
        .I1(current_cycles_with_no_data_read[59]),
        .O(\max_cycles_with_no_data_read[31]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_17 
       (.I0(current_cycles_with_no_data_read[56]),
        .I1(current_cycles_with_no_data_read[57]),
        .O(\max_cycles_with_no_data_read[31]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_18 
       (.I0(current_cycles_with_no_data_read[54]),
        .I1(current_cycles_with_no_data_read[55]),
        .O(\max_cycles_with_no_data_read[31]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_19 
       (.I0(current_cycles_with_no_data_read[52]),
        .I1(current_cycles_with_no_data_read[53]),
        .O(\max_cycles_with_no_data_read[31]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_20 
       (.I0(current_cycles_with_no_data_read[50]),
        .I1(current_cycles_with_no_data_read[51]),
        .O(\max_cycles_with_no_data_read[31]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_21 
       (.I0(current_cycles_with_no_data_read[48]),
        .I1(current_cycles_with_no_data_read[49]),
        .O(\max_cycles_with_no_data_read[31]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_23 
       (.I0(current_cycles_with_no_data_read[46]),
        .I1(current_cycles_with_no_data_read[47]),
        .O(\max_cycles_with_no_data_read[31]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_24 
       (.I0(current_cycles_with_no_data_read[44]),
        .I1(current_cycles_with_no_data_read[45]),
        .O(\max_cycles_with_no_data_read[31]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_25 
       (.I0(current_cycles_with_no_data_read[42]),
        .I1(current_cycles_with_no_data_read[43]),
        .O(\max_cycles_with_no_data_read[31]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_26 
       (.I0(current_cycles_with_no_data_read[40]),
        .I1(current_cycles_with_no_data_read[41]),
        .O(\max_cycles_with_no_data_read[31]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_27 
       (.I0(current_cycles_with_no_data_read[38]),
        .I1(current_cycles_with_no_data_read[39]),
        .O(\max_cycles_with_no_data_read[31]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_28 
       (.I0(current_cycles_with_no_data_read[36]),
        .I1(current_cycles_with_no_data_read[37]),
        .O(\max_cycles_with_no_data_read[31]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_29 
       (.I0(current_cycles_with_no_data_read[34]),
        .I1(current_cycles_with_no_data_read[35]),
        .O(\max_cycles_with_no_data_read[31]_i_29_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_30 
       (.I0(current_cycles_with_no_data_read[32]),
        .I1(current_cycles_with_no_data_read[33]),
        .O(\max_cycles_with_no_data_read[31]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_31 
       (.I0(current_cycles_with_no_data_read[46]),
        .I1(current_cycles_with_no_data_read[47]),
        .O(\max_cycles_with_no_data_read[31]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_32 
       (.I0(current_cycles_with_no_data_read[44]),
        .I1(current_cycles_with_no_data_read[45]),
        .O(\max_cycles_with_no_data_read[31]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_33 
       (.I0(current_cycles_with_no_data_read[42]),
        .I1(current_cycles_with_no_data_read[43]),
        .O(\max_cycles_with_no_data_read[31]_i_33_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_34 
       (.I0(current_cycles_with_no_data_read[40]),
        .I1(current_cycles_with_no_data_read[41]),
        .O(\max_cycles_with_no_data_read[31]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_35 
       (.I0(current_cycles_with_no_data_read[38]),
        .I1(current_cycles_with_no_data_read[39]),
        .O(\max_cycles_with_no_data_read[31]_i_35_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_36 
       (.I0(current_cycles_with_no_data_read[36]),
        .I1(current_cycles_with_no_data_read[37]),
        .O(\max_cycles_with_no_data_read[31]_i_36_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_37 
       (.I0(current_cycles_with_no_data_read[34]),
        .I1(current_cycles_with_no_data_read[35]),
        .O(\max_cycles_with_no_data_read[31]_i_37_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \max_cycles_with_no_data_read[31]_i_38 
       (.I0(current_cycles_with_no_data_read[32]),
        .I1(current_cycles_with_no_data_read[33]),
        .O(\max_cycles_with_no_data_read[31]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_40 
       (.I0(current_cycles_with_no_data_read[30]),
        .I1(max_cycles_with_no_data_read[30]),
        .I2(max_cycles_with_no_data_read[31]),
        .I3(current_cycles_with_no_data_read[31]),
        .O(\max_cycles_with_no_data_read[31]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_41 
       (.I0(current_cycles_with_no_data_read[28]),
        .I1(max_cycles_with_no_data_read[28]),
        .I2(max_cycles_with_no_data_read[29]),
        .I3(current_cycles_with_no_data_read[29]),
        .O(\max_cycles_with_no_data_read[31]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_42 
       (.I0(current_cycles_with_no_data_read[26]),
        .I1(max_cycles_with_no_data_read[26]),
        .I2(max_cycles_with_no_data_read[27]),
        .I3(current_cycles_with_no_data_read[27]),
        .O(\max_cycles_with_no_data_read[31]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_43 
       (.I0(current_cycles_with_no_data_read[24]),
        .I1(max_cycles_with_no_data_read[24]),
        .I2(max_cycles_with_no_data_read[25]),
        .I3(current_cycles_with_no_data_read[25]),
        .O(\max_cycles_with_no_data_read[31]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_44 
       (.I0(current_cycles_with_no_data_read[22]),
        .I1(max_cycles_with_no_data_read[22]),
        .I2(max_cycles_with_no_data_read[23]),
        .I3(current_cycles_with_no_data_read[23]),
        .O(\max_cycles_with_no_data_read[31]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_45 
       (.I0(current_cycles_with_no_data_read[20]),
        .I1(max_cycles_with_no_data_read[20]),
        .I2(max_cycles_with_no_data_read[21]),
        .I3(current_cycles_with_no_data_read[21]),
        .O(\max_cycles_with_no_data_read[31]_i_45_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_46 
       (.I0(current_cycles_with_no_data_read[18]),
        .I1(max_cycles_with_no_data_read[18]),
        .I2(max_cycles_with_no_data_read[19]),
        .I3(current_cycles_with_no_data_read[19]),
        .O(\max_cycles_with_no_data_read[31]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_47 
       (.I0(current_cycles_with_no_data_read[16]),
        .I1(max_cycles_with_no_data_read[16]),
        .I2(max_cycles_with_no_data_read[17]),
        .I3(current_cycles_with_no_data_read[17]),
        .O(\max_cycles_with_no_data_read[31]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_48 
       (.I0(current_cycles_with_no_data_read[30]),
        .I1(max_cycles_with_no_data_read[30]),
        .I2(current_cycles_with_no_data_read[31]),
        .I3(max_cycles_with_no_data_read[31]),
        .O(\max_cycles_with_no_data_read[31]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_49 
       (.I0(current_cycles_with_no_data_read[28]),
        .I1(max_cycles_with_no_data_read[28]),
        .I2(current_cycles_with_no_data_read[29]),
        .I3(max_cycles_with_no_data_read[29]),
        .O(\max_cycles_with_no_data_read[31]_i_49_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_50 
       (.I0(current_cycles_with_no_data_read[26]),
        .I1(max_cycles_with_no_data_read[26]),
        .I2(current_cycles_with_no_data_read[27]),
        .I3(max_cycles_with_no_data_read[27]),
        .O(\max_cycles_with_no_data_read[31]_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_51 
       (.I0(current_cycles_with_no_data_read[24]),
        .I1(max_cycles_with_no_data_read[24]),
        .I2(current_cycles_with_no_data_read[25]),
        .I3(max_cycles_with_no_data_read[25]),
        .O(\max_cycles_with_no_data_read[31]_i_51_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_52 
       (.I0(current_cycles_with_no_data_read[22]),
        .I1(max_cycles_with_no_data_read[22]),
        .I2(current_cycles_with_no_data_read[23]),
        .I3(max_cycles_with_no_data_read[23]),
        .O(\max_cycles_with_no_data_read[31]_i_52_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_53 
       (.I0(current_cycles_with_no_data_read[20]),
        .I1(max_cycles_with_no_data_read[20]),
        .I2(current_cycles_with_no_data_read[21]),
        .I3(max_cycles_with_no_data_read[21]),
        .O(\max_cycles_with_no_data_read[31]_i_53_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_54 
       (.I0(current_cycles_with_no_data_read[18]),
        .I1(max_cycles_with_no_data_read[18]),
        .I2(current_cycles_with_no_data_read[19]),
        .I3(max_cycles_with_no_data_read[19]),
        .O(\max_cycles_with_no_data_read[31]_i_54_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_55 
       (.I0(current_cycles_with_no_data_read[16]),
        .I1(max_cycles_with_no_data_read[16]),
        .I2(current_cycles_with_no_data_read[17]),
        .I3(max_cycles_with_no_data_read[17]),
        .O(\max_cycles_with_no_data_read[31]_i_55_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_56 
       (.I0(current_cycles_with_no_data_read[14]),
        .I1(max_cycles_with_no_data_read[14]),
        .I2(max_cycles_with_no_data_read[15]),
        .I3(current_cycles_with_no_data_read[15]),
        .O(\max_cycles_with_no_data_read[31]_i_56_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_57 
       (.I0(current_cycles_with_no_data_read[12]),
        .I1(max_cycles_with_no_data_read[12]),
        .I2(max_cycles_with_no_data_read[13]),
        .I3(current_cycles_with_no_data_read[13]),
        .O(\max_cycles_with_no_data_read[31]_i_57_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_58 
       (.I0(current_cycles_with_no_data_read[10]),
        .I1(max_cycles_with_no_data_read[10]),
        .I2(max_cycles_with_no_data_read[11]),
        .I3(current_cycles_with_no_data_read[11]),
        .O(\max_cycles_with_no_data_read[31]_i_58_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_59 
       (.I0(current_cycles_with_no_data_read[8]),
        .I1(max_cycles_with_no_data_read[8]),
        .I2(max_cycles_with_no_data_read[9]),
        .I3(current_cycles_with_no_data_read[9]),
        .O(\max_cycles_with_no_data_read[31]_i_59_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_6 
       (.I0(current_cycles_with_no_data_read[62]),
        .I1(current_cycles_with_no_data_read[63]),
        .O(\max_cycles_with_no_data_read[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_60 
       (.I0(current_cycles_with_no_data_read[6]),
        .I1(max_cycles_with_no_data_read[6]),
        .I2(max_cycles_with_no_data_read[7]),
        .I3(current_cycles_with_no_data_read[7]),
        .O(\max_cycles_with_no_data_read[31]_i_60_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_61 
       (.I0(current_cycles_with_no_data_read[4]),
        .I1(max_cycles_with_no_data_read[4]),
        .I2(max_cycles_with_no_data_read[5]),
        .I3(current_cycles_with_no_data_read[5]),
        .O(\max_cycles_with_no_data_read[31]_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_62 
       (.I0(current_cycles_with_no_data_read[2]),
        .I1(max_cycles_with_no_data_read[2]),
        .I2(max_cycles_with_no_data_read[3]),
        .I3(current_cycles_with_no_data_read[3]),
        .O(\max_cycles_with_no_data_read[31]_i_62_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \max_cycles_with_no_data_read[31]_i_63 
       (.I0(current_cycles_with_no_data_read[0]),
        .I1(max_cycles_with_no_data_read[0]),
        .I2(max_cycles_with_no_data_read[1]),
        .I3(current_cycles_with_no_data_read[1]),
        .O(\max_cycles_with_no_data_read[31]_i_63_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_64 
       (.I0(current_cycles_with_no_data_read[14]),
        .I1(max_cycles_with_no_data_read[14]),
        .I2(current_cycles_with_no_data_read[15]),
        .I3(max_cycles_with_no_data_read[15]),
        .O(\max_cycles_with_no_data_read[31]_i_64_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_65 
       (.I0(current_cycles_with_no_data_read[12]),
        .I1(max_cycles_with_no_data_read[12]),
        .I2(current_cycles_with_no_data_read[13]),
        .I3(max_cycles_with_no_data_read[13]),
        .O(\max_cycles_with_no_data_read[31]_i_65_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_66 
       (.I0(current_cycles_with_no_data_read[10]),
        .I1(max_cycles_with_no_data_read[10]),
        .I2(current_cycles_with_no_data_read[11]),
        .I3(max_cycles_with_no_data_read[11]),
        .O(\max_cycles_with_no_data_read[31]_i_66_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_67 
       (.I0(current_cycles_with_no_data_read[8]),
        .I1(max_cycles_with_no_data_read[8]),
        .I2(current_cycles_with_no_data_read[9]),
        .I3(max_cycles_with_no_data_read[9]),
        .O(\max_cycles_with_no_data_read[31]_i_67_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_68 
       (.I0(current_cycles_with_no_data_read[6]),
        .I1(max_cycles_with_no_data_read[6]),
        .I2(current_cycles_with_no_data_read[7]),
        .I3(max_cycles_with_no_data_read[7]),
        .O(\max_cycles_with_no_data_read[31]_i_68_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_69 
       (.I0(current_cycles_with_no_data_read[4]),
        .I1(max_cycles_with_no_data_read[4]),
        .I2(current_cycles_with_no_data_read[5]),
        .I3(max_cycles_with_no_data_read[5]),
        .O(\max_cycles_with_no_data_read[31]_i_69_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_7 
       (.I0(current_cycles_with_no_data_read[60]),
        .I1(current_cycles_with_no_data_read[61]),
        .O(\max_cycles_with_no_data_read[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_70 
       (.I0(current_cycles_with_no_data_read[2]),
        .I1(max_cycles_with_no_data_read[2]),
        .I2(current_cycles_with_no_data_read[3]),
        .I3(max_cycles_with_no_data_read[3]),
        .O(\max_cycles_with_no_data_read[31]_i_70_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \max_cycles_with_no_data_read[31]_i_71 
       (.I0(current_cycles_with_no_data_read[0]),
        .I1(max_cycles_with_no_data_read[0]),
        .I2(current_cycles_with_no_data_read[1]),
        .I3(max_cycles_with_no_data_read[1]),
        .O(\max_cycles_with_no_data_read[31]_i_71_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_8 
       (.I0(current_cycles_with_no_data_read[58]),
        .I1(current_cycles_with_no_data_read[59]),
        .O(\max_cycles_with_no_data_read[31]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \max_cycles_with_no_data_read[31]_i_9 
       (.I0(current_cycles_with_no_data_read[56]),
        .I1(current_cycles_with_no_data_read[57]),
        .O(\max_cycles_with_no_data_read[31]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[0] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_618),
        .Q(max_cycles_with_no_data_read[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[10] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_608),
        .Q(max_cycles_with_no_data_read[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[11] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_607),
        .Q(max_cycles_with_no_data_read[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[12] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_606),
        .Q(max_cycles_with_no_data_read[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[13] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_605),
        .Q(max_cycles_with_no_data_read[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[14] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_604),
        .Q(max_cycles_with_no_data_read[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[15] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_603),
        .Q(max_cycles_with_no_data_read[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[16] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_602),
        .Q(max_cycles_with_no_data_read[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[17] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_601),
        .Q(max_cycles_with_no_data_read[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[18] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_600),
        .Q(max_cycles_with_no_data_read[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[19] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_599),
        .Q(max_cycles_with_no_data_read[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[1] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_617),
        .Q(max_cycles_with_no_data_read[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[20] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_598),
        .Q(max_cycles_with_no_data_read[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[21] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_597),
        .Q(max_cycles_with_no_data_read[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[22] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_596),
        .Q(max_cycles_with_no_data_read[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[23] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_595),
        .Q(max_cycles_with_no_data_read[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[24] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_594),
        .Q(max_cycles_with_no_data_read[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[25] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_593),
        .Q(max_cycles_with_no_data_read[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[26] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_592),
        .Q(max_cycles_with_no_data_read[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[27] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_591),
        .Q(max_cycles_with_no_data_read[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[28] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_590),
        .Q(max_cycles_with_no_data_read[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[29] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_589),
        .Q(max_cycles_with_no_data_read[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[2] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_616),
        .Q(max_cycles_with_no_data_read[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[30] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_588),
        .Q(max_cycles_with_no_data_read[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[31] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_587),
        .Q(max_cycles_with_no_data_read[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \max_cycles_with_no_data_read_reg[31]_i_22 
       (.CI(\max_cycles_with_no_data_read_reg[31]_i_39_n_0 ),
        .CI_TOP(1'b0),
        .CO({\max_cycles_with_no_data_read_reg[31]_i_22_n_0 ,\max_cycles_with_no_data_read_reg[31]_i_22_n_1 ,\max_cycles_with_no_data_read_reg[31]_i_22_n_2 ,\max_cycles_with_no_data_read_reg[31]_i_22_n_3 ,\NLW_max_cycles_with_no_data_read_reg[31]_i_22_CO_UNCONNECTED [3],\max_cycles_with_no_data_read_reg[31]_i_22_n_5 ,\max_cycles_with_no_data_read_reg[31]_i_22_n_6 ,\max_cycles_with_no_data_read_reg[31]_i_22_n_7 }),
        .DI({\max_cycles_with_no_data_read[31]_i_40_n_0 ,\max_cycles_with_no_data_read[31]_i_41_n_0 ,\max_cycles_with_no_data_read[31]_i_42_n_0 ,\max_cycles_with_no_data_read[31]_i_43_n_0 ,\max_cycles_with_no_data_read[31]_i_44_n_0 ,\max_cycles_with_no_data_read[31]_i_45_n_0 ,\max_cycles_with_no_data_read[31]_i_46_n_0 ,\max_cycles_with_no_data_read[31]_i_47_n_0 }),
        .O(\NLW_max_cycles_with_no_data_read_reg[31]_i_22_O_UNCONNECTED [7:0]),
        .S({\max_cycles_with_no_data_read[31]_i_48_n_0 ,\max_cycles_with_no_data_read[31]_i_49_n_0 ,\max_cycles_with_no_data_read[31]_i_50_n_0 ,\max_cycles_with_no_data_read[31]_i_51_n_0 ,\max_cycles_with_no_data_read[31]_i_52_n_0 ,\max_cycles_with_no_data_read[31]_i_53_n_0 ,\max_cycles_with_no_data_read[31]_i_54_n_0 ,\max_cycles_with_no_data_read[31]_i_55_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \max_cycles_with_no_data_read_reg[31]_i_39 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\max_cycles_with_no_data_read_reg[31]_i_39_n_0 ,\max_cycles_with_no_data_read_reg[31]_i_39_n_1 ,\max_cycles_with_no_data_read_reg[31]_i_39_n_2 ,\max_cycles_with_no_data_read_reg[31]_i_39_n_3 ,\NLW_max_cycles_with_no_data_read_reg[31]_i_39_CO_UNCONNECTED [3],\max_cycles_with_no_data_read_reg[31]_i_39_n_5 ,\max_cycles_with_no_data_read_reg[31]_i_39_n_6 ,\max_cycles_with_no_data_read_reg[31]_i_39_n_7 }),
        .DI({\max_cycles_with_no_data_read[31]_i_56_n_0 ,\max_cycles_with_no_data_read[31]_i_57_n_0 ,\max_cycles_with_no_data_read[31]_i_58_n_0 ,\max_cycles_with_no_data_read[31]_i_59_n_0 ,\max_cycles_with_no_data_read[31]_i_60_n_0 ,\max_cycles_with_no_data_read[31]_i_61_n_0 ,\max_cycles_with_no_data_read[31]_i_62_n_0 ,\max_cycles_with_no_data_read[31]_i_63_n_0 }),
        .O(\NLW_max_cycles_with_no_data_read_reg[31]_i_39_O_UNCONNECTED [7:0]),
        .S({\max_cycles_with_no_data_read[31]_i_64_n_0 ,\max_cycles_with_no_data_read[31]_i_65_n_0 ,\max_cycles_with_no_data_read[31]_i_66_n_0 ,\max_cycles_with_no_data_read[31]_i_67_n_0 ,\max_cycles_with_no_data_read[31]_i_68_n_0 ,\max_cycles_with_no_data_read[31]_i_69_n_0 ,\max_cycles_with_no_data_read[31]_i_70_n_0 ,\max_cycles_with_no_data_read[31]_i_71_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \max_cycles_with_no_data_read_reg[31]_i_4 
       (.CI(\max_cycles_with_no_data_read_reg[31]_i_5_n_0 ),
        .CI_TOP(1'b0),
        .CO({\max_cycles_with_no_data_read_reg[31]_i_4_n_0 ,\max_cycles_with_no_data_read_reg[31]_i_4_n_1 ,\max_cycles_with_no_data_read_reg[31]_i_4_n_2 ,\max_cycles_with_no_data_read_reg[31]_i_4_n_3 ,\NLW_max_cycles_with_no_data_read_reg[31]_i_4_CO_UNCONNECTED [3],\max_cycles_with_no_data_read_reg[31]_i_4_n_5 ,\max_cycles_with_no_data_read_reg[31]_i_4_n_6 ,\max_cycles_with_no_data_read_reg[31]_i_4_n_7 }),
        .DI({\max_cycles_with_no_data_read[31]_i_6_n_0 ,\max_cycles_with_no_data_read[31]_i_7_n_0 ,\max_cycles_with_no_data_read[31]_i_8_n_0 ,\max_cycles_with_no_data_read[31]_i_9_n_0 ,\max_cycles_with_no_data_read[31]_i_10_n_0 ,\max_cycles_with_no_data_read[31]_i_11_n_0 ,\max_cycles_with_no_data_read[31]_i_12_n_0 ,\max_cycles_with_no_data_read[31]_i_13_n_0 }),
        .O(\NLW_max_cycles_with_no_data_read_reg[31]_i_4_O_UNCONNECTED [7:0]),
        .S({\max_cycles_with_no_data_read[31]_i_14_n_0 ,\max_cycles_with_no_data_read[31]_i_15_n_0 ,\max_cycles_with_no_data_read[31]_i_16_n_0 ,\max_cycles_with_no_data_read[31]_i_17_n_0 ,\max_cycles_with_no_data_read[31]_i_18_n_0 ,\max_cycles_with_no_data_read[31]_i_19_n_0 ,\max_cycles_with_no_data_read[31]_i_20_n_0 ,\max_cycles_with_no_data_read[31]_i_21_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \max_cycles_with_no_data_read_reg[31]_i_5 
       (.CI(\max_cycles_with_no_data_read_reg[31]_i_22_n_0 ),
        .CI_TOP(1'b0),
        .CO({\max_cycles_with_no_data_read_reg[31]_i_5_n_0 ,\max_cycles_with_no_data_read_reg[31]_i_5_n_1 ,\max_cycles_with_no_data_read_reg[31]_i_5_n_2 ,\max_cycles_with_no_data_read_reg[31]_i_5_n_3 ,\NLW_max_cycles_with_no_data_read_reg[31]_i_5_CO_UNCONNECTED [3],\max_cycles_with_no_data_read_reg[31]_i_5_n_5 ,\max_cycles_with_no_data_read_reg[31]_i_5_n_6 ,\max_cycles_with_no_data_read_reg[31]_i_5_n_7 }),
        .DI({\max_cycles_with_no_data_read[31]_i_23_n_0 ,\max_cycles_with_no_data_read[31]_i_24_n_0 ,\max_cycles_with_no_data_read[31]_i_25_n_0 ,\max_cycles_with_no_data_read[31]_i_26_n_0 ,\max_cycles_with_no_data_read[31]_i_27_n_0 ,\max_cycles_with_no_data_read[31]_i_28_n_0 ,\max_cycles_with_no_data_read[31]_i_29_n_0 ,\max_cycles_with_no_data_read[31]_i_30_n_0 }),
        .O(\NLW_max_cycles_with_no_data_read_reg[31]_i_5_O_UNCONNECTED [7:0]),
        .S({\max_cycles_with_no_data_read[31]_i_31_n_0 ,\max_cycles_with_no_data_read[31]_i_32_n_0 ,\max_cycles_with_no_data_read[31]_i_33_n_0 ,\max_cycles_with_no_data_read[31]_i_34_n_0 ,\max_cycles_with_no_data_read[31]_i_35_n_0 ,\max_cycles_with_no_data_read[31]_i_36_n_0 ,\max_cycles_with_no_data_read[31]_i_37_n_0 ,\max_cycles_with_no_data_read[31]_i_38_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[3] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_615),
        .Q(max_cycles_with_no_data_read[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[4] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_614),
        .Q(max_cycles_with_no_data_read[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[5] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_613),
        .Q(max_cycles_with_no_data_read[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[6] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_612),
        .Q(max_cycles_with_no_data_read[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[7] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_611),
        .Q(max_cycles_with_no_data_read[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[8] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_610),
        .Q(max_cycles_with_no_data_read[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \max_cycles_with_no_data_read_reg[9] 
       (.C(clk),
        .CE(sactn_n_70),
        .D(sactn_n_609),
        .Q(max_cycles_with_no_data_read[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_blocking_ratio_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[0]),
        .Q(read_blocking_ratio[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[10]),
        .Q(read_blocking_ratio[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[11]),
        .Q(read_blocking_ratio[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[12]),
        .Q(read_blocking_ratio[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[13]),
        .Q(read_blocking_ratio[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[14]),
        .Q(read_blocking_ratio[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[15]),
        .Q(read_blocking_ratio[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[16]),
        .Q(read_blocking_ratio[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[17]),
        .Q(read_blocking_ratio[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[18]),
        .Q(read_blocking_ratio[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[19]),
        .Q(read_blocking_ratio[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[1]),
        .Q(read_blocking_ratio[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[20]),
        .Q(read_blocking_ratio[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[21]),
        .Q(read_blocking_ratio[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[22]),
        .Q(read_blocking_ratio[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[23]),
        .Q(read_blocking_ratio[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[24]),
        .Q(read_blocking_ratio[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[25]),
        .Q(read_blocking_ratio[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[26]),
        .Q(read_blocking_ratio[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[27]),
        .Q(read_blocking_ratio[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[28]),
        .Q(read_blocking_ratio[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[29]),
        .Q(read_blocking_ratio[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[2]),
        .Q(read_blocking_ratio[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[30]),
        .Q(read_blocking_ratio[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[31]),
        .Q(read_blocking_ratio[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[3]),
        .Q(read_blocking_ratio[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[4]),
        .Q(read_blocking_ratio[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[5]),
        .Q(read_blocking_ratio[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[6]),
        .Q(read_blocking_ratio[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[7]),
        .Q(read_blocking_ratio[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[8]),
        .Q(read_blocking_ratio[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_blocking_ratio_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_blocking_ratio__0[9]),
        .Q(read_blocking_ratio[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[0]),
        .Q(read_burst_size[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[10]),
        .Q(read_burst_size[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[11]),
        .Q(read_burst_size[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[12]),
        .Q(read_burst_size[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[13]),
        .Q(read_burst_size[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[14]),
        .Q(read_burst_size[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[15]),
        .Q(read_burst_size[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[16]),
        .Q(read_burst_size[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[17]),
        .Q(read_burst_size[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[18]),
        .Q(read_burst_size[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[19]),
        .Q(read_burst_size[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[1]),
        .Q(read_burst_size[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[20]),
        .Q(read_burst_size[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[21]),
        .Q(read_burst_size[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[22]),
        .Q(read_burst_size[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[23]),
        .Q(read_burst_size[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[24]),
        .Q(read_burst_size[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[25]),
        .Q(read_burst_size[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[26]),
        .Q(read_burst_size[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[27]),
        .Q(read_burst_size[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[28]),
        .Q(read_burst_size[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[29]),
        .Q(read_burst_size[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_burst_size_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[2]),
        .Q(read_burst_size[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[30]),
        .Q(read_burst_size[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[31]),
        .Q(read_burst_size[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[3]),
        .Q(read_burst_size[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[4]),
        .Q(read_burst_size[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_burst_size_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[5]),
        .Q(read_burst_size[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_burst_size_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[6]),
        .Q(read_burst_size[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[7]),
        .Q(read_burst_size[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[8]),
        .Q(read_burst_size[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_burst_size_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_burst_size__0[9]),
        .Q(read_burst_size[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h0203)) 
    \read_count[0]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(read_count_reg_n_0_[0]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(reset_cmd),
        .O(\read_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[10]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_14 ),
        .O(\read_count[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[11]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_13 ),
        .O(\read_count[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[12]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_12 ),
        .O(\read_count[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[13]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_11 ),
        .O(\read_count[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[14]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_10 ),
        .O(\read_count[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[15]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_9 ),
        .O(\read_count[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[16]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_8 ),
        .O(\read_count[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[17]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_15 ),
        .O(\read_count[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[18]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_14 ),
        .O(\read_count[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[19]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_13 ),
        .O(\read_count[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[1]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_15 ),
        .O(\read_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[20]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_12 ),
        .O(\read_count[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[21]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_11 ),
        .O(\read_count[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[22]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_10 ),
        .O(\read_count[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[23]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_9 ),
        .O(\read_count[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[24]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[24]_i_2_n_8 ),
        .O(\read_count[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[25]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[31]_i_5_n_15 ),
        .O(\read_count[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[26]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[31]_i_5_n_14 ),
        .O(\read_count[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[27]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[31]_i_5_n_13 ),
        .O(\read_count[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[28]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[31]_i_5_n_12 ),
        .O(\read_count[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[29]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[31]_i_5_n_11 ),
        .O(\read_count[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[2]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_14 ),
        .O(\read_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[30]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[31]_i_5_n_10 ),
        .O(\read_count[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[31]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(toReadDataBusy),
        .I3(CO),
        .O(read_count));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_10 
       (.I0(countReadReqToBeSent[32]),
        .I1(countReadReqSent_reg[32]),
        .I2(countReadReqSent_reg[33]),
        .I3(countReadReqToBeSent[33]),
        .O(\read_count[31]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_11 
       (.I0(countReadReqToBeSent[38]),
        .I1(countReadReqSent_reg[38]),
        .I2(countReadReqToBeSent[39]),
        .I3(countReadReqSent_reg[39]),
        .O(\read_count[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_12 
       (.I0(countReadReqToBeSent[36]),
        .I1(countReadReqSent_reg[36]),
        .I2(countReadReqToBeSent[37]),
        .I3(countReadReqSent_reg[37]),
        .O(\read_count[31]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_13 
       (.I0(countReadReqToBeSent[34]),
        .I1(countReadReqSent_reg[34]),
        .I2(countReadReqToBeSent[35]),
        .I3(countReadReqSent_reg[35]),
        .O(\read_count[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_14 
       (.I0(countReadReqToBeSent[32]),
        .I1(countReadReqSent_reg[32]),
        .I2(countReadReqToBeSent[33]),
        .I3(countReadReqSent_reg[33]),
        .O(\read_count[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_16 
       (.I0(\read_count_reg[31]_i_5_n_10 ),
        .I1(read_count_bursts_per_reset[30]),
        .I2(read_count_bursts_per_reset[31]),
        .I3(\read_count_reg[31]_i_5_n_9 ),
        .O(\read_count[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_17 
       (.I0(\read_count_reg[31]_i_5_n_12 ),
        .I1(read_count_bursts_per_reset[28]),
        .I2(read_count_bursts_per_reset[29]),
        .I3(\read_count_reg[31]_i_5_n_11 ),
        .O(\read_count[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_18 
       (.I0(\read_count_reg[31]_i_5_n_14 ),
        .I1(read_count_bursts_per_reset[26]),
        .I2(read_count_bursts_per_reset[27]),
        .I3(\read_count_reg[31]_i_5_n_13 ),
        .O(\read_count[31]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_19 
       (.I0(\read_count_reg[24]_i_2_n_8 ),
        .I1(read_count_bursts_per_reset[24]),
        .I2(read_count_bursts_per_reset[25]),
        .I3(\read_count_reg[31]_i_5_n_15 ),
        .O(\read_count[31]_i_19_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[31]_i_2 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[31]_i_5_n_9 ),
        .O(\read_count[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_20 
       (.I0(\read_count_reg[24]_i_2_n_10 ),
        .I1(read_count_bursts_per_reset[22]),
        .I2(read_count_bursts_per_reset[23]),
        .I3(\read_count_reg[24]_i_2_n_9 ),
        .O(\read_count[31]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_21 
       (.I0(\read_count_reg[24]_i_2_n_12 ),
        .I1(read_count_bursts_per_reset[20]),
        .I2(read_count_bursts_per_reset[21]),
        .I3(\read_count_reg[24]_i_2_n_11 ),
        .O(\read_count[31]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_22 
       (.I0(\read_count_reg[24]_i_2_n_14 ),
        .I1(read_count_bursts_per_reset[18]),
        .I2(read_count_bursts_per_reset[19]),
        .I3(\read_count_reg[24]_i_2_n_13 ),
        .O(\read_count[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_23 
       (.I0(\read_count_reg[16]_i_2_n_8 ),
        .I1(read_count_bursts_per_reset[16]),
        .I2(read_count_bursts_per_reset[17]),
        .I3(\read_count_reg[24]_i_2_n_15 ),
        .O(\read_count[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_24 
       (.I0(\read_count_reg[31]_i_5_n_10 ),
        .I1(read_count_bursts_per_reset[30]),
        .I2(\read_count_reg[31]_i_5_n_9 ),
        .I3(read_count_bursts_per_reset[31]),
        .O(\read_count[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_25 
       (.I0(\read_count_reg[31]_i_5_n_12 ),
        .I1(read_count_bursts_per_reset[28]),
        .I2(\read_count_reg[31]_i_5_n_11 ),
        .I3(read_count_bursts_per_reset[29]),
        .O(\read_count[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_26 
       (.I0(\read_count_reg[31]_i_5_n_14 ),
        .I1(read_count_bursts_per_reset[26]),
        .I2(\read_count_reg[31]_i_5_n_13 ),
        .I3(read_count_bursts_per_reset[27]),
        .O(\read_count[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_27 
       (.I0(\read_count_reg[24]_i_2_n_8 ),
        .I1(read_count_bursts_per_reset[24]),
        .I2(\read_count_reg[31]_i_5_n_15 ),
        .I3(read_count_bursts_per_reset[25]),
        .O(\read_count[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_28 
       (.I0(\read_count_reg[24]_i_2_n_10 ),
        .I1(read_count_bursts_per_reset[22]),
        .I2(\read_count_reg[24]_i_2_n_9 ),
        .I3(read_count_bursts_per_reset[23]),
        .O(\read_count[31]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_29 
       (.I0(\read_count_reg[24]_i_2_n_12 ),
        .I1(read_count_bursts_per_reset[20]),
        .I2(\read_count_reg[24]_i_2_n_11 ),
        .I3(read_count_bursts_per_reset[21]),
        .O(\read_count[31]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_30 
       (.I0(\read_count_reg[24]_i_2_n_14 ),
        .I1(read_count_bursts_per_reset[18]),
        .I2(\read_count_reg[24]_i_2_n_13 ),
        .I3(read_count_bursts_per_reset[19]),
        .O(\read_count[31]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_31 
       (.I0(\read_count_reg[16]_i_2_n_8 ),
        .I1(read_count_bursts_per_reset[16]),
        .I2(\read_count_reg[24]_i_2_n_15 ),
        .I3(read_count_bursts_per_reset[17]),
        .O(\read_count[31]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_33 
       (.I0(countReadReqToBeSent[30]),
        .I1(countReadReqSent_reg[30]),
        .I2(countReadReqSent_reg[31]),
        .I3(countReadReqToBeSent[31]),
        .O(\read_count[31]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_34 
       (.I0(countReadReqToBeSent[28]),
        .I1(countReadReqSent_reg[28]),
        .I2(countReadReqSent_reg[29]),
        .I3(countReadReqToBeSent[29]),
        .O(\read_count[31]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_35 
       (.I0(countReadReqToBeSent[26]),
        .I1(countReadReqSent_reg[26]),
        .I2(countReadReqSent_reg[27]),
        .I3(countReadReqToBeSent[27]),
        .O(\read_count[31]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_36 
       (.I0(countReadReqToBeSent[24]),
        .I1(countReadReqSent_reg[24]),
        .I2(countReadReqSent_reg[25]),
        .I3(countReadReqToBeSent[25]),
        .O(\read_count[31]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_37 
       (.I0(countReadReqToBeSent[22]),
        .I1(countReadReqSent_reg[22]),
        .I2(countReadReqSent_reg[23]),
        .I3(countReadReqToBeSent[23]),
        .O(\read_count[31]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_38 
       (.I0(countReadReqToBeSent[20]),
        .I1(countReadReqSent_reg[20]),
        .I2(countReadReqSent_reg[21]),
        .I3(countReadReqToBeSent[21]),
        .O(\read_count[31]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_39 
       (.I0(countReadReqToBeSent[18]),
        .I1(countReadReqSent_reg[18]),
        .I2(countReadReqSent_reg[19]),
        .I3(countReadReqToBeSent[19]),
        .O(\read_count[31]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_40 
       (.I0(countReadReqToBeSent[16]),
        .I1(countReadReqSent_reg[16]),
        .I2(countReadReqSent_reg[17]),
        .I3(countReadReqToBeSent[17]),
        .O(\read_count[31]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_41 
       (.I0(countReadReqToBeSent[30]),
        .I1(countReadReqSent_reg[30]),
        .I2(countReadReqToBeSent[31]),
        .I3(countReadReqSent_reg[31]),
        .O(\read_count[31]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_42 
       (.I0(countReadReqToBeSent[28]),
        .I1(countReadReqSent_reg[28]),
        .I2(countReadReqToBeSent[29]),
        .I3(countReadReqSent_reg[29]),
        .O(\read_count[31]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_43 
       (.I0(countReadReqToBeSent[26]),
        .I1(countReadReqSent_reg[26]),
        .I2(countReadReqToBeSent[27]),
        .I3(countReadReqSent_reg[27]),
        .O(\read_count[31]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_44 
       (.I0(countReadReqToBeSent[24]),
        .I1(countReadReqSent_reg[24]),
        .I2(countReadReqToBeSent[25]),
        .I3(countReadReqSent_reg[25]),
        .O(\read_count[31]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_45 
       (.I0(countReadReqToBeSent[22]),
        .I1(countReadReqSent_reg[22]),
        .I2(countReadReqToBeSent[23]),
        .I3(countReadReqSent_reg[23]),
        .O(\read_count[31]_i_45_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_46 
       (.I0(countReadReqToBeSent[20]),
        .I1(countReadReqSent_reg[20]),
        .I2(countReadReqToBeSent[21]),
        .I3(countReadReqSent_reg[21]),
        .O(\read_count[31]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_47 
       (.I0(countReadReqToBeSent[18]),
        .I1(countReadReqSent_reg[18]),
        .I2(countReadReqToBeSent[19]),
        .I3(countReadReqSent_reg[19]),
        .O(\read_count[31]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_48 
       (.I0(countReadReqToBeSent[16]),
        .I1(countReadReqSent_reg[16]),
        .I2(countReadReqToBeSent[17]),
        .I3(countReadReqSent_reg[17]),
        .O(\read_count[31]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_49 
       (.I0(\read_count_reg[16]_i_2_n_10 ),
        .I1(read_count_bursts_per_reset[14]),
        .I2(read_count_bursts_per_reset[15]),
        .I3(\read_count_reg[16]_i_2_n_9 ),
        .O(\read_count[31]_i_49_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_50 
       (.I0(\read_count_reg[16]_i_2_n_12 ),
        .I1(read_count_bursts_per_reset[12]),
        .I2(read_count_bursts_per_reset[13]),
        .I3(\read_count_reg[16]_i_2_n_11 ),
        .O(\read_count[31]_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_51 
       (.I0(\read_count_reg[16]_i_2_n_14 ),
        .I1(read_count_bursts_per_reset[10]),
        .I2(read_count_bursts_per_reset[11]),
        .I3(\read_count_reg[16]_i_2_n_13 ),
        .O(\read_count[31]_i_51_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_52 
       (.I0(\read_count_reg[8]_i_2_n_8 ),
        .I1(read_count_bursts_per_reset[8]),
        .I2(read_count_bursts_per_reset[9]),
        .I3(\read_count_reg[16]_i_2_n_15 ),
        .O(\read_count[31]_i_52_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_53 
       (.I0(\read_count_reg[8]_i_2_n_10 ),
        .I1(read_count_bursts_per_reset[6]),
        .I2(read_count_bursts_per_reset[7]),
        .I3(\read_count_reg[8]_i_2_n_9 ),
        .O(\read_count[31]_i_53_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_54 
       (.I0(\read_count_reg[8]_i_2_n_12 ),
        .I1(read_count_bursts_per_reset[4]),
        .I2(read_count_bursts_per_reset[5]),
        .I3(\read_count_reg[8]_i_2_n_11 ),
        .O(\read_count[31]_i_54_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_55 
       (.I0(\read_count_reg[8]_i_2_n_14 ),
        .I1(read_count_bursts_per_reset[2]),
        .I2(read_count_bursts_per_reset[3]),
        .I3(\read_count_reg[8]_i_2_n_13 ),
        .O(\read_count[31]_i_55_n_0 ));
  LUT4 #(
    .INIT(16'h1F01)) 
    \read_count[31]_i_56 
       (.I0(read_count_bursts_per_reset[0]),
        .I1(read_count_reg_n_0_[0]),
        .I2(read_count_bursts_per_reset[1]),
        .I3(\read_count_reg[8]_i_2_n_15 ),
        .O(\read_count[31]_i_56_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_57 
       (.I0(\read_count_reg[16]_i_2_n_10 ),
        .I1(read_count_bursts_per_reset[14]),
        .I2(\read_count_reg[16]_i_2_n_9 ),
        .I3(read_count_bursts_per_reset[15]),
        .O(\read_count[31]_i_57_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_58 
       (.I0(\read_count_reg[16]_i_2_n_12 ),
        .I1(read_count_bursts_per_reset[12]),
        .I2(\read_count_reg[16]_i_2_n_11 ),
        .I3(read_count_bursts_per_reset[13]),
        .O(\read_count[31]_i_58_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_59 
       (.I0(\read_count_reg[16]_i_2_n_14 ),
        .I1(read_count_bursts_per_reset[10]),
        .I2(\read_count_reg[16]_i_2_n_13 ),
        .I3(read_count_bursts_per_reset[11]),
        .O(\read_count[31]_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_60 
       (.I0(\read_count_reg[8]_i_2_n_8 ),
        .I1(read_count_bursts_per_reset[8]),
        .I2(\read_count_reg[16]_i_2_n_15 ),
        .I3(read_count_bursts_per_reset[9]),
        .O(\read_count[31]_i_60_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_61 
       (.I0(\read_count_reg[8]_i_2_n_10 ),
        .I1(read_count_bursts_per_reset[6]),
        .I2(\read_count_reg[8]_i_2_n_9 ),
        .I3(read_count_bursts_per_reset[7]),
        .O(\read_count[31]_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_62 
       (.I0(\read_count_reg[8]_i_2_n_12 ),
        .I1(read_count_bursts_per_reset[4]),
        .I2(\read_count_reg[8]_i_2_n_11 ),
        .I3(read_count_bursts_per_reset[5]),
        .O(\read_count[31]_i_62_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_63 
       (.I0(\read_count_reg[8]_i_2_n_14 ),
        .I1(read_count_bursts_per_reset[2]),
        .I2(\read_count_reg[8]_i_2_n_13 ),
        .I3(read_count_bursts_per_reset[3]),
        .O(\read_count[31]_i_63_n_0 ));
  LUT4 #(
    .INIT(16'h6006)) 
    \read_count[31]_i_64 
       (.I0(read_count_reg_n_0_[0]),
        .I1(read_count_bursts_per_reset[0]),
        .I2(\read_count_reg[8]_i_2_n_15 ),
        .I3(read_count_bursts_per_reset[1]),
        .O(\read_count[31]_i_64_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_65 
       (.I0(countReadReqToBeSent[14]),
        .I1(countReadReqSent_reg[14]),
        .I2(countReadReqSent_reg[15]),
        .I3(countReadReqToBeSent[15]),
        .O(\read_count[31]_i_65_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_66 
       (.I0(countReadReqToBeSent[12]),
        .I1(countReadReqSent_reg[12]),
        .I2(countReadReqSent_reg[13]),
        .I3(countReadReqToBeSent[13]),
        .O(\read_count[31]_i_66_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_67 
       (.I0(countReadReqToBeSent[10]),
        .I1(countReadReqSent_reg[10]),
        .I2(countReadReqSent_reg[11]),
        .I3(countReadReqToBeSent[11]),
        .O(\read_count[31]_i_67_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_68 
       (.I0(countReadReqToBeSent[8]),
        .I1(countReadReqSent_reg[8]),
        .I2(countReadReqSent_reg[9]),
        .I3(countReadReqToBeSent[9]),
        .O(\read_count[31]_i_68_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_69 
       (.I0(countReadReqToBeSent[6]),
        .I1(countReadReqSent_reg[6]),
        .I2(countReadReqSent_reg[7]),
        .I3(countReadReqToBeSent[7]),
        .O(\read_count[31]_i_69_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_7 
       (.I0(countReadReqToBeSent[38]),
        .I1(countReadReqSent_reg[38]),
        .I2(countReadReqSent_reg[39]),
        .I3(countReadReqToBeSent[39]),
        .O(\read_count[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_70 
       (.I0(countReadReqToBeSent[4]),
        .I1(countReadReqSent_reg[4]),
        .I2(countReadReqSent_reg[5]),
        .I3(countReadReqToBeSent[5]),
        .O(\read_count[31]_i_70_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_71 
       (.I0(countReadReqToBeSent[2]),
        .I1(countReadReqSent_reg[2]),
        .I2(countReadReqSent_reg[3]),
        .I3(countReadReqToBeSent[3]),
        .O(\read_count[31]_i_71_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_72 
       (.I0(countReadReqToBeSent[0]),
        .I1(countReadReqSent_reg[0]),
        .I2(countReadReqSent_reg[1]),
        .I3(countReadReqToBeSent[1]),
        .O(\read_count[31]_i_72_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_73 
       (.I0(countReadReqToBeSent[14]),
        .I1(countReadReqSent_reg[14]),
        .I2(countReadReqToBeSent[15]),
        .I3(countReadReqSent_reg[15]),
        .O(\read_count[31]_i_73_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_74 
       (.I0(countReadReqToBeSent[12]),
        .I1(countReadReqSent_reg[12]),
        .I2(countReadReqToBeSent[13]),
        .I3(countReadReqSent_reg[13]),
        .O(\read_count[31]_i_74_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_75 
       (.I0(countReadReqToBeSent[10]),
        .I1(countReadReqSent_reg[10]),
        .I2(countReadReqToBeSent[11]),
        .I3(countReadReqSent_reg[11]),
        .O(\read_count[31]_i_75_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_76 
       (.I0(countReadReqToBeSent[8]),
        .I1(countReadReqSent_reg[8]),
        .I2(countReadReqToBeSent[9]),
        .I3(countReadReqSent_reg[9]),
        .O(\read_count[31]_i_76_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_77 
       (.I0(countReadReqToBeSent[6]),
        .I1(countReadReqSent_reg[6]),
        .I2(countReadReqToBeSent[7]),
        .I3(countReadReqSent_reg[7]),
        .O(\read_count[31]_i_77_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_78 
       (.I0(countReadReqToBeSent[4]),
        .I1(countReadReqSent_reg[4]),
        .I2(countReadReqToBeSent[5]),
        .I3(countReadReqSent_reg[5]),
        .O(\read_count[31]_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_79 
       (.I0(countReadReqToBeSent[2]),
        .I1(countReadReqSent_reg[2]),
        .I2(countReadReqToBeSent[3]),
        .I3(countReadReqSent_reg[3]),
        .O(\read_count[31]_i_79_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_8 
       (.I0(countReadReqToBeSent[36]),
        .I1(countReadReqSent_reg[36]),
        .I2(countReadReqSent_reg[37]),
        .I3(countReadReqToBeSent[37]),
        .O(\read_count[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_count[31]_i_80 
       (.I0(countReadReqToBeSent[0]),
        .I1(countReadReqSent_reg[0]),
        .I2(countReadReqToBeSent[1]),
        .I3(countReadReqSent_reg[1]),
        .O(\read_count[31]_i_80_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_count[31]_i_9 
       (.I0(countReadReqToBeSent[34]),
        .I1(countReadReqSent_reg[34]),
        .I2(countReadReqSent_reg[35]),
        .I3(countReadReqToBeSent[35]),
        .O(\read_count[31]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[3]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_13 ),
        .O(\read_count[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[4]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_12 ),
        .O(\read_count[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[5]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_11 ),
        .O(\read_count[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[6]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_10 ),
        .O(\read_count[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[7]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_9 ),
        .O(\read_count[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[8]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[8]_i_2_n_8 ),
        .O(\read_count[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \read_count[9]_i_1 
       (.I0(\countAddrSent[31]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(\read_count_reg[16]_i_2_n_15 ),
        .O(\read_count[9]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[0]),
        .Q(read_count_bursts_per_reset[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[10]),
        .Q(read_count_bursts_per_reset[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[11]),
        .Q(read_count_bursts_per_reset[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[12]),
        .Q(read_count_bursts_per_reset[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[13]),
        .Q(read_count_bursts_per_reset[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[14]),
        .Q(read_count_bursts_per_reset[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[15]),
        .Q(read_count_bursts_per_reset[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[16]),
        .Q(read_count_bursts_per_reset[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[17]),
        .Q(read_count_bursts_per_reset[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[18]),
        .Q(read_count_bursts_per_reset[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[19]),
        .Q(read_count_bursts_per_reset[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[1]),
        .Q(read_count_bursts_per_reset[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[20]),
        .Q(read_count_bursts_per_reset[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[21]),
        .Q(read_count_bursts_per_reset[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[22]),
        .Q(read_count_bursts_per_reset[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[23]),
        .Q(read_count_bursts_per_reset[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[24]),
        .Q(read_count_bursts_per_reset[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[25]),
        .Q(read_count_bursts_per_reset[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[26]),
        .Q(read_count_bursts_per_reset[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[27]),
        .Q(read_count_bursts_per_reset[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[28]),
        .Q(read_count_bursts_per_reset[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[29]),
        .Q(read_count_bursts_per_reset[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_count_bursts_per_reset_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[2]),
        .Q(read_count_bursts_per_reset[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[30]),
        .Q(read_count_bursts_per_reset[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[31]),
        .Q(read_count_bursts_per_reset[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[3]),
        .Q(read_count_bursts_per_reset[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[4]),
        .Q(read_count_bursts_per_reset[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_count_bursts_per_reset_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[5]),
        .Q(read_count_bursts_per_reset[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_count_bursts_per_reset_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[6]),
        .Q(read_count_bursts_per_reset[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[7]),
        .Q(read_count_bursts_per_reset[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[8]),
        .Q(read_count_bursts_per_reset[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_count_bursts_per_reset_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_count_bursts_per_reset__0[9]),
        .Q(read_count_bursts_per_reset[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_count_reg[0] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[0]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[10] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[10]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[11] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[11]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[12] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[12]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[13] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[13]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[14] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[14]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[15] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[15]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[16] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[16]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[16]_i_2 
       (.CI(\read_count_reg[8]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_count_reg[16]_i_2_n_0 ,\read_count_reg[16]_i_2_n_1 ,\read_count_reg[16]_i_2_n_2 ,\read_count_reg[16]_i_2_n_3 ,\NLW_read_count_reg[16]_i_2_CO_UNCONNECTED [3],\read_count_reg[16]_i_2_n_5 ,\read_count_reg[16]_i_2_n_6 ,\read_count_reg[16]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\read_count_reg[16]_i_2_n_8 ,\read_count_reg[16]_i_2_n_9 ,\read_count_reg[16]_i_2_n_10 ,\read_count_reg[16]_i_2_n_11 ,\read_count_reg[16]_i_2_n_12 ,\read_count_reg[16]_i_2_n_13 ,\read_count_reg[16]_i_2_n_14 ,\read_count_reg[16]_i_2_n_15 }),
        .S(read_count_reg_n_0_[16:9]));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[17] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[17]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[18] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[18]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[19] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[19]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[1] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[1]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[20] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[20]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[21] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[21]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[22] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[22]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[23] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[23]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[24] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[24]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[24]_i_2 
       (.CI(\read_count_reg[16]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_count_reg[24]_i_2_n_0 ,\read_count_reg[24]_i_2_n_1 ,\read_count_reg[24]_i_2_n_2 ,\read_count_reg[24]_i_2_n_3 ,\NLW_read_count_reg[24]_i_2_CO_UNCONNECTED [3],\read_count_reg[24]_i_2_n_5 ,\read_count_reg[24]_i_2_n_6 ,\read_count_reg[24]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\read_count_reg[24]_i_2_n_8 ,\read_count_reg[24]_i_2_n_9 ,\read_count_reg[24]_i_2_n_10 ,\read_count_reg[24]_i_2_n_11 ,\read_count_reg[24]_i_2_n_12 ,\read_count_reg[24]_i_2_n_13 ,\read_count_reg[24]_i_2_n_14 ,\read_count_reg[24]_i_2_n_15 }),
        .S(read_count_reg_n_0_[24:17]));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[25] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[25]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[26] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[26]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[27] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[27]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[28] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[28]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[29] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[29]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[2] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[2]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[30] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[30]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[31] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[31]_i_2_n_0 ),
        .Q(read_count_reg_n_0_[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[31]_i_15 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\read_count_reg[31]_i_15_n_0 ,\read_count_reg[31]_i_15_n_1 ,\read_count_reg[31]_i_15_n_2 ,\read_count_reg[31]_i_15_n_3 ,\NLW_read_count_reg[31]_i_15_CO_UNCONNECTED [3],\read_count_reg[31]_i_15_n_5 ,\read_count_reg[31]_i_15_n_6 ,\read_count_reg[31]_i_15_n_7 }),
        .DI({\read_count[31]_i_49_n_0 ,\read_count[31]_i_50_n_0 ,\read_count[31]_i_51_n_0 ,\read_count[31]_i_52_n_0 ,\read_count[31]_i_53_n_0 ,\read_count[31]_i_54_n_0 ,\read_count[31]_i_55_n_0 ,\read_count[31]_i_56_n_0 }),
        .O(\NLW_read_count_reg[31]_i_15_O_UNCONNECTED [7:0]),
        .S({\read_count[31]_i_57_n_0 ,\read_count[31]_i_58_n_0 ,\read_count[31]_i_59_n_0 ,\read_count[31]_i_60_n_0 ,\read_count[31]_i_61_n_0 ,\read_count[31]_i_62_n_0 ,\read_count[31]_i_63_n_0 ,\read_count[31]_i_64_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[31]_i_3 
       (.CI(\read_count_reg[31]_i_6_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_read_count_reg[31]_i_3_CO_UNCONNECTED [7:4],CO,\read_count_reg[31]_i_3_n_5 ,\read_count_reg[31]_i_3_n_6 ,\read_count_reg[31]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,\read_count[31]_i_7_n_0 ,\read_count[31]_i_8_n_0 ,\read_count[31]_i_9_n_0 ,\read_count[31]_i_10_n_0 }),
        .O(\NLW_read_count_reg[31]_i_3_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,\read_count[31]_i_11_n_0 ,\read_count[31]_i_12_n_0 ,\read_count[31]_i_13_n_0 ,\read_count[31]_i_14_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[31]_i_32 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\read_count_reg[31]_i_32_n_0 ,\read_count_reg[31]_i_32_n_1 ,\read_count_reg[31]_i_32_n_2 ,\read_count_reg[31]_i_32_n_3 ,\NLW_read_count_reg[31]_i_32_CO_UNCONNECTED [3],\read_count_reg[31]_i_32_n_5 ,\read_count_reg[31]_i_32_n_6 ,\read_count_reg[31]_i_32_n_7 }),
        .DI({\read_count[31]_i_65_n_0 ,\read_count[31]_i_66_n_0 ,\read_count[31]_i_67_n_0 ,\read_count[31]_i_68_n_0 ,\read_count[31]_i_69_n_0 ,\read_count[31]_i_70_n_0 ,\read_count[31]_i_71_n_0 ,\read_count[31]_i_72_n_0 }),
        .O(\NLW_read_count_reg[31]_i_32_O_UNCONNECTED [7:0]),
        .S({\read_count[31]_i_73_n_0 ,\read_count[31]_i_74_n_0 ,\read_count[31]_i_75_n_0 ,\read_count[31]_i_76_n_0 ,\read_count[31]_i_77_n_0 ,\read_count[31]_i_78_n_0 ,\read_count[31]_i_79_n_0 ,\read_count[31]_i_80_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[31]_i_4 
       (.CI(\read_count_reg[31]_i_15_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_count_reg[31]_i_4_n_0 ,\read_count_reg[31]_i_4_n_1 ,\read_count_reg[31]_i_4_n_2 ,\read_count_reg[31]_i_4_n_3 ,\NLW_read_count_reg[31]_i_4_CO_UNCONNECTED [3],\read_count_reg[31]_i_4_n_5 ,\read_count_reg[31]_i_4_n_6 ,\read_count_reg[31]_i_4_n_7 }),
        .DI({\read_count[31]_i_16_n_0 ,\read_count[31]_i_17_n_0 ,\read_count[31]_i_18_n_0 ,\read_count[31]_i_19_n_0 ,\read_count[31]_i_20_n_0 ,\read_count[31]_i_21_n_0 ,\read_count[31]_i_22_n_0 ,\read_count[31]_i_23_n_0 }),
        .O(\NLW_read_count_reg[31]_i_4_O_UNCONNECTED [7:0]),
        .S({\read_count[31]_i_24_n_0 ,\read_count[31]_i_25_n_0 ,\read_count[31]_i_26_n_0 ,\read_count[31]_i_27_n_0 ,\read_count[31]_i_28_n_0 ,\read_count[31]_i_29_n_0 ,\read_count[31]_i_30_n_0 ,\read_count[31]_i_31_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[31]_i_5 
       (.CI(\read_count_reg[24]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_read_count_reg[31]_i_5_CO_UNCONNECTED [7:6],\read_count_reg[31]_i_5_n_2 ,\read_count_reg[31]_i_5_n_3 ,\NLW_read_count_reg[31]_i_5_CO_UNCONNECTED [3],\read_count_reg[31]_i_5_n_5 ,\read_count_reg[31]_i_5_n_6 ,\read_count_reg[31]_i_5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_read_count_reg[31]_i_5_O_UNCONNECTED [7],\read_count_reg[31]_i_5_n_9 ,\read_count_reg[31]_i_5_n_10 ,\read_count_reg[31]_i_5_n_11 ,\read_count_reg[31]_i_5_n_12 ,\read_count_reg[31]_i_5_n_13 ,\read_count_reg[31]_i_5_n_14 ,\read_count_reg[31]_i_5_n_15 }),
        .S({1'b0,read_count_reg_n_0_[31:25]}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[31]_i_6 
       (.CI(\read_count_reg[31]_i_32_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_count_reg[31]_i_6_n_0 ,\read_count_reg[31]_i_6_n_1 ,\read_count_reg[31]_i_6_n_2 ,\read_count_reg[31]_i_6_n_3 ,\NLW_read_count_reg[31]_i_6_CO_UNCONNECTED [3],\read_count_reg[31]_i_6_n_5 ,\read_count_reg[31]_i_6_n_6 ,\read_count_reg[31]_i_6_n_7 }),
        .DI({\read_count[31]_i_33_n_0 ,\read_count[31]_i_34_n_0 ,\read_count[31]_i_35_n_0 ,\read_count[31]_i_36_n_0 ,\read_count[31]_i_37_n_0 ,\read_count[31]_i_38_n_0 ,\read_count[31]_i_39_n_0 ,\read_count[31]_i_40_n_0 }),
        .O(\NLW_read_count_reg[31]_i_6_O_UNCONNECTED [7:0]),
        .S({\read_count[31]_i_41_n_0 ,\read_count[31]_i_42_n_0 ,\read_count[31]_i_43_n_0 ,\read_count[31]_i_44_n_0 ,\read_count[31]_i_45_n_0 ,\read_count[31]_i_46_n_0 ,\read_count[31]_i_47_n_0 ,\read_count[31]_i_48_n_0 }));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[3] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[3]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[4] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[4]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[5] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[5]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[6] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[6]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[7] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[7]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[8] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[8]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_count_reg[8]_i_2 
       (.CI(read_count_reg_n_0_[0]),
        .CI_TOP(1'b0),
        .CO({\read_count_reg[8]_i_2_n_0 ,\read_count_reg[8]_i_2_n_1 ,\read_count_reg[8]_i_2_n_2 ,\read_count_reg[8]_i_2_n_3 ,\NLW_read_count_reg[8]_i_2_CO_UNCONNECTED [3],\read_count_reg[8]_i_2_n_5 ,\read_count_reg[8]_i_2_n_6 ,\read_count_reg[8]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\read_count_reg[8]_i_2_n_8 ,\read_count_reg[8]_i_2_n_9 ,\read_count_reg[8]_i_2_n_10 ,\read_count_reg[8]_i_2_n_11 ,\read_count_reg[8]_i_2_n_12 ,\read_count_reg[8]_i_2_n_13 ,\read_count_reg[8]_i_2_n_14 ,\read_count_reg[8]_i_2_n_15 }),
        .S(read_count_reg_n_0_[8:1]));
  FDRE #(
    .INIT(1'b1)) 
    \read_count_reg[9] 
       (.C(clk),
        .CE(read_count),
        .D(\read_count[9]_i_1_n_0 ),
        .Q(read_count_reg_n_0_[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[0]),
        .Q(read_max_queue_size[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[10]),
        .Q(read_max_queue_size[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[11]),
        .Q(read_max_queue_size[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[12]),
        .Q(read_max_queue_size[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[13]),
        .Q(read_max_queue_size[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[14]),
        .Q(read_max_queue_size[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[15]),
        .Q(read_max_queue_size[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[16]),
        .Q(read_max_queue_size[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[17]),
        .Q(read_max_queue_size[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[18]),
        .Q(read_max_queue_size[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[19]),
        .Q(read_max_queue_size[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[1]),
        .Q(read_max_queue_size[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[20]),
        .Q(read_max_queue_size[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[21]),
        .Q(read_max_queue_size[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[22]),
        .Q(read_max_queue_size[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[23]),
        .Q(read_max_queue_size[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[24]),
        .Q(read_max_queue_size[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[25]),
        .Q(read_max_queue_size[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[26]),
        .Q(read_max_queue_size[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[27]),
        .Q(read_max_queue_size[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[28]),
        .Q(read_max_queue_size[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[29]),
        .Q(read_max_queue_size[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_max_queue_size_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[2]),
        .Q(read_max_queue_size[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[30]),
        .Q(read_max_queue_size[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[31]),
        .Q(read_max_queue_size[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[3]),
        .Q(read_max_queue_size[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[4]),
        .Q(read_max_queue_size[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_max_queue_size_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[5]),
        .Q(read_max_queue_size[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_max_queue_size_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[6]),
        .Q(read_max_queue_size[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[7]),
        .Q(read_max_queue_size[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[8]),
        .Q(read_max_queue_size[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_max_queue_size_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_max_queue_size__0[9]),
        .Q(read_max_queue_size[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[0]),
        .Q(read_start_DDR_address[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[10]),
        .Q(read_start_DDR_address[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[11]),
        .Q(read_start_DDR_address[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[12]),
        .Q(read_start_DDR_address[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[13]),
        .Q(read_start_DDR_address[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[14]),
        .Q(read_start_DDR_address[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[15]),
        .Q(read_start_DDR_address[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[16]),
        .Q(read_start_DDR_address[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[17]),
        .Q(read_start_DDR_address[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[18]),
        .Q(read_start_DDR_address[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[19]),
        .Q(read_start_DDR_address[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[1]),
        .Q(read_start_DDR_address[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[20]),
        .Q(read_start_DDR_address[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[21]),
        .Q(read_start_DDR_address[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[22]),
        .Q(read_start_DDR_address[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[23]),
        .Q(read_start_DDR_address[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[24]),
        .Q(read_start_DDR_address[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[25]),
        .Q(read_start_DDR_address[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[26]),
        .Q(read_start_DDR_address[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[27]),
        .Q(read_start_DDR_address[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[28]),
        .Q(read_start_DDR_address[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[29]),
        .Q(read_start_DDR_address[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[2]),
        .Q(read_start_DDR_address[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[30]),
        .Q(read_start_DDR_address[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[31]),
        .Q(read_start_DDR_address[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[32] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[32]),
        .Q(read_start_DDR_address[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[33] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[33]),
        .Q(read_start_DDR_address[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[34] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[34]),
        .Q(read_start_DDR_address[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[35] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[35]),
        .Q(read_start_DDR_address[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[36] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[36]),
        .Q(read_start_DDR_address[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[37] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[37]),
        .Q(read_start_DDR_address[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[38] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[38]),
        .Q(read_start_DDR_address[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[39] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[39]),
        .Q(read_start_DDR_address[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[3]),
        .Q(read_start_DDR_address[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[40] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[40]),
        .Q(read_start_DDR_address[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[41] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[41]),
        .Q(read_start_DDR_address[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[42] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[42]),
        .Q(read_start_DDR_address[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[43] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[43]),
        .Q(read_start_DDR_address[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[44] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[44]),
        .Q(read_start_DDR_address[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[45] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[45]),
        .Q(read_start_DDR_address[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[46] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[46]),
        .Q(read_start_DDR_address[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[47] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[47]),
        .Q(read_start_DDR_address[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[48] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[48]),
        .Q(read_start_DDR_address[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[49] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[49]),
        .Q(read_start_DDR_address[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[4]),
        .Q(read_start_DDR_address[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[50] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[50]),
        .Q(read_start_DDR_address[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[51] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[51]),
        .Q(read_start_DDR_address[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[52] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[52]),
        .Q(read_start_DDR_address[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[53] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[53]),
        .Q(read_start_DDR_address[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[54] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[54]),
        .Q(read_start_DDR_address[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[55] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[55]),
        .Q(read_start_DDR_address[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[56] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[56]),
        .Q(read_start_DDR_address[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[57] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[57]),
        .Q(read_start_DDR_address[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[58] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[58]),
        .Q(read_start_DDR_address[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[59] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[59]),
        .Q(read_start_DDR_address[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[5]),
        .Q(read_start_DDR_address[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[60] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[60]),
        .Q(read_start_DDR_address[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[61] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[61]),
        .Q(read_start_DDR_address[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[62] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[62]),
        .Q(read_start_DDR_address[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[63] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[63]),
        .Q(read_start_DDR_address[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[6]),
        .Q(read_start_DDR_address[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[7]),
        .Q(read_start_DDR_address[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[8]),
        .Q(read_start_DDR_address[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_start_DDR_address_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_start_DDR_address__0[9]),
        .Q(read_start_DDR_address[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[0]),
        .Q(read_step_DDR_address[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[10]),
        .Q(read_step_DDR_address[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[11]),
        .Q(read_step_DDR_address[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[12]),
        .Q(read_step_DDR_address[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[13]),
        .Q(read_step_DDR_address[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[14]),
        .Q(read_step_DDR_address[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[15]),
        .Q(read_step_DDR_address[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[16]),
        .Q(read_step_DDR_address[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[17]),
        .Q(read_step_DDR_address[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[18]),
        .Q(read_step_DDR_address[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[19]),
        .Q(read_step_DDR_address[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[1]),
        .Q(read_step_DDR_address[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[20]),
        .Q(read_step_DDR_address[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[21]),
        .Q(read_step_DDR_address[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[22]),
        .Q(read_step_DDR_address[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[23]),
        .Q(read_step_DDR_address[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[24]),
        .Q(read_step_DDR_address[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[25]),
        .Q(read_step_DDR_address[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[26]),
        .Q(read_step_DDR_address[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[27]),
        .Q(read_step_DDR_address[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[28]),
        .Q(read_step_DDR_address[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[29]),
        .Q(read_step_DDR_address[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_step_DDR_address_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[2]),
        .Q(read_step_DDR_address[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[30]),
        .Q(read_step_DDR_address[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[31]),
        .Q(read_step_DDR_address[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[3]),
        .Q(read_step_DDR_address[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[4]),
        .Q(read_step_DDR_address[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_step_DDR_address_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[5]),
        .Q(read_step_DDR_address[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_step_DDR_address_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[6]),
        .Q(read_step_DDR_address[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[7]),
        .Q(read_step_DDR_address[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[8]),
        .Q(read_step_DDR_address[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_step_DDR_address_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_step_DDR_address__0[9]),
        .Q(read_step_DDR_address[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[0]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[0]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h007F)) 
    \read_ticks[0]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks[0]),
        .O(\read_ticks[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[10]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[10]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[10]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[10]),
        .O(\read_ticks[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[11]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[11]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[11]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[11]),
        .O(\read_ticks[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[12]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[12]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[12]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[12]),
        .O(\read_ticks[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[13]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[13]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[13]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[13]),
        .O(\read_ticks[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[14]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[14]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[14]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[14]),
        .O(\read_ticks[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[15]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[15]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[15]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[15]),
        .O(\read_ticks[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[16]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[16]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[16]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[16]),
        .O(\read_ticks[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[17]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[17]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[17]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[17]),
        .O(\read_ticks[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[18]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[18]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[18]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[18]),
        .O(\read_ticks[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[19]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[19]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[19]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[19]),
        .O(\read_ticks[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[1]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[1]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[1]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[1]),
        .O(\read_ticks[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[20]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[20]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[20]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[20]),
        .O(\read_ticks[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[21]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[21]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[21]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[21]),
        .O(\read_ticks[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[22]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[22]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[22]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[22]),
        .O(\read_ticks[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[23]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[23]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[23]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[23]),
        .O(\read_ticks[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[24]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[24]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[24]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[24]),
        .O(\read_ticks[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[25]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[25]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[25]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[25]),
        .O(\read_ticks[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[26]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[26]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[26]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[26]),
        .O(\read_ticks[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[27]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[27]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[27]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[27]),
        .O(\read_ticks[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[28]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[28]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[28]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[28]),
        .O(\read_ticks[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[29]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[29]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[29]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[29]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[29]),
        .O(\read_ticks[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[2]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[2]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[2]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[2]),
        .O(\read_ticks[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[30]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[30]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[30]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[30]),
        .O(\read_ticks[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[31]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[31]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \read_ticks[31]_i_10 
       (.I0(read_ticks20_out[32]),
        .I1(read_ticks20_out[33]),
        .O(\read_ticks[31]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_100 
       (.I0(countReadReqToBeSent[21]),
        .I1(countDataReceived[21]),
        .O(\read_ticks[31]_i_100_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_101 
       (.I0(countReadReqToBeSent[20]),
        .I1(countDataReceived[20]),
        .O(\read_ticks[31]_i_101_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_102 
       (.I0(countReadReqToBeSent[19]),
        .I1(countDataReceived[19]),
        .O(\read_ticks[31]_i_102_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_103 
       (.I0(countReadReqToBeSent[18]),
        .I1(countDataReceived[18]),
        .O(\read_ticks[31]_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_104 
       (.I0(countReadReqToBeSent[17]),
        .I1(countDataReceived[17]),
        .O(\read_ticks[31]_i_104_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_105 
       (.I0(countReadReqToBeSent[16]),
        .I1(countDataReceived[16]),
        .O(\read_ticks[31]_i_105_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_106 
       (.I0(countReadReqToBeSent[15]),
        .I1(countDataReceived[15]),
        .O(\read_ticks[31]_i_106_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_107 
       (.I0(countReadReqToBeSent[14]),
        .I1(countDataReceived[14]),
        .O(\read_ticks[31]_i_107_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_108 
       (.I0(countReadReqToBeSent[13]),
        .I1(countDataReceived[13]),
        .O(\read_ticks[31]_i_108_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_109 
       (.I0(countReadReqToBeSent[12]),
        .I1(countDataReceived[12]),
        .O(\read_ticks[31]_i_109_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_110 
       (.I0(countReadReqToBeSent[11]),
        .I1(countDataReceived[11]),
        .O(\read_ticks[31]_i_110_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_111 
       (.I0(countReadReqToBeSent[10]),
        .I1(countDataReceived[10]),
        .O(\read_ticks[31]_i_111_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_112 
       (.I0(countReadReqToBeSent[9]),
        .I1(countDataReceived[9]),
        .O(\read_ticks[31]_i_112_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_113 
       (.I0(countReadReqToBeSent[8]),
        .I1(countDataReceived[8]),
        .O(\read_ticks[31]_i_113_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_114 
       (.I0(countReadReqToBeSent[7]),
        .I1(countDataReceived[7]),
        .O(\read_ticks[31]_i_114_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_115 
       (.I0(countReadReqToBeSent[6]),
        .I1(countDataReceived[6]),
        .O(\read_ticks[31]_i_115_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_116 
       (.I0(countReadReqToBeSent[5]),
        .I1(countDataReceived[5]),
        .O(\read_ticks[31]_i_116_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_117 
       (.I0(countReadReqToBeSent[4]),
        .I1(countDataReceived[4]),
        .O(\read_ticks[31]_i_117_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_118 
       (.I0(countReadReqToBeSent[3]),
        .I1(countDataReceived[3]),
        .O(\read_ticks[31]_i_118_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_119 
       (.I0(countReadReqToBeSent[2]),
        .I1(countDataReceived[2]),
        .O(\read_ticks[31]_i_119_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_12 
       (.I0(read_ticks2[30]),
        .I1(read_ticks_per_burst[30]),
        .I2(read_ticks_per_burst[31]),
        .I3(read_ticks2[31]),
        .O(\read_ticks[31]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_120 
       (.I0(countReadReqToBeSent[1]),
        .I1(countDataReceived[1]),
        .O(\read_ticks[31]_i_120_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_121 
       (.I0(countReadReqToBeSent[0]),
        .I1(countDataReceived[0]),
        .O(\read_ticks[31]_i_121_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_13 
       (.I0(read_ticks2[28]),
        .I1(read_ticks_per_burst[28]),
        .I2(read_ticks_per_burst[29]),
        .I3(read_ticks2[29]),
        .O(\read_ticks[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_14 
       (.I0(read_ticks2[26]),
        .I1(read_ticks_per_burst[26]),
        .I2(read_ticks_per_burst[27]),
        .I3(read_ticks2[27]),
        .O(\read_ticks[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_15 
       (.I0(read_ticks2[24]),
        .I1(read_ticks_per_burst[24]),
        .I2(read_ticks_per_burst[25]),
        .I3(read_ticks2[25]),
        .O(\read_ticks[31]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_16 
       (.I0(read_ticks2[22]),
        .I1(read_ticks_per_burst[22]),
        .I2(read_ticks_per_burst[23]),
        .I3(read_ticks2[23]),
        .O(\read_ticks[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_17 
       (.I0(read_ticks2[20]),
        .I1(read_ticks_per_burst[20]),
        .I2(read_ticks_per_burst[21]),
        .I3(read_ticks2[21]),
        .O(\read_ticks[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_18 
       (.I0(read_ticks2[18]),
        .I1(read_ticks_per_burst[18]),
        .I2(read_ticks_per_burst[19]),
        .I3(read_ticks2[19]),
        .O(\read_ticks[31]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_19 
       (.I0(read_ticks2[16]),
        .I1(read_ticks_per_burst[16]),
        .I2(read_ticks_per_burst[17]),
        .I3(read_ticks2[17]),
        .O(\read_ticks[31]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[31]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[31]),
        .O(\read_ticks[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_20 
       (.I0(read_ticks2[30]),
        .I1(read_ticks_per_burst[30]),
        .I2(read_ticks2[31]),
        .I3(read_ticks_per_burst[31]),
        .O(\read_ticks[31]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_21 
       (.I0(read_ticks2[28]),
        .I1(read_ticks_per_burst[28]),
        .I2(read_ticks2[29]),
        .I3(read_ticks_per_burst[29]),
        .O(\read_ticks[31]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_22 
       (.I0(read_ticks2[26]),
        .I1(read_ticks_per_burst[26]),
        .I2(read_ticks2[27]),
        .I3(read_ticks_per_burst[27]),
        .O(\read_ticks[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_23 
       (.I0(read_ticks2[24]),
        .I1(read_ticks_per_burst[24]),
        .I2(read_ticks2[25]),
        .I3(read_ticks_per_burst[25]),
        .O(\read_ticks[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_24 
       (.I0(read_ticks2[22]),
        .I1(read_ticks_per_burst[22]),
        .I2(read_ticks2[23]),
        .I3(read_ticks_per_burst[23]),
        .O(\read_ticks[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_25 
       (.I0(read_ticks2[20]),
        .I1(read_ticks_per_burst[20]),
        .I2(read_ticks2[21]),
        .I3(read_ticks_per_burst[21]),
        .O(\read_ticks[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_26 
       (.I0(read_ticks2[18]),
        .I1(read_ticks_per_burst[18]),
        .I2(read_ticks2[19]),
        .I3(read_ticks_per_burst[19]),
        .O(\read_ticks[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_27 
       (.I0(read_ticks2[16]),
        .I1(read_ticks_per_burst[16]),
        .I2(read_ticks2[17]),
        .I3(read_ticks_per_burst[17]),
        .O(\read_ticks[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_29 
       (.I0(read_max_queue_size[30]),
        .I1(read_ticks20_out[30]),
        .I2(read_ticks20_out[31]),
        .I3(read_max_queue_size[31]),
        .O(\read_ticks[31]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_30 
       (.I0(read_max_queue_size[28]),
        .I1(read_ticks20_out[28]),
        .I2(read_ticks20_out[29]),
        .I3(read_max_queue_size[29]),
        .O(\read_ticks[31]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_31 
       (.I0(read_max_queue_size[26]),
        .I1(read_ticks20_out[26]),
        .I2(read_ticks20_out[27]),
        .I3(read_max_queue_size[27]),
        .O(\read_ticks[31]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_32 
       (.I0(read_max_queue_size[24]),
        .I1(read_ticks20_out[24]),
        .I2(read_ticks20_out[25]),
        .I3(read_max_queue_size[25]),
        .O(\read_ticks[31]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_33 
       (.I0(read_max_queue_size[22]),
        .I1(read_ticks20_out[22]),
        .I2(read_ticks20_out[23]),
        .I3(read_max_queue_size[23]),
        .O(\read_ticks[31]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_34 
       (.I0(read_max_queue_size[20]),
        .I1(read_ticks20_out[20]),
        .I2(read_ticks20_out[21]),
        .I3(read_max_queue_size[21]),
        .O(\read_ticks[31]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_35 
       (.I0(read_max_queue_size[18]),
        .I1(read_ticks20_out[18]),
        .I2(read_ticks20_out[19]),
        .I3(read_max_queue_size[19]),
        .O(\read_ticks[31]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_36 
       (.I0(read_max_queue_size[16]),
        .I1(read_ticks20_out[16]),
        .I2(read_ticks20_out[17]),
        .I3(read_max_queue_size[17]),
        .O(\read_ticks[31]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_37 
       (.I0(read_max_queue_size[30]),
        .I1(read_ticks20_out[30]),
        .I2(read_max_queue_size[31]),
        .I3(read_ticks20_out[31]),
        .O(\read_ticks[31]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_38 
       (.I0(read_max_queue_size[28]),
        .I1(read_ticks20_out[28]),
        .I2(read_max_queue_size[29]),
        .I3(read_ticks20_out[29]),
        .O(\read_ticks[31]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_39 
       (.I0(read_max_queue_size[26]),
        .I1(read_ticks20_out[26]),
        .I2(read_max_queue_size[27]),
        .I3(read_ticks20_out[27]),
        .O(\read_ticks[31]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_40 
       (.I0(read_max_queue_size[24]),
        .I1(read_ticks20_out[24]),
        .I2(read_max_queue_size[25]),
        .I3(read_ticks20_out[25]),
        .O(\read_ticks[31]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_41 
       (.I0(read_max_queue_size[22]),
        .I1(read_ticks20_out[22]),
        .I2(read_max_queue_size[23]),
        .I3(read_ticks20_out[23]),
        .O(\read_ticks[31]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_42 
       (.I0(read_max_queue_size[20]),
        .I1(read_ticks20_out[20]),
        .I2(read_max_queue_size[21]),
        .I3(read_ticks20_out[21]),
        .O(\read_ticks[31]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_43 
       (.I0(read_max_queue_size[18]),
        .I1(read_ticks20_out[18]),
        .I2(read_max_queue_size[19]),
        .I3(read_ticks20_out[19]),
        .O(\read_ticks[31]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_44 
       (.I0(read_max_queue_size[16]),
        .I1(read_ticks20_out[16]),
        .I2(read_max_queue_size[17]),
        .I3(read_ticks20_out[17]),
        .O(\read_ticks[31]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_46 
       (.I0(read_ticks2[14]),
        .I1(read_ticks_per_burst[14]),
        .I2(read_ticks_per_burst[15]),
        .I3(read_ticks2[15]),
        .O(\read_ticks[31]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_47 
       (.I0(read_ticks2[12]),
        .I1(read_ticks_per_burst[12]),
        .I2(read_ticks_per_burst[13]),
        .I3(read_ticks2[13]),
        .O(\read_ticks[31]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_48 
       (.I0(read_ticks2[10]),
        .I1(read_ticks_per_burst[10]),
        .I2(read_ticks_per_burst[11]),
        .I3(read_ticks2[11]),
        .O(\read_ticks[31]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_49 
       (.I0(read_ticks2[8]),
        .I1(read_ticks_per_burst[8]),
        .I2(read_ticks_per_burst[9]),
        .I3(read_ticks2[9]),
        .O(\read_ticks[31]_i_49_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_50 
       (.I0(read_ticks2[6]),
        .I1(read_ticks_per_burst[6]),
        .I2(read_ticks_per_burst[7]),
        .I3(read_ticks2[7]),
        .O(\read_ticks[31]_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_51 
       (.I0(read_ticks2[4]),
        .I1(read_ticks_per_burst[4]),
        .I2(read_ticks_per_burst[5]),
        .I3(read_ticks2[5]),
        .O(\read_ticks[31]_i_51_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_52 
       (.I0(read_ticks2[2]),
        .I1(read_ticks_per_burst[2]),
        .I2(read_ticks_per_burst[3]),
        .I3(read_ticks2[3]),
        .O(\read_ticks[31]_i_52_n_0 ));
  LUT4 #(
    .INIT(16'h1F01)) 
    \read_ticks[31]_i_53 
       (.I0(read_ticks_per_burst[0]),
        .I1(read_ticks[0]),
        .I2(read_ticks_per_burst[1]),
        .I3(read_ticks2[1]),
        .O(\read_ticks[31]_i_53_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_54 
       (.I0(read_ticks2[14]),
        .I1(read_ticks_per_burst[14]),
        .I2(read_ticks2[15]),
        .I3(read_ticks_per_burst[15]),
        .O(\read_ticks[31]_i_54_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_55 
       (.I0(read_ticks2[12]),
        .I1(read_ticks_per_burst[12]),
        .I2(read_ticks2[13]),
        .I3(read_ticks_per_burst[13]),
        .O(\read_ticks[31]_i_55_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_56 
       (.I0(read_ticks2[10]),
        .I1(read_ticks_per_burst[10]),
        .I2(read_ticks2[11]),
        .I3(read_ticks_per_burst[11]),
        .O(\read_ticks[31]_i_56_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_57 
       (.I0(read_ticks2[8]),
        .I1(read_ticks_per_burst[8]),
        .I2(read_ticks2[9]),
        .I3(read_ticks_per_burst[9]),
        .O(\read_ticks[31]_i_57_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_58 
       (.I0(read_ticks2[6]),
        .I1(read_ticks_per_burst[6]),
        .I2(read_ticks2[7]),
        .I3(read_ticks_per_burst[7]),
        .O(\read_ticks[31]_i_58_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_59 
       (.I0(read_ticks2[4]),
        .I1(read_ticks_per_burst[4]),
        .I2(read_ticks2[5]),
        .I3(read_ticks_per_burst[5]),
        .O(\read_ticks[31]_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_60 
       (.I0(read_ticks2[2]),
        .I1(read_ticks_per_burst[2]),
        .I2(read_ticks2[3]),
        .I3(read_ticks_per_burst[3]),
        .O(\read_ticks[31]_i_60_n_0 ));
  LUT4 #(
    .INIT(16'h6006)) 
    \read_ticks[31]_i_61 
       (.I0(read_ticks[0]),
        .I1(read_ticks_per_burst[0]),
        .I2(read_ticks2[1]),
        .I3(read_ticks_per_burst[1]),
        .O(\read_ticks[31]_i_61_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_62 
       (.I0(read_max_queue_size[14]),
        .I1(read_ticks20_out[14]),
        .I2(read_ticks20_out[15]),
        .I3(read_max_queue_size[15]),
        .O(\read_ticks[31]_i_62_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_63 
       (.I0(read_max_queue_size[12]),
        .I1(read_ticks20_out[12]),
        .I2(read_ticks20_out[13]),
        .I3(read_max_queue_size[13]),
        .O(\read_ticks[31]_i_63_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_64 
       (.I0(read_max_queue_size[10]),
        .I1(read_ticks20_out[10]),
        .I2(read_ticks20_out[11]),
        .I3(read_max_queue_size[11]),
        .O(\read_ticks[31]_i_64_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_65 
       (.I0(read_max_queue_size[8]),
        .I1(read_ticks20_out[8]),
        .I2(read_ticks20_out[9]),
        .I3(read_max_queue_size[9]),
        .O(\read_ticks[31]_i_65_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_66 
       (.I0(read_max_queue_size[6]),
        .I1(read_ticks20_out[6]),
        .I2(read_ticks20_out[7]),
        .I3(read_max_queue_size[7]),
        .O(\read_ticks[31]_i_66_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_67 
       (.I0(read_max_queue_size[4]),
        .I1(read_ticks20_out[4]),
        .I2(read_ticks20_out[5]),
        .I3(read_max_queue_size[5]),
        .O(\read_ticks[31]_i_67_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_68 
       (.I0(read_max_queue_size[2]),
        .I1(read_ticks20_out[2]),
        .I2(read_ticks20_out[3]),
        .I3(read_max_queue_size[3]),
        .O(\read_ticks[31]_i_68_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \read_ticks[31]_i_69 
       (.I0(read_max_queue_size[0]),
        .I1(read_ticks20_out[0]),
        .I2(read_ticks20_out[1]),
        .I3(read_max_queue_size[1]),
        .O(\read_ticks[31]_i_69_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \read_ticks[31]_i_7 
       (.I0(read_ticks20_out[38]),
        .I1(read_ticks20_out[39]),
        .O(\read_ticks[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_70 
       (.I0(read_max_queue_size[14]),
        .I1(read_ticks20_out[14]),
        .I2(read_max_queue_size[15]),
        .I3(read_ticks20_out[15]),
        .O(\read_ticks[31]_i_70_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_71 
       (.I0(read_max_queue_size[12]),
        .I1(read_ticks20_out[12]),
        .I2(read_max_queue_size[13]),
        .I3(read_ticks20_out[13]),
        .O(\read_ticks[31]_i_71_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_72 
       (.I0(read_max_queue_size[10]),
        .I1(read_ticks20_out[10]),
        .I2(read_max_queue_size[11]),
        .I3(read_ticks20_out[11]),
        .O(\read_ticks[31]_i_72_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_73 
       (.I0(read_max_queue_size[8]),
        .I1(read_ticks20_out[8]),
        .I2(read_max_queue_size[9]),
        .I3(read_ticks20_out[9]),
        .O(\read_ticks[31]_i_73_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_74 
       (.I0(read_max_queue_size[6]),
        .I1(read_ticks20_out[6]),
        .I2(read_max_queue_size[7]),
        .I3(read_ticks20_out[7]),
        .O(\read_ticks[31]_i_74_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_75 
       (.I0(read_max_queue_size[4]),
        .I1(read_ticks20_out[4]),
        .I2(read_max_queue_size[5]),
        .I3(read_ticks20_out[5]),
        .O(\read_ticks[31]_i_75_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_76 
       (.I0(read_max_queue_size[2]),
        .I1(read_ticks20_out[2]),
        .I2(read_max_queue_size[3]),
        .I3(read_ticks20_out[3]),
        .O(\read_ticks[31]_i_76_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \read_ticks[31]_i_77 
       (.I0(read_max_queue_size[0]),
        .I1(read_ticks20_out[0]),
        .I2(read_max_queue_size[1]),
        .I3(read_ticks20_out[1]),
        .O(\read_ticks[31]_i_77_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \read_ticks[31]_i_8 
       (.I0(read_ticks20_out[36]),
        .I1(read_ticks20_out[37]),
        .O(\read_ticks[31]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_80 
       (.I0(countReadReqToBeSent[39]),
        .I1(countDataReceived[39]),
        .O(\read_ticks[31]_i_80_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_81 
       (.I0(countReadReqToBeSent[38]),
        .I1(countDataReceived[38]),
        .O(\read_ticks[31]_i_81_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_82 
       (.I0(countReadReqToBeSent[37]),
        .I1(countDataReceived[37]),
        .O(\read_ticks[31]_i_82_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_83 
       (.I0(countReadReqToBeSent[36]),
        .I1(countDataReceived[36]),
        .O(\read_ticks[31]_i_83_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_84 
       (.I0(countReadReqToBeSent[35]),
        .I1(countDataReceived[35]),
        .O(\read_ticks[31]_i_84_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_85 
       (.I0(countReadReqToBeSent[34]),
        .I1(countDataReceived[34]),
        .O(\read_ticks[31]_i_85_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_86 
       (.I0(countReadReqToBeSent[33]),
        .I1(countDataReceived[33]),
        .O(\read_ticks[31]_i_86_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_87 
       (.I0(countReadReqToBeSent[32]),
        .I1(countDataReceived[32]),
        .O(\read_ticks[31]_i_87_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \read_ticks[31]_i_9 
       (.I0(read_ticks20_out[34]),
        .I1(read_ticks20_out[35]),
        .O(\read_ticks[31]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_90 
       (.I0(countReadReqToBeSent[31]),
        .I1(countDataReceived[31]),
        .O(\read_ticks[31]_i_90_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_91 
       (.I0(countReadReqToBeSent[30]),
        .I1(countDataReceived[30]),
        .O(\read_ticks[31]_i_91_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_92 
       (.I0(countReadReqToBeSent[29]),
        .I1(countDataReceived[29]),
        .O(\read_ticks[31]_i_92_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_93 
       (.I0(countReadReqToBeSent[28]),
        .I1(countDataReceived[28]),
        .O(\read_ticks[31]_i_93_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_94 
       (.I0(countReadReqToBeSent[27]),
        .I1(countDataReceived[27]),
        .O(\read_ticks[31]_i_94_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_95 
       (.I0(countReadReqToBeSent[26]),
        .I1(countDataReceived[26]),
        .O(\read_ticks[31]_i_95_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_96 
       (.I0(countReadReqToBeSent[25]),
        .I1(countDataReceived[25]),
        .O(\read_ticks[31]_i_96_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_97 
       (.I0(countReadReqToBeSent[24]),
        .I1(countDataReceived[24]),
        .O(\read_ticks[31]_i_97_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_98 
       (.I0(countReadReqToBeSent[23]),
        .I1(countDataReceived[23]),
        .O(\read_ticks[31]_i_98_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \read_ticks[31]_i_99 
       (.I0(countReadReqToBeSent[22]),
        .I1(countDataReceived[22]),
        .O(\read_ticks[31]_i_99_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[3]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[3]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[3]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[3]),
        .O(\read_ticks[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[4]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[4]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[4]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[4]),
        .O(\read_ticks[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[5]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[5]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[5]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[5]),
        .O(\read_ticks[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[6]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[6]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[6]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[6]),
        .O(\read_ticks[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[7]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[7]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[7]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[7]),
        .O(\read_ticks[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[8]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[8]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[8]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[8]),
        .O(\read_ticks[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \read_ticks[9]_i_1 
       (.I0(\countDataReceived[39]_i_3_n_0 ),
        .I1(\read_ticks[9]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\read_ticks_reg[31]_i_3_n_4 ),
        .I4(\read_ticks_reg[31]_i_4_n_0 ),
        .I5(reset_cmd),
        .O(\read_ticks[9]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \read_ticks[9]_i_2 
       (.I0(\read_ticks_reg[31]_i_4_n_0 ),
        .I1(\read_ticks_reg[31]_i_3_n_4 ),
        .I2(active_read),
        .I3(read_ticks2[9]),
        .O(\read_ticks[9]_i_2_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[0]),
        .Q(read_ticks_per_burst[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[10]),
        .Q(read_ticks_per_burst[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[11]),
        .Q(read_ticks_per_burst[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[12]),
        .Q(read_ticks_per_burst[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[13]),
        .Q(read_ticks_per_burst[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[14]),
        .Q(read_ticks_per_burst[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[15]),
        .Q(read_ticks_per_burst[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[16]),
        .Q(read_ticks_per_burst[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[17]),
        .Q(read_ticks_per_burst[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[18]),
        .Q(read_ticks_per_burst[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[19]),
        .Q(read_ticks_per_burst[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[1]),
        .Q(read_ticks_per_burst[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[20]),
        .Q(read_ticks_per_burst[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[21]),
        .Q(read_ticks_per_burst[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[22]),
        .Q(read_ticks_per_burst[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[23]),
        .Q(read_ticks_per_burst[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[24]),
        .Q(read_ticks_per_burst[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[25]),
        .Q(read_ticks_per_burst[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[26]),
        .Q(read_ticks_per_burst[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[27]),
        .Q(read_ticks_per_burst[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[28]),
        .Q(read_ticks_per_burst[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[29]),
        .Q(read_ticks_per_burst[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_ticks_per_burst_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[2]),
        .Q(read_ticks_per_burst[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[30]),
        .Q(read_ticks_per_burst[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[31]),
        .Q(read_ticks_per_burst[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[3]),
        .Q(read_ticks_per_burst[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[4]),
        .Q(read_ticks_per_burst[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_ticks_per_burst_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[5]),
        .Q(read_ticks_per_burst[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \read_ticks_per_burst_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[6]),
        .Q(read_ticks_per_burst[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[7]),
        .Q(read_ticks_per_burst[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[8]),
        .Q(read_ticks_per_burst[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_per_burst_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(read_ticks_per_burst__0[9]),
        .Q(read_ticks_per_burst[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[0]_i_1_n_0 ),
        .Q(read_ticks[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[10]_i_1_n_0 ),
        .Q(read_ticks[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[11]_i_1_n_0 ),
        .Q(read_ticks[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[12]_i_1_n_0 ),
        .Q(read_ticks[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[13]_i_1_n_0 ),
        .Q(read_ticks[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[14]_i_1_n_0 ),
        .Q(read_ticks[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[15]_i_1_n_0 ),
        .Q(read_ticks[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[16]_i_1_n_0 ),
        .Q(read_ticks[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[16]_i_3 
       (.CI(\read_ticks_reg[8]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[16]_i_3_n_0 ,\read_ticks_reg[16]_i_3_n_1 ,\read_ticks_reg[16]_i_3_n_2 ,\read_ticks_reg[16]_i_3_n_3 ,\NLW_read_ticks_reg[16]_i_3_CO_UNCONNECTED [3],\read_ticks_reg[16]_i_3_n_5 ,\read_ticks_reg[16]_i_3_n_6 ,\read_ticks_reg[16]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(read_ticks2[16:9]),
        .S(read_ticks[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[17]_i_1_n_0 ),
        .Q(read_ticks[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[18]_i_1_n_0 ),
        .Q(read_ticks[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[19]_i_1_n_0 ),
        .Q(read_ticks[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[1]_i_1_n_0 ),
        .Q(read_ticks[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[20]_i_1_n_0 ),
        .Q(read_ticks[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[21]_i_1_n_0 ),
        .Q(read_ticks[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[22]_i_1_n_0 ),
        .Q(read_ticks[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[23]_i_1_n_0 ),
        .Q(read_ticks[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[24]_i_1_n_0 ),
        .Q(read_ticks[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[24]_i_3 
       (.CI(\read_ticks_reg[16]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[24]_i_3_n_0 ,\read_ticks_reg[24]_i_3_n_1 ,\read_ticks_reg[24]_i_3_n_2 ,\read_ticks_reg[24]_i_3_n_3 ,\NLW_read_ticks_reg[24]_i_3_CO_UNCONNECTED [3],\read_ticks_reg[24]_i_3_n_5 ,\read_ticks_reg[24]_i_3_n_6 ,\read_ticks_reg[24]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(read_ticks2[24:17]),
        .S(read_ticks[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[25]_i_1_n_0 ),
        .Q(read_ticks[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[26]_i_1_n_0 ),
        .Q(read_ticks[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[27]_i_1_n_0 ),
        .Q(read_ticks[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[28]_i_1_n_0 ),
        .Q(read_ticks[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[29]_i_1_n_0 ),
        .Q(read_ticks[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[2]_i_1_n_0 ),
        .Q(read_ticks[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[30]_i_1_n_0 ),
        .Q(read_ticks[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[31]_i_1_n_0 ),
        .Q(read_ticks[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_11 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_11_n_0 ,\read_ticks_reg[31]_i_11_n_1 ,\read_ticks_reg[31]_i_11_n_2 ,\read_ticks_reg[31]_i_11_n_3 ,\NLW_read_ticks_reg[31]_i_11_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_11_n_5 ,\read_ticks_reg[31]_i_11_n_6 ,\read_ticks_reg[31]_i_11_n_7 }),
        .DI({\read_ticks[31]_i_46_n_0 ,\read_ticks[31]_i_47_n_0 ,\read_ticks[31]_i_48_n_0 ,\read_ticks[31]_i_49_n_0 ,\read_ticks[31]_i_50_n_0 ,\read_ticks[31]_i_51_n_0 ,\read_ticks[31]_i_52_n_0 ,\read_ticks[31]_i_53_n_0 }),
        .O(\NLW_read_ticks_reg[31]_i_11_O_UNCONNECTED [7:0]),
        .S({\read_ticks[31]_i_54_n_0 ,\read_ticks[31]_i_55_n_0 ,\read_ticks[31]_i_56_n_0 ,\read_ticks[31]_i_57_n_0 ,\read_ticks[31]_i_58_n_0 ,\read_ticks[31]_i_59_n_0 ,\read_ticks[31]_i_60_n_0 ,\read_ticks[31]_i_61_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_28 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_28_n_0 ,\read_ticks_reg[31]_i_28_n_1 ,\read_ticks_reg[31]_i_28_n_2 ,\read_ticks_reg[31]_i_28_n_3 ,\NLW_read_ticks_reg[31]_i_28_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_28_n_5 ,\read_ticks_reg[31]_i_28_n_6 ,\read_ticks_reg[31]_i_28_n_7 }),
        .DI({\read_ticks[31]_i_62_n_0 ,\read_ticks[31]_i_63_n_0 ,\read_ticks[31]_i_64_n_0 ,\read_ticks[31]_i_65_n_0 ,\read_ticks[31]_i_66_n_0 ,\read_ticks[31]_i_67_n_0 ,\read_ticks[31]_i_68_n_0 ,\read_ticks[31]_i_69_n_0 }),
        .O(\NLW_read_ticks_reg[31]_i_28_O_UNCONNECTED [7:0]),
        .S({\read_ticks[31]_i_70_n_0 ,\read_ticks[31]_i_71_n_0 ,\read_ticks[31]_i_72_n_0 ,\read_ticks[31]_i_73_n_0 ,\read_ticks[31]_i_74_n_0 ,\read_ticks[31]_i_75_n_0 ,\read_ticks[31]_i_76_n_0 ,\read_ticks[31]_i_77_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_3 
       (.CI(\read_ticks_reg[31]_i_6_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_read_ticks_reg[31]_i_3_CO_UNCONNECTED [7:4],\read_ticks_reg[31]_i_3_n_4 ,\read_ticks_reg[31]_i_3_n_5 ,\read_ticks_reg[31]_i_3_n_6 ,\read_ticks_reg[31]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_read_ticks_reg[31]_i_3_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,\read_ticks[31]_i_7_n_0 ,\read_ticks[31]_i_8_n_0 ,\read_ticks[31]_i_9_n_0 ,\read_ticks[31]_i_10_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_4 
       (.CI(\read_ticks_reg[31]_i_11_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_4_n_0 ,\read_ticks_reg[31]_i_4_n_1 ,\read_ticks_reg[31]_i_4_n_2 ,\read_ticks_reg[31]_i_4_n_3 ,\NLW_read_ticks_reg[31]_i_4_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_4_n_5 ,\read_ticks_reg[31]_i_4_n_6 ,\read_ticks_reg[31]_i_4_n_7 }),
        .DI({\read_ticks[31]_i_12_n_0 ,\read_ticks[31]_i_13_n_0 ,\read_ticks[31]_i_14_n_0 ,\read_ticks[31]_i_15_n_0 ,\read_ticks[31]_i_16_n_0 ,\read_ticks[31]_i_17_n_0 ,\read_ticks[31]_i_18_n_0 ,\read_ticks[31]_i_19_n_0 }),
        .O(\NLW_read_ticks_reg[31]_i_4_O_UNCONNECTED [7:0]),
        .S({\read_ticks[31]_i_20_n_0 ,\read_ticks[31]_i_21_n_0 ,\read_ticks[31]_i_22_n_0 ,\read_ticks[31]_i_23_n_0 ,\read_ticks[31]_i_24_n_0 ,\read_ticks[31]_i_25_n_0 ,\read_ticks[31]_i_26_n_0 ,\read_ticks[31]_i_27_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_45 
       (.CI(\read_ticks_reg[31]_i_78_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_read_ticks_reg[31]_i_45_CO_UNCONNECTED [7],\read_ticks_reg[31]_i_45_n_1 ,\read_ticks_reg[31]_i_45_n_2 ,\read_ticks_reg[31]_i_45_n_3 ,\NLW_read_ticks_reg[31]_i_45_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_45_n_5 ,\read_ticks_reg[31]_i_45_n_6 ,\read_ticks_reg[31]_i_45_n_7 }),
        .DI({1'b0,countReadReqToBeSent[38:32]}),
        .O(read_ticks20_out[39:32]),
        .S({\read_ticks[31]_i_80_n_0 ,\read_ticks[31]_i_81_n_0 ,\read_ticks[31]_i_82_n_0 ,\read_ticks[31]_i_83_n_0 ,\read_ticks[31]_i_84_n_0 ,\read_ticks[31]_i_85_n_0 ,\read_ticks[31]_i_86_n_0 ,\read_ticks[31]_i_87_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_5 
       (.CI(\read_ticks_reg[24]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_read_ticks_reg[31]_i_5_CO_UNCONNECTED [7:6],\read_ticks_reg[31]_i_5_n_2 ,\read_ticks_reg[31]_i_5_n_3 ,\NLW_read_ticks_reg[31]_i_5_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_5_n_5 ,\read_ticks_reg[31]_i_5_n_6 ,\read_ticks_reg[31]_i_5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_read_ticks_reg[31]_i_5_O_UNCONNECTED [7],read_ticks2[31:25]}),
        .S({1'b0,read_ticks[31:25]}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_6 
       (.CI(\read_ticks_reg[31]_i_28_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_6_n_0 ,\read_ticks_reg[31]_i_6_n_1 ,\read_ticks_reg[31]_i_6_n_2 ,\read_ticks_reg[31]_i_6_n_3 ,\NLW_read_ticks_reg[31]_i_6_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_6_n_5 ,\read_ticks_reg[31]_i_6_n_6 ,\read_ticks_reg[31]_i_6_n_7 }),
        .DI({\read_ticks[31]_i_29_n_0 ,\read_ticks[31]_i_30_n_0 ,\read_ticks[31]_i_31_n_0 ,\read_ticks[31]_i_32_n_0 ,\read_ticks[31]_i_33_n_0 ,\read_ticks[31]_i_34_n_0 ,\read_ticks[31]_i_35_n_0 ,\read_ticks[31]_i_36_n_0 }),
        .O(\NLW_read_ticks_reg[31]_i_6_O_UNCONNECTED [7:0]),
        .S({\read_ticks[31]_i_37_n_0 ,\read_ticks[31]_i_38_n_0 ,\read_ticks[31]_i_39_n_0 ,\read_ticks[31]_i_40_n_0 ,\read_ticks[31]_i_41_n_0 ,\read_ticks[31]_i_42_n_0 ,\read_ticks[31]_i_43_n_0 ,\read_ticks[31]_i_44_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_78 
       (.CI(\read_ticks_reg[31]_i_79_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_78_n_0 ,\read_ticks_reg[31]_i_78_n_1 ,\read_ticks_reg[31]_i_78_n_2 ,\read_ticks_reg[31]_i_78_n_3 ,\NLW_read_ticks_reg[31]_i_78_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_78_n_5 ,\read_ticks_reg[31]_i_78_n_6 ,\read_ticks_reg[31]_i_78_n_7 }),
        .DI(countReadReqToBeSent[31:24]),
        .O(read_ticks20_out[31:24]),
        .S({\read_ticks[31]_i_90_n_0 ,\read_ticks[31]_i_91_n_0 ,\read_ticks[31]_i_92_n_0 ,\read_ticks[31]_i_93_n_0 ,\read_ticks[31]_i_94_n_0 ,\read_ticks[31]_i_95_n_0 ,\read_ticks[31]_i_96_n_0 ,\read_ticks[31]_i_97_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_79 
       (.CI(\read_ticks_reg[31]_i_88_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_79_n_0 ,\read_ticks_reg[31]_i_79_n_1 ,\read_ticks_reg[31]_i_79_n_2 ,\read_ticks_reg[31]_i_79_n_3 ,\NLW_read_ticks_reg[31]_i_79_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_79_n_5 ,\read_ticks_reg[31]_i_79_n_6 ,\read_ticks_reg[31]_i_79_n_7 }),
        .DI(countReadReqToBeSent[23:16]),
        .O(read_ticks20_out[23:16]),
        .S({\read_ticks[31]_i_98_n_0 ,\read_ticks[31]_i_99_n_0 ,\read_ticks[31]_i_100_n_0 ,\read_ticks[31]_i_101_n_0 ,\read_ticks[31]_i_102_n_0 ,\read_ticks[31]_i_103_n_0 ,\read_ticks[31]_i_104_n_0 ,\read_ticks[31]_i_105_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_88 
       (.CI(\read_ticks_reg[31]_i_89_n_0 ),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_88_n_0 ,\read_ticks_reg[31]_i_88_n_1 ,\read_ticks_reg[31]_i_88_n_2 ,\read_ticks_reg[31]_i_88_n_3 ,\NLW_read_ticks_reg[31]_i_88_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_88_n_5 ,\read_ticks_reg[31]_i_88_n_6 ,\read_ticks_reg[31]_i_88_n_7 }),
        .DI(countReadReqToBeSent[15:8]),
        .O(read_ticks20_out[15:8]),
        .S({\read_ticks[31]_i_106_n_0 ,\read_ticks[31]_i_107_n_0 ,\read_ticks[31]_i_108_n_0 ,\read_ticks[31]_i_109_n_0 ,\read_ticks[31]_i_110_n_0 ,\read_ticks[31]_i_111_n_0 ,\read_ticks[31]_i_112_n_0 ,\read_ticks[31]_i_113_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[31]_i_89 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[31]_i_89_n_0 ,\read_ticks_reg[31]_i_89_n_1 ,\read_ticks_reg[31]_i_89_n_2 ,\read_ticks_reg[31]_i_89_n_3 ,\NLW_read_ticks_reg[31]_i_89_CO_UNCONNECTED [3],\read_ticks_reg[31]_i_89_n_5 ,\read_ticks_reg[31]_i_89_n_6 ,\read_ticks_reg[31]_i_89_n_7 }),
        .DI(countReadReqToBeSent[7:0]),
        .O(read_ticks20_out[7:0]),
        .S({\read_ticks[31]_i_114_n_0 ,\read_ticks[31]_i_115_n_0 ,\read_ticks[31]_i_116_n_0 ,\read_ticks[31]_i_117_n_0 ,\read_ticks[31]_i_118_n_0 ,\read_ticks[31]_i_119_n_0 ,\read_ticks[31]_i_120_n_0 ,\read_ticks[31]_i_121_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[3]_i_1_n_0 ),
        .Q(read_ticks[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[4]_i_1_n_0 ),
        .Q(read_ticks[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[5]_i_1_n_0 ),
        .Q(read_ticks[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[6]_i_1_n_0 ),
        .Q(read_ticks[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[7]_i_1_n_0 ),
        .Q(read_ticks[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[8]_i_1_n_0 ),
        .Q(read_ticks[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \read_ticks_reg[8]_i_3 
       (.CI(read_ticks[0]),
        .CI_TOP(1'b0),
        .CO({\read_ticks_reg[8]_i_3_n_0 ,\read_ticks_reg[8]_i_3_n_1 ,\read_ticks_reg[8]_i_3_n_2 ,\read_ticks_reg[8]_i_3_n_3 ,\NLW_read_ticks_reg[8]_i_3_CO_UNCONNECTED [3],\read_ticks_reg[8]_i_3_n_5 ,\read_ticks_reg[8]_i_3_n_6 ,\read_ticks_reg[8]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(read_ticks2[8:1]),
        .S(read_ticks[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \read_ticks_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\read_ticks[9]_i_1_n_0 ),
        .Q(read_ticks[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    reset_cmd_reg
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_1),
        .Q(reset_cmd),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \runtime[63]_i_1 
       (.I0(reset_cmd),
        .I1(\runtime[63]_i_3_n_0 ),
        .O(\runtime[63]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \runtime[63]_i_3 
       (.I0(active_runtime0),
        .I1(active_runtime1),
        .I2(active_blocking),
        .I3(\countDataReceived[39]_i_7_n_0 ),
        .I4(active_runtime2),
        .I5(active_runtime3),
        .O(\runtime[63]_i_3_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_66),
        .Q(runtime[0]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_56),
        .Q(runtime[10]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_55),
        .Q(runtime[11]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_54),
        .Q(runtime[12]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_53),
        .Q(runtime[13]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_52),
        .Q(runtime[14]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_51),
        .Q(runtime[15]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_50),
        .Q(runtime[16]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[16]_i_2 
       (.CI(\runtime_reg[8]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\runtime_reg[16]_i_2_n_0 ,\runtime_reg[16]_i_2_n_1 ,\runtime_reg[16]_i_2_n_2 ,\runtime_reg[16]_i_2_n_3 ,\NLW_runtime_reg[16]_i_2_CO_UNCONNECTED [3],\runtime_reg[16]_i_2_n_5 ,\runtime_reg[16]_i_2_n_6 ,\runtime_reg[16]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(runtime0[16:9]),
        .S(runtime[16:9]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_49),
        .Q(runtime[17]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_48),
        .Q(runtime[18]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_47),
        .Q(runtime[19]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_65),
        .Q(runtime[1]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_46),
        .Q(runtime[20]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_45),
        .Q(runtime[21]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_44),
        .Q(runtime[22]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_43),
        .Q(runtime[23]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_42),
        .Q(runtime[24]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[24]_i_2 
       (.CI(\runtime_reg[16]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\runtime_reg[24]_i_2_n_0 ,\runtime_reg[24]_i_2_n_1 ,\runtime_reg[24]_i_2_n_2 ,\runtime_reg[24]_i_2_n_3 ,\NLW_runtime_reg[24]_i_2_CO_UNCONNECTED [3],\runtime_reg[24]_i_2_n_5 ,\runtime_reg[24]_i_2_n_6 ,\runtime_reg[24]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(runtime0[24:17]),
        .S(runtime[24:17]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_41),
        .Q(runtime[25]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_40),
        .Q(runtime[26]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_39),
        .Q(runtime[27]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_38),
        .Q(runtime[28]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_37),
        .Q(runtime[29]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_64),
        .Q(runtime[2]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_36),
        .Q(runtime[30]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_35),
        .Q(runtime[31]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[32] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_34),
        .Q(runtime[32]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[32]_i_2 
       (.CI(\runtime_reg[24]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\runtime_reg[32]_i_2_n_0 ,\runtime_reg[32]_i_2_n_1 ,\runtime_reg[32]_i_2_n_2 ,\runtime_reg[32]_i_2_n_3 ,\NLW_runtime_reg[32]_i_2_CO_UNCONNECTED [3],\runtime_reg[32]_i_2_n_5 ,\runtime_reg[32]_i_2_n_6 ,\runtime_reg[32]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(runtime0[32:25]),
        .S(runtime[32:25]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[33] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_33),
        .Q(runtime[33]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[34] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_32),
        .Q(runtime[34]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[35] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_31),
        .Q(runtime[35]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[36] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_30),
        .Q(runtime[36]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[37] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_29),
        .Q(runtime[37]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[38] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_28),
        .Q(runtime[38]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[39] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_27),
        .Q(runtime[39]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_63),
        .Q(runtime[3]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[40] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_26),
        .Q(runtime[40]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[40]_i_2 
       (.CI(\runtime_reg[32]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\runtime_reg[40]_i_2_n_0 ,\runtime_reg[40]_i_2_n_1 ,\runtime_reg[40]_i_2_n_2 ,\runtime_reg[40]_i_2_n_3 ,\NLW_runtime_reg[40]_i_2_CO_UNCONNECTED [3],\runtime_reg[40]_i_2_n_5 ,\runtime_reg[40]_i_2_n_6 ,\runtime_reg[40]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(runtime0[40:33]),
        .S(runtime[40:33]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[41] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_25),
        .Q(runtime[41]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[42] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_24),
        .Q(runtime[42]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[43] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_23),
        .Q(runtime[43]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[44] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_22),
        .Q(runtime[44]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[45] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_21),
        .Q(runtime[45]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[46] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_20),
        .Q(runtime[46]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[47] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_19),
        .Q(runtime[47]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[48] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_18),
        .Q(runtime[48]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[48]_i_2 
       (.CI(\runtime_reg[40]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\runtime_reg[48]_i_2_n_0 ,\runtime_reg[48]_i_2_n_1 ,\runtime_reg[48]_i_2_n_2 ,\runtime_reg[48]_i_2_n_3 ,\NLW_runtime_reg[48]_i_2_CO_UNCONNECTED [3],\runtime_reg[48]_i_2_n_5 ,\runtime_reg[48]_i_2_n_6 ,\runtime_reg[48]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(runtime0[48:41]),
        .S(runtime[48:41]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[49] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_17),
        .Q(runtime[49]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_62),
        .Q(runtime[4]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[50] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_16),
        .Q(runtime[50]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[51] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_15),
        .Q(runtime[51]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[52] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_14),
        .Q(runtime[52]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[53] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_13),
        .Q(runtime[53]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[54] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_12),
        .Q(runtime[54]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[55] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_11),
        .Q(runtime[55]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[56] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_10),
        .Q(runtime[56]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[56]_i_2 
       (.CI(\runtime_reg[48]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\runtime_reg[56]_i_2_n_0 ,\runtime_reg[56]_i_2_n_1 ,\runtime_reg[56]_i_2_n_2 ,\runtime_reg[56]_i_2_n_3 ,\NLW_runtime_reg[56]_i_2_CO_UNCONNECTED [3],\runtime_reg[56]_i_2_n_5 ,\runtime_reg[56]_i_2_n_6 ,\runtime_reg[56]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(runtime0[56:49]),
        .S(runtime[56:49]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[57] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_9),
        .Q(runtime[57]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[58] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_8),
        .Q(runtime[58]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[59] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_7),
        .Q(runtime[59]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_61),
        .Q(runtime[5]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[60] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_6),
        .Q(runtime[60]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[61] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_5),
        .Q(runtime[61]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[62] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_4),
        .Q(runtime[62]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[63] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_3),
        .Q(runtime[63]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[63]_i_4 
       (.CI(\runtime_reg[56]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_runtime_reg[63]_i_4_CO_UNCONNECTED [7:6],\runtime_reg[63]_i_4_n_2 ,\runtime_reg[63]_i_4_n_3 ,\NLW_runtime_reg[63]_i_4_CO_UNCONNECTED [3],\runtime_reg[63]_i_4_n_5 ,\runtime_reg[63]_i_4_n_6 ,\runtime_reg[63]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_runtime_reg[63]_i_4_O_UNCONNECTED [7],runtime0[63:57]}),
        .S({1'b0,runtime[63:57]}));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_60),
        .Q(runtime[6]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_59),
        .Q(runtime[7]),
        .R(\runtime[63]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_58),
        .Q(runtime[8]),
        .R(\runtime[63]_i_1_n_0 ));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \runtime_reg[8]_i_2 
       (.CI(runtime[0]),
        .CI_TOP(1'b0),
        .CO({\runtime_reg[8]_i_2_n_0 ,\runtime_reg[8]_i_2_n_1 ,\runtime_reg[8]_i_2_n_2 ,\runtime_reg[8]_i_2_n_3 ,\NLW_runtime_reg[8]_i_2_CO_UNCONNECTED [3],\runtime_reg[8]_i_2_n_5 ,\runtime_reg[8]_i_2_n_6 ,\runtime_reg[8]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(runtime0[8:1]),
        .S(runtime[8:1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \runtime_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(sactn_n_57),
        .Q(runtime[9]),
        .R(\runtime[63]_i_1_n_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_s_axi_control_to_native sactn
       (.CO(\max_cycles_with_no_data_read_reg[31]_i_4_n_0 ),
        .D({sactn_n_3,sactn_n_4,sactn_n_5,sactn_n_6,sactn_n_7,sactn_n_8,sactn_n_9,sactn_n_10,sactn_n_11,sactn_n_12,sactn_n_13,sactn_n_14,sactn_n_15,sactn_n_16,sactn_n_17,sactn_n_18,sactn_n_19,sactn_n_20,sactn_n_21,sactn_n_22,sactn_n_23,sactn_n_24,sactn_n_25,sactn_n_26,sactn_n_27,sactn_n_28,sactn_n_29,sactn_n_30,sactn_n_31,sactn_n_32,sactn_n_33,sactn_n_34,sactn_n_35,sactn_n_36,sactn_n_37,sactn_n_38,sactn_n_39,sactn_n_40,sactn_n_41,sactn_n_42,sactn_n_43,sactn_n_44,sactn_n_45,sactn_n_46,sactn_n_47,sactn_n_48,sactn_n_49,sactn_n_50,sactn_n_51,sactn_n_52,sactn_n_53,sactn_n_54,sactn_n_55,sactn_n_56,sactn_n_57,sactn_n_58,sactn_n_59,sactn_n_60,sactn_n_61,sactn_n_62,sactn_n_63,sactn_n_64,sactn_n_65,sactn_n_66}),
        .E(sactn_n_67),
        .Q(countDataReceived[31:0]),
        .SR(srst),
        .active_blocking__0(active_blocking__0),
        .active_blocking_reg(\runtime[63]_i_3_n_0 ),
        .active_blocking_reg_0(\countDataReceived[39]_i_3_n_0 ),
        .active_blocking_reg_1(data_read_in_this_test_i_2_n_0),
        .active_blocking_reg_2(\countAddrSent[31]_i_3_n_0 ),
        .active_blocking_reg_3(\countAddrSent[39]_i_3_n_0 ),
        .active_blocking_reg_4(active_blocking),
        .active_read__0(active_read__0),
        .active_read_reg(active_read),
        .active_runtime(active_runtime),
        .active_write__0(active_write__0),
        .active_write_reg(active_write),
        .\axi_c_read_data_reg[31] (axi_c_read_data),
        .\axi_c_read_data_reg[31]_0 (axi_c_read_data_reg_n_0_),
        .axi_c_read_data_valid_reg(axi_c_read_valid),
        .axi_c_write_valid(axi_c_write_valid),
        .clk(clk),
        .countAddrSent0(countAddrSent0[31:1]),
        .\countAddrSent_reg[31] (sactn_n_71),
        .\countAddrSent_reg[31]_0 ({sactn_n_264,sactn_n_265,sactn_n_266,sactn_n_267,sactn_n_268,sactn_n_269,sactn_n_270,sactn_n_271,sactn_n_272,sactn_n_273,sactn_n_274,sactn_n_275,sactn_n_276,sactn_n_277,sactn_n_278,sactn_n_279,sactn_n_280,sactn_n_281,sactn_n_282,sactn_n_283,sactn_n_284,sactn_n_285,sactn_n_286,sactn_n_287,sactn_n_288,sactn_n_289,sactn_n_290,sactn_n_291,sactn_n_292,sactn_n_293,sactn_n_294,sactn_n_295}),
        .\countAddrSent_reg[31]_1 (countAddrSent[31:0]),
        .\countAddrToBeSent_reg[38] (\countAddrSent_reg[1]_0 ),
        .countDataReceived0(countDataReceived0[31:1]),
        .\countDataReceived_reg[31] (p_1_in__0[31:0]),
        .\current_cycles_with_no_data_read_reg[31] (current_cycles_with_no_data_read[31:0]),
        .\debug_axi_control_reg[0] (sactn_n_68),
        .\debug_axi_control_reg[31] ({debug_axi_control_reg_n_0_,Q}),
        .\debug_axi_r_control_reg[0] (sactn_n_69),
        .\debug_axi_r_control_reg[31] ({debug_axi_r_control_reg_n_0_,\m_ddr_axi_ARSIZE[2] }),
        .\latency_reg[63] (latency),
        .\max_cycles_with_no_data_read_reg[0] (sactn_n_70),
        .\max_cycles_with_no_data_read_reg[31] ({sactn_n_587,sactn_n_588,sactn_n_589,sactn_n_590,sactn_n_591,sactn_n_592,sactn_n_593,sactn_n_594,sactn_n_595,sactn_n_596,sactn_n_597,sactn_n_598,sactn_n_599,sactn_n_600,sactn_n_601,sactn_n_602,sactn_n_603,sactn_n_604,sactn_n_605,sactn_n_606,sactn_n_607,sactn_n_608,sactn_n_609,sactn_n_610,sactn_n_611,sactn_n_612,sactn_n_613,sactn_n_614,sactn_n_615,sactn_n_616,sactn_n_617,sactn_n_618}),
        .\max_cycles_with_no_data_read_reg[31]_0 (max_cycles_with_no_data_read),
        .out(reset_cmd),
        .readDataLast(readDataLast),
        .readDataValid(readDataValid),
        .\read_blocking_ratio_reg[31] (read_blocking_ratio__0),
        .\read_blocking_ratio_reg[31]_0 (read_blocking_ratio),
        .\read_burst_size_reg[31] (read_burst_size__0),
        .\read_burst_size_reg[31]_0 (read_burst_size),
        .\read_count_bursts_per_reset_reg[31] (read_count_bursts_per_reset__0),
        .\read_count_bursts_per_reset_reg[31]_0 (read_count_bursts_per_reset),
        .read_data_valid(axi_c_read_data_valid),
        .\read_max_queue_size_reg[31] (read_max_queue_size__0),
        .\read_max_queue_size_reg[31]_0 (read_max_queue_size),
        .\read_start_DDR_address_reg[63] (read_start_DDR_address__0),
        .\read_start_DDR_address_reg[63]_0 (read_start_DDR_address),
        .\read_step_DDR_address_reg[31] (read_step_DDR_address__0),
        .\read_step_DDR_address_reg[31]_0 (read_step_DDR_address),
        .\read_ticks_per_burst_reg[31] (read_ticks_per_burst__0),
        .\read_ticks_per_burst_reg[31]_0 (read_ticks_per_burst),
        .reset_cmd_reg(sactn_n_1),
        .rstn(rstn),
        .runtime0(runtime0),
        .\runtime_reg[63] (runtime),
        .s_axi_control_ARADDR(s_axi_control_ARADDR),
        .s_axi_control_ARREADY(s_axi_control_ARREADY),
        .s_axi_control_ARVALID(s_axi_control_ARVALID),
        .s_axi_control_AWADDR(s_axi_control_AWADDR),
        .s_axi_control_AWREADY(s_axi_control_AWREADY),
        .s_axi_control_AWVALID(s_axi_control_AWVALID),
        .s_axi_control_BREADY(s_axi_control_BREADY),
        .s_axi_control_BVALID(s_axi_control_BVALID),
        .s_axi_control_RDATA(s_axi_control_RDATA),
        .s_axi_control_RREADY(s_axi_control_RREADY),
        .s_axi_control_RVALID(s_axi_control_RVALID),
        .s_axi_control_WDATA(s_axi_control_WDATA),
        .s_axi_control_WREADY(s_axi_control_WREADY),
        .s_axi_control_WVALID(s_axi_control_WVALID),
        .writeAbusy(writeAbusy),
        .\write_blocking_ratio_reg[31] (write_blocking_ratio__0),
        .\write_blocking_ratio_reg[31]_0 (write_blocking_ratio),
        .\write_burst_size_reg[31] (write_burst_size__0),
        .\write_burst_size_reg[31]_0 (write_burst_size),
        .\write_count_bursts_per_reset_reg[31] (write_count_bursts_per_reset__0),
        .\write_count_bursts_per_reset_reg[31]_0 (write_count_bursts_per_reset),
        .write_data(axi_c_write_data),
        .\write_max_queue_size_reg[31] (write_max_queue_size__0),
        .\write_max_queue_size_reg[31]_0 (write_max_queue_size),
        .\write_start_DDR_address_reg[63] (write_start_DDR_address__0),
        .\write_start_DDR_address_reg[63]_0 (write_start_DDR_address),
        .\write_step_DDR_address_reg[31] (write_step_DDR_address__0),
        .\write_step_DDR_address_reg[31]_0 (write_step_DDR_address),
        .\write_ticks_per_burst_reg[31] (write_ticks_per_burst__0),
        .\write_ticks_per_burst_reg[31]_0 (write_ticks_per_burst));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_10 
       (.I0(read_step_DDR_address[7]),
        .I1(toReadDataAddress[7]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[7]),
        .O(\toReadDataAddress[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_11 
       (.I0(read_step_DDR_address[6]),
        .I1(toReadDataAddress[6]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[6]),
        .O(\toReadDataAddress[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_12 
       (.I0(read_step_DDR_address[5]),
        .I1(toReadDataAddress[5]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[5]),
        .O(\toReadDataAddress[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_13 
       (.I0(read_step_DDR_address[4]),
        .I1(toReadDataAddress[4]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[4]),
        .O(\toReadDataAddress[0]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_14 
       (.I0(read_step_DDR_address[3]),
        .I1(toReadDataAddress[3]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[3]),
        .O(\toReadDataAddress[0]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_15 
       (.I0(read_step_DDR_address[2]),
        .I1(toReadDataAddress[2]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[2]),
        .O(\toReadDataAddress[0]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_16 
       (.I0(read_step_DDR_address[1]),
        .I1(toReadDataAddress[1]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[1]),
        .O(\toReadDataAddress[0]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[0]_i_17 
       (.I0(read_step_DDR_address[0]),
        .I1(toReadDataAddress[0]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[0]),
        .O(\toReadDataAddress[0]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_2 
       (.I0(read_step_DDR_address[7]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_3 
       (.I0(read_step_DDR_address[6]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_4 
       (.I0(read_step_DDR_address[5]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_5 
       (.I0(read_step_DDR_address[4]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_6 
       (.I0(read_step_DDR_address[3]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_7 
       (.I0(read_step_DDR_address[2]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_8 
       (.I0(read_step_DDR_address[1]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[0]_i_9 
       (.I0(read_step_DDR_address[0]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[0]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_10 
       (.I0(read_step_DDR_address[23]),
        .I1(toReadDataAddress[23]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[23]),
        .O(\toReadDataAddress[16]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_11 
       (.I0(read_step_DDR_address[22]),
        .I1(toReadDataAddress[22]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[22]),
        .O(\toReadDataAddress[16]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_12 
       (.I0(read_step_DDR_address[21]),
        .I1(toReadDataAddress[21]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[21]),
        .O(\toReadDataAddress[16]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_13 
       (.I0(read_step_DDR_address[20]),
        .I1(toReadDataAddress[20]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[20]),
        .O(\toReadDataAddress[16]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_14 
       (.I0(read_step_DDR_address[19]),
        .I1(toReadDataAddress[19]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[19]),
        .O(\toReadDataAddress[16]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_15 
       (.I0(read_step_DDR_address[18]),
        .I1(toReadDataAddress[18]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[18]),
        .O(\toReadDataAddress[16]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_16 
       (.I0(read_step_DDR_address[17]),
        .I1(toReadDataAddress[17]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[17]),
        .O(\toReadDataAddress[16]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[16]_i_17 
       (.I0(read_step_DDR_address[16]),
        .I1(toReadDataAddress[16]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[16]),
        .O(\toReadDataAddress[16]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_2 
       (.I0(read_step_DDR_address[23]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_3 
       (.I0(read_step_DDR_address[22]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_4 
       (.I0(read_step_DDR_address[21]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_5 
       (.I0(read_step_DDR_address[20]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_6 
       (.I0(read_step_DDR_address[19]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_7 
       (.I0(read_step_DDR_address[18]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_8 
       (.I0(read_step_DDR_address[17]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[16]_i_9 
       (.I0(read_step_DDR_address[16]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[16]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_10 
       (.I0(read_step_DDR_address[31]),
        .I1(toReadDataAddress[31]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[31]),
        .O(\toReadDataAddress[24]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_11 
       (.I0(read_step_DDR_address[30]),
        .I1(toReadDataAddress[30]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[30]),
        .O(\toReadDataAddress[24]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_12 
       (.I0(read_step_DDR_address[29]),
        .I1(toReadDataAddress[29]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[29]),
        .O(\toReadDataAddress[24]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_13 
       (.I0(read_step_DDR_address[28]),
        .I1(toReadDataAddress[28]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[28]),
        .O(\toReadDataAddress[24]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_14 
       (.I0(read_step_DDR_address[27]),
        .I1(toReadDataAddress[27]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[27]),
        .O(\toReadDataAddress[24]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_15 
       (.I0(read_step_DDR_address[26]),
        .I1(toReadDataAddress[26]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[26]),
        .O(\toReadDataAddress[24]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_16 
       (.I0(read_step_DDR_address[25]),
        .I1(toReadDataAddress[25]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[25]),
        .O(\toReadDataAddress[24]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[24]_i_17 
       (.I0(read_step_DDR_address[24]),
        .I1(toReadDataAddress[24]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[24]),
        .O(\toReadDataAddress[24]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_2 
       (.I0(read_step_DDR_address[31]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_3 
       (.I0(read_step_DDR_address[30]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_4 
       (.I0(read_step_DDR_address[29]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_5 
       (.I0(read_step_DDR_address[28]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_6 
       (.I0(read_step_DDR_address[27]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_7 
       (.I0(read_step_DDR_address[26]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_8 
       (.I0(read_step_DDR_address[25]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[24]_i_9 
       (.I0(read_step_DDR_address[24]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[24]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_2 
       (.I0(read_start_DDR_address[39]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[39]),
        .O(\toReadDataAddress[32]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_3 
       (.I0(read_start_DDR_address[38]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[38]),
        .O(\toReadDataAddress[32]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_4 
       (.I0(read_start_DDR_address[37]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[37]),
        .O(\toReadDataAddress[32]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_5 
       (.I0(read_start_DDR_address[36]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[36]),
        .O(\toReadDataAddress[32]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_6 
       (.I0(read_start_DDR_address[35]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[35]),
        .O(\toReadDataAddress[32]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_7 
       (.I0(read_start_DDR_address[34]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[34]),
        .O(\toReadDataAddress[32]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_8 
       (.I0(read_start_DDR_address[33]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[33]),
        .O(\toReadDataAddress[32]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[32]_i_9 
       (.I0(read_start_DDR_address[32]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[32]),
        .O(\toReadDataAddress[32]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_2 
       (.I0(read_start_DDR_address[47]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[47]),
        .O(\toReadDataAddress[40]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_3 
       (.I0(read_start_DDR_address[46]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[46]),
        .O(\toReadDataAddress[40]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_4 
       (.I0(read_start_DDR_address[45]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[45]),
        .O(\toReadDataAddress[40]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_5 
       (.I0(read_start_DDR_address[44]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[44]),
        .O(\toReadDataAddress[40]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_6 
       (.I0(read_start_DDR_address[43]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[43]),
        .O(\toReadDataAddress[40]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_7 
       (.I0(read_start_DDR_address[42]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[42]),
        .O(\toReadDataAddress[40]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_8 
       (.I0(read_start_DDR_address[41]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[41]),
        .O(\toReadDataAddress[40]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[40]_i_9 
       (.I0(read_start_DDR_address[40]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[40]),
        .O(\toReadDataAddress[40]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_2 
       (.I0(read_start_DDR_address[55]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[55]),
        .O(\toReadDataAddress[48]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_3 
       (.I0(read_start_DDR_address[54]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[54]),
        .O(\toReadDataAddress[48]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_4 
       (.I0(read_start_DDR_address[53]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[53]),
        .O(\toReadDataAddress[48]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_5 
       (.I0(read_start_DDR_address[52]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[52]),
        .O(\toReadDataAddress[48]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_6 
       (.I0(read_start_DDR_address[51]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[51]),
        .O(\toReadDataAddress[48]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_7 
       (.I0(read_start_DDR_address[50]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[50]),
        .O(\toReadDataAddress[48]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_8 
       (.I0(read_start_DDR_address[49]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[49]),
        .O(\toReadDataAddress[48]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[48]_i_9 
       (.I0(read_start_DDR_address[48]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[48]),
        .O(\toReadDataAddress[48]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_2 
       (.I0(read_start_DDR_address[63]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[63]),
        .O(\toReadDataAddress[56]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_3 
       (.I0(read_start_DDR_address[62]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[62]),
        .O(\toReadDataAddress[56]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_4 
       (.I0(read_start_DDR_address[61]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[61]),
        .O(\toReadDataAddress[56]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_5 
       (.I0(read_start_DDR_address[60]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[60]),
        .O(\toReadDataAddress[56]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_6 
       (.I0(read_start_DDR_address[59]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[59]),
        .O(\toReadDataAddress[56]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_7 
       (.I0(read_start_DDR_address[58]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[58]),
        .O(\toReadDataAddress[56]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_8 
       (.I0(read_start_DDR_address[57]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[57]),
        .O(\toReadDataAddress[56]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \toReadDataAddress[56]_i_9 
       (.I0(read_start_DDR_address[56]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .I2(toReadDataAddress[56]),
        .O(\toReadDataAddress[56]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_10 
       (.I0(read_step_DDR_address[15]),
        .I1(toReadDataAddress[15]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[15]),
        .O(\toReadDataAddress[8]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_11 
       (.I0(read_step_DDR_address[14]),
        .I1(toReadDataAddress[14]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[14]),
        .O(\toReadDataAddress[8]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_12 
       (.I0(read_step_DDR_address[13]),
        .I1(toReadDataAddress[13]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[13]),
        .O(\toReadDataAddress[8]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_13 
       (.I0(read_step_DDR_address[12]),
        .I1(toReadDataAddress[12]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[12]),
        .O(\toReadDataAddress[8]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_14 
       (.I0(read_step_DDR_address[11]),
        .I1(toReadDataAddress[11]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[11]),
        .O(\toReadDataAddress[8]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_15 
       (.I0(read_step_DDR_address[10]),
        .I1(toReadDataAddress[10]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[10]),
        .O(\toReadDataAddress[8]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_16 
       (.I0(read_step_DDR_address[9]),
        .I1(toReadDataAddress[9]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[9]),
        .O(\toReadDataAddress[8]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \toReadDataAddress[8]_i_17 
       (.I0(read_step_DDR_address[8]),
        .I1(toReadDataAddress[8]),
        .I2(\read_count_reg[31]_i_4_n_0 ),
        .I3(read_start_DDR_address[8]),
        .O(\toReadDataAddress[8]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_2 
       (.I0(read_step_DDR_address[15]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_3 
       (.I0(read_step_DDR_address[14]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_4 
       (.I0(read_step_DDR_address[13]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_5 
       (.I0(read_step_DDR_address[12]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_6 
       (.I0(read_step_DDR_address[11]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_7 
       (.I0(read_step_DDR_address[10]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_8 
       (.I0(read_step_DDR_address[9]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \toReadDataAddress[8]_i_9 
       (.I0(read_step_DDR_address[8]),
        .I1(\read_count_reg[31]_i_4_n_0 ),
        .O(\toReadDataAddress[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_15 ),
        .Q(toReadDataAddress[0]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[0]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\toReadDataAddress_reg[0]_i_1_n_0 ,\toReadDataAddress_reg[0]_i_1_n_1 ,\toReadDataAddress_reg[0]_i_1_n_2 ,\toReadDataAddress_reg[0]_i_1_n_3 ,\NLW_toReadDataAddress_reg[0]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[0]_i_1_n_5 ,\toReadDataAddress_reg[0]_i_1_n_6 ,\toReadDataAddress_reg[0]_i_1_n_7 }),
        .DI({\toReadDataAddress[0]_i_2_n_0 ,\toReadDataAddress[0]_i_3_n_0 ,\toReadDataAddress[0]_i_4_n_0 ,\toReadDataAddress[0]_i_5_n_0 ,\toReadDataAddress[0]_i_6_n_0 ,\toReadDataAddress[0]_i_7_n_0 ,\toReadDataAddress[0]_i_8_n_0 ,\toReadDataAddress[0]_i_9_n_0 }),
        .O({\toReadDataAddress_reg[0]_i_1_n_8 ,\toReadDataAddress_reg[0]_i_1_n_9 ,\toReadDataAddress_reg[0]_i_1_n_10 ,\toReadDataAddress_reg[0]_i_1_n_11 ,\toReadDataAddress_reg[0]_i_1_n_12 ,\toReadDataAddress_reg[0]_i_1_n_13 ,\toReadDataAddress_reg[0]_i_1_n_14 ,\toReadDataAddress_reg[0]_i_1_n_15 }),
        .S({\toReadDataAddress[0]_i_10_n_0 ,\toReadDataAddress[0]_i_11_n_0 ,\toReadDataAddress[0]_i_12_n_0 ,\toReadDataAddress[0]_i_13_n_0 ,\toReadDataAddress[0]_i_14_n_0 ,\toReadDataAddress[0]_i_15_n_0 ,\toReadDataAddress[0]_i_16_n_0 ,\toReadDataAddress[0]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_13 ),
        .Q(toReadDataAddress[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_12 ),
        .Q(toReadDataAddress[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[12] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_11 ),
        .Q(toReadDataAddress[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[13] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_10 ),
        .Q(toReadDataAddress[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[14] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_9 ),
        .Q(toReadDataAddress[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[15] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_8 ),
        .Q(toReadDataAddress[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[16] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_15 ),
        .Q(toReadDataAddress[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[16]_i_1 
       (.CI(\toReadDataAddress_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\toReadDataAddress_reg[16]_i_1_n_0 ,\toReadDataAddress_reg[16]_i_1_n_1 ,\toReadDataAddress_reg[16]_i_1_n_2 ,\toReadDataAddress_reg[16]_i_1_n_3 ,\NLW_toReadDataAddress_reg[16]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[16]_i_1_n_5 ,\toReadDataAddress_reg[16]_i_1_n_6 ,\toReadDataAddress_reg[16]_i_1_n_7 }),
        .DI({\toReadDataAddress[16]_i_2_n_0 ,\toReadDataAddress[16]_i_3_n_0 ,\toReadDataAddress[16]_i_4_n_0 ,\toReadDataAddress[16]_i_5_n_0 ,\toReadDataAddress[16]_i_6_n_0 ,\toReadDataAddress[16]_i_7_n_0 ,\toReadDataAddress[16]_i_8_n_0 ,\toReadDataAddress[16]_i_9_n_0 }),
        .O({\toReadDataAddress_reg[16]_i_1_n_8 ,\toReadDataAddress_reg[16]_i_1_n_9 ,\toReadDataAddress_reg[16]_i_1_n_10 ,\toReadDataAddress_reg[16]_i_1_n_11 ,\toReadDataAddress_reg[16]_i_1_n_12 ,\toReadDataAddress_reg[16]_i_1_n_13 ,\toReadDataAddress_reg[16]_i_1_n_14 ,\toReadDataAddress_reg[16]_i_1_n_15 }),
        .S({\toReadDataAddress[16]_i_10_n_0 ,\toReadDataAddress[16]_i_11_n_0 ,\toReadDataAddress[16]_i_12_n_0 ,\toReadDataAddress[16]_i_13_n_0 ,\toReadDataAddress[16]_i_14_n_0 ,\toReadDataAddress[16]_i_15_n_0 ,\toReadDataAddress[16]_i_16_n_0 ,\toReadDataAddress[16]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[17] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_14 ),
        .Q(toReadDataAddress[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[18] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_13 ),
        .Q(toReadDataAddress[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[19] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_12 ),
        .Q(toReadDataAddress[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_14 ),
        .Q(toReadDataAddress[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[20] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_11 ),
        .Q(toReadDataAddress[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[21] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_10 ),
        .Q(toReadDataAddress[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[22] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_9 ),
        .Q(toReadDataAddress[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[23] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[16]_i_1_n_8 ),
        .Q(toReadDataAddress[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[24] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_15 ),
        .Q(toReadDataAddress[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[24]_i_1 
       (.CI(\toReadDataAddress_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\toReadDataAddress_reg[24]_i_1_n_0 ,\toReadDataAddress_reg[24]_i_1_n_1 ,\toReadDataAddress_reg[24]_i_1_n_2 ,\toReadDataAddress_reg[24]_i_1_n_3 ,\NLW_toReadDataAddress_reg[24]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[24]_i_1_n_5 ,\toReadDataAddress_reg[24]_i_1_n_6 ,\toReadDataAddress_reg[24]_i_1_n_7 }),
        .DI({\toReadDataAddress[24]_i_2_n_0 ,\toReadDataAddress[24]_i_3_n_0 ,\toReadDataAddress[24]_i_4_n_0 ,\toReadDataAddress[24]_i_5_n_0 ,\toReadDataAddress[24]_i_6_n_0 ,\toReadDataAddress[24]_i_7_n_0 ,\toReadDataAddress[24]_i_8_n_0 ,\toReadDataAddress[24]_i_9_n_0 }),
        .O({\toReadDataAddress_reg[24]_i_1_n_8 ,\toReadDataAddress_reg[24]_i_1_n_9 ,\toReadDataAddress_reg[24]_i_1_n_10 ,\toReadDataAddress_reg[24]_i_1_n_11 ,\toReadDataAddress_reg[24]_i_1_n_12 ,\toReadDataAddress_reg[24]_i_1_n_13 ,\toReadDataAddress_reg[24]_i_1_n_14 ,\toReadDataAddress_reg[24]_i_1_n_15 }),
        .S({\toReadDataAddress[24]_i_10_n_0 ,\toReadDataAddress[24]_i_11_n_0 ,\toReadDataAddress[24]_i_12_n_0 ,\toReadDataAddress[24]_i_13_n_0 ,\toReadDataAddress[24]_i_14_n_0 ,\toReadDataAddress[24]_i_15_n_0 ,\toReadDataAddress[24]_i_16_n_0 ,\toReadDataAddress[24]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[25] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_14 ),
        .Q(toReadDataAddress[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[26] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_13 ),
        .Q(toReadDataAddress[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[27] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_12 ),
        .Q(toReadDataAddress[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[28] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_11 ),
        .Q(toReadDataAddress[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[29] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_10 ),
        .Q(toReadDataAddress[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_13 ),
        .Q(toReadDataAddress[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[30] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_9 ),
        .Q(toReadDataAddress[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[31] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[24]_i_1_n_8 ),
        .Q(toReadDataAddress[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[32] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_15 ),
        .Q(toReadDataAddress[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[32]_i_1 
       (.CI(\toReadDataAddress_reg[24]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\toReadDataAddress_reg[32]_i_1_n_0 ,\toReadDataAddress_reg[32]_i_1_n_1 ,\toReadDataAddress_reg[32]_i_1_n_2 ,\toReadDataAddress_reg[32]_i_1_n_3 ,\NLW_toReadDataAddress_reg[32]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[32]_i_1_n_5 ,\toReadDataAddress_reg[32]_i_1_n_6 ,\toReadDataAddress_reg[32]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\toReadDataAddress_reg[32]_i_1_n_8 ,\toReadDataAddress_reg[32]_i_1_n_9 ,\toReadDataAddress_reg[32]_i_1_n_10 ,\toReadDataAddress_reg[32]_i_1_n_11 ,\toReadDataAddress_reg[32]_i_1_n_12 ,\toReadDataAddress_reg[32]_i_1_n_13 ,\toReadDataAddress_reg[32]_i_1_n_14 ,\toReadDataAddress_reg[32]_i_1_n_15 }),
        .S({\toReadDataAddress[32]_i_2_n_0 ,\toReadDataAddress[32]_i_3_n_0 ,\toReadDataAddress[32]_i_4_n_0 ,\toReadDataAddress[32]_i_5_n_0 ,\toReadDataAddress[32]_i_6_n_0 ,\toReadDataAddress[32]_i_7_n_0 ,\toReadDataAddress[32]_i_8_n_0 ,\toReadDataAddress[32]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[33] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_14 ),
        .Q(toReadDataAddress[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[34] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_13 ),
        .Q(toReadDataAddress[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[35] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_12 ),
        .Q(toReadDataAddress[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[36] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_11 ),
        .Q(toReadDataAddress[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[37] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_10 ),
        .Q(toReadDataAddress[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[38] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_9 ),
        .Q(toReadDataAddress[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[39] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[32]_i_1_n_8 ),
        .Q(toReadDataAddress[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_12 ),
        .Q(toReadDataAddress[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[40] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_15 ),
        .Q(toReadDataAddress[40]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[40]_i_1 
       (.CI(\toReadDataAddress_reg[32]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\toReadDataAddress_reg[40]_i_1_n_0 ,\toReadDataAddress_reg[40]_i_1_n_1 ,\toReadDataAddress_reg[40]_i_1_n_2 ,\toReadDataAddress_reg[40]_i_1_n_3 ,\NLW_toReadDataAddress_reg[40]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[40]_i_1_n_5 ,\toReadDataAddress_reg[40]_i_1_n_6 ,\toReadDataAddress_reg[40]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\toReadDataAddress_reg[40]_i_1_n_8 ,\toReadDataAddress_reg[40]_i_1_n_9 ,\toReadDataAddress_reg[40]_i_1_n_10 ,\toReadDataAddress_reg[40]_i_1_n_11 ,\toReadDataAddress_reg[40]_i_1_n_12 ,\toReadDataAddress_reg[40]_i_1_n_13 ,\toReadDataAddress_reg[40]_i_1_n_14 ,\toReadDataAddress_reg[40]_i_1_n_15 }),
        .S({\toReadDataAddress[40]_i_2_n_0 ,\toReadDataAddress[40]_i_3_n_0 ,\toReadDataAddress[40]_i_4_n_0 ,\toReadDataAddress[40]_i_5_n_0 ,\toReadDataAddress[40]_i_6_n_0 ,\toReadDataAddress[40]_i_7_n_0 ,\toReadDataAddress[40]_i_8_n_0 ,\toReadDataAddress[40]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[41] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_14 ),
        .Q(toReadDataAddress[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[42] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_13 ),
        .Q(toReadDataAddress[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[43] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_12 ),
        .Q(toReadDataAddress[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[44] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_11 ),
        .Q(toReadDataAddress[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[45] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_10 ),
        .Q(toReadDataAddress[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[46] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_9 ),
        .Q(toReadDataAddress[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[47] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[40]_i_1_n_8 ),
        .Q(toReadDataAddress[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[48] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_15 ),
        .Q(toReadDataAddress[48]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[48]_i_1 
       (.CI(\toReadDataAddress_reg[40]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\toReadDataAddress_reg[48]_i_1_n_0 ,\toReadDataAddress_reg[48]_i_1_n_1 ,\toReadDataAddress_reg[48]_i_1_n_2 ,\toReadDataAddress_reg[48]_i_1_n_3 ,\NLW_toReadDataAddress_reg[48]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[48]_i_1_n_5 ,\toReadDataAddress_reg[48]_i_1_n_6 ,\toReadDataAddress_reg[48]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\toReadDataAddress_reg[48]_i_1_n_8 ,\toReadDataAddress_reg[48]_i_1_n_9 ,\toReadDataAddress_reg[48]_i_1_n_10 ,\toReadDataAddress_reg[48]_i_1_n_11 ,\toReadDataAddress_reg[48]_i_1_n_12 ,\toReadDataAddress_reg[48]_i_1_n_13 ,\toReadDataAddress_reg[48]_i_1_n_14 ,\toReadDataAddress_reg[48]_i_1_n_15 }),
        .S({\toReadDataAddress[48]_i_2_n_0 ,\toReadDataAddress[48]_i_3_n_0 ,\toReadDataAddress[48]_i_4_n_0 ,\toReadDataAddress[48]_i_5_n_0 ,\toReadDataAddress[48]_i_6_n_0 ,\toReadDataAddress[48]_i_7_n_0 ,\toReadDataAddress[48]_i_8_n_0 ,\toReadDataAddress[48]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[49] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_14 ),
        .Q(toReadDataAddress[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_11 ),
        .Q(toReadDataAddress[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[50] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_13 ),
        .Q(toReadDataAddress[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[51] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_12 ),
        .Q(toReadDataAddress[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[52] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_11 ),
        .Q(toReadDataAddress[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[53] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_10 ),
        .Q(toReadDataAddress[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[54] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_9 ),
        .Q(toReadDataAddress[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[55] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[48]_i_1_n_8 ),
        .Q(toReadDataAddress[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[56] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_15 ),
        .Q(toReadDataAddress[56]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[56]_i_1 
       (.CI(\toReadDataAddress_reg[48]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_toReadDataAddress_reg[56]_i_1_CO_UNCONNECTED [7],\toReadDataAddress_reg[56]_i_1_n_1 ,\toReadDataAddress_reg[56]_i_1_n_2 ,\toReadDataAddress_reg[56]_i_1_n_3 ,\NLW_toReadDataAddress_reg[56]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[56]_i_1_n_5 ,\toReadDataAddress_reg[56]_i_1_n_6 ,\toReadDataAddress_reg[56]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\toReadDataAddress_reg[56]_i_1_n_8 ,\toReadDataAddress_reg[56]_i_1_n_9 ,\toReadDataAddress_reg[56]_i_1_n_10 ,\toReadDataAddress_reg[56]_i_1_n_11 ,\toReadDataAddress_reg[56]_i_1_n_12 ,\toReadDataAddress_reg[56]_i_1_n_13 ,\toReadDataAddress_reg[56]_i_1_n_14 ,\toReadDataAddress_reg[56]_i_1_n_15 }),
        .S({\toReadDataAddress[56]_i_2_n_0 ,\toReadDataAddress[56]_i_3_n_0 ,\toReadDataAddress[56]_i_4_n_0 ,\toReadDataAddress[56]_i_5_n_0 ,\toReadDataAddress[56]_i_6_n_0 ,\toReadDataAddress[56]_i_7_n_0 ,\toReadDataAddress[56]_i_8_n_0 ,\toReadDataAddress[56]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[57] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_14 ),
        .Q(toReadDataAddress[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[58] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_13 ),
        .Q(toReadDataAddress[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[59] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_12 ),
        .Q(toReadDataAddress[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_10 ),
        .Q(toReadDataAddress[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[60] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_11 ),
        .Q(toReadDataAddress[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[61] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_10 ),
        .Q(toReadDataAddress[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[62] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_9 ),
        .Q(toReadDataAddress[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[63] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[56]_i_1_n_8 ),
        .Q(toReadDataAddress[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_9 ),
        .Q(toReadDataAddress[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[0]_i_1_n_8 ),
        .Q(toReadDataAddress[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_15 ),
        .Q(toReadDataAddress[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \toReadDataAddress_reg[8]_i_1 
       (.CI(\toReadDataAddress_reg[0]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\toReadDataAddress_reg[8]_i_1_n_0 ,\toReadDataAddress_reg[8]_i_1_n_1 ,\toReadDataAddress_reg[8]_i_1_n_2 ,\toReadDataAddress_reg[8]_i_1_n_3 ,\NLW_toReadDataAddress_reg[8]_i_1_CO_UNCONNECTED [3],\toReadDataAddress_reg[8]_i_1_n_5 ,\toReadDataAddress_reg[8]_i_1_n_6 ,\toReadDataAddress_reg[8]_i_1_n_7 }),
        .DI({\toReadDataAddress[8]_i_2_n_0 ,\toReadDataAddress[8]_i_3_n_0 ,\toReadDataAddress[8]_i_4_n_0 ,\toReadDataAddress[8]_i_5_n_0 ,\toReadDataAddress[8]_i_6_n_0 ,\toReadDataAddress[8]_i_7_n_0 ,\toReadDataAddress[8]_i_8_n_0 ,\toReadDataAddress[8]_i_9_n_0 }),
        .O({\toReadDataAddress_reg[8]_i_1_n_8 ,\toReadDataAddress_reg[8]_i_1_n_9 ,\toReadDataAddress_reg[8]_i_1_n_10 ,\toReadDataAddress_reg[8]_i_1_n_11 ,\toReadDataAddress_reg[8]_i_1_n_12 ,\toReadDataAddress_reg[8]_i_1_n_13 ,\toReadDataAddress_reg[8]_i_1_n_14 ,\toReadDataAddress_reg[8]_i_1_n_15 }),
        .S({\toReadDataAddress[8]_i_10_n_0 ,\toReadDataAddress[8]_i_11_n_0 ,\toReadDataAddress[8]_i_12_n_0 ,\toReadDataAddress[8]_i_13_n_0 ,\toReadDataAddress[8]_i_14_n_0 ,\toReadDataAddress[8]_i_15_n_0 ,\toReadDataAddress[8]_i_16_n_0 ,\toReadDataAddress[8]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataAddress_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataAddress_reg[8]_i_1_n_14 ),
        .Q(toReadDataAddress[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \toReadDataSize[0]_i_1 
       (.I0(read_burst_size[0]),
        .O(toReadDataSize0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \toReadDataSize[1]_i_1 
       (.I0(read_burst_size[0]),
        .I1(read_burst_size[1]),
        .O(\toReadDataSize[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \toReadDataSize[2]_i_1 
       (.I0(read_burst_size[1]),
        .I1(read_burst_size[0]),
        .I2(read_burst_size[2]),
        .O(\toReadDataSize[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \toReadDataSize[3]_i_1 
       (.I0(read_burst_size[2]),
        .I1(read_burst_size[0]),
        .I2(read_burst_size[1]),
        .I3(read_burst_size[3]),
        .O(\toReadDataSize[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \toReadDataSize[4]_i_1 
       (.I0(read_burst_size[3]),
        .I1(read_burst_size[1]),
        .I2(read_burst_size[0]),
        .I3(read_burst_size[2]),
        .I4(read_burst_size[4]),
        .O(\toReadDataSize[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \toReadDataSize[5]_i_1 
       (.I0(read_burst_size[4]),
        .I1(read_burst_size[2]),
        .I2(read_burst_size[0]),
        .I3(read_burst_size[1]),
        .I4(read_burst_size[3]),
        .I5(read_burst_size[5]),
        .O(\toReadDataSize[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \toReadDataSize[6]_i_1 
       (.I0(\toReadDataSize[7]_i_3_n_0 ),
        .I1(read_burst_size[6]),
        .O(\toReadDataSize[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \toReadDataSize[7]_i_2 
       (.I0(read_burst_size[6]),
        .I1(\toReadDataSize[7]_i_3_n_0 ),
        .I2(read_burst_size[7]),
        .O(\toReadDataSize[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \toReadDataSize[7]_i_3 
       (.I0(read_burst_size[4]),
        .I1(read_burst_size[2]),
        .I2(read_burst_size[0]),
        .I3(read_burst_size[1]),
        .I4(read_burst_size[3]),
        .I5(read_burst_size[5]),
        .O(\toReadDataSize[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[0] 
       (.C(clk),
        .CE(E),
        .D(toReadDataSize0),
        .Q(\axi_ARID_reg[0] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataSize[1]_i_1_n_0 ),
        .Q(\axi_ARID_reg[0] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataSize[2]_i_1_n_0 ),
        .Q(\axi_ARID_reg[0] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataSize[3]_i_1_n_0 ),
        .Q(\axi_ARID_reg[0] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataSize[4]_i_1_n_0 ),
        .Q(\axi_ARID_reg[0] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataSize[5]_i_1_n_0 ),
        .Q(\axi_ARID_reg[0] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataSize[6]_i_1_n_0 ),
        .Q(\axi_ARID_reg[0] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \toReadDataSize_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\toReadDataSize[7]_i_2_n_0 ),
        .Q(\axi_ARID_reg[0] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    toReadDataValid_reg
       (.C(clk),
        .CE(1'b1),
        .D(E),
        .Q(toReadDataValid),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_10 
       (.I0(write_step_DDR_address[0]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_11 
       (.I0(write_step_DDR_address[7]),
        .I1(writeAddress[7]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[7]),
        .O(\writeAddress[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_12 
       (.I0(write_step_DDR_address[6]),
        .I1(writeAddress[6]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[6]),
        .O(\writeAddress[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_13 
       (.I0(write_step_DDR_address[5]),
        .I1(writeAddress[5]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[5]),
        .O(\writeAddress[0]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_14 
       (.I0(write_step_DDR_address[4]),
        .I1(writeAddress[4]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[4]),
        .O(\writeAddress[0]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_15 
       (.I0(write_step_DDR_address[3]),
        .I1(writeAddress[3]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[3]),
        .O(\writeAddress[0]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_16 
       (.I0(write_step_DDR_address[2]),
        .I1(writeAddress[2]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[2]),
        .O(\writeAddress[0]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_17 
       (.I0(write_step_DDR_address[1]),
        .I1(writeAddress[1]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[1]),
        .O(\writeAddress[0]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[0]_i_18 
       (.I0(write_step_DDR_address[0]),
        .I1(writeAddress[0]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[0]),
        .O(\writeAddress[0]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_3 
       (.I0(write_step_DDR_address[7]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_4 
       (.I0(write_step_DDR_address[6]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_5 
       (.I0(write_step_DDR_address[5]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_6 
       (.I0(write_step_DDR_address[4]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_7 
       (.I0(write_step_DDR_address[3]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_8 
       (.I0(write_step_DDR_address[2]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[0]_i_9 
       (.I0(write_step_DDR_address[1]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[0]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_10 
       (.I0(write_step_DDR_address[23]),
        .I1(writeAddress[23]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[23]),
        .O(\writeAddress[16]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_11 
       (.I0(write_step_DDR_address[22]),
        .I1(writeAddress[22]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[22]),
        .O(\writeAddress[16]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_12 
       (.I0(write_step_DDR_address[21]),
        .I1(writeAddress[21]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[21]),
        .O(\writeAddress[16]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_13 
       (.I0(write_step_DDR_address[20]),
        .I1(writeAddress[20]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[20]),
        .O(\writeAddress[16]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_14 
       (.I0(write_step_DDR_address[19]),
        .I1(writeAddress[19]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[19]),
        .O(\writeAddress[16]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_15 
       (.I0(write_step_DDR_address[18]),
        .I1(writeAddress[18]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[18]),
        .O(\writeAddress[16]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_16 
       (.I0(write_step_DDR_address[17]),
        .I1(writeAddress[17]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[17]),
        .O(\writeAddress[16]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[16]_i_17 
       (.I0(write_step_DDR_address[16]),
        .I1(writeAddress[16]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[16]),
        .O(\writeAddress[16]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_2 
       (.I0(write_step_DDR_address[23]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_3 
       (.I0(write_step_DDR_address[22]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_4 
       (.I0(write_step_DDR_address[21]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_5 
       (.I0(write_step_DDR_address[20]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_6 
       (.I0(write_step_DDR_address[19]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_7 
       (.I0(write_step_DDR_address[18]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_8 
       (.I0(write_step_DDR_address[17]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[16]_i_9 
       (.I0(write_step_DDR_address[16]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[16]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_10 
       (.I0(write_step_DDR_address[31]),
        .I1(writeAddress[31]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[31]),
        .O(\writeAddress[24]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_11 
       (.I0(write_step_DDR_address[30]),
        .I1(writeAddress[30]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[30]),
        .O(\writeAddress[24]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_12 
       (.I0(write_step_DDR_address[29]),
        .I1(writeAddress[29]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[29]),
        .O(\writeAddress[24]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_13 
       (.I0(write_step_DDR_address[28]),
        .I1(writeAddress[28]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[28]),
        .O(\writeAddress[24]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_14 
       (.I0(write_step_DDR_address[27]),
        .I1(writeAddress[27]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[27]),
        .O(\writeAddress[24]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_15 
       (.I0(write_step_DDR_address[26]),
        .I1(writeAddress[26]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[26]),
        .O(\writeAddress[24]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_16 
       (.I0(write_step_DDR_address[25]),
        .I1(writeAddress[25]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[25]),
        .O(\writeAddress[24]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[24]_i_17 
       (.I0(write_step_DDR_address[24]),
        .I1(writeAddress[24]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[24]),
        .O(\writeAddress[24]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_2 
       (.I0(write_step_DDR_address[31]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_3 
       (.I0(write_step_DDR_address[30]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_4 
       (.I0(write_step_DDR_address[29]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_5 
       (.I0(write_step_DDR_address[28]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_6 
       (.I0(write_step_DDR_address[27]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_7 
       (.I0(write_step_DDR_address[26]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_8 
       (.I0(write_step_DDR_address[25]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[24]_i_9 
       (.I0(write_step_DDR_address[24]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[24]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_2 
       (.I0(write_start_DDR_address[39]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[39]),
        .O(\writeAddress[32]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_3 
       (.I0(write_start_DDR_address[38]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[38]),
        .O(\writeAddress[32]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_4 
       (.I0(write_start_DDR_address[37]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[37]),
        .O(\writeAddress[32]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_5 
       (.I0(write_start_DDR_address[36]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[36]),
        .O(\writeAddress[32]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_6 
       (.I0(write_start_DDR_address[35]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[35]),
        .O(\writeAddress[32]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_7 
       (.I0(write_start_DDR_address[34]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[34]),
        .O(\writeAddress[32]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_8 
       (.I0(write_start_DDR_address[33]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[33]),
        .O(\writeAddress[32]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[32]_i_9 
       (.I0(write_start_DDR_address[32]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[32]),
        .O(\writeAddress[32]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_2 
       (.I0(write_start_DDR_address[47]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[47]),
        .O(\writeAddress[40]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_3 
       (.I0(write_start_DDR_address[46]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[46]),
        .O(\writeAddress[40]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_4 
       (.I0(write_start_DDR_address[45]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[45]),
        .O(\writeAddress[40]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_5 
       (.I0(write_start_DDR_address[44]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[44]),
        .O(\writeAddress[40]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_6 
       (.I0(write_start_DDR_address[43]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[43]),
        .O(\writeAddress[40]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_7 
       (.I0(write_start_DDR_address[42]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[42]),
        .O(\writeAddress[40]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_8 
       (.I0(write_start_DDR_address[41]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[41]),
        .O(\writeAddress[40]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[40]_i_9 
       (.I0(write_start_DDR_address[40]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[40]),
        .O(\writeAddress[40]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_2 
       (.I0(write_start_DDR_address[55]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[55]),
        .O(\writeAddress[48]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_3 
       (.I0(write_start_DDR_address[54]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[54]),
        .O(\writeAddress[48]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_4 
       (.I0(write_start_DDR_address[53]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[53]),
        .O(\writeAddress[48]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_5 
       (.I0(write_start_DDR_address[52]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[52]),
        .O(\writeAddress[48]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_6 
       (.I0(write_start_DDR_address[51]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[51]),
        .O(\writeAddress[48]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_7 
       (.I0(write_start_DDR_address[50]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[50]),
        .O(\writeAddress[48]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_8 
       (.I0(write_start_DDR_address[49]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[49]),
        .O(\writeAddress[48]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[48]_i_9 
       (.I0(write_start_DDR_address[48]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[48]),
        .O(\writeAddress[48]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_2 
       (.I0(write_start_DDR_address[63]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[63]),
        .O(\writeAddress[56]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_3 
       (.I0(write_start_DDR_address[62]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[62]),
        .O(\writeAddress[56]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_4 
       (.I0(write_start_DDR_address[61]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[61]),
        .O(\writeAddress[56]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_5 
       (.I0(write_start_DDR_address[60]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[60]),
        .O(\writeAddress[56]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_6 
       (.I0(write_start_DDR_address[59]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[59]),
        .O(\writeAddress[56]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_7 
       (.I0(write_start_DDR_address[58]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[58]),
        .O(\writeAddress[56]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_8 
       (.I0(write_start_DDR_address[57]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[57]),
        .O(\writeAddress[56]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \writeAddress[56]_i_9 
       (.I0(write_start_DDR_address[56]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .I2(writeAddress[56]),
        .O(\writeAddress[56]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_10 
       (.I0(write_step_DDR_address[15]),
        .I1(writeAddress[15]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[15]),
        .O(\writeAddress[8]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_11 
       (.I0(write_step_DDR_address[14]),
        .I1(writeAddress[14]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[14]),
        .O(\writeAddress[8]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_12 
       (.I0(write_step_DDR_address[13]),
        .I1(writeAddress[13]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[13]),
        .O(\writeAddress[8]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_13 
       (.I0(write_step_DDR_address[12]),
        .I1(writeAddress[12]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[12]),
        .O(\writeAddress[8]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_14 
       (.I0(write_step_DDR_address[11]),
        .I1(writeAddress[11]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[11]),
        .O(\writeAddress[8]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_15 
       (.I0(write_step_DDR_address[10]),
        .I1(writeAddress[10]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[10]),
        .O(\writeAddress[8]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_16 
       (.I0(write_step_DDR_address[9]),
        .I1(writeAddress[9]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[9]),
        .O(\writeAddress[8]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'hF606)) 
    \writeAddress[8]_i_17 
       (.I0(write_step_DDR_address[8]),
        .I1(writeAddress[8]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(write_start_DDR_address[8]),
        .O(\writeAddress[8]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_2 
       (.I0(write_step_DDR_address[15]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_3 
       (.I0(write_step_DDR_address[14]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_4 
       (.I0(write_step_DDR_address[13]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_5 
       (.I0(write_step_DDR_address[12]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_6 
       (.I0(write_step_DDR_address[11]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_7 
       (.I0(write_step_DDR_address[10]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_8 
       (.I0(write_step_DDR_address[9]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \writeAddress[8]_i_9 
       (.I0(write_step_DDR_address[8]),
        .I1(\write_count_reg[31]_i_2_n_0 ),
        .O(\writeAddress[8]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[0] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_15 ),
        .Q(writeAddress[0]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\writeAddress_reg[0]_i_2_n_0 ,\writeAddress_reg[0]_i_2_n_1 ,\writeAddress_reg[0]_i_2_n_2 ,\writeAddress_reg[0]_i_2_n_3 ,\NLW_writeAddress_reg[0]_i_2_CO_UNCONNECTED [3],\writeAddress_reg[0]_i_2_n_5 ,\writeAddress_reg[0]_i_2_n_6 ,\writeAddress_reg[0]_i_2_n_7 }),
        .DI({\writeAddress[0]_i_3_n_0 ,\writeAddress[0]_i_4_n_0 ,\writeAddress[0]_i_5_n_0 ,\writeAddress[0]_i_6_n_0 ,\writeAddress[0]_i_7_n_0 ,\writeAddress[0]_i_8_n_0 ,\writeAddress[0]_i_9_n_0 ,\writeAddress[0]_i_10_n_0 }),
        .O({\writeAddress_reg[0]_i_2_n_8 ,\writeAddress_reg[0]_i_2_n_9 ,\writeAddress_reg[0]_i_2_n_10 ,\writeAddress_reg[0]_i_2_n_11 ,\writeAddress_reg[0]_i_2_n_12 ,\writeAddress_reg[0]_i_2_n_13 ,\writeAddress_reg[0]_i_2_n_14 ,\writeAddress_reg[0]_i_2_n_15 }),
        .S({\writeAddress[0]_i_11_n_0 ,\writeAddress[0]_i_12_n_0 ,\writeAddress[0]_i_13_n_0 ,\writeAddress[0]_i_14_n_0 ,\writeAddress[0]_i_15_n_0 ,\writeAddress[0]_i_16_n_0 ,\writeAddress[0]_i_17_n_0 ,\writeAddress[0]_i_18_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[10] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_13 ),
        .Q(writeAddress[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[11] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_12 ),
        .Q(writeAddress[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[12] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_11 ),
        .Q(writeAddress[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[13] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_10 ),
        .Q(writeAddress[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[14] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_9 ),
        .Q(writeAddress[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[15] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_8 ),
        .Q(writeAddress[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[16] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_15 ),
        .Q(writeAddress[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[16]_i_1 
       (.CI(\writeAddress_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\writeAddress_reg[16]_i_1_n_0 ,\writeAddress_reg[16]_i_1_n_1 ,\writeAddress_reg[16]_i_1_n_2 ,\writeAddress_reg[16]_i_1_n_3 ,\NLW_writeAddress_reg[16]_i_1_CO_UNCONNECTED [3],\writeAddress_reg[16]_i_1_n_5 ,\writeAddress_reg[16]_i_1_n_6 ,\writeAddress_reg[16]_i_1_n_7 }),
        .DI({\writeAddress[16]_i_2_n_0 ,\writeAddress[16]_i_3_n_0 ,\writeAddress[16]_i_4_n_0 ,\writeAddress[16]_i_5_n_0 ,\writeAddress[16]_i_6_n_0 ,\writeAddress[16]_i_7_n_0 ,\writeAddress[16]_i_8_n_0 ,\writeAddress[16]_i_9_n_0 }),
        .O({\writeAddress_reg[16]_i_1_n_8 ,\writeAddress_reg[16]_i_1_n_9 ,\writeAddress_reg[16]_i_1_n_10 ,\writeAddress_reg[16]_i_1_n_11 ,\writeAddress_reg[16]_i_1_n_12 ,\writeAddress_reg[16]_i_1_n_13 ,\writeAddress_reg[16]_i_1_n_14 ,\writeAddress_reg[16]_i_1_n_15 }),
        .S({\writeAddress[16]_i_10_n_0 ,\writeAddress[16]_i_11_n_0 ,\writeAddress[16]_i_12_n_0 ,\writeAddress[16]_i_13_n_0 ,\writeAddress[16]_i_14_n_0 ,\writeAddress[16]_i_15_n_0 ,\writeAddress[16]_i_16_n_0 ,\writeAddress[16]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[17] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_14 ),
        .Q(writeAddress[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[18] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_13 ),
        .Q(writeAddress[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[19] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_12 ),
        .Q(writeAddress[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[1] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_14 ),
        .Q(writeAddress[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[20] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_11 ),
        .Q(writeAddress[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[21] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_10 ),
        .Q(writeAddress[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[22] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_9 ),
        .Q(writeAddress[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[23] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[16]_i_1_n_8 ),
        .Q(writeAddress[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[24] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_15 ),
        .Q(writeAddress[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[24]_i_1 
       (.CI(\writeAddress_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\writeAddress_reg[24]_i_1_n_0 ,\writeAddress_reg[24]_i_1_n_1 ,\writeAddress_reg[24]_i_1_n_2 ,\writeAddress_reg[24]_i_1_n_3 ,\NLW_writeAddress_reg[24]_i_1_CO_UNCONNECTED [3],\writeAddress_reg[24]_i_1_n_5 ,\writeAddress_reg[24]_i_1_n_6 ,\writeAddress_reg[24]_i_1_n_7 }),
        .DI({\writeAddress[24]_i_2_n_0 ,\writeAddress[24]_i_3_n_0 ,\writeAddress[24]_i_4_n_0 ,\writeAddress[24]_i_5_n_0 ,\writeAddress[24]_i_6_n_0 ,\writeAddress[24]_i_7_n_0 ,\writeAddress[24]_i_8_n_0 ,\writeAddress[24]_i_9_n_0 }),
        .O({\writeAddress_reg[24]_i_1_n_8 ,\writeAddress_reg[24]_i_1_n_9 ,\writeAddress_reg[24]_i_1_n_10 ,\writeAddress_reg[24]_i_1_n_11 ,\writeAddress_reg[24]_i_1_n_12 ,\writeAddress_reg[24]_i_1_n_13 ,\writeAddress_reg[24]_i_1_n_14 ,\writeAddress_reg[24]_i_1_n_15 }),
        .S({\writeAddress[24]_i_10_n_0 ,\writeAddress[24]_i_11_n_0 ,\writeAddress[24]_i_12_n_0 ,\writeAddress[24]_i_13_n_0 ,\writeAddress[24]_i_14_n_0 ,\writeAddress[24]_i_15_n_0 ,\writeAddress[24]_i_16_n_0 ,\writeAddress[24]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[25] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_14 ),
        .Q(writeAddress[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[26] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_13 ),
        .Q(writeAddress[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[27] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_12 ),
        .Q(writeAddress[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[28] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_11 ),
        .Q(writeAddress[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[29] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_10 ),
        .Q(writeAddress[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[2] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_13 ),
        .Q(writeAddress[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[30] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_9 ),
        .Q(writeAddress[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[31] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[24]_i_1_n_8 ),
        .Q(writeAddress[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[32] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_15 ),
        .Q(writeAddress[32]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[32]_i_1 
       (.CI(\writeAddress_reg[24]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\writeAddress_reg[32]_i_1_n_0 ,\writeAddress_reg[32]_i_1_n_1 ,\writeAddress_reg[32]_i_1_n_2 ,\writeAddress_reg[32]_i_1_n_3 ,\NLW_writeAddress_reg[32]_i_1_CO_UNCONNECTED [3],\writeAddress_reg[32]_i_1_n_5 ,\writeAddress_reg[32]_i_1_n_6 ,\writeAddress_reg[32]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\writeAddress_reg[32]_i_1_n_8 ,\writeAddress_reg[32]_i_1_n_9 ,\writeAddress_reg[32]_i_1_n_10 ,\writeAddress_reg[32]_i_1_n_11 ,\writeAddress_reg[32]_i_1_n_12 ,\writeAddress_reg[32]_i_1_n_13 ,\writeAddress_reg[32]_i_1_n_14 ,\writeAddress_reg[32]_i_1_n_15 }),
        .S({\writeAddress[32]_i_2_n_0 ,\writeAddress[32]_i_3_n_0 ,\writeAddress[32]_i_4_n_0 ,\writeAddress[32]_i_5_n_0 ,\writeAddress[32]_i_6_n_0 ,\writeAddress[32]_i_7_n_0 ,\writeAddress[32]_i_8_n_0 ,\writeAddress[32]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[33] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_14 ),
        .Q(writeAddress[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[34] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_13 ),
        .Q(writeAddress[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[35] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_12 ),
        .Q(writeAddress[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[36] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_11 ),
        .Q(writeAddress[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[37] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_10 ),
        .Q(writeAddress[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[38] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_9 ),
        .Q(writeAddress[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[39] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[32]_i_1_n_8 ),
        .Q(writeAddress[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[3] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_12 ),
        .Q(writeAddress[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[40] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_15 ),
        .Q(writeAddress[40]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[40]_i_1 
       (.CI(\writeAddress_reg[32]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\writeAddress_reg[40]_i_1_n_0 ,\writeAddress_reg[40]_i_1_n_1 ,\writeAddress_reg[40]_i_1_n_2 ,\writeAddress_reg[40]_i_1_n_3 ,\NLW_writeAddress_reg[40]_i_1_CO_UNCONNECTED [3],\writeAddress_reg[40]_i_1_n_5 ,\writeAddress_reg[40]_i_1_n_6 ,\writeAddress_reg[40]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\writeAddress_reg[40]_i_1_n_8 ,\writeAddress_reg[40]_i_1_n_9 ,\writeAddress_reg[40]_i_1_n_10 ,\writeAddress_reg[40]_i_1_n_11 ,\writeAddress_reg[40]_i_1_n_12 ,\writeAddress_reg[40]_i_1_n_13 ,\writeAddress_reg[40]_i_1_n_14 ,\writeAddress_reg[40]_i_1_n_15 }),
        .S({\writeAddress[40]_i_2_n_0 ,\writeAddress[40]_i_3_n_0 ,\writeAddress[40]_i_4_n_0 ,\writeAddress[40]_i_5_n_0 ,\writeAddress[40]_i_6_n_0 ,\writeAddress[40]_i_7_n_0 ,\writeAddress[40]_i_8_n_0 ,\writeAddress[40]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[41] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_14 ),
        .Q(writeAddress[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[42] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_13 ),
        .Q(writeAddress[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[43] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_12 ),
        .Q(writeAddress[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[44] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_11 ),
        .Q(writeAddress[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[45] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_10 ),
        .Q(writeAddress[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[46] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_9 ),
        .Q(writeAddress[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[47] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[40]_i_1_n_8 ),
        .Q(writeAddress[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[48] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_15 ),
        .Q(writeAddress[48]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[48]_i_1 
       (.CI(\writeAddress_reg[40]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\writeAddress_reg[48]_i_1_n_0 ,\writeAddress_reg[48]_i_1_n_1 ,\writeAddress_reg[48]_i_1_n_2 ,\writeAddress_reg[48]_i_1_n_3 ,\NLW_writeAddress_reg[48]_i_1_CO_UNCONNECTED [3],\writeAddress_reg[48]_i_1_n_5 ,\writeAddress_reg[48]_i_1_n_6 ,\writeAddress_reg[48]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\writeAddress_reg[48]_i_1_n_8 ,\writeAddress_reg[48]_i_1_n_9 ,\writeAddress_reg[48]_i_1_n_10 ,\writeAddress_reg[48]_i_1_n_11 ,\writeAddress_reg[48]_i_1_n_12 ,\writeAddress_reg[48]_i_1_n_13 ,\writeAddress_reg[48]_i_1_n_14 ,\writeAddress_reg[48]_i_1_n_15 }),
        .S({\writeAddress[48]_i_2_n_0 ,\writeAddress[48]_i_3_n_0 ,\writeAddress[48]_i_4_n_0 ,\writeAddress[48]_i_5_n_0 ,\writeAddress[48]_i_6_n_0 ,\writeAddress[48]_i_7_n_0 ,\writeAddress[48]_i_8_n_0 ,\writeAddress[48]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[49] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_14 ),
        .Q(writeAddress[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[4] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_11 ),
        .Q(writeAddress[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[50] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_13 ),
        .Q(writeAddress[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[51] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_12 ),
        .Q(writeAddress[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[52] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_11 ),
        .Q(writeAddress[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[53] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_10 ),
        .Q(writeAddress[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[54] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_9 ),
        .Q(writeAddress[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[55] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[48]_i_1_n_8 ),
        .Q(writeAddress[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[56] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_15 ),
        .Q(writeAddress[56]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[56]_i_1 
       (.CI(\writeAddress_reg[48]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_writeAddress_reg[56]_i_1_CO_UNCONNECTED [7],\writeAddress_reg[56]_i_1_n_1 ,\writeAddress_reg[56]_i_1_n_2 ,\writeAddress_reg[56]_i_1_n_3 ,\NLW_writeAddress_reg[56]_i_1_CO_UNCONNECTED [3],\writeAddress_reg[56]_i_1_n_5 ,\writeAddress_reg[56]_i_1_n_6 ,\writeAddress_reg[56]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\writeAddress_reg[56]_i_1_n_8 ,\writeAddress_reg[56]_i_1_n_9 ,\writeAddress_reg[56]_i_1_n_10 ,\writeAddress_reg[56]_i_1_n_11 ,\writeAddress_reg[56]_i_1_n_12 ,\writeAddress_reg[56]_i_1_n_13 ,\writeAddress_reg[56]_i_1_n_14 ,\writeAddress_reg[56]_i_1_n_15 }),
        .S({\writeAddress[56]_i_2_n_0 ,\writeAddress[56]_i_3_n_0 ,\writeAddress[56]_i_4_n_0 ,\writeAddress[56]_i_5_n_0 ,\writeAddress[56]_i_6_n_0 ,\writeAddress[56]_i_7_n_0 ,\writeAddress[56]_i_8_n_0 ,\writeAddress[56]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[57] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_14 ),
        .Q(writeAddress[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[58] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_13 ),
        .Q(writeAddress[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[59] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_12 ),
        .Q(writeAddress[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[5] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_10 ),
        .Q(writeAddress[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[60] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_11 ),
        .Q(writeAddress[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[61] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_10 ),
        .Q(writeAddress[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[62] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_9 ),
        .Q(writeAddress[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[63] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[56]_i_1_n_8 ),
        .Q(writeAddress[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[6] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_9 ),
        .Q(writeAddress[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[7] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[0]_i_2_n_8 ),
        .Q(writeAddress[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[8] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_15 ),
        .Q(writeAddress[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \writeAddress_reg[8]_i_1 
       (.CI(\writeAddress_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\writeAddress_reg[8]_i_1_n_0 ,\writeAddress_reg[8]_i_1_n_1 ,\writeAddress_reg[8]_i_1_n_2 ,\writeAddress_reg[8]_i_1_n_3 ,\NLW_writeAddress_reg[8]_i_1_CO_UNCONNECTED [3],\writeAddress_reg[8]_i_1_n_5 ,\writeAddress_reg[8]_i_1_n_6 ,\writeAddress_reg[8]_i_1_n_7 }),
        .DI({\writeAddress[8]_i_2_n_0 ,\writeAddress[8]_i_3_n_0 ,\writeAddress[8]_i_4_n_0 ,\writeAddress[8]_i_5_n_0 ,\writeAddress[8]_i_6_n_0 ,\writeAddress[8]_i_7_n_0 ,\writeAddress[8]_i_8_n_0 ,\writeAddress[8]_i_9_n_0 }),
        .O({\writeAddress_reg[8]_i_1_n_8 ,\writeAddress_reg[8]_i_1_n_9 ,\writeAddress_reg[8]_i_1_n_10 ,\writeAddress_reg[8]_i_1_n_11 ,\writeAddress_reg[8]_i_1_n_12 ,\writeAddress_reg[8]_i_1_n_13 ,\writeAddress_reg[8]_i_1_n_14 ,\writeAddress_reg[8]_i_1_n_15 }),
        .S({\writeAddress[8]_i_10_n_0 ,\writeAddress[8]_i_11_n_0 ,\writeAddress[8]_i_12_n_0 ,\writeAddress[8]_i_13_n_0 ,\writeAddress[8]_i_14_n_0 ,\writeAddress[8]_i_15_n_0 ,\writeAddress[8]_i_16_n_0 ,\writeAddress[8]_i_17_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \writeAddress_reg[9] 
       (.C(clk),
        .CE(\countAddrToBeSent_reg[38]_0 ),
        .D(\writeAddress_reg[8]_i_1_n_14 ),
        .Q(writeAddress[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \writeAsize[0]_i_1 
       (.I0(write_burst_size[0]),
        .O(writeAsize0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \writeAsize[1]_i_1 
       (.I0(write_burst_size[0]),
        .I1(write_burst_size[1]),
        .O(\writeAsize[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \writeAsize[2]_i_1 
       (.I0(write_burst_size[1]),
        .I1(write_burst_size[0]),
        .I2(write_burst_size[2]),
        .O(\writeAsize[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \writeAsize[3]_i_1 
       (.I0(write_burst_size[2]),
        .I1(write_burst_size[0]),
        .I2(write_burst_size[1]),
        .I3(write_burst_size[3]),
        .O(\writeAsize[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'hFFFE0001)) 
    \writeAsize[4]_i_1 
       (.I0(write_burst_size[3]),
        .I1(write_burst_size[1]),
        .I2(write_burst_size[0]),
        .I3(write_burst_size[2]),
        .I4(write_burst_size[4]),
        .O(\writeAsize[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \writeAsize[5]_i_1 
       (.I0(write_burst_size[4]),
        .I1(write_burst_size[2]),
        .I2(write_burst_size[0]),
        .I3(write_burst_size[1]),
        .I4(write_burst_size[3]),
        .I5(write_burst_size[5]),
        .O(\writeAsize[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \writeAsize[6]_i_1 
       (.I0(\writeAsize[7]_i_2_n_0 ),
        .I1(write_burst_size[6]),
        .O(\writeAsize[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \writeAsize[7]_i_1 
       (.I0(write_burst_size[6]),
        .I1(\writeAsize[7]_i_2_n_0 ),
        .I2(write_burst_size[7]),
        .O(\writeAsize[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \writeAsize[7]_i_2 
       (.I0(write_burst_size[4]),
        .I1(write_burst_size[2]),
        .I2(write_burst_size[0]),
        .I3(write_burst_size[1]),
        .I4(write_burst_size[3]),
        .I5(write_burst_size[5]),
        .O(\writeAsize[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(writeAsize0),
        .Q(\writeAddress_reg[63]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\writeAsize[1]_i_1_n_0 ),
        .Q(\writeAddress_reg[63]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\writeAsize[2]_i_1_n_0 ),
        .Q(\writeAddress_reg[63]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\writeAsize[3]_i_1_n_0 ),
        .Q(\writeAddress_reg[63]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\writeAsize[4]_i_1_n_0 ),
        .Q(\writeAddress_reg[63]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\writeAsize[5]_i_1_n_0 ),
        .Q(\writeAddress_reg[63]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\writeAsize[6]_i_1_n_0 ),
        .Q(\writeAddress_reg[63]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeAsize_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\writeAsize[7]_i_1_n_0 ),
        .Q(\writeAddress_reg[63]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    writeAvalid_reg
       (.C(clk),
        .CE(1'b1),
        .D(\countAddrToBeSent_reg[38]_0 ),
        .Q(writeAvalid),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[0]),
        .Q(writeDvalid_reg_0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[100] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[100]),
        .Q(writeDvalid_reg_0[100]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[101] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[101]),
        .Q(writeDvalid_reg_0[101]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[102] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[102]),
        .Q(writeDvalid_reg_0[102]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[103] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[103]),
        .Q(writeDvalid_reg_0[103]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[104] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[104]),
        .Q(writeDvalid_reg_0[104]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[105] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[105]),
        .Q(writeDvalid_reg_0[105]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[106] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[106]),
        .Q(writeDvalid_reg_0[106]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[107] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[107]),
        .Q(writeDvalid_reg_0[107]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[108] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[108]),
        .Q(writeDvalid_reg_0[108]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[109] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[109]),
        .Q(writeDvalid_reg_0[109]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[10]),
        .Q(writeDvalid_reg_0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[110] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[110]),
        .Q(writeDvalid_reg_0[110]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[111] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[111]),
        .Q(writeDvalid_reg_0[111]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[112] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[112]),
        .Q(writeDvalid_reg_0[112]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[113] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[113]),
        .Q(writeDvalid_reg_0[113]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[114] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[114]),
        .Q(writeDvalid_reg_0[114]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[115] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[115]),
        .Q(writeDvalid_reg_0[115]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[116] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[116]),
        .Q(writeDvalid_reg_0[116]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[117] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[117]),
        .Q(writeDvalid_reg_0[117]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[118] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[118]),
        .Q(writeDvalid_reg_0[118]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[119] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[119]),
        .Q(writeDvalid_reg_0[119]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[11]),
        .Q(writeDvalid_reg_0[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[120] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[120]),
        .Q(writeDvalid_reg_0[120]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[121] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[121]),
        .Q(writeDvalid_reg_0[121]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[122] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[122]),
        .Q(writeDvalid_reg_0[122]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[123] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[123]),
        .Q(writeDvalid_reg_0[123]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[124] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[124]),
        .Q(writeDvalid_reg_0[124]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[125] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[125]),
        .Q(writeDvalid_reg_0[125]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[126] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[126]),
        .Q(writeDvalid_reg_0[126]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[127] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[127]),
        .Q(writeDvalid_reg_0[127]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[12]),
        .Q(writeDvalid_reg_0[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[13]),
        .Q(writeDvalid_reg_0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[14]),
        .Q(writeDvalid_reg_0[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[15]),
        .Q(writeDvalid_reg_0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[16]),
        .Q(writeDvalid_reg_0[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[17]),
        .Q(writeDvalid_reg_0[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[18]),
        .Q(writeDvalid_reg_0[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[19]),
        .Q(writeDvalid_reg_0[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[1]),
        .Q(writeDvalid_reg_0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[20]),
        .Q(writeDvalid_reg_0[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[21]),
        .Q(writeDvalid_reg_0[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[22]),
        .Q(writeDvalid_reg_0[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[23]),
        .Q(writeDvalid_reg_0[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[24]),
        .Q(writeDvalid_reg_0[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[25]),
        .Q(writeDvalid_reg_0[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[26]),
        .Q(writeDvalid_reg_0[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[27]),
        .Q(writeDvalid_reg_0[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[28]),
        .Q(writeDvalid_reg_0[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[29]),
        .Q(writeDvalid_reg_0[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[2]),
        .Q(writeDvalid_reg_0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[30]),
        .Q(writeDvalid_reg_0[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[31]),
        .Q(writeDvalid_reg_0[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[32] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[32]),
        .Q(writeDvalid_reg_0[32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[33] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[33]),
        .Q(writeDvalid_reg_0[33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[34] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[34]),
        .Q(writeDvalid_reg_0[34]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[35] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[35]),
        .Q(writeDvalid_reg_0[35]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[36] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[36]),
        .Q(writeDvalid_reg_0[36]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[37] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[37]),
        .Q(writeDvalid_reg_0[37]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[38] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[38]),
        .Q(writeDvalid_reg_0[38]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[39] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[39]),
        .Q(writeDvalid_reg_0[39]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[3]),
        .Q(writeDvalid_reg_0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[40] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[40]),
        .Q(writeDvalid_reg_0[40]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[41] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[41]),
        .Q(writeDvalid_reg_0[41]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[42] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[42]),
        .Q(writeDvalid_reg_0[42]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[43] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[43]),
        .Q(writeDvalid_reg_0[43]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[44] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[44]),
        .Q(writeDvalid_reg_0[44]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[45] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[45]),
        .Q(writeDvalid_reg_0[45]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[46] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[46]),
        .Q(writeDvalid_reg_0[46]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[47] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[47]),
        .Q(writeDvalid_reg_0[47]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[48] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[48]),
        .Q(writeDvalid_reg_0[48]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[49] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[49]),
        .Q(writeDvalid_reg_0[49]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[4]),
        .Q(writeDvalid_reg_0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[50] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[50]),
        .Q(writeDvalid_reg_0[50]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[51] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[51]),
        .Q(writeDvalid_reg_0[51]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[52] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[52]),
        .Q(writeDvalid_reg_0[52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[53] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[53]),
        .Q(writeDvalid_reg_0[53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[54] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[54]),
        .Q(writeDvalid_reg_0[54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[55] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[55]),
        .Q(writeDvalid_reg_0[55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[56] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[56]),
        .Q(writeDvalid_reg_0[56]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[57] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[57]),
        .Q(writeDvalid_reg_0[57]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[58] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[58]),
        .Q(writeDvalid_reg_0[58]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[59] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[59]),
        .Q(writeDvalid_reg_0[59]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[5]),
        .Q(writeDvalid_reg_0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[60] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[60]),
        .Q(writeDvalid_reg_0[60]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[61] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[61]),
        .Q(writeDvalid_reg_0[61]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[62] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[62]),
        .Q(writeDvalid_reg_0[62]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[63] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[63]),
        .Q(writeDvalid_reg_0[63]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[64] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[64]),
        .Q(writeDvalid_reg_0[64]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[65] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[65]),
        .Q(writeDvalid_reg_0[65]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[66] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[66]),
        .Q(writeDvalid_reg_0[66]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[67] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[67]),
        .Q(writeDvalid_reg_0[67]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[68] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[68]),
        .Q(writeDvalid_reg_0[68]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[69] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[69]),
        .Q(writeDvalid_reg_0[69]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[6]),
        .Q(writeDvalid_reg_0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[70] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[70]),
        .Q(writeDvalid_reg_0[70]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[71] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[71]),
        .Q(writeDvalid_reg_0[71]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[72] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[72]),
        .Q(writeDvalid_reg_0[72]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[73] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[73]),
        .Q(writeDvalid_reg_0[73]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[74] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[74]),
        .Q(writeDvalid_reg_0[74]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[75] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[75]),
        .Q(writeDvalid_reg_0[75]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[76] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[76]),
        .Q(writeDvalid_reg_0[76]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[77] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[77]),
        .Q(writeDvalid_reg_0[77]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[78] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[78]),
        .Q(writeDvalid_reg_0[78]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[79] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[79]),
        .Q(writeDvalid_reg_0[79]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[7]),
        .Q(writeDvalid_reg_0[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[80] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[80]),
        .Q(writeDvalid_reg_0[80]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[81] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[81]),
        .Q(writeDvalid_reg_0[81]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[82] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[82]),
        .Q(writeDvalid_reg_0[82]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[83] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[83]),
        .Q(writeDvalid_reg_0[83]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[84] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[84]),
        .Q(writeDvalid_reg_0[84]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[85] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[85]),
        .Q(writeDvalid_reg_0[85]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[86] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[86]),
        .Q(writeDvalid_reg_0[86]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[87] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[87]),
        .Q(writeDvalid_reg_0[87]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[88] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[88]),
        .Q(writeDvalid_reg_0[88]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[89] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[89]),
        .Q(writeDvalid_reg_0[89]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[8]),
        .Q(writeDvalid_reg_0[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[90] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[90]),
        .Q(writeDvalid_reg_0[90]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[91] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[91]),
        .Q(writeDvalid_reg_0[91]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[92] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[92]),
        .Q(writeDvalid_reg_0[92]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[93] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[93]),
        .Q(writeDvalid_reg_0[93]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[94] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[94]),
        .Q(writeDvalid_reg_0[94]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[95] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[95]),
        .Q(writeDvalid_reg_0[95]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[96] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[96]),
        .Q(writeDvalid_reg_0[96]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[97] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[97]),
        .Q(writeDvalid_reg_0[97]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[98] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[98]),
        .Q(writeDvalid_reg_0[98]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[99] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[99]),
        .Q(writeDvalid_reg_0[99]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \writeDdata_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(dataBuffer_S2[9]),
        .Q(writeDvalid_reg_0[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    writeDlast_reg
       (.C(clk),
        .CE(1'b1),
        .D(writeDlast_reg_0),
        .Q(writeDlast),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_10
       (.I0(countDataToBeSent_reg[32]),
        .I1(countDataSent_reg[32]),
        .I2(countDataToBeSent_reg[33]),
        .I3(countDataSent_reg[33]),
        .O(writeDvalid_i_10_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_12
       (.I0(countDataToBeSent_reg[30]),
        .I1(countDataSent_reg[30]),
        .I2(countDataSent_reg[31]),
        .I3(countDataToBeSent_reg[31]),
        .O(writeDvalid_i_12_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_13
       (.I0(countDataToBeSent_reg[28]),
        .I1(countDataSent_reg[28]),
        .I2(countDataSent_reg[29]),
        .I3(countDataToBeSent_reg[29]),
        .O(writeDvalid_i_13_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_14
       (.I0(countDataToBeSent_reg[26]),
        .I1(countDataSent_reg[26]),
        .I2(countDataSent_reg[27]),
        .I3(countDataToBeSent_reg[27]),
        .O(writeDvalid_i_14_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_15
       (.I0(countDataToBeSent_reg[24]),
        .I1(countDataSent_reg[24]),
        .I2(countDataSent_reg[25]),
        .I3(countDataToBeSent_reg[25]),
        .O(writeDvalid_i_15_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_16
       (.I0(countDataToBeSent_reg[22]),
        .I1(countDataSent_reg[22]),
        .I2(countDataSent_reg[23]),
        .I3(countDataToBeSent_reg[23]),
        .O(writeDvalid_i_16_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_17
       (.I0(countDataToBeSent_reg[20]),
        .I1(countDataSent_reg[20]),
        .I2(countDataSent_reg[21]),
        .I3(countDataToBeSent_reg[21]),
        .O(writeDvalid_i_17_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_18
       (.I0(countDataToBeSent_reg[18]),
        .I1(countDataSent_reg[18]),
        .I2(countDataSent_reg[19]),
        .I3(countDataToBeSent_reg[19]),
        .O(writeDvalid_i_18_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_19
       (.I0(countDataToBeSent_reg[16]),
        .I1(countDataSent_reg[16]),
        .I2(countDataSent_reg[17]),
        .I3(countDataToBeSent_reg[17]),
        .O(writeDvalid_i_19_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_20
       (.I0(countDataToBeSent_reg[30]),
        .I1(countDataSent_reg[30]),
        .I2(countDataToBeSent_reg[31]),
        .I3(countDataSent_reg[31]),
        .O(writeDvalid_i_20_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_21
       (.I0(countDataToBeSent_reg[28]),
        .I1(countDataSent_reg[28]),
        .I2(countDataToBeSent_reg[29]),
        .I3(countDataSent_reg[29]),
        .O(writeDvalid_i_21_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_22
       (.I0(countDataToBeSent_reg[26]),
        .I1(countDataSent_reg[26]),
        .I2(countDataToBeSent_reg[27]),
        .I3(countDataSent_reg[27]),
        .O(writeDvalid_i_22_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_23
       (.I0(countDataToBeSent_reg[24]),
        .I1(countDataSent_reg[24]),
        .I2(countDataToBeSent_reg[25]),
        .I3(countDataSent_reg[25]),
        .O(writeDvalid_i_23_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_24
       (.I0(countDataToBeSent_reg[22]),
        .I1(countDataSent_reg[22]),
        .I2(countDataToBeSent_reg[23]),
        .I3(countDataSent_reg[23]),
        .O(writeDvalid_i_24_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_25
       (.I0(countDataToBeSent_reg[20]),
        .I1(countDataSent_reg[20]),
        .I2(countDataToBeSent_reg[21]),
        .I3(countDataSent_reg[21]),
        .O(writeDvalid_i_25_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_26
       (.I0(countDataToBeSent_reg[18]),
        .I1(countDataSent_reg[18]),
        .I2(countDataToBeSent_reg[19]),
        .I3(countDataSent_reg[19]),
        .O(writeDvalid_i_26_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_27
       (.I0(countDataToBeSent_reg[16]),
        .I1(countDataSent_reg[16]),
        .I2(countDataToBeSent_reg[17]),
        .I3(countDataSent_reg[17]),
        .O(writeDvalid_i_27_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_28
       (.I0(countDataToBeSent_reg[14]),
        .I1(countDataSent_reg[14]),
        .I2(countDataSent_reg[15]),
        .I3(countDataToBeSent_reg[15]),
        .O(writeDvalid_i_28_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_29
       (.I0(countDataToBeSent_reg[12]),
        .I1(countDataSent_reg[12]),
        .I2(countDataSent_reg[13]),
        .I3(countDataToBeSent_reg[13]),
        .O(writeDvalid_i_29_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_3
       (.I0(countDataToBeSent_reg[38]),
        .I1(countDataSent_reg[38]),
        .I2(countDataSent_reg[39]),
        .I3(countDataToBeSent_reg[39]),
        .O(writeDvalid_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_30
       (.I0(countDataToBeSent_reg[10]),
        .I1(countDataSent_reg[10]),
        .I2(countDataSent_reg[11]),
        .I3(countDataToBeSent_reg[11]),
        .O(writeDvalid_i_30_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_31
       (.I0(countDataToBeSent_reg[8]),
        .I1(countDataSent_reg[8]),
        .I2(countDataSent_reg[9]),
        .I3(countDataToBeSent_reg[9]),
        .O(writeDvalid_i_31_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_32
       (.I0(countDataToBeSent_reg[6]),
        .I1(countDataSent_reg[6]),
        .I2(countDataSent_reg[7]),
        .I3(countDataToBeSent_reg[7]),
        .O(writeDvalid_i_32_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_33
       (.I0(countDataToBeSent_reg[4]),
        .I1(countDataSent_reg[4]),
        .I2(countDataSent_reg[5]),
        .I3(countDataToBeSent_reg[5]),
        .O(writeDvalid_i_33_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_34
       (.I0(countDataToBeSent_reg[2]),
        .I1(countDataSent_reg[2]),
        .I2(countDataSent_reg[3]),
        .I3(countDataToBeSent_reg[3]),
        .O(writeDvalid_i_34_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_35
       (.I0(countDataToBeSent_reg[0]),
        .I1(countDataSent_reg[0]),
        .I2(countDataSent_reg[1]),
        .I3(countDataToBeSent_reg[1]),
        .O(writeDvalid_i_35_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_36
       (.I0(countDataToBeSent_reg[14]),
        .I1(countDataSent_reg[14]),
        .I2(countDataToBeSent_reg[15]),
        .I3(countDataSent_reg[15]),
        .O(writeDvalid_i_36_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_37
       (.I0(countDataToBeSent_reg[12]),
        .I1(countDataSent_reg[12]),
        .I2(countDataToBeSent_reg[13]),
        .I3(countDataSent_reg[13]),
        .O(writeDvalid_i_37_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_38
       (.I0(countDataToBeSent_reg[10]),
        .I1(countDataSent_reg[10]),
        .I2(countDataToBeSent_reg[11]),
        .I3(countDataSent_reg[11]),
        .O(writeDvalid_i_38_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_39
       (.I0(countDataToBeSent_reg[8]),
        .I1(countDataSent_reg[8]),
        .I2(countDataToBeSent_reg[9]),
        .I3(countDataSent_reg[9]),
        .O(writeDvalid_i_39_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_4
       (.I0(countDataToBeSent_reg[36]),
        .I1(countDataSent_reg[36]),
        .I2(countDataSent_reg[37]),
        .I3(countDataToBeSent_reg[37]),
        .O(writeDvalid_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_40
       (.I0(countDataToBeSent_reg[6]),
        .I1(countDataSent_reg[6]),
        .I2(countDataToBeSent_reg[7]),
        .I3(countDataSent_reg[7]),
        .O(writeDvalid_i_40_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_41
       (.I0(countDataToBeSent_reg[4]),
        .I1(countDataSent_reg[4]),
        .I2(countDataToBeSent_reg[5]),
        .I3(countDataSent_reg[5]),
        .O(writeDvalid_i_41_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_42
       (.I0(countDataToBeSent_reg[2]),
        .I1(countDataSent_reg[2]),
        .I2(countDataToBeSent_reg[3]),
        .I3(countDataSent_reg[3]),
        .O(writeDvalid_i_42_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_43
       (.I0(countDataToBeSent_reg[0]),
        .I1(countDataSent_reg[0]),
        .I2(countDataToBeSent_reg[1]),
        .I3(countDataSent_reg[1]),
        .O(writeDvalid_i_43_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_5
       (.I0(countDataToBeSent_reg[34]),
        .I1(countDataSent_reg[34]),
        .I2(countDataSent_reg[35]),
        .I3(countDataToBeSent_reg[35]),
        .O(writeDvalid_i_5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    writeDvalid_i_6
       (.I0(countDataToBeSent_reg[32]),
        .I1(countDataSent_reg[32]),
        .I2(countDataSent_reg[33]),
        .I3(countDataToBeSent_reg[33]),
        .O(writeDvalid_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_7
       (.I0(countDataToBeSent_reg[38]),
        .I1(countDataSent_reg[38]),
        .I2(countDataToBeSent_reg[39]),
        .I3(countDataSent_reg[39]),
        .O(writeDvalid_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_8
       (.I0(countDataToBeSent_reg[36]),
        .I1(countDataSent_reg[36]),
        .I2(countDataToBeSent_reg[37]),
        .I3(countDataSent_reg[37]),
        .O(writeDvalid_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    writeDvalid_i_9
       (.I0(countDataToBeSent_reg[34]),
        .I1(countDataSent_reg[34]),
        .I2(countDataToBeSent_reg[35]),
        .I3(countDataSent_reg[35]),
        .O(writeDvalid_i_9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    writeDvalid_reg
       (.C(clk),
        .CE(1'b1),
        .D(writeDvalid0),
        .Q(writeDvalid),
        .R(writeDbusy));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    writeDvalid_reg_i_1
       (.CI(writeDvalid_reg_i_2_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_writeDvalid_reg_i_1_CO_UNCONNECTED[7:4],writeDvalid0,writeDvalid_reg_i_1_n_5,writeDvalid_reg_i_1_n_6,writeDvalid_reg_i_1_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,writeDvalid_i_3_n_0,writeDvalid_i_4_n_0,writeDvalid_i_5_n_0,writeDvalid_i_6_n_0}),
        .O(NLW_writeDvalid_reg_i_1_O_UNCONNECTED[7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,writeDvalid_i_7_n_0,writeDvalid_i_8_n_0,writeDvalid_i_9_n_0,writeDvalid_i_10_n_0}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    writeDvalid_reg_i_11
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({writeDvalid_reg_i_11_n_0,writeDvalid_reg_i_11_n_1,writeDvalid_reg_i_11_n_2,writeDvalid_reg_i_11_n_3,NLW_writeDvalid_reg_i_11_CO_UNCONNECTED[3],writeDvalid_reg_i_11_n_5,writeDvalid_reg_i_11_n_6,writeDvalid_reg_i_11_n_7}),
        .DI({writeDvalid_i_28_n_0,writeDvalid_i_29_n_0,writeDvalid_i_30_n_0,writeDvalid_i_31_n_0,writeDvalid_i_32_n_0,writeDvalid_i_33_n_0,writeDvalid_i_34_n_0,writeDvalid_i_35_n_0}),
        .O(NLW_writeDvalid_reg_i_11_O_UNCONNECTED[7:0]),
        .S({writeDvalid_i_36_n_0,writeDvalid_i_37_n_0,writeDvalid_i_38_n_0,writeDvalid_i_39_n_0,writeDvalid_i_40_n_0,writeDvalid_i_41_n_0,writeDvalid_i_42_n_0,writeDvalid_i_43_n_0}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    writeDvalid_reg_i_2
       (.CI(writeDvalid_reg_i_11_n_0),
        .CI_TOP(1'b0),
        .CO({writeDvalid_reg_i_2_n_0,writeDvalid_reg_i_2_n_1,writeDvalid_reg_i_2_n_2,writeDvalid_reg_i_2_n_3,NLW_writeDvalid_reg_i_2_CO_UNCONNECTED[3],writeDvalid_reg_i_2_n_5,writeDvalid_reg_i_2_n_6,writeDvalid_reg_i_2_n_7}),
        .DI({writeDvalid_i_12_n_0,writeDvalid_i_13_n_0,writeDvalid_i_14_n_0,writeDvalid_i_15_n_0,writeDvalid_i_16_n_0,writeDvalid_i_17_n_0,writeDvalid_i_18_n_0,writeDvalid_i_19_n_0}),
        .O(NLW_writeDvalid_reg_i_2_O_UNCONNECTED[7:0]),
        .S({writeDvalid_i_20_n_0,writeDvalid_i_21_n_0,writeDvalid_i_22_n_0,writeDvalid_i_23_n_0,writeDvalid_i_24_n_0,writeDvalid_i_25_n_0,writeDvalid_i_26_n_0,writeDvalid_i_27_n_0}));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_blocking_ratio_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[0]),
        .Q(write_blocking_ratio[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[10]),
        .Q(write_blocking_ratio[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[11]),
        .Q(write_blocking_ratio[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[12]),
        .Q(write_blocking_ratio[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[13]),
        .Q(write_blocking_ratio[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[14]),
        .Q(write_blocking_ratio[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[15]),
        .Q(write_blocking_ratio[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[16]),
        .Q(write_blocking_ratio[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[17]),
        .Q(write_blocking_ratio[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[18]),
        .Q(write_blocking_ratio[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[19]),
        .Q(write_blocking_ratio[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[1]),
        .Q(write_blocking_ratio[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[20]),
        .Q(write_blocking_ratio[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[21]),
        .Q(write_blocking_ratio[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[22]),
        .Q(write_blocking_ratio[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[23]),
        .Q(write_blocking_ratio[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[24]),
        .Q(write_blocking_ratio[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[25]),
        .Q(write_blocking_ratio[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[26]),
        .Q(write_blocking_ratio[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[27]),
        .Q(write_blocking_ratio[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[28]),
        .Q(write_blocking_ratio[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[29]),
        .Q(write_blocking_ratio[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[2]),
        .Q(write_blocking_ratio[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[30]),
        .Q(write_blocking_ratio[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[31]),
        .Q(write_blocking_ratio[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[3]),
        .Q(write_blocking_ratio[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[4]),
        .Q(write_blocking_ratio[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[5]),
        .Q(write_blocking_ratio[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[6]),
        .Q(write_blocking_ratio[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[7]),
        .Q(write_blocking_ratio[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[8]),
        .Q(write_blocking_ratio[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_blocking_ratio_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_blocking_ratio__0[9]),
        .Q(write_blocking_ratio[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[0]),
        .Q(write_burst_size[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[10]),
        .Q(write_burst_size[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[11]),
        .Q(write_burst_size[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[12]),
        .Q(write_burst_size[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[13]),
        .Q(write_burst_size[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[14]),
        .Q(write_burst_size[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[15]),
        .Q(write_burst_size[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[16]),
        .Q(write_burst_size[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[17]),
        .Q(write_burst_size[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[18]),
        .Q(write_burst_size[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[19]),
        .Q(write_burst_size[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[1]),
        .Q(write_burst_size[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[20]),
        .Q(write_burst_size[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[21]),
        .Q(write_burst_size[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[22]),
        .Q(write_burst_size[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[23]),
        .Q(write_burst_size[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[24]),
        .Q(write_burst_size[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[25]),
        .Q(write_burst_size[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[26]),
        .Q(write_burst_size[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[27]),
        .Q(write_burst_size[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[28]),
        .Q(write_burst_size[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[29]),
        .Q(write_burst_size[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_burst_size_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[2]),
        .Q(write_burst_size[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[30]),
        .Q(write_burst_size[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[31]),
        .Q(write_burst_size[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[3]),
        .Q(write_burst_size[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[4]),
        .Q(write_burst_size[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_burst_size_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[5]),
        .Q(write_burst_size[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_burst_size_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[6]),
        .Q(write_burst_size[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[7]),
        .Q(write_burst_size[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[8]),
        .Q(write_burst_size[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_burst_size_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_burst_size__0[9]),
        .Q(write_burst_size[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'h0203)) 
    \write_count[0]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(write_count_reg_n_0_[0]),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(reset_cmd),
        .O(\write_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[10]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_14 ),
        .O(\write_count[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[11]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_13 ),
        .O(\write_count[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[12]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_12 ),
        .O(\write_count[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[13]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_11 ),
        .O(\write_count[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[14]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_10 ),
        .O(\write_count[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[15]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_9 ),
        .O(\write_count[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[16]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_8 ),
        .O(\write_count[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[17]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_15 ),
        .O(\write_count[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[18]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_14 ),
        .O(\write_count[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[19]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_13 ),
        .O(\write_count[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[1]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_15 ),
        .O(\write_count[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[20]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_12 ),
        .O(\write_count[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[21]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_11 ),
        .O(\write_count[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[22]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_10 ),
        .O(\write_count[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[23]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_9 ),
        .O(\write_count[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[24]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[24]_i_2_n_8 ),
        .O(\write_count[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[25]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[31]_i_3_n_15 ),
        .O(\write_count[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[26]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[31]_i_3_n_14 ),
        .O(\write_count[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[27]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[31]_i_3_n_13 ),
        .O(\write_count[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[28]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[31]_i_3_n_12 ),
        .O(\write_count[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[29]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[31]_i_3_n_11 ),
        .O(\write_count[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[2]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_14 ),
        .O(\write_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[30]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[31]_i_3_n_10 ),
        .O(\write_count[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[31]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[31]_i_3_n_9 ),
        .O(\write_count[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_10 
       (.I0(\write_count_reg[24]_i_2_n_12 ),
        .I1(write_count_bursts_per_reset[20]),
        .I2(write_count_bursts_per_reset[21]),
        .I3(\write_count_reg[24]_i_2_n_11 ),
        .O(\write_count[31]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_11 
       (.I0(\write_count_reg[24]_i_2_n_14 ),
        .I1(write_count_bursts_per_reset[18]),
        .I2(write_count_bursts_per_reset[19]),
        .I3(\write_count_reg[24]_i_2_n_13 ),
        .O(\write_count[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_12 
       (.I0(\write_count_reg[16]_i_2_n_8 ),
        .I1(write_count_bursts_per_reset[16]),
        .I2(write_count_bursts_per_reset[17]),
        .I3(\write_count_reg[24]_i_2_n_15 ),
        .O(\write_count[31]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_13 
       (.I0(\write_count_reg[31]_i_3_n_10 ),
        .I1(write_count_bursts_per_reset[30]),
        .I2(\write_count_reg[31]_i_3_n_9 ),
        .I3(write_count_bursts_per_reset[31]),
        .O(\write_count[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_14 
       (.I0(\write_count_reg[31]_i_3_n_12 ),
        .I1(write_count_bursts_per_reset[28]),
        .I2(\write_count_reg[31]_i_3_n_11 ),
        .I3(write_count_bursts_per_reset[29]),
        .O(\write_count[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_15 
       (.I0(\write_count_reg[31]_i_3_n_14 ),
        .I1(write_count_bursts_per_reset[26]),
        .I2(\write_count_reg[31]_i_3_n_13 ),
        .I3(write_count_bursts_per_reset[27]),
        .O(\write_count[31]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_16 
       (.I0(\write_count_reg[24]_i_2_n_8 ),
        .I1(write_count_bursts_per_reset[24]),
        .I2(\write_count_reg[31]_i_3_n_15 ),
        .I3(write_count_bursts_per_reset[25]),
        .O(\write_count[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_17 
       (.I0(\write_count_reg[24]_i_2_n_10 ),
        .I1(write_count_bursts_per_reset[22]),
        .I2(\write_count_reg[24]_i_2_n_9 ),
        .I3(write_count_bursts_per_reset[23]),
        .O(\write_count[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_18 
       (.I0(\write_count_reg[24]_i_2_n_12 ),
        .I1(write_count_bursts_per_reset[20]),
        .I2(\write_count_reg[24]_i_2_n_11 ),
        .I3(write_count_bursts_per_reset[21]),
        .O(\write_count[31]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_19 
       (.I0(\write_count_reg[24]_i_2_n_14 ),
        .I1(write_count_bursts_per_reset[18]),
        .I2(\write_count_reg[24]_i_2_n_13 ),
        .I3(write_count_bursts_per_reset[19]),
        .O(\write_count[31]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_20 
       (.I0(\write_count_reg[16]_i_2_n_8 ),
        .I1(write_count_bursts_per_reset[16]),
        .I2(\write_count_reg[24]_i_2_n_15 ),
        .I3(write_count_bursts_per_reset[17]),
        .O(\write_count[31]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_21 
       (.I0(\write_count_reg[16]_i_2_n_10 ),
        .I1(write_count_bursts_per_reset[14]),
        .I2(write_count_bursts_per_reset[15]),
        .I3(\write_count_reg[16]_i_2_n_9 ),
        .O(\write_count[31]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_22 
       (.I0(\write_count_reg[16]_i_2_n_12 ),
        .I1(write_count_bursts_per_reset[12]),
        .I2(write_count_bursts_per_reset[13]),
        .I3(\write_count_reg[16]_i_2_n_11 ),
        .O(\write_count[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_23 
       (.I0(\write_count_reg[16]_i_2_n_14 ),
        .I1(write_count_bursts_per_reset[10]),
        .I2(write_count_bursts_per_reset[11]),
        .I3(\write_count_reg[16]_i_2_n_13 ),
        .O(\write_count[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_24 
       (.I0(\write_count_reg[8]_i_2_n_8 ),
        .I1(write_count_bursts_per_reset[8]),
        .I2(write_count_bursts_per_reset[9]),
        .I3(\write_count_reg[16]_i_2_n_15 ),
        .O(\write_count[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_25 
       (.I0(\write_count_reg[8]_i_2_n_10 ),
        .I1(write_count_bursts_per_reset[6]),
        .I2(write_count_bursts_per_reset[7]),
        .I3(\write_count_reg[8]_i_2_n_9 ),
        .O(\write_count[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_26 
       (.I0(\write_count_reg[8]_i_2_n_12 ),
        .I1(write_count_bursts_per_reset[4]),
        .I2(write_count_bursts_per_reset[5]),
        .I3(\write_count_reg[8]_i_2_n_11 ),
        .O(\write_count[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_27 
       (.I0(\write_count_reg[8]_i_2_n_14 ),
        .I1(write_count_bursts_per_reset[2]),
        .I2(write_count_bursts_per_reset[3]),
        .I3(\write_count_reg[8]_i_2_n_13 ),
        .O(\write_count[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h1F01)) 
    \write_count[31]_i_28 
       (.I0(write_count_bursts_per_reset[0]),
        .I1(write_count_reg_n_0_[0]),
        .I2(write_count_bursts_per_reset[1]),
        .I3(\write_count_reg[8]_i_2_n_15 ),
        .O(\write_count[31]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_29 
       (.I0(\write_count_reg[16]_i_2_n_10 ),
        .I1(write_count_bursts_per_reset[14]),
        .I2(\write_count_reg[16]_i_2_n_9 ),
        .I3(write_count_bursts_per_reset[15]),
        .O(\write_count[31]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_30 
       (.I0(\write_count_reg[16]_i_2_n_12 ),
        .I1(write_count_bursts_per_reset[12]),
        .I2(\write_count_reg[16]_i_2_n_11 ),
        .I3(write_count_bursts_per_reset[13]),
        .O(\write_count[31]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_31 
       (.I0(\write_count_reg[16]_i_2_n_14 ),
        .I1(write_count_bursts_per_reset[10]),
        .I2(\write_count_reg[16]_i_2_n_13 ),
        .I3(write_count_bursts_per_reset[11]),
        .O(\write_count[31]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_32 
       (.I0(\write_count_reg[8]_i_2_n_8 ),
        .I1(write_count_bursts_per_reset[8]),
        .I2(\write_count_reg[16]_i_2_n_15 ),
        .I3(write_count_bursts_per_reset[9]),
        .O(\write_count[31]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_33 
       (.I0(\write_count_reg[8]_i_2_n_10 ),
        .I1(write_count_bursts_per_reset[6]),
        .I2(\write_count_reg[8]_i_2_n_9 ),
        .I3(write_count_bursts_per_reset[7]),
        .O(\write_count[31]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_34 
       (.I0(\write_count_reg[8]_i_2_n_12 ),
        .I1(write_count_bursts_per_reset[4]),
        .I2(\write_count_reg[8]_i_2_n_11 ),
        .I3(write_count_bursts_per_reset[5]),
        .O(\write_count[31]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count[31]_i_35 
       (.I0(\write_count_reg[8]_i_2_n_14 ),
        .I1(write_count_bursts_per_reset[2]),
        .I2(\write_count_reg[8]_i_2_n_13 ),
        .I3(write_count_bursts_per_reset[3]),
        .O(\write_count[31]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h6006)) 
    \write_count[31]_i_36 
       (.I0(write_count_reg_n_0_[0]),
        .I1(write_count_bursts_per_reset[0]),
        .I2(\write_count_reg[8]_i_2_n_15 ),
        .I3(write_count_bursts_per_reset[1]),
        .O(\write_count[31]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_5 
       (.I0(\write_count_reg[31]_i_3_n_10 ),
        .I1(write_count_bursts_per_reset[30]),
        .I2(write_count_bursts_per_reset[31]),
        .I3(\write_count_reg[31]_i_3_n_9 ),
        .O(\write_count[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_6 
       (.I0(\write_count_reg[31]_i_3_n_12 ),
        .I1(write_count_bursts_per_reset[28]),
        .I2(write_count_bursts_per_reset[29]),
        .I3(\write_count_reg[31]_i_3_n_11 ),
        .O(\write_count[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_7 
       (.I0(\write_count_reg[31]_i_3_n_14 ),
        .I1(write_count_bursts_per_reset[26]),
        .I2(write_count_bursts_per_reset[27]),
        .I3(\write_count_reg[31]_i_3_n_13 ),
        .O(\write_count[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_8 
       (.I0(\write_count_reg[24]_i_2_n_8 ),
        .I1(write_count_bursts_per_reset[24]),
        .I2(write_count_bursts_per_reset[25]),
        .I3(\write_count_reg[31]_i_3_n_15 ),
        .O(\write_count[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \write_count[31]_i_9 
       (.I0(\write_count_reg[24]_i_2_n_10 ),
        .I1(write_count_bursts_per_reset[22]),
        .I2(write_count_bursts_per_reset[23]),
        .I3(\write_count_reg[24]_i_2_n_9 ),
        .O(\write_count[31]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[3]_i_1 
       (.I0(\countAddrSent[39]_i_5_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_13 ),
        .O(\write_count[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[4]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_12 ),
        .O(\write_count[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[5]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_11 ),
        .O(\write_count[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[6]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_10 ),
        .O(\write_count[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[7]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_9 ),
        .O(\write_count[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[8]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[8]_i_2_n_8 ),
        .O(\write_count[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count[9]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(\write_count_reg[31]_i_2_n_0 ),
        .I3(\write_count_reg[16]_i_2_n_15 ),
        .O(\write_count[9]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[0]),
        .Q(write_count_bursts_per_reset[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[10]),
        .Q(write_count_bursts_per_reset[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[11]),
        .Q(write_count_bursts_per_reset[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[12]),
        .Q(write_count_bursts_per_reset[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[13]),
        .Q(write_count_bursts_per_reset[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[14]),
        .Q(write_count_bursts_per_reset[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[15]),
        .Q(write_count_bursts_per_reset[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[16]),
        .Q(write_count_bursts_per_reset[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[17]),
        .Q(write_count_bursts_per_reset[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[18]),
        .Q(write_count_bursts_per_reset[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[19]),
        .Q(write_count_bursts_per_reset[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[1]),
        .Q(write_count_bursts_per_reset[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[20]),
        .Q(write_count_bursts_per_reset[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[21]),
        .Q(write_count_bursts_per_reset[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[22]),
        .Q(write_count_bursts_per_reset[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[23]),
        .Q(write_count_bursts_per_reset[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[24]),
        .Q(write_count_bursts_per_reset[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[25]),
        .Q(write_count_bursts_per_reset[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[26]),
        .Q(write_count_bursts_per_reset[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[27]),
        .Q(write_count_bursts_per_reset[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[28]),
        .Q(write_count_bursts_per_reset[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[29]),
        .Q(write_count_bursts_per_reset[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_count_bursts_per_reset_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[2]),
        .Q(write_count_bursts_per_reset[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[30]),
        .Q(write_count_bursts_per_reset[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[31]),
        .Q(write_count_bursts_per_reset[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[3]),
        .Q(write_count_bursts_per_reset[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[4]),
        .Q(write_count_bursts_per_reset[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_count_bursts_per_reset_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[5]),
        .Q(write_count_bursts_per_reset[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_count_bursts_per_reset_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[6]),
        .Q(write_count_bursts_per_reset[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[7]),
        .Q(write_count_bursts_per_reset[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[8]),
        .Q(write_count_bursts_per_reset[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_bursts_per_reset_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_count_bursts_per_reset__0[9]),
        .Q(write_count_bursts_per_reset[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h0203)) 
    \write_count_for_last[0]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(write_count_for_last_reg_n_0_[0]),
        .I2(O32),
        .I3(reset_cmd),
        .O(\write_count_for_last[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[10]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[11]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[12]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[13]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[14]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[15]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[16]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[17]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[18]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[19]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[1]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[20]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[21]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[22]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[23]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[24]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[24]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[25]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[31]_i_4_n_15 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[26]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[31]_i_4_n_14 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[27]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[31]_i_4_n_13 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[28]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[31]_i_4_n_12 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[29]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[31]_i_4_n_11 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[2]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_14 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[30]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[31]_i_4_n_10 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \write_count_for_last[31]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(reset_cmd),
        .I2(writeDbusy),
        .I3(writeDvalid0),
        .O(write_count_for_last));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_10 
       (.I0(\write_count_for_last_reg[24]_i_2_n_14 ),
        .I1(write_burst_size[18]),
        .I2(write_burst_size[20]),
        .I3(\write_count_for_last_reg[24]_i_2_n_12 ),
        .I4(write_burst_size[19]),
        .I5(\write_count_for_last_reg[24]_i_2_n_13 ),
        .O(\write_count_for_last[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_11 
       (.I0(\write_count_for_last_reg[16]_i_2_n_9 ),
        .I1(write_burst_size[15]),
        .I2(write_burst_size[17]),
        .I3(\write_count_for_last_reg[24]_i_2_n_15 ),
        .I4(write_burst_size[16]),
        .I5(\write_count_for_last_reg[16]_i_2_n_8 ),
        .O(\write_count_for_last[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_12 
       (.I0(\write_count_for_last_reg[16]_i_2_n_12 ),
        .I1(write_burst_size[12]),
        .I2(write_burst_size[14]),
        .I3(\write_count_for_last_reg[16]_i_2_n_10 ),
        .I4(write_burst_size[13]),
        .I5(\write_count_for_last_reg[16]_i_2_n_11 ),
        .O(\write_count_for_last[31]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_13 
       (.I0(\write_count_for_last_reg[16]_i_2_n_15 ),
        .I1(write_burst_size[9]),
        .I2(write_burst_size[11]),
        .I3(\write_count_for_last_reg[16]_i_2_n_13 ),
        .I4(write_burst_size[10]),
        .I5(\write_count_for_last_reg[16]_i_2_n_14 ),
        .O(\write_count_for_last[31]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_14 
       (.I0(\write_count_for_last_reg[8]_i_2_n_10 ),
        .I1(write_burst_size[6]),
        .I2(write_burst_size[8]),
        .I3(\write_count_for_last_reg[8]_i_2_n_8 ),
        .I4(write_burst_size[7]),
        .I5(\write_count_for_last_reg[8]_i_2_n_9 ),
        .O(\write_count_for_last[31]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_15 
       (.I0(\write_count_for_last_reg[8]_i_2_n_13 ),
        .I1(write_burst_size[3]),
        .I2(write_burst_size[5]),
        .I3(\write_count_for_last_reg[8]_i_2_n_11 ),
        .I4(write_burst_size[4]),
        .I5(\write_count_for_last_reg[8]_i_2_n_12 ),
        .O(\write_count_for_last[31]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h6006000000006006)) 
    \write_count_for_last[31]_i_16 
       (.I0(write_count_for_last_reg_n_0_[0]),
        .I1(write_burst_size[0]),
        .I2(write_burst_size[2]),
        .I3(\write_count_for_last_reg[8]_i_2_n_14 ),
        .I4(write_burst_size[1]),
        .I5(\write_count_for_last_reg[8]_i_2_n_15 ),
        .O(\write_count_for_last[31]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[31]_i_2 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[31]_i_4_n_9 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \write_count_for_last[31]_i_6 
       (.I0(\write_count_for_last_reg[31]_i_4_n_10 ),
        .I1(write_burst_size[30]),
        .I2(\write_count_for_last_reg[31]_i_4_n_9 ),
        .I3(write_burst_size[31]),
        .O(\write_count_for_last[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_7 
       (.I0(\write_count_for_last_reg[31]_i_4_n_13 ),
        .I1(write_burst_size[27]),
        .I2(write_burst_size[29]),
        .I3(\write_count_for_last_reg[31]_i_4_n_11 ),
        .I4(write_burst_size[28]),
        .I5(\write_count_for_last_reg[31]_i_4_n_12 ),
        .O(\write_count_for_last[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_8 
       (.I0(\write_count_for_last_reg[24]_i_2_n_8 ),
        .I1(write_burst_size[24]),
        .I2(write_burst_size[26]),
        .I3(\write_count_for_last_reg[31]_i_4_n_14 ),
        .I4(write_burst_size[25]),
        .I5(\write_count_for_last_reg[31]_i_4_n_15 ),
        .O(\write_count_for_last[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \write_count_for_last[31]_i_9 
       (.I0(\write_count_for_last_reg[24]_i_2_n_11 ),
        .I1(write_burst_size[21]),
        .I2(write_burst_size[23]),
        .I3(\write_count_for_last_reg[24]_i_2_n_9 ),
        .I4(write_burst_size[22]),
        .I5(\write_count_for_last_reg[24]_i_2_n_10 ),
        .O(\write_count_for_last[31]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[3]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_13 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[4]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_12 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[5]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_11 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[6]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_10 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[7]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_9 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[8]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[8]_i_2_n_8 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h2030)) 
    \write_count_for_last[9]_i_1 
       (.I0(\countAddrSent[39]_i_3_n_0 ),
        .I1(O32),
        .I2(\write_count_for_last_reg[16]_i_2_n_15 ),
        .I3(reset_cmd),
        .O(\write_count_for_last[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[0] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[0]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[10] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[10]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[11] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[11]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[12] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[12]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[13] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[13]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[14] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[14]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[15] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[15]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[16] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[16]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_for_last_reg[16]_i_2 
       (.CI(\write_count_for_last_reg[8]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\write_count_for_last_reg[16]_i_2_n_0 ,\write_count_for_last_reg[16]_i_2_n_1 ,\write_count_for_last_reg[16]_i_2_n_2 ,\write_count_for_last_reg[16]_i_2_n_3 ,\NLW_write_count_for_last_reg[16]_i_2_CO_UNCONNECTED [3],\write_count_for_last_reg[16]_i_2_n_5 ,\write_count_for_last_reg[16]_i_2_n_6 ,\write_count_for_last_reg[16]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_for_last_reg[16]_i_2_n_8 ,\write_count_for_last_reg[16]_i_2_n_9 ,\write_count_for_last_reg[16]_i_2_n_10 ,\write_count_for_last_reg[16]_i_2_n_11 ,\write_count_for_last_reg[16]_i_2_n_12 ,\write_count_for_last_reg[16]_i_2_n_13 ,\write_count_for_last_reg[16]_i_2_n_14 ,\write_count_for_last_reg[16]_i_2_n_15 }),
        .S(write_count_for_last_reg_n_0_[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[17] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[17]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[18] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[18]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[19] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[19]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[1] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[1]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[20] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[20]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[21] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[21]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[22] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[22]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[23] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[23]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[24] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[24]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_for_last_reg[24]_i_2 
       (.CI(\write_count_for_last_reg[16]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\write_count_for_last_reg[24]_i_2_n_0 ,\write_count_for_last_reg[24]_i_2_n_1 ,\write_count_for_last_reg[24]_i_2_n_2 ,\write_count_for_last_reg[24]_i_2_n_3 ,\NLW_write_count_for_last_reg[24]_i_2_CO_UNCONNECTED [3],\write_count_for_last_reg[24]_i_2_n_5 ,\write_count_for_last_reg[24]_i_2_n_6 ,\write_count_for_last_reg[24]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_for_last_reg[24]_i_2_n_8 ,\write_count_for_last_reg[24]_i_2_n_9 ,\write_count_for_last_reg[24]_i_2_n_10 ,\write_count_for_last_reg[24]_i_2_n_11 ,\write_count_for_last_reg[24]_i_2_n_12 ,\write_count_for_last_reg[24]_i_2_n_13 ,\write_count_for_last_reg[24]_i_2_n_14 ,\write_count_for_last_reg[24]_i_2_n_15 }),
        .S(write_count_for_last_reg_n_0_[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[25] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[25]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[26] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[26]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[27] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[27]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[28] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[28]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[29] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[29]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[2] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[2]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[30] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[30]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[31] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[31]_i_2_n_0 ),
        .Q(write_count_for_last_reg_n_0_[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_for_last_reg[31]_i_3 
       (.CI(\write_count_for_last_reg[31]_i_5_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_write_count_for_last_reg[31]_i_3_CO_UNCONNECTED [7:3],O32,\write_count_for_last_reg[31]_i_3_n_6 ,\write_count_for_last_reg[31]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_write_count_for_last_reg[31]_i_3_O_UNCONNECTED [7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,\write_count_for_last[31]_i_6_n_0 ,\write_count_for_last[31]_i_7_n_0 ,\write_count_for_last[31]_i_8_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_for_last_reg[31]_i_4 
       (.CI(\write_count_for_last_reg[24]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_write_count_for_last_reg[31]_i_4_CO_UNCONNECTED [7:6],\write_count_for_last_reg[31]_i_4_n_2 ,\write_count_for_last_reg[31]_i_4_n_3 ,\NLW_write_count_for_last_reg[31]_i_4_CO_UNCONNECTED [3],\write_count_for_last_reg[31]_i_4_n_5 ,\write_count_for_last_reg[31]_i_4_n_6 ,\write_count_for_last_reg[31]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_write_count_for_last_reg[31]_i_4_O_UNCONNECTED [7],\write_count_for_last_reg[31]_i_4_n_9 ,\write_count_for_last_reg[31]_i_4_n_10 ,\write_count_for_last_reg[31]_i_4_n_11 ,\write_count_for_last_reg[31]_i_4_n_12 ,\write_count_for_last_reg[31]_i_4_n_13 ,\write_count_for_last_reg[31]_i_4_n_14 ,\write_count_for_last_reg[31]_i_4_n_15 }),
        .S({1'b0,write_count_for_last_reg_n_0_[31:25]}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_for_last_reg[31]_i_5 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\write_count_for_last_reg[31]_i_5_n_0 ,\write_count_for_last_reg[31]_i_5_n_1 ,\write_count_for_last_reg[31]_i_5_n_2 ,\write_count_for_last_reg[31]_i_5_n_3 ,\NLW_write_count_for_last_reg[31]_i_5_CO_UNCONNECTED [3],\write_count_for_last_reg[31]_i_5_n_5 ,\write_count_for_last_reg[31]_i_5_n_6 ,\write_count_for_last_reg[31]_i_5_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_write_count_for_last_reg[31]_i_5_O_UNCONNECTED [7:0]),
        .S({\write_count_for_last[31]_i_9_n_0 ,\write_count_for_last[31]_i_10_n_0 ,\write_count_for_last[31]_i_11_n_0 ,\write_count_for_last[31]_i_12_n_0 ,\write_count_for_last[31]_i_13_n_0 ,\write_count_for_last[31]_i_14_n_0 ,\write_count_for_last[31]_i_15_n_0 ,\write_count_for_last[31]_i_16_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[3] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[3]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[4] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[4]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[5] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[5]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[6] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[6]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[7] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[7]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[8] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[8]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_for_last_reg[8]_i_2 
       (.CI(write_count_for_last_reg_n_0_[0]),
        .CI_TOP(1'b0),
        .CO({\write_count_for_last_reg[8]_i_2_n_0 ,\write_count_for_last_reg[8]_i_2_n_1 ,\write_count_for_last_reg[8]_i_2_n_2 ,\write_count_for_last_reg[8]_i_2_n_3 ,\NLW_write_count_for_last_reg[8]_i_2_CO_UNCONNECTED [3],\write_count_for_last_reg[8]_i_2_n_5 ,\write_count_for_last_reg[8]_i_2_n_6 ,\write_count_for_last_reg[8]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_for_last_reg[8]_i_2_n_8 ,\write_count_for_last_reg[8]_i_2_n_9 ,\write_count_for_last_reg[8]_i_2_n_10 ,\write_count_for_last_reg[8]_i_2_n_11 ,\write_count_for_last_reg[8]_i_2_n_12 ,\write_count_for_last_reg[8]_i_2_n_13 ,\write_count_for_last_reg[8]_i_2_n_14 ,\write_count_for_last_reg[8]_i_2_n_15 }),
        .S(write_count_for_last_reg_n_0_[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_for_last_reg[9] 
       (.C(clk),
        .CE(write_count_for_last),
        .D(\write_count_for_last[9]_i_1_n_0 ),
        .Q(write_count_for_last_reg_n_0_[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[0] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[0]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[10] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[10]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[11] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[11]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[12] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[12]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[13] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[13]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[14] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[14]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[15] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[15]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[16] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[16]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_reg[16]_i_2 
       (.CI(\write_count_reg[8]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\write_count_reg[16]_i_2_n_0 ,\write_count_reg[16]_i_2_n_1 ,\write_count_reg[16]_i_2_n_2 ,\write_count_reg[16]_i_2_n_3 ,\NLW_write_count_reg[16]_i_2_CO_UNCONNECTED [3],\write_count_reg[16]_i_2_n_5 ,\write_count_reg[16]_i_2_n_6 ,\write_count_reg[16]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[16]_i_2_n_8 ,\write_count_reg[16]_i_2_n_9 ,\write_count_reg[16]_i_2_n_10 ,\write_count_reg[16]_i_2_n_11 ,\write_count_reg[16]_i_2_n_12 ,\write_count_reg[16]_i_2_n_13 ,\write_count_reg[16]_i_2_n_14 ,\write_count_reg[16]_i_2_n_15 }),
        .S(write_count_reg_n_0_[16:9]));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[17] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[17]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[18] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[18]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[19] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[19]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[1] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[1]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[20] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[20]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[21] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[21]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[22] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[22]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[23] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[23]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[24] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[24]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_reg[24]_i_2 
       (.CI(\write_count_reg[16]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\write_count_reg[24]_i_2_n_0 ,\write_count_reg[24]_i_2_n_1 ,\write_count_reg[24]_i_2_n_2 ,\write_count_reg[24]_i_2_n_3 ,\NLW_write_count_reg[24]_i_2_CO_UNCONNECTED [3],\write_count_reg[24]_i_2_n_5 ,\write_count_reg[24]_i_2_n_6 ,\write_count_reg[24]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[24]_i_2_n_8 ,\write_count_reg[24]_i_2_n_9 ,\write_count_reg[24]_i_2_n_10 ,\write_count_reg[24]_i_2_n_11 ,\write_count_reg[24]_i_2_n_12 ,\write_count_reg[24]_i_2_n_13 ,\write_count_reg[24]_i_2_n_14 ,\write_count_reg[24]_i_2_n_15 }),
        .S(write_count_reg_n_0_[24:17]));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[25] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[25]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[26] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[26]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[27] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[27]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[28] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[28]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[29] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[29]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[2] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[2]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[30] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[30]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[31] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[31]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_reg[31]_i_2 
       (.CI(\write_count_reg[31]_i_4_n_0 ),
        .CI_TOP(1'b0),
        .CO({\write_count_reg[31]_i_2_n_0 ,\write_count_reg[31]_i_2_n_1 ,\write_count_reg[31]_i_2_n_2 ,\write_count_reg[31]_i_2_n_3 ,\NLW_write_count_reg[31]_i_2_CO_UNCONNECTED [3],\write_count_reg[31]_i_2_n_5 ,\write_count_reg[31]_i_2_n_6 ,\write_count_reg[31]_i_2_n_7 }),
        .DI({\write_count[31]_i_5_n_0 ,\write_count[31]_i_6_n_0 ,\write_count[31]_i_7_n_0 ,\write_count[31]_i_8_n_0 ,\write_count[31]_i_9_n_0 ,\write_count[31]_i_10_n_0 ,\write_count[31]_i_11_n_0 ,\write_count[31]_i_12_n_0 }),
        .O(\NLW_write_count_reg[31]_i_2_O_UNCONNECTED [7:0]),
        .S({\write_count[31]_i_13_n_0 ,\write_count[31]_i_14_n_0 ,\write_count[31]_i_15_n_0 ,\write_count[31]_i_16_n_0 ,\write_count[31]_i_17_n_0 ,\write_count[31]_i_18_n_0 ,\write_count[31]_i_19_n_0 ,\write_count[31]_i_20_n_0 }));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_reg[31]_i_3 
       (.CI(\write_count_reg[24]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_write_count_reg[31]_i_3_CO_UNCONNECTED [7:6],\write_count_reg[31]_i_3_n_2 ,\write_count_reg[31]_i_3_n_3 ,\NLW_write_count_reg[31]_i_3_CO_UNCONNECTED [3],\write_count_reg[31]_i_3_n_5 ,\write_count_reg[31]_i_3_n_6 ,\write_count_reg[31]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_write_count_reg[31]_i_3_O_UNCONNECTED [7],\write_count_reg[31]_i_3_n_9 ,\write_count_reg[31]_i_3_n_10 ,\write_count_reg[31]_i_3_n_11 ,\write_count_reg[31]_i_3_n_12 ,\write_count_reg[31]_i_3_n_13 ,\write_count_reg[31]_i_3_n_14 ,\write_count_reg[31]_i_3_n_15 }),
        .S({1'b0,write_count_reg_n_0_[31:25]}));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_reg[31]_i_4 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\write_count_reg[31]_i_4_n_0 ,\write_count_reg[31]_i_4_n_1 ,\write_count_reg[31]_i_4_n_2 ,\write_count_reg[31]_i_4_n_3 ,\NLW_write_count_reg[31]_i_4_CO_UNCONNECTED [3],\write_count_reg[31]_i_4_n_5 ,\write_count_reg[31]_i_4_n_6 ,\write_count_reg[31]_i_4_n_7 }),
        .DI({\write_count[31]_i_21_n_0 ,\write_count[31]_i_22_n_0 ,\write_count[31]_i_23_n_0 ,\write_count[31]_i_24_n_0 ,\write_count[31]_i_25_n_0 ,\write_count[31]_i_26_n_0 ,\write_count[31]_i_27_n_0 ,\write_count[31]_i_28_n_0 }),
        .O(\NLW_write_count_reg[31]_i_4_O_UNCONNECTED [7:0]),
        .S({\write_count[31]_i_29_n_0 ,\write_count[31]_i_30_n_0 ,\write_count[31]_i_31_n_0 ,\write_count[31]_i_32_n_0 ,\write_count[31]_i_33_n_0 ,\write_count[31]_i_34_n_0 ,\write_count[31]_i_35_n_0 ,\write_count[31]_i_36_n_0 }));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[3] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[3]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[4] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[4]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[5] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[5]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[6] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[6]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[7] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[7]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[8] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[8]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_count_reg[8]_i_2 
       (.CI(write_count_reg_n_0_[0]),
        .CI_TOP(1'b0),
        .CO({\write_count_reg[8]_i_2_n_0 ,\write_count_reg[8]_i_2_n_1 ,\write_count_reg[8]_i_2_n_2 ,\write_count_reg[8]_i_2_n_3 ,\NLW_write_count_reg[8]_i_2_CO_UNCONNECTED [3],\write_count_reg[8]_i_2_n_5 ,\write_count_reg[8]_i_2_n_6 ,\write_count_reg[8]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[8]_i_2_n_8 ,\write_count_reg[8]_i_2_n_9 ,\write_count_reg[8]_i_2_n_10 ,\write_count_reg[8]_i_2_n_11 ,\write_count_reg[8]_i_2_n_12 ,\write_count_reg[8]_i_2_n_13 ,\write_count_reg[8]_i_2_n_14 ,\write_count_reg[8]_i_2_n_15 }),
        .S(write_count_reg_n_0_[8:1]));
  FDRE #(
    .INIT(1'b1)) 
    \write_count_reg[9] 
       (.C(clk),
        .CE(\countAddrSent[39]_i_1_n_0 ),
        .D(\write_count[9]_i_1_n_0 ),
        .Q(write_count_reg_n_0_[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[0]),
        .Q(write_max_queue_size[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[10]),
        .Q(write_max_queue_size[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[11]),
        .Q(write_max_queue_size[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[12]),
        .Q(write_max_queue_size[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[13]),
        .Q(write_max_queue_size[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[14]),
        .Q(write_max_queue_size[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[15]),
        .Q(write_max_queue_size[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[16]),
        .Q(write_max_queue_size[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[17]),
        .Q(write_max_queue_size[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[18]),
        .Q(write_max_queue_size[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[19]),
        .Q(write_max_queue_size[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[1]),
        .Q(write_max_queue_size[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[20]),
        .Q(write_max_queue_size[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[21]),
        .Q(write_max_queue_size[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[22]),
        .Q(write_max_queue_size[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[23]),
        .Q(write_max_queue_size[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[24]),
        .Q(write_max_queue_size[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[25]),
        .Q(write_max_queue_size[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[26]),
        .Q(write_max_queue_size[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[27]),
        .Q(write_max_queue_size[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[28]),
        .Q(write_max_queue_size[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[29]),
        .Q(write_max_queue_size[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_max_queue_size_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[2]),
        .Q(write_max_queue_size[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[30]),
        .Q(write_max_queue_size[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[31]),
        .Q(write_max_queue_size[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[3]),
        .Q(write_max_queue_size[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[4]),
        .Q(write_max_queue_size[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_max_queue_size_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[5]),
        .Q(write_max_queue_size[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_max_queue_size_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[6]),
        .Q(write_max_queue_size[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[7]),
        .Q(write_max_queue_size[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[8]),
        .Q(write_max_queue_size[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_max_queue_size_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_max_queue_size__0[9]),
        .Q(write_max_queue_size[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[0]),
        .Q(write_start_DDR_address[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[10]),
        .Q(write_start_DDR_address[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[11]),
        .Q(write_start_DDR_address[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[12]),
        .Q(write_start_DDR_address[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[13]),
        .Q(write_start_DDR_address[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[14]),
        .Q(write_start_DDR_address[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[15]),
        .Q(write_start_DDR_address[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[16]),
        .Q(write_start_DDR_address[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[17]),
        .Q(write_start_DDR_address[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[18]),
        .Q(write_start_DDR_address[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[19]),
        .Q(write_start_DDR_address[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[1]),
        .Q(write_start_DDR_address[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[20]),
        .Q(write_start_DDR_address[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[21]),
        .Q(write_start_DDR_address[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[22]),
        .Q(write_start_DDR_address[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[23]),
        .Q(write_start_DDR_address[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[24]),
        .Q(write_start_DDR_address[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[25]),
        .Q(write_start_DDR_address[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[26]),
        .Q(write_start_DDR_address[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[27]),
        .Q(write_start_DDR_address[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[28]),
        .Q(write_start_DDR_address[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[29]),
        .Q(write_start_DDR_address[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[2]),
        .Q(write_start_DDR_address[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[30]),
        .Q(write_start_DDR_address[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[31]),
        .Q(write_start_DDR_address[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[32] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[32]),
        .Q(write_start_DDR_address[32]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[33] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[33]),
        .Q(write_start_DDR_address[33]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[34] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[34]),
        .Q(write_start_DDR_address[34]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[35] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[35]),
        .Q(write_start_DDR_address[35]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[36] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[36]),
        .Q(write_start_DDR_address[36]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[37] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[37]),
        .Q(write_start_DDR_address[37]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[38] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[38]),
        .Q(write_start_DDR_address[38]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[39] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[39]),
        .Q(write_start_DDR_address[39]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[3]),
        .Q(write_start_DDR_address[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[40] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[40]),
        .Q(write_start_DDR_address[40]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[41] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[41]),
        .Q(write_start_DDR_address[41]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[42] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[42]),
        .Q(write_start_DDR_address[42]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[43] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[43]),
        .Q(write_start_DDR_address[43]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[44] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[44]),
        .Q(write_start_DDR_address[44]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[45] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[45]),
        .Q(write_start_DDR_address[45]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[46] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[46]),
        .Q(write_start_DDR_address[46]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[47] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[47]),
        .Q(write_start_DDR_address[47]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[48] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[48]),
        .Q(write_start_DDR_address[48]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[49] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[49]),
        .Q(write_start_DDR_address[49]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[4]),
        .Q(write_start_DDR_address[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[50] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[50]),
        .Q(write_start_DDR_address[50]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[51] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[51]),
        .Q(write_start_DDR_address[51]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[52] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[52]),
        .Q(write_start_DDR_address[52]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[53] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[53]),
        .Q(write_start_DDR_address[53]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[54] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[54]),
        .Q(write_start_DDR_address[54]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[55] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[55]),
        .Q(write_start_DDR_address[55]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[56] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[56]),
        .Q(write_start_DDR_address[56]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[57] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[57]),
        .Q(write_start_DDR_address[57]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[58] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[58]),
        .Q(write_start_DDR_address[58]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[59] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[59]),
        .Q(write_start_DDR_address[59]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[5]),
        .Q(write_start_DDR_address[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[60] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[60]),
        .Q(write_start_DDR_address[60]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[61] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[61]),
        .Q(write_start_DDR_address[61]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[62] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[62]),
        .Q(write_start_DDR_address[62]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[63] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[63]),
        .Q(write_start_DDR_address[63]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[6]),
        .Q(write_start_DDR_address[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[7]),
        .Q(write_start_DDR_address[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[8]),
        .Q(write_start_DDR_address[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_start_DDR_address_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_start_DDR_address__0[9]),
        .Q(write_start_DDR_address[9]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[0]),
        .Q(write_step_DDR_address[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[10]),
        .Q(write_step_DDR_address[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[11]),
        .Q(write_step_DDR_address[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[12]),
        .Q(write_step_DDR_address[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[13]),
        .Q(write_step_DDR_address[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[14]),
        .Q(write_step_DDR_address[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[15]),
        .Q(write_step_DDR_address[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[16]),
        .Q(write_step_DDR_address[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[17]),
        .Q(write_step_DDR_address[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[18]),
        .Q(write_step_DDR_address[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[19]),
        .Q(write_step_DDR_address[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[1]),
        .Q(write_step_DDR_address[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[20]),
        .Q(write_step_DDR_address[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[21]),
        .Q(write_step_DDR_address[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[22]),
        .Q(write_step_DDR_address[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[23]),
        .Q(write_step_DDR_address[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[24]),
        .Q(write_step_DDR_address[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[25]),
        .Q(write_step_DDR_address[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[26]),
        .Q(write_step_DDR_address[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[27]),
        .Q(write_step_DDR_address[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[28]),
        .Q(write_step_DDR_address[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[29]),
        .Q(write_step_DDR_address[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_step_DDR_address_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[2]),
        .Q(write_step_DDR_address[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[30]),
        .Q(write_step_DDR_address[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[31]),
        .Q(write_step_DDR_address[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[3]),
        .Q(write_step_DDR_address[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[4]),
        .Q(write_step_DDR_address[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_step_DDR_address_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[5]),
        .Q(write_step_DDR_address[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_step_DDR_address_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[6]),
        .Q(write_step_DDR_address[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[7]),
        .Q(write_step_DDR_address[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[8]),
        .Q(write_step_DDR_address[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_step_DDR_address_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_step_DDR_address__0[9]),
        .Q(write_step_DDR_address[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[0]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[0]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h007F)) 
    \write_ticks[0]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks[0]),
        .O(\write_ticks[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[10]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[10]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[10]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[10]),
        .O(\write_ticks[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[11]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[11]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[11]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[11]),
        .O(\write_ticks[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[12]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[12]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[12]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[12]),
        .O(\write_ticks[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[13]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[13]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[13]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[13]),
        .O(\write_ticks[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[14]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[14]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[14]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[14]),
        .O(\write_ticks[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[15]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[15]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[15]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[15]),
        .O(\write_ticks[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[16]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[16]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[16]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[16]),
        .O(\write_ticks[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[17]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[17]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[17]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[17]),
        .O(\write_ticks[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[18]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[18]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[18]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[18]),
        .O(\write_ticks[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[19]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[19]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[19]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[19]),
        .O(\write_ticks[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[1]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[1]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[1]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[1]),
        .O(\write_ticks[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[20]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[20]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[20]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[20]),
        .O(\write_ticks[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[21]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[21]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[21]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[21]),
        .O(\write_ticks[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[22]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[22]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[22]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[22]),
        .O(\write_ticks[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[23]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[23]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[23]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[23]),
        .O(\write_ticks[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[24]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[24]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[24]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[24]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[24]),
        .O(\write_ticks[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[25]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[25]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[25]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[25]),
        .O(\write_ticks[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[26]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[26]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[26]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[26]),
        .O(\write_ticks[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[27]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[27]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[27]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[27]),
        .O(\write_ticks[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[28]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[28]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[28]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[28]),
        .O(\write_ticks[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[29]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[29]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[29]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[29]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[29]),
        .O(\write_ticks[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[2]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[2]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[2]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[2]),
        .O(\write_ticks[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[30]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[30]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[30]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[30]),
        .O(\write_ticks[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[31]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[31]_i_3_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \write_ticks[31]_i_2 
       (.I0(active_runtime0),
        .I1(active_runtime1),
        .I2(active_blocking),
        .I3(\countDataReceived[39]_i_7_n_0 ),
        .I4(active_runtime2),
        .I5(active_runtime3),
        .O(active_runtime));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[31]_i_3 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[31]),
        .O(\write_ticks[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[3]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[3]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[3]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[3]),
        .O(\write_ticks[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[4]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[4]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[4]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[4]),
        .O(\write_ticks[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[5]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[5]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[5]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[5]),
        .O(\write_ticks[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[6]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[6]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[6]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[6]),
        .O(\write_ticks[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[7]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[7]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[7]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[7]),
        .O(\write_ticks[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[8]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[8]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[8]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[8]),
        .O(\write_ticks[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h088888880CCCCCCC)) 
    \write_ticks[9]_i_1 
       (.I0(active_runtime),
        .I1(\write_ticks[9]_i_2_n_0 ),
        .I2(active_blocking),
        .I3(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I4(write_ticks1),
        .I5(reset_cmd),
        .O(\write_ticks[9]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7F00)) 
    \write_ticks[9]_i_2 
       (.I0(\countAddrToBeSent_reg[39]_i_7_n_0 ),
        .I1(\countAddrToBeSent_reg[39]_i_4_n_4 ),
        .I2(active_write),
        .I3(write_ticks2[9]),
        .O(\write_ticks[9]_i_2_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[0] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[0]),
        .Q(write_ticks_per_burst[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[10] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[10]),
        .Q(write_ticks_per_burst[10]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[11] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[11]),
        .Q(write_ticks_per_burst[11]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[12] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[12]),
        .Q(write_ticks_per_burst[12]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[13] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[13]),
        .Q(write_ticks_per_burst[13]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[14] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[14]),
        .Q(write_ticks_per_burst[14]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[15] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[15]),
        .Q(write_ticks_per_burst[15]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[16] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[16]),
        .Q(write_ticks_per_burst[16]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[17] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[17]),
        .Q(write_ticks_per_burst[17]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[18] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[18]),
        .Q(write_ticks_per_burst[18]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[19] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[19]),
        .Q(write_ticks_per_burst[19]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[1] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[1]),
        .Q(write_ticks_per_burst[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[20] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[20]),
        .Q(write_ticks_per_burst[20]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[21] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[21]),
        .Q(write_ticks_per_burst[21]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[22] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[22]),
        .Q(write_ticks_per_burst[22]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[23] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[23]),
        .Q(write_ticks_per_burst[23]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[24] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[24]),
        .Q(write_ticks_per_burst[24]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[25] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[25]),
        .Q(write_ticks_per_burst[25]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[26] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[26]),
        .Q(write_ticks_per_burst[26]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[27] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[27]),
        .Q(write_ticks_per_burst[27]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[28] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[28]),
        .Q(write_ticks_per_burst[28]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[29] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[29]),
        .Q(write_ticks_per_burst[29]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_ticks_per_burst_reg[2] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[2]),
        .Q(write_ticks_per_burst[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[30] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[30]),
        .Q(write_ticks_per_burst[30]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[31] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[31]),
        .Q(write_ticks_per_burst[31]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[3] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[3]),
        .Q(write_ticks_per_burst[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[4] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[4]),
        .Q(write_ticks_per_burst[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_ticks_per_burst_reg[5] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[5]),
        .Q(write_ticks_per_burst[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \write_ticks_per_burst_reg[6] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[6]),
        .Q(write_ticks_per_burst[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[7] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[7]),
        .Q(write_ticks_per_burst[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[8] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[8]),
        .Q(write_ticks_per_burst[8]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_per_burst_reg[9] 
       (.C(clk),
        .CE(axi_c_write_valid),
        .D(write_ticks_per_burst__0[9]),
        .Q(write_ticks_per_burst[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[0]_i_1_n_0 ),
        .Q(write_ticks[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[10]_i_1_n_0 ),
        .Q(write_ticks[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[11]_i_1_n_0 ),
        .Q(write_ticks[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[12]_i_1_n_0 ),
        .Q(write_ticks[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[13]_i_1_n_0 ),
        .Q(write_ticks[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[14]_i_1_n_0 ),
        .Q(write_ticks[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[15]_i_1_n_0 ),
        .Q(write_ticks[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[16]_i_1_n_0 ),
        .Q(write_ticks[16]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_ticks_reg[16]_i_3 
       (.CI(\write_ticks_reg[8]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\write_ticks_reg[16]_i_3_n_0 ,\write_ticks_reg[16]_i_3_n_1 ,\write_ticks_reg[16]_i_3_n_2 ,\write_ticks_reg[16]_i_3_n_3 ,\NLW_write_ticks_reg[16]_i_3_CO_UNCONNECTED [3],\write_ticks_reg[16]_i_3_n_5 ,\write_ticks_reg[16]_i_3_n_6 ,\write_ticks_reg[16]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(write_ticks2[16:9]),
        .S(write_ticks[16:9]));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[17]_i_1_n_0 ),
        .Q(write_ticks[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[18]_i_1_n_0 ),
        .Q(write_ticks[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[19]_i_1_n_0 ),
        .Q(write_ticks[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[1]_i_1_n_0 ),
        .Q(write_ticks[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[20]_i_1_n_0 ),
        .Q(write_ticks[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[21]_i_1_n_0 ),
        .Q(write_ticks[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[22]_i_1_n_0 ),
        .Q(write_ticks[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[23]_i_1_n_0 ),
        .Q(write_ticks[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[24]_i_1_n_0 ),
        .Q(write_ticks[24]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_ticks_reg[24]_i_3 
       (.CI(\write_ticks_reg[16]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\write_ticks_reg[24]_i_3_n_0 ,\write_ticks_reg[24]_i_3_n_1 ,\write_ticks_reg[24]_i_3_n_2 ,\write_ticks_reg[24]_i_3_n_3 ,\NLW_write_ticks_reg[24]_i_3_CO_UNCONNECTED [3],\write_ticks_reg[24]_i_3_n_5 ,\write_ticks_reg[24]_i_3_n_6 ,\write_ticks_reg[24]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(write_ticks2[24:17]),
        .S(write_ticks[24:17]));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[25]_i_1_n_0 ),
        .Q(write_ticks[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[26]_i_1_n_0 ),
        .Q(write_ticks[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[27]_i_1_n_0 ),
        .Q(write_ticks[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[28]_i_1_n_0 ),
        .Q(write_ticks[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[29]_i_1_n_0 ),
        .Q(write_ticks[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[2]_i_1_n_0 ),
        .Q(write_ticks[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[30]_i_1_n_0 ),
        .Q(write_ticks[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[31]_i_1_n_0 ),
        .Q(write_ticks[31]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_ticks_reg[31]_i_4 
       (.CI(\write_ticks_reg[24]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_write_ticks_reg[31]_i_4_CO_UNCONNECTED [7:6],\write_ticks_reg[31]_i_4_n_2 ,\write_ticks_reg[31]_i_4_n_3 ,\NLW_write_ticks_reg[31]_i_4_CO_UNCONNECTED [3],\write_ticks_reg[31]_i_4_n_5 ,\write_ticks_reg[31]_i_4_n_6 ,\write_ticks_reg[31]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_write_ticks_reg[31]_i_4_O_UNCONNECTED [7],write_ticks2[31:25]}),
        .S({1'b0,write_ticks[31:25]}));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[3]_i_1_n_0 ),
        .Q(write_ticks[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[4]_i_1_n_0 ),
        .Q(write_ticks[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[5]_i_1_n_0 ),
        .Q(write_ticks[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[6]_i_1_n_0 ),
        .Q(write_ticks[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[7]_i_1_n_0 ),
        .Q(write_ticks[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[8]_i_1_n_0 ),
        .Q(write_ticks[8]),
        .R(1'b0));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \write_ticks_reg[8]_i_3 
       (.CI(write_ticks[0]),
        .CI_TOP(1'b0),
        .CO({\write_ticks_reg[8]_i_3_n_0 ,\write_ticks_reg[8]_i_3_n_1 ,\write_ticks_reg[8]_i_3_n_2 ,\write_ticks_reg[8]_i_3_n_3 ,\NLW_write_ticks_reg[8]_i_3_CO_UNCONNECTED [3],\write_ticks_reg[8]_i_3_n_5 ,\write_ticks_reg[8]_i_3_n_6 ,\write_ticks_reg[8]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(write_ticks2[8:1]),
        .S(write_ticks[8:1]));
  FDRE #(
    .INIT(1'b0)) 
    \write_ticks_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\write_ticks[9]_i_1_n_0 ),
        .Q(write_ticks[9]),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_generator_129_fwft_512depth,fifo_generator_v13_2_2,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 core_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000" *) input clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output prog_full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  output wr_rst_busy;
  input [128:0]din;
  output [128:0]dout;

  wire clk;
  wire [128:0]din;
  wire [128:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "129" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "129" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "480" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "479" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(prog_full),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "builtin_extdepth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [71:0]din;
  output [71:0]dout;

  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  (* async_reg = "true" *) (* msgon = "true" *) wire [1:0]srst_qr;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim_1 \gonep.inst_prim 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(srst_qr[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(srst_qr[0]));
endmodule

(* ORIG_REF_NAME = "builtin_extdepth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth_0
   (clk,
    rd_en,
    srst,
    wr_en,
    din,
    dout);
  input clk;
  input rd_en;
  input srst;
  input wr_en;
  input [56:0]din;
  output [56:0]dout;

  wire clk;
  wire [56:0]din;
  wire [56:0]dout;
  wire rd_en;
  wire srst;
  (* async_reg = "true" *) (* msgon = "true" *) wire [1:0]srst_qr;
  wire wr_en;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim \gonep.inst_prim 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[2].inst_extdi_0 
       (.I0(1'b1),
        .O(srst_qr[1]));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[2].inst_extdi_1 
       (.I0(1'b1),
        .O(srst_qr[0]));
endmodule

(* ORIG_REF_NAME = "builtin_prim" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim
   (clk,
    rd_en,
    srst,
    wr_en,
    din,
    dout);
  input clk;
  input rd_en;
  input srst;
  input wr_en;
  input [56:0]din;
  output [56:0]dout;

  wire clk;
  wire [56:0]din;
  wire [56:0]dout;
  wire \gf36e2_inst.sngfifo36e2_n_0 ;
  wire \gf36e2_inst.sngfifo36e2_n_1 ;
  wire \gf36e2_inst.sngfifo36e2_n_10 ;
  wire \gf36e2_inst.sngfifo36e2_n_100 ;
  wire \gf36e2_inst.sngfifo36e2_n_101 ;
  wire \gf36e2_inst.sngfifo36e2_n_102 ;
  wire \gf36e2_inst.sngfifo36e2_n_103 ;
  wire \gf36e2_inst.sngfifo36e2_n_104 ;
  wire \gf36e2_inst.sngfifo36e2_n_105 ;
  wire \gf36e2_inst.sngfifo36e2_n_106 ;
  wire \gf36e2_inst.sngfifo36e2_n_107 ;
  wire \gf36e2_inst.sngfifo36e2_n_108 ;
  wire \gf36e2_inst.sngfifo36e2_n_109 ;
  wire \gf36e2_inst.sngfifo36e2_n_11 ;
  wire \gf36e2_inst.sngfifo36e2_n_110 ;
  wire \gf36e2_inst.sngfifo36e2_n_12 ;
  wire \gf36e2_inst.sngfifo36e2_n_13 ;
  wire \gf36e2_inst.sngfifo36e2_n_14 ;
  wire \gf36e2_inst.sngfifo36e2_n_15 ;
  wire \gf36e2_inst.sngfifo36e2_n_16 ;
  wire \gf36e2_inst.sngfifo36e2_n_168 ;
  wire \gf36e2_inst.sngfifo36e2_n_169 ;
  wire \gf36e2_inst.sngfifo36e2_n_17 ;
  wire \gf36e2_inst.sngfifo36e2_n_170 ;
  wire \gf36e2_inst.sngfifo36e2_n_171 ;
  wire \gf36e2_inst.sngfifo36e2_n_172 ;
  wire \gf36e2_inst.sngfifo36e2_n_173 ;
  wire \gf36e2_inst.sngfifo36e2_n_174 ;
  wire \gf36e2_inst.sngfifo36e2_n_175 ;
  wire \gf36e2_inst.sngfifo36e2_n_176 ;
  wire \gf36e2_inst.sngfifo36e2_n_177 ;
  wire \gf36e2_inst.sngfifo36e2_n_178 ;
  wire \gf36e2_inst.sngfifo36e2_n_179 ;
  wire \gf36e2_inst.sngfifo36e2_n_18 ;
  wire \gf36e2_inst.sngfifo36e2_n_180 ;
  wire \gf36e2_inst.sngfifo36e2_n_181 ;
  wire \gf36e2_inst.sngfifo36e2_n_182 ;
  wire \gf36e2_inst.sngfifo36e2_n_183 ;
  wire \gf36e2_inst.sngfifo36e2_n_184 ;
  wire \gf36e2_inst.sngfifo36e2_n_185 ;
  wire \gf36e2_inst.sngfifo36e2_n_186 ;
  wire \gf36e2_inst.sngfifo36e2_n_187 ;
  wire \gf36e2_inst.sngfifo36e2_n_188 ;
  wire \gf36e2_inst.sngfifo36e2_n_189 ;
  wire \gf36e2_inst.sngfifo36e2_n_19 ;
  wire \gf36e2_inst.sngfifo36e2_n_190 ;
  wire \gf36e2_inst.sngfifo36e2_n_191 ;
  wire \gf36e2_inst.sngfifo36e2_n_2 ;
  wire \gf36e2_inst.sngfifo36e2_n_20 ;
  wire \gf36e2_inst.sngfifo36e2_n_21 ;
  wire \gf36e2_inst.sngfifo36e2_n_22 ;
  wire \gf36e2_inst.sngfifo36e2_n_23 ;
  wire \gf36e2_inst.sngfifo36e2_n_24 ;
  wire \gf36e2_inst.sngfifo36e2_n_25 ;
  wire \gf36e2_inst.sngfifo36e2_n_26 ;
  wire \gf36e2_inst.sngfifo36e2_n_27 ;
  wire \gf36e2_inst.sngfifo36e2_n_28 ;
  wire \gf36e2_inst.sngfifo36e2_n_29 ;
  wire \gf36e2_inst.sngfifo36e2_n_3 ;
  wire \gf36e2_inst.sngfifo36e2_n_30 ;
  wire \gf36e2_inst.sngfifo36e2_n_31 ;
  wire \gf36e2_inst.sngfifo36e2_n_32 ;
  wire \gf36e2_inst.sngfifo36e2_n_33 ;
  wire \gf36e2_inst.sngfifo36e2_n_34 ;
  wire \gf36e2_inst.sngfifo36e2_n_35 ;
  wire \gf36e2_inst.sngfifo36e2_n_36 ;
  wire \gf36e2_inst.sngfifo36e2_n_37 ;
  wire \gf36e2_inst.sngfifo36e2_n_38 ;
  wire \gf36e2_inst.sngfifo36e2_n_39 ;
  wire \gf36e2_inst.sngfifo36e2_n_4 ;
  wire \gf36e2_inst.sngfifo36e2_n_40 ;
  wire \gf36e2_inst.sngfifo36e2_n_41 ;
  wire \gf36e2_inst.sngfifo36e2_n_42 ;
  wire \gf36e2_inst.sngfifo36e2_n_43 ;
  wire \gf36e2_inst.sngfifo36e2_n_44 ;
  wire \gf36e2_inst.sngfifo36e2_n_45 ;
  wire \gf36e2_inst.sngfifo36e2_n_46 ;
  wire \gf36e2_inst.sngfifo36e2_n_47 ;
  wire \gf36e2_inst.sngfifo36e2_n_48 ;
  wire \gf36e2_inst.sngfifo36e2_n_49 ;
  wire \gf36e2_inst.sngfifo36e2_n_5 ;
  wire \gf36e2_inst.sngfifo36e2_n_50 ;
  wire \gf36e2_inst.sngfifo36e2_n_51 ;
  wire \gf36e2_inst.sngfifo36e2_n_52 ;
  wire \gf36e2_inst.sngfifo36e2_n_53 ;
  wire \gf36e2_inst.sngfifo36e2_n_54 ;
  wire \gf36e2_inst.sngfifo36e2_n_55 ;
  wire \gf36e2_inst.sngfifo36e2_n_56 ;
  wire \gf36e2_inst.sngfifo36e2_n_57 ;
  wire \gf36e2_inst.sngfifo36e2_n_58 ;
  wire \gf36e2_inst.sngfifo36e2_n_59 ;
  wire \gf36e2_inst.sngfifo36e2_n_6 ;
  wire \gf36e2_inst.sngfifo36e2_n_60 ;
  wire \gf36e2_inst.sngfifo36e2_n_61 ;
  wire \gf36e2_inst.sngfifo36e2_n_62 ;
  wire \gf36e2_inst.sngfifo36e2_n_63 ;
  wire \gf36e2_inst.sngfifo36e2_n_64 ;
  wire \gf36e2_inst.sngfifo36e2_n_65 ;
  wire \gf36e2_inst.sngfifo36e2_n_66 ;
  wire \gf36e2_inst.sngfifo36e2_n_67 ;
  wire \gf36e2_inst.sngfifo36e2_n_68 ;
  wire \gf36e2_inst.sngfifo36e2_n_69 ;
  wire \gf36e2_inst.sngfifo36e2_n_7 ;
  wire \gf36e2_inst.sngfifo36e2_n_70 ;
  wire \gf36e2_inst.sngfifo36e2_n_71 ;
  wire \gf36e2_inst.sngfifo36e2_n_72 ;
  wire \gf36e2_inst.sngfifo36e2_n_73 ;
  wire \gf36e2_inst.sngfifo36e2_n_74 ;
  wire \gf36e2_inst.sngfifo36e2_n_75 ;
  wire \gf36e2_inst.sngfifo36e2_n_76 ;
  wire \gf36e2_inst.sngfifo36e2_n_77 ;
  wire \gf36e2_inst.sngfifo36e2_n_78 ;
  wire \gf36e2_inst.sngfifo36e2_n_79 ;
  wire \gf36e2_inst.sngfifo36e2_n_8 ;
  wire \gf36e2_inst.sngfifo36e2_n_80 ;
  wire \gf36e2_inst.sngfifo36e2_n_81 ;
  wire \gf36e2_inst.sngfifo36e2_n_82 ;
  wire \gf36e2_inst.sngfifo36e2_n_83 ;
  wire \gf36e2_inst.sngfifo36e2_n_84 ;
  wire \gf36e2_inst.sngfifo36e2_n_85 ;
  wire \gf36e2_inst.sngfifo36e2_n_86 ;
  wire \gf36e2_inst.sngfifo36e2_n_87 ;
  wire \gf36e2_inst.sngfifo36e2_n_88 ;
  wire \gf36e2_inst.sngfifo36e2_n_89 ;
  wire \gf36e2_inst.sngfifo36e2_n_9 ;
  wire \gf36e2_inst.sngfifo36e2_n_90 ;
  wire \gf36e2_inst.sngfifo36e2_n_91 ;
  wire \gf36e2_inst.sngfifo36e2_n_92 ;
  wire \gf36e2_inst.sngfifo36e2_n_93 ;
  wire \gf36e2_inst.sngfifo36e2_n_94 ;
  wire \gf36e2_inst.sngfifo36e2_n_95 ;
  wire \gf36e2_inst.sngfifo36e2_n_96 ;
  wire \gf36e2_inst.sngfifo36e2_n_97 ;
  wire \gf36e2_inst.sngfifo36e2_n_98 ;
  wire \gf36e2_inst.sngfifo36e2_n_99 ;
  wire rd_en;
  wire srst;
  wire wr_en;

  (* box_type = "PRIMITIVE" *) 
  FIFO36E2 #(
    .CASCADE_ORDER("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .FIRST_WORD_FALL_THROUGH("TRUE"),
    .INIT(72'h000000000000000000),
    .IS_RDCLK_INVERTED(1'b0),
    .IS_RDEN_INVERTED(1'b0),
    .IS_RSTREG_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .IS_WRCLK_INVERTED(1'b0),
    .IS_WREN_INVERTED(1'b0),
    .PROG_EMPTY_THRESH(4),
    .PROG_FULL_THRESH(480),
    .RDCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .READ_WIDTH(72),
    .REGISTER_MODE("REGISTERED"),
    .RSTREG_PRIORITY("REGCE"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL(72'h000000000000000000),
    .WRCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .WRITE_WIDTH(72)) 
    \gf36e2_inst.sngfifo36e2 
       (.CASDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINP({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUX(1'b0),
        .CASDOMUXEN(1'b1),
        .CASDOUT({\gf36e2_inst.sngfifo36e2_n_40 ,\gf36e2_inst.sngfifo36e2_n_41 ,\gf36e2_inst.sngfifo36e2_n_42 ,\gf36e2_inst.sngfifo36e2_n_43 ,\gf36e2_inst.sngfifo36e2_n_44 ,\gf36e2_inst.sngfifo36e2_n_45 ,\gf36e2_inst.sngfifo36e2_n_46 ,\gf36e2_inst.sngfifo36e2_n_47 ,\gf36e2_inst.sngfifo36e2_n_48 ,\gf36e2_inst.sngfifo36e2_n_49 ,\gf36e2_inst.sngfifo36e2_n_50 ,\gf36e2_inst.sngfifo36e2_n_51 ,\gf36e2_inst.sngfifo36e2_n_52 ,\gf36e2_inst.sngfifo36e2_n_53 ,\gf36e2_inst.sngfifo36e2_n_54 ,\gf36e2_inst.sngfifo36e2_n_55 ,\gf36e2_inst.sngfifo36e2_n_56 ,\gf36e2_inst.sngfifo36e2_n_57 ,\gf36e2_inst.sngfifo36e2_n_58 ,\gf36e2_inst.sngfifo36e2_n_59 ,\gf36e2_inst.sngfifo36e2_n_60 ,\gf36e2_inst.sngfifo36e2_n_61 ,\gf36e2_inst.sngfifo36e2_n_62 ,\gf36e2_inst.sngfifo36e2_n_63 ,\gf36e2_inst.sngfifo36e2_n_64 ,\gf36e2_inst.sngfifo36e2_n_65 ,\gf36e2_inst.sngfifo36e2_n_66 ,\gf36e2_inst.sngfifo36e2_n_67 ,\gf36e2_inst.sngfifo36e2_n_68 ,\gf36e2_inst.sngfifo36e2_n_69 ,\gf36e2_inst.sngfifo36e2_n_70 ,\gf36e2_inst.sngfifo36e2_n_71 ,\gf36e2_inst.sngfifo36e2_n_72 ,\gf36e2_inst.sngfifo36e2_n_73 ,\gf36e2_inst.sngfifo36e2_n_74 ,\gf36e2_inst.sngfifo36e2_n_75 ,\gf36e2_inst.sngfifo36e2_n_76 ,\gf36e2_inst.sngfifo36e2_n_77 ,\gf36e2_inst.sngfifo36e2_n_78 ,\gf36e2_inst.sngfifo36e2_n_79 ,\gf36e2_inst.sngfifo36e2_n_80 ,\gf36e2_inst.sngfifo36e2_n_81 ,\gf36e2_inst.sngfifo36e2_n_82 ,\gf36e2_inst.sngfifo36e2_n_83 ,\gf36e2_inst.sngfifo36e2_n_84 ,\gf36e2_inst.sngfifo36e2_n_85 ,\gf36e2_inst.sngfifo36e2_n_86 ,\gf36e2_inst.sngfifo36e2_n_87 ,\gf36e2_inst.sngfifo36e2_n_88 ,\gf36e2_inst.sngfifo36e2_n_89 ,\gf36e2_inst.sngfifo36e2_n_90 ,\gf36e2_inst.sngfifo36e2_n_91 ,\gf36e2_inst.sngfifo36e2_n_92 ,\gf36e2_inst.sngfifo36e2_n_93 ,\gf36e2_inst.sngfifo36e2_n_94 ,\gf36e2_inst.sngfifo36e2_n_95 ,\gf36e2_inst.sngfifo36e2_n_96 ,\gf36e2_inst.sngfifo36e2_n_97 ,\gf36e2_inst.sngfifo36e2_n_98 ,\gf36e2_inst.sngfifo36e2_n_99 ,\gf36e2_inst.sngfifo36e2_n_100 ,\gf36e2_inst.sngfifo36e2_n_101 ,\gf36e2_inst.sngfifo36e2_n_102 ,\gf36e2_inst.sngfifo36e2_n_103 }),
        .CASDOUTP({\gf36e2_inst.sngfifo36e2_n_168 ,\gf36e2_inst.sngfifo36e2_n_169 ,\gf36e2_inst.sngfifo36e2_n_170 ,\gf36e2_inst.sngfifo36e2_n_171 ,\gf36e2_inst.sngfifo36e2_n_172 ,\gf36e2_inst.sngfifo36e2_n_173 ,\gf36e2_inst.sngfifo36e2_n_174 ,\gf36e2_inst.sngfifo36e2_n_175 }),
        .CASNXTEMPTY(\gf36e2_inst.sngfifo36e2_n_0 ),
        .CASNXTRDEN(1'b0),
        .CASOREGIMUX(1'b0),
        .CASOREGIMUXEN(1'b1),
        .CASPRVEMPTY(1'b0),
        .CASPRVRDEN(\gf36e2_inst.sngfifo36e2_n_1 ),
        .DBITERR(\gf36e2_inst.sngfifo36e2_n_2 ),
        .DIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din}),
        .DINP({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DOUT({\gf36e2_inst.sngfifo36e2_n_104 ,\gf36e2_inst.sngfifo36e2_n_105 ,\gf36e2_inst.sngfifo36e2_n_106 ,\gf36e2_inst.sngfifo36e2_n_107 ,\gf36e2_inst.sngfifo36e2_n_108 ,\gf36e2_inst.sngfifo36e2_n_109 ,\gf36e2_inst.sngfifo36e2_n_110 ,dout}),
        .DOUTP({\gf36e2_inst.sngfifo36e2_n_176 ,\gf36e2_inst.sngfifo36e2_n_177 ,\gf36e2_inst.sngfifo36e2_n_178 ,\gf36e2_inst.sngfifo36e2_n_179 ,\gf36e2_inst.sngfifo36e2_n_180 ,\gf36e2_inst.sngfifo36e2_n_181 ,\gf36e2_inst.sngfifo36e2_n_182 ,\gf36e2_inst.sngfifo36e2_n_183 }),
        .ECCPARITY({\gf36e2_inst.sngfifo36e2_n_184 ,\gf36e2_inst.sngfifo36e2_n_185 ,\gf36e2_inst.sngfifo36e2_n_186 ,\gf36e2_inst.sngfifo36e2_n_187 ,\gf36e2_inst.sngfifo36e2_n_188 ,\gf36e2_inst.sngfifo36e2_n_189 ,\gf36e2_inst.sngfifo36e2_n_190 ,\gf36e2_inst.sngfifo36e2_n_191 }),
        .EMPTY(\gf36e2_inst.sngfifo36e2_n_3 ),
        .FULL(\gf36e2_inst.sngfifo36e2_n_4 ),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .PROGEMPTY(\gf36e2_inst.sngfifo36e2_n_5 ),
        .PROGFULL(\gf36e2_inst.sngfifo36e2_n_6 ),
        .RDCLK(clk),
        .RDCOUNT({\gf36e2_inst.sngfifo36e2_n_12 ,\gf36e2_inst.sngfifo36e2_n_13 ,\gf36e2_inst.sngfifo36e2_n_14 ,\gf36e2_inst.sngfifo36e2_n_15 ,\gf36e2_inst.sngfifo36e2_n_16 ,\gf36e2_inst.sngfifo36e2_n_17 ,\gf36e2_inst.sngfifo36e2_n_18 ,\gf36e2_inst.sngfifo36e2_n_19 ,\gf36e2_inst.sngfifo36e2_n_20 ,\gf36e2_inst.sngfifo36e2_n_21 ,\gf36e2_inst.sngfifo36e2_n_22 ,\gf36e2_inst.sngfifo36e2_n_23 ,\gf36e2_inst.sngfifo36e2_n_24 ,\gf36e2_inst.sngfifo36e2_n_25 }),
        .RDEN(rd_en),
        .RDERR(\gf36e2_inst.sngfifo36e2_n_7 ),
        .RDRSTBUSY(\gf36e2_inst.sngfifo36e2_n_8 ),
        .REGCE(rd_en),
        .RST(srst),
        .RSTREG(srst),
        .SBITERR(\gf36e2_inst.sngfifo36e2_n_9 ),
        .SLEEP(1'b0),
        .WRCLK(clk),
        .WRCOUNT({\gf36e2_inst.sngfifo36e2_n_26 ,\gf36e2_inst.sngfifo36e2_n_27 ,\gf36e2_inst.sngfifo36e2_n_28 ,\gf36e2_inst.sngfifo36e2_n_29 ,\gf36e2_inst.sngfifo36e2_n_30 ,\gf36e2_inst.sngfifo36e2_n_31 ,\gf36e2_inst.sngfifo36e2_n_32 ,\gf36e2_inst.sngfifo36e2_n_33 ,\gf36e2_inst.sngfifo36e2_n_34 ,\gf36e2_inst.sngfifo36e2_n_35 ,\gf36e2_inst.sngfifo36e2_n_36 ,\gf36e2_inst.sngfifo36e2_n_37 ,\gf36e2_inst.sngfifo36e2_n_38 ,\gf36e2_inst.sngfifo36e2_n_39 }),
        .WREN(wr_en),
        .WRERR(\gf36e2_inst.sngfifo36e2_n_10 ),
        .WRRSTBUSY(\gf36e2_inst.sngfifo36e2_n_11 ));
endmodule

(* ORIG_REF_NAME = "builtin_prim" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_prim_1
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [71:0]din;
  output [71:0]dout;

  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire \gf36e2_inst.sngfifo36e2_n_0 ;
  wire \gf36e2_inst.sngfifo36e2_n_1 ;
  wire \gf36e2_inst.sngfifo36e2_n_100 ;
  wire \gf36e2_inst.sngfifo36e2_n_101 ;
  wire \gf36e2_inst.sngfifo36e2_n_102 ;
  wire \gf36e2_inst.sngfifo36e2_n_103 ;
  wire \gf36e2_inst.sngfifo36e2_n_12 ;
  wire \gf36e2_inst.sngfifo36e2_n_13 ;
  wire \gf36e2_inst.sngfifo36e2_n_14 ;
  wire \gf36e2_inst.sngfifo36e2_n_15 ;
  wire \gf36e2_inst.sngfifo36e2_n_16 ;
  wire \gf36e2_inst.sngfifo36e2_n_168 ;
  wire \gf36e2_inst.sngfifo36e2_n_169 ;
  wire \gf36e2_inst.sngfifo36e2_n_17 ;
  wire \gf36e2_inst.sngfifo36e2_n_170 ;
  wire \gf36e2_inst.sngfifo36e2_n_171 ;
  wire \gf36e2_inst.sngfifo36e2_n_172 ;
  wire \gf36e2_inst.sngfifo36e2_n_173 ;
  wire \gf36e2_inst.sngfifo36e2_n_174 ;
  wire \gf36e2_inst.sngfifo36e2_n_175 ;
  wire \gf36e2_inst.sngfifo36e2_n_18 ;
  wire \gf36e2_inst.sngfifo36e2_n_184 ;
  wire \gf36e2_inst.sngfifo36e2_n_185 ;
  wire \gf36e2_inst.sngfifo36e2_n_186 ;
  wire \gf36e2_inst.sngfifo36e2_n_187 ;
  wire \gf36e2_inst.sngfifo36e2_n_188 ;
  wire \gf36e2_inst.sngfifo36e2_n_189 ;
  wire \gf36e2_inst.sngfifo36e2_n_19 ;
  wire \gf36e2_inst.sngfifo36e2_n_190 ;
  wire \gf36e2_inst.sngfifo36e2_n_191 ;
  wire \gf36e2_inst.sngfifo36e2_n_20 ;
  wire \gf36e2_inst.sngfifo36e2_n_21 ;
  wire \gf36e2_inst.sngfifo36e2_n_22 ;
  wire \gf36e2_inst.sngfifo36e2_n_23 ;
  wire \gf36e2_inst.sngfifo36e2_n_24 ;
  wire \gf36e2_inst.sngfifo36e2_n_25 ;
  wire \gf36e2_inst.sngfifo36e2_n_26 ;
  wire \gf36e2_inst.sngfifo36e2_n_27 ;
  wire \gf36e2_inst.sngfifo36e2_n_28 ;
  wire \gf36e2_inst.sngfifo36e2_n_29 ;
  wire \gf36e2_inst.sngfifo36e2_n_30 ;
  wire \gf36e2_inst.sngfifo36e2_n_31 ;
  wire \gf36e2_inst.sngfifo36e2_n_32 ;
  wire \gf36e2_inst.sngfifo36e2_n_33 ;
  wire \gf36e2_inst.sngfifo36e2_n_34 ;
  wire \gf36e2_inst.sngfifo36e2_n_35 ;
  wire \gf36e2_inst.sngfifo36e2_n_36 ;
  wire \gf36e2_inst.sngfifo36e2_n_37 ;
  wire \gf36e2_inst.sngfifo36e2_n_38 ;
  wire \gf36e2_inst.sngfifo36e2_n_39 ;
  wire \gf36e2_inst.sngfifo36e2_n_40 ;
  wire \gf36e2_inst.sngfifo36e2_n_41 ;
  wire \gf36e2_inst.sngfifo36e2_n_42 ;
  wire \gf36e2_inst.sngfifo36e2_n_43 ;
  wire \gf36e2_inst.sngfifo36e2_n_44 ;
  wire \gf36e2_inst.sngfifo36e2_n_45 ;
  wire \gf36e2_inst.sngfifo36e2_n_46 ;
  wire \gf36e2_inst.sngfifo36e2_n_47 ;
  wire \gf36e2_inst.sngfifo36e2_n_48 ;
  wire \gf36e2_inst.sngfifo36e2_n_49 ;
  wire \gf36e2_inst.sngfifo36e2_n_5 ;
  wire \gf36e2_inst.sngfifo36e2_n_50 ;
  wire \gf36e2_inst.sngfifo36e2_n_51 ;
  wire \gf36e2_inst.sngfifo36e2_n_52 ;
  wire \gf36e2_inst.sngfifo36e2_n_53 ;
  wire \gf36e2_inst.sngfifo36e2_n_54 ;
  wire \gf36e2_inst.sngfifo36e2_n_55 ;
  wire \gf36e2_inst.sngfifo36e2_n_56 ;
  wire \gf36e2_inst.sngfifo36e2_n_57 ;
  wire \gf36e2_inst.sngfifo36e2_n_58 ;
  wire \gf36e2_inst.sngfifo36e2_n_59 ;
  wire \gf36e2_inst.sngfifo36e2_n_60 ;
  wire \gf36e2_inst.sngfifo36e2_n_61 ;
  wire \gf36e2_inst.sngfifo36e2_n_62 ;
  wire \gf36e2_inst.sngfifo36e2_n_63 ;
  wire \gf36e2_inst.sngfifo36e2_n_64 ;
  wire \gf36e2_inst.sngfifo36e2_n_65 ;
  wire \gf36e2_inst.sngfifo36e2_n_66 ;
  wire \gf36e2_inst.sngfifo36e2_n_67 ;
  wire \gf36e2_inst.sngfifo36e2_n_68 ;
  wire \gf36e2_inst.sngfifo36e2_n_69 ;
  wire \gf36e2_inst.sngfifo36e2_n_70 ;
  wire \gf36e2_inst.sngfifo36e2_n_71 ;
  wire \gf36e2_inst.sngfifo36e2_n_72 ;
  wire \gf36e2_inst.sngfifo36e2_n_73 ;
  wire \gf36e2_inst.sngfifo36e2_n_74 ;
  wire \gf36e2_inst.sngfifo36e2_n_75 ;
  wire \gf36e2_inst.sngfifo36e2_n_76 ;
  wire \gf36e2_inst.sngfifo36e2_n_77 ;
  wire \gf36e2_inst.sngfifo36e2_n_78 ;
  wire \gf36e2_inst.sngfifo36e2_n_79 ;
  wire \gf36e2_inst.sngfifo36e2_n_80 ;
  wire \gf36e2_inst.sngfifo36e2_n_81 ;
  wire \gf36e2_inst.sngfifo36e2_n_82 ;
  wire \gf36e2_inst.sngfifo36e2_n_83 ;
  wire \gf36e2_inst.sngfifo36e2_n_84 ;
  wire \gf36e2_inst.sngfifo36e2_n_85 ;
  wire \gf36e2_inst.sngfifo36e2_n_86 ;
  wire \gf36e2_inst.sngfifo36e2_n_87 ;
  wire \gf36e2_inst.sngfifo36e2_n_88 ;
  wire \gf36e2_inst.sngfifo36e2_n_89 ;
  wire \gf36e2_inst.sngfifo36e2_n_90 ;
  wire \gf36e2_inst.sngfifo36e2_n_91 ;
  wire \gf36e2_inst.sngfifo36e2_n_92 ;
  wire \gf36e2_inst.sngfifo36e2_n_93 ;
  wire \gf36e2_inst.sngfifo36e2_n_94 ;
  wire \gf36e2_inst.sngfifo36e2_n_95 ;
  wire \gf36e2_inst.sngfifo36e2_n_96 ;
  wire \gf36e2_inst.sngfifo36e2_n_97 ;
  wire \gf36e2_inst.sngfifo36e2_n_98 ;
  wire \gf36e2_inst.sngfifo36e2_n_99 ;
  wire p_4_out;
  wire p_5_out;
  wire p_7_out;
  wire p_8_out;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  (* box_type = "PRIMITIVE" *) 
  FIFO36E2 #(
    .CASCADE_ORDER("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .FIRST_WORD_FALL_THROUGH("TRUE"),
    .INIT(72'h000000000000000000),
    .IS_RDCLK_INVERTED(1'b0),
    .IS_RDEN_INVERTED(1'b0),
    .IS_RSTREG_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .IS_WRCLK_INVERTED(1'b0),
    .IS_WREN_INVERTED(1'b0),
    .PROG_EMPTY_THRESH(4),
    .PROG_FULL_THRESH(480),
    .RDCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .READ_WIDTH(72),
    .REGISTER_MODE("REGISTERED"),
    .RSTREG_PRIORITY("REGCE"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL(72'h000000000000000000),
    .WRCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .WRITE_WIDTH(72)) 
    \gf36e2_inst.sngfifo36e2 
       (.CASDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINP({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUX(1'b0),
        .CASDOMUXEN(1'b1),
        .CASDOUT({\gf36e2_inst.sngfifo36e2_n_40 ,\gf36e2_inst.sngfifo36e2_n_41 ,\gf36e2_inst.sngfifo36e2_n_42 ,\gf36e2_inst.sngfifo36e2_n_43 ,\gf36e2_inst.sngfifo36e2_n_44 ,\gf36e2_inst.sngfifo36e2_n_45 ,\gf36e2_inst.sngfifo36e2_n_46 ,\gf36e2_inst.sngfifo36e2_n_47 ,\gf36e2_inst.sngfifo36e2_n_48 ,\gf36e2_inst.sngfifo36e2_n_49 ,\gf36e2_inst.sngfifo36e2_n_50 ,\gf36e2_inst.sngfifo36e2_n_51 ,\gf36e2_inst.sngfifo36e2_n_52 ,\gf36e2_inst.sngfifo36e2_n_53 ,\gf36e2_inst.sngfifo36e2_n_54 ,\gf36e2_inst.sngfifo36e2_n_55 ,\gf36e2_inst.sngfifo36e2_n_56 ,\gf36e2_inst.sngfifo36e2_n_57 ,\gf36e2_inst.sngfifo36e2_n_58 ,\gf36e2_inst.sngfifo36e2_n_59 ,\gf36e2_inst.sngfifo36e2_n_60 ,\gf36e2_inst.sngfifo36e2_n_61 ,\gf36e2_inst.sngfifo36e2_n_62 ,\gf36e2_inst.sngfifo36e2_n_63 ,\gf36e2_inst.sngfifo36e2_n_64 ,\gf36e2_inst.sngfifo36e2_n_65 ,\gf36e2_inst.sngfifo36e2_n_66 ,\gf36e2_inst.sngfifo36e2_n_67 ,\gf36e2_inst.sngfifo36e2_n_68 ,\gf36e2_inst.sngfifo36e2_n_69 ,\gf36e2_inst.sngfifo36e2_n_70 ,\gf36e2_inst.sngfifo36e2_n_71 ,\gf36e2_inst.sngfifo36e2_n_72 ,\gf36e2_inst.sngfifo36e2_n_73 ,\gf36e2_inst.sngfifo36e2_n_74 ,\gf36e2_inst.sngfifo36e2_n_75 ,\gf36e2_inst.sngfifo36e2_n_76 ,\gf36e2_inst.sngfifo36e2_n_77 ,\gf36e2_inst.sngfifo36e2_n_78 ,\gf36e2_inst.sngfifo36e2_n_79 ,\gf36e2_inst.sngfifo36e2_n_80 ,\gf36e2_inst.sngfifo36e2_n_81 ,\gf36e2_inst.sngfifo36e2_n_82 ,\gf36e2_inst.sngfifo36e2_n_83 ,\gf36e2_inst.sngfifo36e2_n_84 ,\gf36e2_inst.sngfifo36e2_n_85 ,\gf36e2_inst.sngfifo36e2_n_86 ,\gf36e2_inst.sngfifo36e2_n_87 ,\gf36e2_inst.sngfifo36e2_n_88 ,\gf36e2_inst.sngfifo36e2_n_89 ,\gf36e2_inst.sngfifo36e2_n_90 ,\gf36e2_inst.sngfifo36e2_n_91 ,\gf36e2_inst.sngfifo36e2_n_92 ,\gf36e2_inst.sngfifo36e2_n_93 ,\gf36e2_inst.sngfifo36e2_n_94 ,\gf36e2_inst.sngfifo36e2_n_95 ,\gf36e2_inst.sngfifo36e2_n_96 ,\gf36e2_inst.sngfifo36e2_n_97 ,\gf36e2_inst.sngfifo36e2_n_98 ,\gf36e2_inst.sngfifo36e2_n_99 ,\gf36e2_inst.sngfifo36e2_n_100 ,\gf36e2_inst.sngfifo36e2_n_101 ,\gf36e2_inst.sngfifo36e2_n_102 ,\gf36e2_inst.sngfifo36e2_n_103 }),
        .CASDOUTP({\gf36e2_inst.sngfifo36e2_n_168 ,\gf36e2_inst.sngfifo36e2_n_169 ,\gf36e2_inst.sngfifo36e2_n_170 ,\gf36e2_inst.sngfifo36e2_n_171 ,\gf36e2_inst.sngfifo36e2_n_172 ,\gf36e2_inst.sngfifo36e2_n_173 ,\gf36e2_inst.sngfifo36e2_n_174 ,\gf36e2_inst.sngfifo36e2_n_175 }),
        .CASNXTEMPTY(\gf36e2_inst.sngfifo36e2_n_0 ),
        .CASNXTRDEN(1'b0),
        .CASOREGIMUX(1'b0),
        .CASOREGIMUXEN(1'b1),
        .CASPRVEMPTY(1'b0),
        .CASPRVRDEN(\gf36e2_inst.sngfifo36e2_n_1 ),
        .DBITERR(p_4_out),
        .DIN(din[63:0]),
        .DINP(din[71:64]),
        .DOUT(dout[63:0]),
        .DOUTP(dout[71:64]),
        .ECCPARITY({\gf36e2_inst.sngfifo36e2_n_184 ,\gf36e2_inst.sngfifo36e2_n_185 ,\gf36e2_inst.sngfifo36e2_n_186 ,\gf36e2_inst.sngfifo36e2_n_187 ,\gf36e2_inst.sngfifo36e2_n_188 ,\gf36e2_inst.sngfifo36e2_n_189 ,\gf36e2_inst.sngfifo36e2_n_190 ,\gf36e2_inst.sngfifo36e2_n_191 }),
        .EMPTY(empty),
        .FULL(full),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .PROGEMPTY(\gf36e2_inst.sngfifo36e2_n_5 ),
        .PROGFULL(prog_full),
        .RDCLK(clk),
        .RDCOUNT({\gf36e2_inst.sngfifo36e2_n_12 ,\gf36e2_inst.sngfifo36e2_n_13 ,\gf36e2_inst.sngfifo36e2_n_14 ,\gf36e2_inst.sngfifo36e2_n_15 ,\gf36e2_inst.sngfifo36e2_n_16 ,\gf36e2_inst.sngfifo36e2_n_17 ,\gf36e2_inst.sngfifo36e2_n_18 ,\gf36e2_inst.sngfifo36e2_n_19 ,\gf36e2_inst.sngfifo36e2_n_20 ,\gf36e2_inst.sngfifo36e2_n_21 ,\gf36e2_inst.sngfifo36e2_n_22 ,\gf36e2_inst.sngfifo36e2_n_23 ,\gf36e2_inst.sngfifo36e2_n_24 ,\gf36e2_inst.sngfifo36e2_n_25 }),
        .RDEN(rd_en),
        .RDERR(p_7_out),
        .RDRSTBUSY(rd_rst_busy),
        .REGCE(rd_en),
        .RST(srst),
        .RSTREG(srst),
        .SBITERR(p_5_out),
        .SLEEP(1'b0),
        .WRCLK(clk),
        .WRCOUNT({\gf36e2_inst.sngfifo36e2_n_26 ,\gf36e2_inst.sngfifo36e2_n_27 ,\gf36e2_inst.sngfifo36e2_n_28 ,\gf36e2_inst.sngfifo36e2_n_29 ,\gf36e2_inst.sngfifo36e2_n_30 ,\gf36e2_inst.sngfifo36e2_n_31 ,\gf36e2_inst.sngfifo36e2_n_32 ,\gf36e2_inst.sngfifo36e2_n_33 ,\gf36e2_inst.sngfifo36e2_n_34 ,\gf36e2_inst.sngfifo36e2_n_35 ,\gf36e2_inst.sngfifo36e2_n_36 ,\gf36e2_inst.sngfifo36e2_n_37 ,\gf36e2_inst.sngfifo36e2_n_38 ,\gf36e2_inst.sngfifo36e2_n_39 }),
        .WREN(wr_en),
        .WRERR(p_8_out),
        .WRRSTBUSY(wr_rst_busy));
  LUT1 #(
    .INIT(2'h1)) 
    valid_INST_0
       (.I0(empty),
        .O(valid));
endmodule

(* ORIG_REF_NAME = "builtin_top" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_top
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [128:0]din;
  output [128:0]dout;

  wire clk;
  wire [128:0]din;
  wire [128:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth \rst_val_sym.gextw_sym[1].inst_extd 
       (.clk(clk),
        .din(din[71:0]),
        .dout(dout[71:0]),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_extdepth_0 \rst_val_sym.gextw_sym[2].inst_extd 
       (.clk(clk),
        .din(din[128:72]),
        .dout(dout[128:72]),
        .rd_en(rd_en),
        .srst(srst),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_top
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [128:0]din;
  output [128:0]dout;

  wire clk;
  wire [128:0]din;
  wire [128:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_builtin \gbi.bi 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "9" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "129" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "129" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynquplus" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "6" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "4" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x72" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "480" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "479" *) (* C_PROG_FULL_TYPE = "1" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "9" *) 
(* C_RD_DEPTH = "512" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "9" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "1" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "9" *) 
(* C_WR_DEPTH = "512" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "9" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_2" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2
   (almost_empty,
    almost_full,
    axi_ar_dbiterr,
    axi_ar_injectdbiterr,
    axi_ar_injectsbiterr,
    axi_ar_overflow,
    axi_ar_prog_empty,
    axi_ar_prog_full,
    axi_ar_sbiterr,
    axi_ar_underflow,
    axi_aw_dbiterr,
    axi_aw_injectdbiterr,
    axi_aw_injectsbiterr,
    axi_aw_overflow,
    axi_aw_prog_empty,
    axi_aw_prog_full,
    axi_aw_sbiterr,
    axi_aw_underflow,
    axi_b_dbiterr,
    axi_b_injectdbiterr,
    axi_b_injectsbiterr,
    axi_b_overflow,
    axi_b_prog_empty,
    axi_b_prog_full,
    axi_b_sbiterr,
    axi_b_underflow,
    axi_r_dbiterr,
    axi_r_injectdbiterr,
    axi_r_injectsbiterr,
    axi_r_overflow,
    axi_r_prog_empty,
    axi_r_prog_full,
    axi_r_sbiterr,
    axi_r_underflow,
    axi_w_dbiterr,
    axi_w_injectdbiterr,
    axi_w_injectsbiterr,
    axi_w_overflow,
    axi_w_prog_empty,
    axi_w_prog_full,
    axi_w_sbiterr,
    axi_w_underflow,
    axis_dbiterr,
    axis_injectdbiterr,
    axis_injectsbiterr,
    axis_overflow,
    axis_prog_empty,
    axis_prog_full,
    axis_sbiterr,
    axis_underflow,
    backup,
    backup_marker,
    clk,
    dbiterr,
    empty,
    full,
    injectdbiterr,
    injectsbiterr,
    int_clk,
    m_aclk,
    m_aclk_en,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bvalid,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rvalid,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wvalid,
    m_axis_tlast,
    m_axis_tready,
    m_axis_tvalid,
    overflow,
    prog_empty,
    prog_full,
    rd_clk,
    rd_en,
    rd_rst,
    rd_rst_busy,
    rst,
    s_aclk,
    s_aclk_en,
    s_aresetn,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_bready,
    s_axi_bvalid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wvalid,
    s_axis_tlast,
    s_axis_tready,
    s_axis_tvalid,
    sbiterr,
    sleep,
    srst,
    underflow,
    valid,
    wr_ack,
    wr_clk,
    wr_en,
    wr_rst,
    wr_rst_busy,
    axi_ar_data_count,
    axi_ar_prog_empty_thresh,
    axi_ar_prog_full_thresh,
    axi_ar_rd_data_count,
    axi_ar_wr_data_count,
    axi_aw_data_count,
    axi_aw_prog_empty_thresh,
    axi_aw_prog_full_thresh,
    axi_aw_rd_data_count,
    axi_aw_wr_data_count,
    axi_b_data_count,
    axi_b_prog_empty_thresh,
    axi_b_prog_full_thresh,
    axi_b_rd_data_count,
    axi_b_wr_data_count,
    axi_r_data_count,
    axi_r_prog_empty_thresh,
    axi_r_prog_full_thresh,
    axi_r_rd_data_count,
    axi_r_wr_data_count,
    axi_w_data_count,
    axi_w_prog_empty_thresh,
    axi_w_prog_full_thresh,
    axi_w_rd_data_count,
    axi_w_wr_data_count,
    axis_data_count,
    axis_prog_empty_thresh,
    axis_prog_full_thresh,
    axis_rd_data_count,
    axis_wr_data_count,
    data_count,
    din,
    dout,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arid,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awid,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_rdata,
    m_axi_rid,
    m_axi_rresp,
    m_axi_ruser,
    m_axi_wdata,
    m_axi_wid,
    m_axi_wstrb,
    m_axi_wuser,
    m_axis_tdata,
    m_axis_tdest,
    m_axis_tid,
    m_axis_tkeep,
    m_axis_tstrb,
    m_axis_tuser,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    rd_data_count,
    s_axi_araddr,
    s_axi_arburst,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_arsize,
    s_axi_aruser,
    s_axi_awaddr,
    s_axi_awburst,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awsize,
    s_axi_awuser,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_wdata,
    s_axi_wid,
    s_axi_wstrb,
    s_axi_wuser,
    s_axis_tdata,
    s_axis_tdest,
    s_axis_tid,
    s_axis_tkeep,
    s_axis_tstrb,
    s_axis_tuser,
    wr_data_count);
  output almost_empty;
  output almost_full;
  output axi_ar_dbiterr;
  input axi_ar_injectdbiterr;
  input axi_ar_injectsbiterr;
  output axi_ar_overflow;
  output axi_ar_prog_empty;
  output axi_ar_prog_full;
  output axi_ar_sbiterr;
  output axi_ar_underflow;
  output axi_aw_dbiterr;
  input axi_aw_injectdbiterr;
  input axi_aw_injectsbiterr;
  output axi_aw_overflow;
  output axi_aw_prog_empty;
  output axi_aw_prog_full;
  output axi_aw_sbiterr;
  output axi_aw_underflow;
  output axi_b_dbiterr;
  input axi_b_injectdbiterr;
  input axi_b_injectsbiterr;
  output axi_b_overflow;
  output axi_b_prog_empty;
  output axi_b_prog_full;
  output axi_b_sbiterr;
  output axi_b_underflow;
  output axi_r_dbiterr;
  input axi_r_injectdbiterr;
  input axi_r_injectsbiterr;
  output axi_r_overflow;
  output axi_r_prog_empty;
  output axi_r_prog_full;
  output axi_r_sbiterr;
  output axi_r_underflow;
  output axi_w_dbiterr;
  input axi_w_injectdbiterr;
  input axi_w_injectsbiterr;
  output axi_w_overflow;
  output axi_w_prog_empty;
  output axi_w_prog_full;
  output axi_w_sbiterr;
  output axi_w_underflow;
  output axis_dbiterr;
  input axis_injectdbiterr;
  input axis_injectsbiterr;
  output axis_overflow;
  output axis_prog_empty;
  output axis_prog_full;
  output axis_sbiterr;
  output axis_underflow;
  input backup;
  input backup_marker;
  input clk;
  output dbiterr;
  output empty;
  output full;
  input injectdbiterr;
  input injectsbiterr;
  input int_clk;
  input m_aclk;
  input m_aclk_en;
  input m_axi_arready;
  output m_axi_arvalid;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input m_axi_bvalid;
  input m_axi_rlast;
  output m_axi_rready;
  input m_axi_rvalid;
  output m_axi_wlast;
  input m_axi_wready;
  output m_axi_wvalid;
  output m_axis_tlast;
  input m_axis_tready;
  output m_axis_tvalid;
  output overflow;
  output prog_empty;
  output prog_full;
  input rd_clk;
  input rd_en;
  input rd_rst;
  output rd_rst_busy;
  input rst;
  input s_aclk;
  input s_aclk_en;
  input s_aresetn;
  output s_axi_arready;
  input s_axi_arvalid;
  output s_axi_awready;
  input s_axi_awvalid;
  input s_axi_bready;
  output s_axi_bvalid;
  output s_axi_rlast;
  input s_axi_rready;
  output s_axi_rvalid;
  input s_axi_wlast;
  output s_axi_wready;
  input s_axi_wvalid;
  input s_axis_tlast;
  output s_axis_tready;
  input s_axis_tvalid;
  output sbiterr;
  input sleep;
  input srst;
  output underflow;
  output valid;
  output wr_ack;
  input wr_clk;
  input wr_en;
  input wr_rst;
  output wr_rst_busy;
  output [4:0]axi_ar_data_count;
  input [3:0]axi_ar_prog_empty_thresh;
  input [3:0]axi_ar_prog_full_thresh;
  output [4:0]axi_ar_rd_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_aw_data_count;
  input [3:0]axi_aw_prog_empty_thresh;
  input [3:0]axi_aw_prog_full_thresh;
  output [4:0]axi_aw_rd_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_b_data_count;
  input [3:0]axi_b_prog_empty_thresh;
  input [3:0]axi_b_prog_full_thresh;
  output [4:0]axi_b_rd_data_count;
  output [4:0]axi_b_wr_data_count;
  output [10:0]axi_r_data_count;
  input [9:0]axi_r_prog_empty_thresh;
  input [9:0]axi_r_prog_full_thresh;
  output [10:0]axi_r_rd_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_w_data_count;
  input [9:0]axi_w_prog_empty_thresh;
  input [9:0]axi_w_prog_full_thresh;
  output [10:0]axi_w_rd_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axis_data_count;
  input [9:0]axis_prog_empty_thresh;
  input [9:0]axis_prog_full_thresh;
  output [10:0]axis_rd_data_count;
  output [10:0]axis_wr_data_count;
  output [8:0]data_count;
  input [128:0]din;
  output [128:0]dout;
  output [31:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [0:0]m_axi_arid;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [2:0]m_axi_arsize;
  output [0:0]m_axi_aruser;
  output [31:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [0:0]m_axi_awid;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [2:0]m_axi_awsize;
  output [0:0]m_axi_awuser;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input [63:0]m_axi_rdata;
  input [0:0]m_axi_rid;
  input [1:0]m_axi_rresp;
  input [0:0]m_axi_ruser;
  output [63:0]m_axi_wdata;
  output [0:0]m_axi_wid;
  output [7:0]m_axi_wstrb;
  output [0:0]m_axi_wuser;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tdest;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tkeep;
  output [0:0]m_axis_tstrb;
  output [3:0]m_axis_tuser;
  input [8:0]prog_empty_thresh;
  input [8:0]prog_empty_thresh_assert;
  input [8:0]prog_empty_thresh_negate;
  input [8:0]prog_full_thresh;
  input [8:0]prog_full_thresh_assert;
  input [8:0]prog_full_thresh_negate;
  output [8:0]rd_data_count;
  input [31:0]s_axi_araddr;
  input [1:0]s_axi_arburst;
  input [3:0]s_axi_arcache;
  input [0:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [2:0]s_axi_arsize;
  input [0:0]s_axi_aruser;
  input [31:0]s_axi_awaddr;
  input [1:0]s_axi_awburst;
  input [3:0]s_axi_awcache;
  input [0:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [2:0]s_axi_awsize;
  input [0:0]s_axi_awuser;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output [63:0]s_axi_rdata;
  output [0:0]s_axi_rid;
  output [1:0]s_axi_rresp;
  output [0:0]s_axi_ruser;
  input [63:0]s_axi_wdata;
  input [0:0]s_axi_wid;
  input [7:0]s_axi_wstrb;
  input [0:0]s_axi_wuser;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tdest;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tkeep;
  input [0:0]s_axis_tstrb;
  input [3:0]s_axis_tuser;
  output [8:0]wr_data_count;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [128:0]din;
  wire [128:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_synth inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_builtin" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_builtin
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [128:0]din;
  output [128:0]dout;

  wire clk;
  wire [128:0]din;
  wire [128:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_builtin_top \v8_fifo.fblk 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_synth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_v13_2_2_synth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [128:0]din;
  output [128:0]dout;

  wire clk;
  wire [128:0]din;
  wire [128:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_129_fwft_512depth_fifo_generator_top \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_generator_32b_fwft_512depth,fifo_generator_v13_2_2,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 core_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000" *) input clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output prog_full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  output rd_rst_busy;
  input srst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  output wr_rst_busy;
  input [31:0]din;
  output [31:0]dout;

  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "32" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "32" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "400" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "399" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(prog_full),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "builtin_extdepth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_extdepth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [31:0]din;
  output [31:0]dout;

  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  (* async_reg = "true" *) (* msgon = "true" *) wire [1:0]srst_qr;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_prim \gonep.inst_prim 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[1].inst_extdi_0 
       (.I0(1'b1),
        .O(srst_qr[1]));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[1].inst_extdi_1 
       (.I0(1'b1),
        .O(srst_qr[0]));
endmodule

(* ORIG_REF_NAME = "builtin_prim" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_prim
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [31:0]din;
  output [31:0]dout;

  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire \gf18e2_inst.sngfifo18e2_n_0 ;
  wire \gf18e2_inst.sngfifo18e2_n_1 ;
  wire \gf18e2_inst.sngfifo18e2_n_10 ;
  wire \gf18e2_inst.sngfifo18e2_n_100 ;
  wire \gf18e2_inst.sngfifo18e2_n_101 ;
  wire \gf18e2_inst.sngfifo18e2_n_102 ;
  wire \gf18e2_inst.sngfifo18e2_n_103 ;
  wire \gf18e2_inst.sngfifo18e2_n_104 ;
  wire \gf18e2_inst.sngfifo18e2_n_105 ;
  wire \gf18e2_inst.sngfifo18e2_n_106 ;
  wire \gf18e2_inst.sngfifo18e2_n_107 ;
  wire \gf18e2_inst.sngfifo18e2_n_11 ;
  wire \gf18e2_inst.sngfifo18e2_n_12 ;
  wire \gf18e2_inst.sngfifo18e2_n_13 ;
  wire \gf18e2_inst.sngfifo18e2_n_14 ;
  wire \gf18e2_inst.sngfifo18e2_n_15 ;
  wire \gf18e2_inst.sngfifo18e2_n_16 ;
  wire \gf18e2_inst.sngfifo18e2_n_17 ;
  wire \gf18e2_inst.sngfifo18e2_n_18 ;
  wire \gf18e2_inst.sngfifo18e2_n_19 ;
  wire \gf18e2_inst.sngfifo18e2_n_20 ;
  wire \gf18e2_inst.sngfifo18e2_n_21 ;
  wire \gf18e2_inst.sngfifo18e2_n_22 ;
  wire \gf18e2_inst.sngfifo18e2_n_23 ;
  wire \gf18e2_inst.sngfifo18e2_n_24 ;
  wire \gf18e2_inst.sngfifo18e2_n_25 ;
  wire \gf18e2_inst.sngfifo18e2_n_26 ;
  wire \gf18e2_inst.sngfifo18e2_n_27 ;
  wire \gf18e2_inst.sngfifo18e2_n_28 ;
  wire \gf18e2_inst.sngfifo18e2_n_29 ;
  wire \gf18e2_inst.sngfifo18e2_n_30 ;
  wire \gf18e2_inst.sngfifo18e2_n_31 ;
  wire \gf18e2_inst.sngfifo18e2_n_32 ;
  wire \gf18e2_inst.sngfifo18e2_n_33 ;
  wire \gf18e2_inst.sngfifo18e2_n_34 ;
  wire \gf18e2_inst.sngfifo18e2_n_35 ;
  wire \gf18e2_inst.sngfifo18e2_n_36 ;
  wire \gf18e2_inst.sngfifo18e2_n_37 ;
  wire \gf18e2_inst.sngfifo18e2_n_38 ;
  wire \gf18e2_inst.sngfifo18e2_n_39 ;
  wire \gf18e2_inst.sngfifo18e2_n_4 ;
  wire \gf18e2_inst.sngfifo18e2_n_40 ;
  wire \gf18e2_inst.sngfifo18e2_n_41 ;
  wire \gf18e2_inst.sngfifo18e2_n_42 ;
  wire \gf18e2_inst.sngfifo18e2_n_43 ;
  wire \gf18e2_inst.sngfifo18e2_n_44 ;
  wire \gf18e2_inst.sngfifo18e2_n_45 ;
  wire \gf18e2_inst.sngfifo18e2_n_46 ;
  wire \gf18e2_inst.sngfifo18e2_n_47 ;
  wire \gf18e2_inst.sngfifo18e2_n_48 ;
  wire \gf18e2_inst.sngfifo18e2_n_49 ;
  wire \gf18e2_inst.sngfifo18e2_n_50 ;
  wire \gf18e2_inst.sngfifo18e2_n_51 ;
  wire \gf18e2_inst.sngfifo18e2_n_52 ;
  wire \gf18e2_inst.sngfifo18e2_n_53 ;
  wire \gf18e2_inst.sngfifo18e2_n_54 ;
  wire \gf18e2_inst.sngfifo18e2_n_55 ;
  wire \gf18e2_inst.sngfifo18e2_n_56 ;
  wire \gf18e2_inst.sngfifo18e2_n_57 ;
  wire \gf18e2_inst.sngfifo18e2_n_58 ;
  wire \gf18e2_inst.sngfifo18e2_n_59 ;
  wire \gf18e2_inst.sngfifo18e2_n_60 ;
  wire \gf18e2_inst.sngfifo18e2_n_61 ;
  wire \gf18e2_inst.sngfifo18e2_n_62 ;
  wire \gf18e2_inst.sngfifo18e2_n_63 ;
  wire \gf18e2_inst.sngfifo18e2_n_64 ;
  wire \gf18e2_inst.sngfifo18e2_n_65 ;
  wire \gf18e2_inst.sngfifo18e2_n_66 ;
  wire \gf18e2_inst.sngfifo18e2_n_67 ;
  wire p_7_out;
  wire p_8_out;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  (* box_type = "PRIMITIVE" *) 
  FIFO18E2 #(
    .CASCADE_ORDER("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .FIRST_WORD_FALL_THROUGH("TRUE"),
    .INIT(36'h000000000),
    .IS_RDCLK_INVERTED(1'b0),
    .IS_RDEN_INVERTED(1'b0),
    .IS_RSTREG_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .IS_WRCLK_INVERTED(1'b0),
    .IS_WREN_INVERTED(1'b0),
    .PROG_EMPTY_THRESH(4),
    .PROG_FULL_THRESH(400),
    .RDCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .READ_WIDTH(36),
    .REGISTER_MODE("REGISTERED"),
    .RSTREG_PRIORITY("REGCE"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL(36'h000000000),
    .WRCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .WRITE_WIDTH(36)) 
    \gf18e2_inst.sngfifo18e2 
       (.CASDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINP({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUX(1'b0),
        .CASDOMUXEN(1'b1),
        .CASDOUT({\gf18e2_inst.sngfifo18e2_n_36 ,\gf18e2_inst.sngfifo18e2_n_37 ,\gf18e2_inst.sngfifo18e2_n_38 ,\gf18e2_inst.sngfifo18e2_n_39 ,\gf18e2_inst.sngfifo18e2_n_40 ,\gf18e2_inst.sngfifo18e2_n_41 ,\gf18e2_inst.sngfifo18e2_n_42 ,\gf18e2_inst.sngfifo18e2_n_43 ,\gf18e2_inst.sngfifo18e2_n_44 ,\gf18e2_inst.sngfifo18e2_n_45 ,\gf18e2_inst.sngfifo18e2_n_46 ,\gf18e2_inst.sngfifo18e2_n_47 ,\gf18e2_inst.sngfifo18e2_n_48 ,\gf18e2_inst.sngfifo18e2_n_49 ,\gf18e2_inst.sngfifo18e2_n_50 ,\gf18e2_inst.sngfifo18e2_n_51 ,\gf18e2_inst.sngfifo18e2_n_52 ,\gf18e2_inst.sngfifo18e2_n_53 ,\gf18e2_inst.sngfifo18e2_n_54 ,\gf18e2_inst.sngfifo18e2_n_55 ,\gf18e2_inst.sngfifo18e2_n_56 ,\gf18e2_inst.sngfifo18e2_n_57 ,\gf18e2_inst.sngfifo18e2_n_58 ,\gf18e2_inst.sngfifo18e2_n_59 ,\gf18e2_inst.sngfifo18e2_n_60 ,\gf18e2_inst.sngfifo18e2_n_61 ,\gf18e2_inst.sngfifo18e2_n_62 ,\gf18e2_inst.sngfifo18e2_n_63 ,\gf18e2_inst.sngfifo18e2_n_64 ,\gf18e2_inst.sngfifo18e2_n_65 ,\gf18e2_inst.sngfifo18e2_n_66 ,\gf18e2_inst.sngfifo18e2_n_67 }),
        .CASDOUTP({\gf18e2_inst.sngfifo18e2_n_100 ,\gf18e2_inst.sngfifo18e2_n_101 ,\gf18e2_inst.sngfifo18e2_n_102 ,\gf18e2_inst.sngfifo18e2_n_103 }),
        .CASNXTEMPTY(\gf18e2_inst.sngfifo18e2_n_0 ),
        .CASNXTRDEN(1'b0),
        .CASOREGIMUX(1'b0),
        .CASOREGIMUXEN(1'b1),
        .CASPRVEMPTY(1'b0),
        .CASPRVRDEN(\gf18e2_inst.sngfifo18e2_n_1 ),
        .DIN(din),
        .DINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUT(dout),
        .DOUTP({\gf18e2_inst.sngfifo18e2_n_104 ,\gf18e2_inst.sngfifo18e2_n_105 ,\gf18e2_inst.sngfifo18e2_n_106 ,\gf18e2_inst.sngfifo18e2_n_107 }),
        .EMPTY(empty),
        .FULL(full),
        .PROGEMPTY(\gf18e2_inst.sngfifo18e2_n_4 ),
        .PROGFULL(prog_full),
        .RDCLK(clk),
        .RDCOUNT({\gf18e2_inst.sngfifo18e2_n_10 ,\gf18e2_inst.sngfifo18e2_n_11 ,\gf18e2_inst.sngfifo18e2_n_12 ,\gf18e2_inst.sngfifo18e2_n_13 ,\gf18e2_inst.sngfifo18e2_n_14 ,\gf18e2_inst.sngfifo18e2_n_15 ,\gf18e2_inst.sngfifo18e2_n_16 ,\gf18e2_inst.sngfifo18e2_n_17 ,\gf18e2_inst.sngfifo18e2_n_18 ,\gf18e2_inst.sngfifo18e2_n_19 ,\gf18e2_inst.sngfifo18e2_n_20 ,\gf18e2_inst.sngfifo18e2_n_21 ,\gf18e2_inst.sngfifo18e2_n_22 }),
        .RDEN(rd_en),
        .RDERR(p_7_out),
        .RDRSTBUSY(rd_rst_busy),
        .REGCE(rd_en),
        .RST(srst),
        .RSTREG(srst),
        .SLEEP(1'b0),
        .WRCLK(clk),
        .WRCOUNT({\gf18e2_inst.sngfifo18e2_n_23 ,\gf18e2_inst.sngfifo18e2_n_24 ,\gf18e2_inst.sngfifo18e2_n_25 ,\gf18e2_inst.sngfifo18e2_n_26 ,\gf18e2_inst.sngfifo18e2_n_27 ,\gf18e2_inst.sngfifo18e2_n_28 ,\gf18e2_inst.sngfifo18e2_n_29 ,\gf18e2_inst.sngfifo18e2_n_30 ,\gf18e2_inst.sngfifo18e2_n_31 ,\gf18e2_inst.sngfifo18e2_n_32 ,\gf18e2_inst.sngfifo18e2_n_33 ,\gf18e2_inst.sngfifo18e2_n_34 ,\gf18e2_inst.sngfifo18e2_n_35 }),
        .WREN(wr_en),
        .WRERR(p_8_out),
        .WRRSTBUSY(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "builtin_top" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_top
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [31:0]din;
  output [31:0]dout;

  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_extdepth \rst_val_sym.gextw_sym[1].inst_extd 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_top
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [31:0]din;
  output [31:0]dout;

  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_builtin \gbi.bi 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "9" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "32" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "32" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynquplus" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "6" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "4" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "400" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "399" *) (* C_PROG_FULL_TYPE = "1" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "9" *) 
(* C_RD_DEPTH = "512" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "9" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "1" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "9" *) 
(* C_WR_DEPTH = "512" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "9" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_2" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2
   (almost_empty,
    almost_full,
    axi_ar_dbiterr,
    axi_ar_injectdbiterr,
    axi_ar_injectsbiterr,
    axi_ar_overflow,
    axi_ar_prog_empty,
    axi_ar_prog_full,
    axi_ar_sbiterr,
    axi_ar_underflow,
    axi_aw_dbiterr,
    axi_aw_injectdbiterr,
    axi_aw_injectsbiterr,
    axi_aw_overflow,
    axi_aw_prog_empty,
    axi_aw_prog_full,
    axi_aw_sbiterr,
    axi_aw_underflow,
    axi_b_dbiterr,
    axi_b_injectdbiterr,
    axi_b_injectsbiterr,
    axi_b_overflow,
    axi_b_prog_empty,
    axi_b_prog_full,
    axi_b_sbiterr,
    axi_b_underflow,
    axi_r_dbiterr,
    axi_r_injectdbiterr,
    axi_r_injectsbiterr,
    axi_r_overflow,
    axi_r_prog_empty,
    axi_r_prog_full,
    axi_r_sbiterr,
    axi_r_underflow,
    axi_w_dbiterr,
    axi_w_injectdbiterr,
    axi_w_injectsbiterr,
    axi_w_overflow,
    axi_w_prog_empty,
    axi_w_prog_full,
    axi_w_sbiterr,
    axi_w_underflow,
    axis_dbiterr,
    axis_injectdbiterr,
    axis_injectsbiterr,
    axis_overflow,
    axis_prog_empty,
    axis_prog_full,
    axis_sbiterr,
    axis_underflow,
    backup,
    backup_marker,
    clk,
    dbiterr,
    empty,
    full,
    injectdbiterr,
    injectsbiterr,
    int_clk,
    m_aclk,
    m_aclk_en,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bvalid,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rvalid,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wvalid,
    m_axis_tlast,
    m_axis_tready,
    m_axis_tvalid,
    overflow,
    prog_empty,
    prog_full,
    rd_clk,
    rd_en,
    rd_rst,
    rd_rst_busy,
    rst,
    s_aclk,
    s_aclk_en,
    s_aresetn,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_bready,
    s_axi_bvalid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wvalid,
    s_axis_tlast,
    s_axis_tready,
    s_axis_tvalid,
    sbiterr,
    sleep,
    srst,
    underflow,
    valid,
    wr_ack,
    wr_clk,
    wr_en,
    wr_rst,
    wr_rst_busy,
    axi_ar_data_count,
    axi_ar_prog_empty_thresh,
    axi_ar_prog_full_thresh,
    axi_ar_rd_data_count,
    axi_ar_wr_data_count,
    axi_aw_data_count,
    axi_aw_prog_empty_thresh,
    axi_aw_prog_full_thresh,
    axi_aw_rd_data_count,
    axi_aw_wr_data_count,
    axi_b_data_count,
    axi_b_prog_empty_thresh,
    axi_b_prog_full_thresh,
    axi_b_rd_data_count,
    axi_b_wr_data_count,
    axi_r_data_count,
    axi_r_prog_empty_thresh,
    axi_r_prog_full_thresh,
    axi_r_rd_data_count,
    axi_r_wr_data_count,
    axi_w_data_count,
    axi_w_prog_empty_thresh,
    axi_w_prog_full_thresh,
    axi_w_rd_data_count,
    axi_w_wr_data_count,
    axis_data_count,
    axis_prog_empty_thresh,
    axis_prog_full_thresh,
    axis_rd_data_count,
    axis_wr_data_count,
    data_count,
    din,
    dout,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arid,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awid,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_rdata,
    m_axi_rid,
    m_axi_rresp,
    m_axi_ruser,
    m_axi_wdata,
    m_axi_wid,
    m_axi_wstrb,
    m_axi_wuser,
    m_axis_tdata,
    m_axis_tdest,
    m_axis_tid,
    m_axis_tkeep,
    m_axis_tstrb,
    m_axis_tuser,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    rd_data_count,
    s_axi_araddr,
    s_axi_arburst,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_arsize,
    s_axi_aruser,
    s_axi_awaddr,
    s_axi_awburst,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awsize,
    s_axi_awuser,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_wdata,
    s_axi_wid,
    s_axi_wstrb,
    s_axi_wuser,
    s_axis_tdata,
    s_axis_tdest,
    s_axis_tid,
    s_axis_tkeep,
    s_axis_tstrb,
    s_axis_tuser,
    wr_data_count);
  output almost_empty;
  output almost_full;
  output axi_ar_dbiterr;
  input axi_ar_injectdbiterr;
  input axi_ar_injectsbiterr;
  output axi_ar_overflow;
  output axi_ar_prog_empty;
  output axi_ar_prog_full;
  output axi_ar_sbiterr;
  output axi_ar_underflow;
  output axi_aw_dbiterr;
  input axi_aw_injectdbiterr;
  input axi_aw_injectsbiterr;
  output axi_aw_overflow;
  output axi_aw_prog_empty;
  output axi_aw_prog_full;
  output axi_aw_sbiterr;
  output axi_aw_underflow;
  output axi_b_dbiterr;
  input axi_b_injectdbiterr;
  input axi_b_injectsbiterr;
  output axi_b_overflow;
  output axi_b_prog_empty;
  output axi_b_prog_full;
  output axi_b_sbiterr;
  output axi_b_underflow;
  output axi_r_dbiterr;
  input axi_r_injectdbiterr;
  input axi_r_injectsbiterr;
  output axi_r_overflow;
  output axi_r_prog_empty;
  output axi_r_prog_full;
  output axi_r_sbiterr;
  output axi_r_underflow;
  output axi_w_dbiterr;
  input axi_w_injectdbiterr;
  input axi_w_injectsbiterr;
  output axi_w_overflow;
  output axi_w_prog_empty;
  output axi_w_prog_full;
  output axi_w_sbiterr;
  output axi_w_underflow;
  output axis_dbiterr;
  input axis_injectdbiterr;
  input axis_injectsbiterr;
  output axis_overflow;
  output axis_prog_empty;
  output axis_prog_full;
  output axis_sbiterr;
  output axis_underflow;
  input backup;
  input backup_marker;
  input clk;
  output dbiterr;
  output empty;
  output full;
  input injectdbiterr;
  input injectsbiterr;
  input int_clk;
  input m_aclk;
  input m_aclk_en;
  input m_axi_arready;
  output m_axi_arvalid;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input m_axi_bvalid;
  input m_axi_rlast;
  output m_axi_rready;
  input m_axi_rvalid;
  output m_axi_wlast;
  input m_axi_wready;
  output m_axi_wvalid;
  output m_axis_tlast;
  input m_axis_tready;
  output m_axis_tvalid;
  output overflow;
  output prog_empty;
  output prog_full;
  input rd_clk;
  input rd_en;
  input rd_rst;
  output rd_rst_busy;
  input rst;
  input s_aclk;
  input s_aclk_en;
  input s_aresetn;
  output s_axi_arready;
  input s_axi_arvalid;
  output s_axi_awready;
  input s_axi_awvalid;
  input s_axi_bready;
  output s_axi_bvalid;
  output s_axi_rlast;
  input s_axi_rready;
  output s_axi_rvalid;
  input s_axi_wlast;
  output s_axi_wready;
  input s_axi_wvalid;
  input s_axis_tlast;
  output s_axis_tready;
  input s_axis_tvalid;
  output sbiterr;
  input sleep;
  input srst;
  output underflow;
  output valid;
  output wr_ack;
  input wr_clk;
  input wr_en;
  input wr_rst;
  output wr_rst_busy;
  output [4:0]axi_ar_data_count;
  input [3:0]axi_ar_prog_empty_thresh;
  input [3:0]axi_ar_prog_full_thresh;
  output [4:0]axi_ar_rd_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_aw_data_count;
  input [3:0]axi_aw_prog_empty_thresh;
  input [3:0]axi_aw_prog_full_thresh;
  output [4:0]axi_aw_rd_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_b_data_count;
  input [3:0]axi_b_prog_empty_thresh;
  input [3:0]axi_b_prog_full_thresh;
  output [4:0]axi_b_rd_data_count;
  output [4:0]axi_b_wr_data_count;
  output [10:0]axi_r_data_count;
  input [9:0]axi_r_prog_empty_thresh;
  input [9:0]axi_r_prog_full_thresh;
  output [10:0]axi_r_rd_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_w_data_count;
  input [9:0]axi_w_prog_empty_thresh;
  input [9:0]axi_w_prog_full_thresh;
  output [10:0]axi_w_rd_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axis_data_count;
  input [9:0]axis_prog_empty_thresh;
  input [9:0]axis_prog_full_thresh;
  output [10:0]axis_rd_data_count;
  output [10:0]axis_wr_data_count;
  output [8:0]data_count;
  input [31:0]din;
  output [31:0]dout;
  output [31:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [0:0]m_axi_arid;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [2:0]m_axi_arsize;
  output [0:0]m_axi_aruser;
  output [31:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [0:0]m_axi_awid;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [2:0]m_axi_awsize;
  output [0:0]m_axi_awuser;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input [63:0]m_axi_rdata;
  input [0:0]m_axi_rid;
  input [1:0]m_axi_rresp;
  input [0:0]m_axi_ruser;
  output [63:0]m_axi_wdata;
  output [0:0]m_axi_wid;
  output [7:0]m_axi_wstrb;
  output [0:0]m_axi_wuser;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tdest;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tkeep;
  output [0:0]m_axis_tstrb;
  output [3:0]m_axis_tuser;
  input [8:0]prog_empty_thresh;
  input [8:0]prog_empty_thresh_assert;
  input [8:0]prog_empty_thresh_negate;
  input [8:0]prog_full_thresh;
  input [8:0]prog_full_thresh_assert;
  input [8:0]prog_full_thresh_negate;
  output [8:0]rd_data_count;
  input [31:0]s_axi_araddr;
  input [1:0]s_axi_arburst;
  input [3:0]s_axi_arcache;
  input [0:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [2:0]s_axi_arsize;
  input [0:0]s_axi_aruser;
  input [31:0]s_axi_awaddr;
  input [1:0]s_axi_awburst;
  input [3:0]s_axi_awcache;
  input [0:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [2:0]s_axi_awsize;
  input [0:0]s_axi_awuser;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output [63:0]s_axi_rdata;
  output [0:0]s_axi_rid;
  output [1:0]s_axi_rresp;
  output [0:0]s_axi_ruser;
  input [63:0]s_axi_wdata;
  input [0:0]s_axi_wid;
  input [7:0]s_axi_wstrb;
  input [0:0]s_axi_wuser;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tdest;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tkeep;
  input [0:0]s_axis_tstrb;
  input [3:0]s_axis_tuser;
  output [8:0]wr_data_count;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_synth inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_builtin" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_builtin
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [31:0]din;
  output [31:0]dout;

  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_builtin_top \v8_fifo.fblk 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_synth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_v13_2_2_synth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [31:0]din;
  output [31:0]dout;

  wire clk;
  wire [31:0]din;
  wire [31:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth_fifo_generator_top \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_generator_72b_fwft_32depth,fifo_generator_v13_2_2,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 core_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000" *) input clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output prog_full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  output rd_rst_busy;
  input srst;
  output valid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  output wr_rst_busy;
  input [71:0]din;
  output [71:0]dout;

  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [5:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [5:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [5:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "6" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "1" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "0" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "2" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "28" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "27" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "6" *) 
  (* C_RD_DEPTH = "32" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "5" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "1" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "6" *) 
  (* C_WR_DEPTH = "32" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "5" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(NLW_U0_data_count_UNCONNECTED[5:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(prog_full),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[5:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(valid),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[5:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "bram_fifo_rstlogic" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_bram_fifo_rstlogic
   (clk,
    srst,
    wr_rst_busy,
    SR);
  input clk;
  input srst;
  output wr_rst_busy;
  output [0:0]SR;

  wire [0:0]SR;
  wire clk;
  (* async_reg = "true" *) wire d_asreg;
  (* async_reg = "true" *) wire rd_rst_reg;
  (* async_reg = "true" *) wire rdrst_q1;
  (* async_reg = "true" *) wire rdrst_q2;
  (* async_reg = "true" *) wire rdrst_q3;
  (* async_reg = "true" *) wire rst_d1;
  (* async_reg = "true" *) wire rst_d2;
  wire srst;
  wire wr_rst_busy;
  wire wr_rst_reg_i_1_n_0;
  (* async_reg = "true" *) wire wrrst_q1;
  (* async_reg = "true" *) wire wrrst_q2;
  (* async_reg = "true" *) wire wrrst_q3;

  LUT2 #(
    .INIT(4'hE)) 
    \goreg_dm.dout_i[71]_i_1 
       (.I0(srst),
        .I1(wr_rst_busy),
        .O(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(d_asreg));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(rd_rst_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(wrrst_q1));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(wrrst_q2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(wrrst_q3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(rdrst_q1));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(rdrst_q2));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(rdrst_q3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    rst_d1_reg
       (.C(clk),
        .CE(1'b1),
        .D(srst),
        .Q(rst_d1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    rst_d2_reg
       (.C(clk),
        .CE(1'b1),
        .D(rst_d1),
        .Q(rst_d2),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    wr_rst_reg_i_1
       (.I0(srst),
        .I1(wr_rst_busy),
        .O(wr_rst_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wr_rst_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(wr_rst_reg_i_1_n_0),
        .Q(wr_rst_busy),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_dmem
   (clk,
    E,
    Q,
    SR,
    din,
    \gcc0.gc0.count_d1_reg[4] ,
    \goreg_dm.dout_i_reg[71] ,
    \gpregsm1.curr_fwft_state_reg[0] );
  input clk;
  input [0:0]E;
  input [4:0]Q;
  input [0:0]SR;
  input [71:0]din;
  input [4:0]\gcc0.gc0.count_d1_reg[4] ;
  output [71:0]\goreg_dm.dout_i_reg[71] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[0] ;

  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire clk;
  wire [71:0]din;
  wire [4:0]\gcc0.gc0.count_d1_reg[4] ;
  wire [71:0]\goreg_dm.dout_i_reg[71] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[0] ;
  wire [71:0]p_0_out;
  wire [1:0]NLW_RAM_reg_0_31_0_5_DOH_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_12_17_DOH_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_18_23_DOH_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_24_29_DOH_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOE_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOF_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOG_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOH_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_6_11_DOH_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    RAM_reg_0_31_0_5
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\gcc0.gc0.count_d1_reg[4] ),
        .DIA(din[1:0]),
        .DIB(din[3:2]),
        .DIC(din[5:4]),
        .DID(din[7:6]),
        .DIE(din[9:8]),
        .DIF(din[11:10]),
        .DIG(din[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(p_0_out[1:0]),
        .DOB(p_0_out[3:2]),
        .DOC(p_0_out[5:4]),
        .DOD(p_0_out[7:6]),
        .DOE(p_0_out[9:8]),
        .DOF(p_0_out[11:10]),
        .DOG(p_0_out[13:12]),
        .DOH(NLW_RAM_reg_0_31_0_5_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    RAM_reg_0_31_12_17
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\gcc0.gc0.count_d1_reg[4] ),
        .DIA(din[29:28]),
        .DIB(din[31:30]),
        .DIC(din[33:32]),
        .DID(din[35:34]),
        .DIE(din[37:36]),
        .DIF(din[39:38]),
        .DIG(din[41:40]),
        .DIH({1'b0,1'b0}),
        .DOA(p_0_out[29:28]),
        .DOB(p_0_out[31:30]),
        .DOC(p_0_out[33:32]),
        .DOD(p_0_out[35:34]),
        .DOE(p_0_out[37:36]),
        .DOF(p_0_out[39:38]),
        .DOG(p_0_out[41:40]),
        .DOH(NLW_RAM_reg_0_31_12_17_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    RAM_reg_0_31_18_23
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\gcc0.gc0.count_d1_reg[4] ),
        .DIA(din[43:42]),
        .DIB(din[45:44]),
        .DIC(din[47:46]),
        .DID(din[49:48]),
        .DIE(din[51:50]),
        .DIF(din[53:52]),
        .DIG(din[55:54]),
        .DIH({1'b0,1'b0}),
        .DOA(p_0_out[43:42]),
        .DOB(p_0_out[45:44]),
        .DOC(p_0_out[47:46]),
        .DOD(p_0_out[49:48]),
        .DOE(p_0_out[51:50]),
        .DOF(p_0_out[53:52]),
        .DOG(p_0_out[55:54]),
        .DOH(NLW_RAM_reg_0_31_18_23_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    RAM_reg_0_31_24_29
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\gcc0.gc0.count_d1_reg[4] ),
        .DIA(din[57:56]),
        .DIB(din[59:58]),
        .DIC(din[61:60]),
        .DID(din[63:62]),
        .DIE(din[65:64]),
        .DIF(din[67:66]),
        .DIG(din[69:68]),
        .DIH({1'b0,1'b0}),
        .DOA(p_0_out[57:56]),
        .DOB(p_0_out[59:58]),
        .DOC(p_0_out[61:60]),
        .DOD(p_0_out[63:62]),
        .DOE(p_0_out[65:64]),
        .DOF(p_0_out[67:66]),
        .DOG(p_0_out[69:68]),
        .DOH(NLW_RAM_reg_0_31_24_29_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    RAM_reg_0_31_30_35
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\gcc0.gc0.count_d1_reg[4] ),
        .DIA(din[71:70]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DIE({1'b0,1'b0}),
        .DIF({1'b0,1'b0}),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(p_0_out[71:70]),
        .DOB(NLW_RAM_reg_0_31_30_35_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_31_30_35_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .DOE(NLW_RAM_reg_0_31_30_35_DOE_UNCONNECTED[1:0]),
        .DOF(NLW_RAM_reg_0_31_30_35_DOF_UNCONNECTED[1:0]),
        .DOG(NLW_RAM_reg_0_31_30_35_DOG_UNCONNECTED[1:0]),
        .DOH(NLW_RAM_reg_0_31_30_35_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    RAM_reg_0_31_6_11
       (.ADDRA(Q),
        .ADDRB(Q),
        .ADDRC(Q),
        .ADDRD(Q),
        .ADDRE(Q),
        .ADDRF(Q),
        .ADDRG(Q),
        .ADDRH(\gcc0.gc0.count_d1_reg[4] ),
        .DIA(din[15:14]),
        .DIB(din[17:16]),
        .DIC(din[19:18]),
        .DID(din[21:20]),
        .DIE(din[23:22]),
        .DIF(din[25:24]),
        .DIG(din[27:26]),
        .DIH({1'b0,1'b0}),
        .DOA(p_0_out[15:14]),
        .DOB(p_0_out[17:16]),
        .DOC(p_0_out[19:18]),
        .DOD(p_0_out[21:20]),
        .DOE(p_0_out[23:22]),
        .DOF(p_0_out[25:24]),
        .DOG(p_0_out[27:26]),
        .DOH(NLW_RAM_reg_0_31_6_11_DOH_UNCONNECTED[1:0]),
        .WCLK(clk),
        .WE(E));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[0]),
        .Q(\goreg_dm.dout_i_reg[71] [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[10] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[10]),
        .Q(\goreg_dm.dout_i_reg[71] [10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[11] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[11]),
        .Q(\goreg_dm.dout_i_reg[71] [11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[12] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[12]),
        .Q(\goreg_dm.dout_i_reg[71] [12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[13] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[13]),
        .Q(\goreg_dm.dout_i_reg[71] [13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[14] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[14]),
        .Q(\goreg_dm.dout_i_reg[71] [14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[15] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[15]),
        .Q(\goreg_dm.dout_i_reg[71] [15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[16] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[16]),
        .Q(\goreg_dm.dout_i_reg[71] [16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[17] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[17]),
        .Q(\goreg_dm.dout_i_reg[71] [17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[18] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[18]),
        .Q(\goreg_dm.dout_i_reg[71] [18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[19] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[19]),
        .Q(\goreg_dm.dout_i_reg[71] [19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[1]),
        .Q(\goreg_dm.dout_i_reg[71] [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[20] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[20]),
        .Q(\goreg_dm.dout_i_reg[71] [20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[21] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[21]),
        .Q(\goreg_dm.dout_i_reg[71] [21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[22] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[22]),
        .Q(\goreg_dm.dout_i_reg[71] [22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[23] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[23]),
        .Q(\goreg_dm.dout_i_reg[71] [23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[24] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[24]),
        .Q(\goreg_dm.dout_i_reg[71] [24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[25] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[25]),
        .Q(\goreg_dm.dout_i_reg[71] [25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[26] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[26]),
        .Q(\goreg_dm.dout_i_reg[71] [26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[27] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[27]),
        .Q(\goreg_dm.dout_i_reg[71] [27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[28] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[28]),
        .Q(\goreg_dm.dout_i_reg[71] [28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[29] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[29]),
        .Q(\goreg_dm.dout_i_reg[71] [29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[2]),
        .Q(\goreg_dm.dout_i_reg[71] [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[30] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[30]),
        .Q(\goreg_dm.dout_i_reg[71] [30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[31] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[31]),
        .Q(\goreg_dm.dout_i_reg[71] [31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[32] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[32]),
        .Q(\goreg_dm.dout_i_reg[71] [32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[33] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[33]),
        .Q(\goreg_dm.dout_i_reg[71] [33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[34] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[34]),
        .Q(\goreg_dm.dout_i_reg[71] [34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[35] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[35]),
        .Q(\goreg_dm.dout_i_reg[71] [35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[36] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[36]),
        .Q(\goreg_dm.dout_i_reg[71] [36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[37] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[37]),
        .Q(\goreg_dm.dout_i_reg[71] [37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[38] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[38]),
        .Q(\goreg_dm.dout_i_reg[71] [38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[39] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[39]),
        .Q(\goreg_dm.dout_i_reg[71] [39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[3] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[3]),
        .Q(\goreg_dm.dout_i_reg[71] [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[40] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[40]),
        .Q(\goreg_dm.dout_i_reg[71] [40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[41] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[41]),
        .Q(\goreg_dm.dout_i_reg[71] [41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[42] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[42]),
        .Q(\goreg_dm.dout_i_reg[71] [42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[43] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[43]),
        .Q(\goreg_dm.dout_i_reg[71] [43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[44] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[44]),
        .Q(\goreg_dm.dout_i_reg[71] [44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[45] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[45]),
        .Q(\goreg_dm.dout_i_reg[71] [45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[46] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[46]),
        .Q(\goreg_dm.dout_i_reg[71] [46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[47] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[47]),
        .Q(\goreg_dm.dout_i_reg[71] [47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[48] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[48]),
        .Q(\goreg_dm.dout_i_reg[71] [48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[49] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[49]),
        .Q(\goreg_dm.dout_i_reg[71] [49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[4] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[4]),
        .Q(\goreg_dm.dout_i_reg[71] [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[50] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[50]),
        .Q(\goreg_dm.dout_i_reg[71] [50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[51] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[51]),
        .Q(\goreg_dm.dout_i_reg[71] [51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[52] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[52]),
        .Q(\goreg_dm.dout_i_reg[71] [52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[53] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[53]),
        .Q(\goreg_dm.dout_i_reg[71] [53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[54] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[54]),
        .Q(\goreg_dm.dout_i_reg[71] [54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[55] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[55]),
        .Q(\goreg_dm.dout_i_reg[71] [55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[56] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[56]),
        .Q(\goreg_dm.dout_i_reg[71] [56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[57] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[57]),
        .Q(\goreg_dm.dout_i_reg[71] [57]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[58] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[58]),
        .Q(\goreg_dm.dout_i_reg[71] [58]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[59] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[59]),
        .Q(\goreg_dm.dout_i_reg[71] [59]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[5]),
        .Q(\goreg_dm.dout_i_reg[71] [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[60] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[60]),
        .Q(\goreg_dm.dout_i_reg[71] [60]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[61] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[61]),
        .Q(\goreg_dm.dout_i_reg[71] [61]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[62] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[62]),
        .Q(\goreg_dm.dout_i_reg[71] [62]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[63] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[63]),
        .Q(\goreg_dm.dout_i_reg[71] [63]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[64] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[64]),
        .Q(\goreg_dm.dout_i_reg[71] [64]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[65] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[65]),
        .Q(\goreg_dm.dout_i_reg[71] [65]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[66] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[66]),
        .Q(\goreg_dm.dout_i_reg[71] [66]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[67] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[67]),
        .Q(\goreg_dm.dout_i_reg[71] [67]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[68] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[68]),
        .Q(\goreg_dm.dout_i_reg[71] [68]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[69] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[69]),
        .Q(\goreg_dm.dout_i_reg[71] [69]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[6]),
        .Q(\goreg_dm.dout_i_reg[71] [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[70] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[70]),
        .Q(\goreg_dm.dout_i_reg[71] [70]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[71] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[71]),
        .Q(\goreg_dm.dout_i_reg[71] [71]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[7]),
        .Q(\goreg_dm.dout_i_reg[71] [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[8] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[8]),
        .Q(\goreg_dm.dout_i_reg[71] [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[9] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .D(p_0_out[9]),
        .Q(\goreg_dm.dout_i_reg[71] [9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_ramfifo
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [71:0]din;
  output [71:0]dout;

  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gl0.rd_n_3 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_4 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_5 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_6 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_7 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_0 ;
  wire \gntv_or_sync_fifo.gl0.wr_n_9 ;
  wire \gwss.gpf.wrpf/p_1_out ;
  wire [4:0]p_0_out_0;
  wire [4:0]p_11_out;
  wire [4:0]p_12_out;
  wire p_17_out;
  wire p_2_out;
  wire p_5_out;
  wire p_7_out;
  wire prog_full;
  wire ram_rd_en_i;
  wire rd_en;
  wire [4:0]rd_pntr_plus1;
  wire srst;
  wire srst_full_ff_i;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.E(ram_rd_en_i),
        .Q(p_0_out_0),
        .S({\gntv_or_sync_fifo.gl0.rd_n_3 ,\gntv_or_sync_fifo.gl0.rd_n_4 ,\gntv_or_sync_fifo.gl0.rd_n_5 ,\gntv_or_sync_fifo.gl0.rd_n_6 ,\gntv_or_sync_fifo.gl0.rd_n_7 }),
        .clk(clk),
        .empty(empty),
        .\gc0.count_d1_reg[4] (rd_pntr_plus1),
        .\gc0.count_reg[0] (p_7_out),
        .\gcc0.gc0.count_reg[4] (p_12_out),
        .\goreg_dm.dout_i_reg[71] (p_5_out),
        .out(p_2_out),
        .p_1_out(\gwss.gpf.wrpf/p_1_out ),
        .ram_full_fb_i_reg(\gntv_or_sync_fifo.gl0.wr_n_9 ),
        .ram_full_fb_i_reg_0(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .rd_en(rd_en),
        .srst_full_ff_i(srst_full_ff_i),
        .valid(valid),
        .wr_en(wr_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.E(p_17_out),
        .Q(p_12_out),
        .S({\gntv_or_sync_fifo.gl0.rd_n_3 ,\gntv_or_sync_fifo.gl0.rd_n_4 ,\gntv_or_sync_fifo.gl0.rd_n_5 ,\gntv_or_sync_fifo.gl0.rd_n_6 ,\gntv_or_sync_fifo.gl0.rd_n_7 }),
        .clk(clk),
        .full(full),
        .\gc0.count_d1_reg[4] (p_0_out_0),
        .\gc0.count_reg[4] (rd_pntr_plus1),
        .\gpr1.dout_i_reg[1] (p_11_out),
        .out(\gntv_or_sync_fifo.gl0.wr_n_0 ),
        .p_1_out(\gwss.gpf.wrpf/p_1_out ),
        .prog_full(prog_full),
        .ram_empty_fb_i_reg(p_7_out),
        .ram_empty_fb_i_reg_0(p_2_out),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gl0.wr_n_9 ),
        .srst_full_ff_i(srst_full_ff_i),
        .wr_en(wr_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_memory \gntv_or_sync_fifo.mem 
       (.E(p_17_out),
        .Q(p_0_out_0),
        .SR(srst_full_ff_i),
        .clk(clk),
        .din(din),
        .dout(dout),
        .\gcc0.gc0.count_d1_reg[4] (p_11_out),
        .\gpregsm1.curr_fwft_state_reg[0] (ram_rd_en_i),
        .\gpregsm1.curr_fwft_state_reg[1] (p_5_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_reset_blk_ramfifo rstblk
       (.SR(srst_full_ff_i),
        .clk(clk),
        .srst(srst),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_top
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [71:0]din;
  output [71:0]dout;

  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_ramfifo \grf.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "6" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "72" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "72" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynquplus" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "1" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "0" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "2" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x72" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "28" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "27" *) (* C_PROG_FULL_TYPE = "1" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "6" *) 
(* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "5" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "1" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "6" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_2" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2
   (almost_empty,
    almost_full,
    axi_ar_dbiterr,
    axi_ar_injectdbiterr,
    axi_ar_injectsbiterr,
    axi_ar_overflow,
    axi_ar_prog_empty,
    axi_ar_prog_full,
    axi_ar_sbiterr,
    axi_ar_underflow,
    axi_aw_dbiterr,
    axi_aw_injectdbiterr,
    axi_aw_injectsbiterr,
    axi_aw_overflow,
    axi_aw_prog_empty,
    axi_aw_prog_full,
    axi_aw_sbiterr,
    axi_aw_underflow,
    axi_b_dbiterr,
    axi_b_injectdbiterr,
    axi_b_injectsbiterr,
    axi_b_overflow,
    axi_b_prog_empty,
    axi_b_prog_full,
    axi_b_sbiterr,
    axi_b_underflow,
    axi_r_dbiterr,
    axi_r_injectdbiterr,
    axi_r_injectsbiterr,
    axi_r_overflow,
    axi_r_prog_empty,
    axi_r_prog_full,
    axi_r_sbiterr,
    axi_r_underflow,
    axi_w_dbiterr,
    axi_w_injectdbiterr,
    axi_w_injectsbiterr,
    axi_w_overflow,
    axi_w_prog_empty,
    axi_w_prog_full,
    axi_w_sbiterr,
    axi_w_underflow,
    axis_dbiterr,
    axis_injectdbiterr,
    axis_injectsbiterr,
    axis_overflow,
    axis_prog_empty,
    axis_prog_full,
    axis_sbiterr,
    axis_underflow,
    backup,
    backup_marker,
    clk,
    dbiterr,
    empty,
    full,
    injectdbiterr,
    injectsbiterr,
    int_clk,
    m_aclk,
    m_aclk_en,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bvalid,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rvalid,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wvalid,
    m_axis_tlast,
    m_axis_tready,
    m_axis_tvalid,
    overflow,
    prog_empty,
    prog_full,
    rd_clk,
    rd_en,
    rd_rst,
    rd_rst_busy,
    rst,
    s_aclk,
    s_aclk_en,
    s_aresetn,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_bready,
    s_axi_bvalid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wvalid,
    s_axis_tlast,
    s_axis_tready,
    s_axis_tvalid,
    sbiterr,
    sleep,
    srst,
    underflow,
    valid,
    wr_ack,
    wr_clk,
    wr_en,
    wr_rst,
    wr_rst_busy,
    axi_ar_data_count,
    axi_ar_prog_empty_thresh,
    axi_ar_prog_full_thresh,
    axi_ar_rd_data_count,
    axi_ar_wr_data_count,
    axi_aw_data_count,
    axi_aw_prog_empty_thresh,
    axi_aw_prog_full_thresh,
    axi_aw_rd_data_count,
    axi_aw_wr_data_count,
    axi_b_data_count,
    axi_b_prog_empty_thresh,
    axi_b_prog_full_thresh,
    axi_b_rd_data_count,
    axi_b_wr_data_count,
    axi_r_data_count,
    axi_r_prog_empty_thresh,
    axi_r_prog_full_thresh,
    axi_r_rd_data_count,
    axi_r_wr_data_count,
    axi_w_data_count,
    axi_w_prog_empty_thresh,
    axi_w_prog_full_thresh,
    axi_w_rd_data_count,
    axi_w_wr_data_count,
    axis_data_count,
    axis_prog_empty_thresh,
    axis_prog_full_thresh,
    axis_rd_data_count,
    axis_wr_data_count,
    data_count,
    din,
    dout,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arid,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awid,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_rdata,
    m_axi_rid,
    m_axi_rresp,
    m_axi_ruser,
    m_axi_wdata,
    m_axi_wid,
    m_axi_wstrb,
    m_axi_wuser,
    m_axis_tdata,
    m_axis_tdest,
    m_axis_tid,
    m_axis_tkeep,
    m_axis_tstrb,
    m_axis_tuser,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    rd_data_count,
    s_axi_araddr,
    s_axi_arburst,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_arsize,
    s_axi_aruser,
    s_axi_awaddr,
    s_axi_awburst,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awsize,
    s_axi_awuser,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_wdata,
    s_axi_wid,
    s_axi_wstrb,
    s_axi_wuser,
    s_axis_tdata,
    s_axis_tdest,
    s_axis_tid,
    s_axis_tkeep,
    s_axis_tstrb,
    s_axis_tuser,
    wr_data_count);
  output almost_empty;
  output almost_full;
  output axi_ar_dbiterr;
  input axi_ar_injectdbiterr;
  input axi_ar_injectsbiterr;
  output axi_ar_overflow;
  output axi_ar_prog_empty;
  output axi_ar_prog_full;
  output axi_ar_sbiterr;
  output axi_ar_underflow;
  output axi_aw_dbiterr;
  input axi_aw_injectdbiterr;
  input axi_aw_injectsbiterr;
  output axi_aw_overflow;
  output axi_aw_prog_empty;
  output axi_aw_prog_full;
  output axi_aw_sbiterr;
  output axi_aw_underflow;
  output axi_b_dbiterr;
  input axi_b_injectdbiterr;
  input axi_b_injectsbiterr;
  output axi_b_overflow;
  output axi_b_prog_empty;
  output axi_b_prog_full;
  output axi_b_sbiterr;
  output axi_b_underflow;
  output axi_r_dbiterr;
  input axi_r_injectdbiterr;
  input axi_r_injectsbiterr;
  output axi_r_overflow;
  output axi_r_prog_empty;
  output axi_r_prog_full;
  output axi_r_sbiterr;
  output axi_r_underflow;
  output axi_w_dbiterr;
  input axi_w_injectdbiterr;
  input axi_w_injectsbiterr;
  output axi_w_overflow;
  output axi_w_prog_empty;
  output axi_w_prog_full;
  output axi_w_sbiterr;
  output axi_w_underflow;
  output axis_dbiterr;
  input axis_injectdbiterr;
  input axis_injectsbiterr;
  output axis_overflow;
  output axis_prog_empty;
  output axis_prog_full;
  output axis_sbiterr;
  output axis_underflow;
  input backup;
  input backup_marker;
  input clk;
  output dbiterr;
  output empty;
  output full;
  input injectdbiterr;
  input injectsbiterr;
  input int_clk;
  input m_aclk;
  input m_aclk_en;
  input m_axi_arready;
  output m_axi_arvalid;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input m_axi_bvalid;
  input m_axi_rlast;
  output m_axi_rready;
  input m_axi_rvalid;
  output m_axi_wlast;
  input m_axi_wready;
  output m_axi_wvalid;
  output m_axis_tlast;
  input m_axis_tready;
  output m_axis_tvalid;
  output overflow;
  output prog_empty;
  output prog_full;
  input rd_clk;
  input rd_en;
  input rd_rst;
  output rd_rst_busy;
  input rst;
  input s_aclk;
  input s_aclk_en;
  input s_aresetn;
  output s_axi_arready;
  input s_axi_arvalid;
  output s_axi_awready;
  input s_axi_awvalid;
  input s_axi_bready;
  output s_axi_bvalid;
  output s_axi_rlast;
  input s_axi_rready;
  output s_axi_rvalid;
  input s_axi_wlast;
  output s_axi_wready;
  input s_axi_wvalid;
  input s_axis_tlast;
  output s_axis_tready;
  input s_axis_tvalid;
  output sbiterr;
  input sleep;
  input srst;
  output underflow;
  output valid;
  output wr_ack;
  input wr_clk;
  input wr_en;
  input wr_rst;
  output wr_rst_busy;
  output [4:0]axi_ar_data_count;
  input [3:0]axi_ar_prog_empty_thresh;
  input [3:0]axi_ar_prog_full_thresh;
  output [4:0]axi_ar_rd_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_aw_data_count;
  input [3:0]axi_aw_prog_empty_thresh;
  input [3:0]axi_aw_prog_full_thresh;
  output [4:0]axi_aw_rd_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_b_data_count;
  input [3:0]axi_b_prog_empty_thresh;
  input [3:0]axi_b_prog_full_thresh;
  output [4:0]axi_b_rd_data_count;
  output [4:0]axi_b_wr_data_count;
  output [10:0]axi_r_data_count;
  input [9:0]axi_r_prog_empty_thresh;
  input [9:0]axi_r_prog_full_thresh;
  output [10:0]axi_r_rd_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_w_data_count;
  input [9:0]axi_w_prog_empty_thresh;
  input [9:0]axi_w_prog_full_thresh;
  output [10:0]axi_w_rd_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axis_data_count;
  input [9:0]axis_prog_empty_thresh;
  input [9:0]axis_prog_full_thresh;
  output [10:0]axis_rd_data_count;
  output [10:0]axis_wr_data_count;
  output [5:0]data_count;
  input [71:0]din;
  output [71:0]dout;
  output [31:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [0:0]m_axi_arid;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [2:0]m_axi_arsize;
  output [0:0]m_axi_aruser;
  output [31:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [0:0]m_axi_awid;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [2:0]m_axi_awsize;
  output [0:0]m_axi_awuser;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input [63:0]m_axi_rdata;
  input [0:0]m_axi_rid;
  input [1:0]m_axi_rresp;
  input [0:0]m_axi_ruser;
  output [63:0]m_axi_wdata;
  output [0:0]m_axi_wid;
  output [7:0]m_axi_wstrb;
  output [0:0]m_axi_wuser;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tdest;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tkeep;
  output [0:0]m_axis_tstrb;
  output [3:0]m_axis_tuser;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  output [5:0]rd_data_count;
  input [31:0]s_axi_araddr;
  input [1:0]s_axi_arburst;
  input [3:0]s_axi_arcache;
  input [0:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [2:0]s_axi_arsize;
  input [0:0]s_axi_aruser;
  input [31:0]s_axi_awaddr;
  input [1:0]s_axi_awburst;
  input [3:0]s_axi_awcache;
  input [0:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [2:0]s_axi_awsize;
  input [0:0]s_axi_awuser;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output [63:0]s_axi_rdata;
  output [0:0]s_axi_rid;
  output [1:0]s_axi_rresp;
  output [0:0]s_axi_ruser;
  input [63:0]s_axi_wdata;
  input [0:0]s_axi_wid;
  input [7:0]s_axi_wstrb;
  input [0:0]s_axi_wuser;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tdest;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tkeep;
  input [0:0]s_axis_tstrb;
  input [3:0]s_axis_tuser;
  output [5:0]wr_data_count;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = wr_rst_busy;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2_synth inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_synth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_v13_2_2_synth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    srst,
    valid,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  input srst;
  output valid;
  input wr_en;
  output wr_rst_busy;
  input [71:0]din;
  output [71:0]dout;

  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire srst;
  wire valid;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_fifo_generator_top \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .srst(srst),
        .valid(valid),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_memory
   (clk,
    E,
    Q,
    SR,
    din,
    dout,
    \gcc0.gc0.count_d1_reg[4] ,
    \gpregsm1.curr_fwft_state_reg[0] ,
    \gpregsm1.curr_fwft_state_reg[1] );
  input clk;
  input [0:0]E;
  input [4:0]Q;
  input [0:0]SR;
  input [71:0]din;
  output [71:0]dout;
  input [4:0]\gcc0.gc0.count_d1_reg[4] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[0] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;

  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire clk;
  wire [71:0]din;
  wire [71:0]dout;
  wire [71:0]dout_i;
  wire [4:0]\gcc0.gc0.count_d1_reg[4] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[0] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_dmem \gdm.dm_gen.dm 
       (.E(E),
        .Q(Q),
        .SR(SR),
        .clk(clk),
        .din(din),
        .\gcc0.gc0.count_d1_reg[4] (\gcc0.gc0.count_d1_reg[4] ),
        .\goreg_dm.dout_i_reg[71] (dout_i),
        .\gpregsm1.curr_fwft_state_reg[0] (\gpregsm1.curr_fwft_state_reg[0] ));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[0]),
        .Q(dout[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[10] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[10]),
        .Q(dout[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[11] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[11]),
        .Q(dout[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[12] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[12]),
        .Q(dout[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[13] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[13]),
        .Q(dout[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[14] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[14]),
        .Q(dout[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[15] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[15]),
        .Q(dout[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[16] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[16]),
        .Q(dout[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[17] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[17]),
        .Q(dout[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[18] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[18]),
        .Q(dout[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[19] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[19]),
        .Q(dout[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[1]),
        .Q(dout[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[20] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[20]),
        .Q(dout[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[21] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[21]),
        .Q(dout[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[22] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[22]),
        .Q(dout[22]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[23] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[23]),
        .Q(dout[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[24] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[24]),
        .Q(dout[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[25] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[25]),
        .Q(dout[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[26] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[26]),
        .Q(dout[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[27] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[27]),
        .Q(dout[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[28] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[28]),
        .Q(dout[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[29] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[29]),
        .Q(dout[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[2]),
        .Q(dout[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[30] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[30]),
        .Q(dout[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[31] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[31]),
        .Q(dout[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[32] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[32]),
        .Q(dout[32]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[33] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[33]),
        .Q(dout[33]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[34] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[34]),
        .Q(dout[34]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[35] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[35]),
        .Q(dout[35]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[36] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[36]),
        .Q(dout[36]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[37] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[37]),
        .Q(dout[37]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[38] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[38]),
        .Q(dout[38]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[39] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[39]),
        .Q(dout[39]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[3] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[3]),
        .Q(dout[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[40] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[40]),
        .Q(dout[40]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[41] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[41]),
        .Q(dout[41]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[42] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[42]),
        .Q(dout[42]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[43] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[43]),
        .Q(dout[43]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[44] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[44]),
        .Q(dout[44]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[45] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[45]),
        .Q(dout[45]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[46] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[46]),
        .Q(dout[46]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[47] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[47]),
        .Q(dout[47]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[48] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[48]),
        .Q(dout[48]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[49] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[49]),
        .Q(dout[49]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[4] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[4]),
        .Q(dout[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[50] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[50]),
        .Q(dout[50]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[51] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[51]),
        .Q(dout[51]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[52] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[52]),
        .Q(dout[52]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[53] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[53]),
        .Q(dout[53]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[54] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[54]),
        .Q(dout[54]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[55] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[55]),
        .Q(dout[55]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[56] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[56]),
        .Q(dout[56]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[57] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[57]),
        .Q(dout[57]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[58] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[58]),
        .Q(dout[58]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[59] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[59]),
        .Q(dout[59]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[5]),
        .Q(dout[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[60] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[60]),
        .Q(dout[60]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[61] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[61]),
        .Q(dout[61]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[62] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[62]),
        .Q(dout[62]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[63] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[63]),
        .Q(dout[63]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[64] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[64]),
        .Q(dout[64]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[65] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[65]),
        .Q(dout[65]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[66] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[66]),
        .Q(dout[66]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[67] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[67]),
        .Q(dout[67]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[68] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[68]),
        .Q(dout[68]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[69] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[69]),
        .Q(dout[69]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[6]),
        .Q(dout[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[70] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[70]),
        .Q(dout[70]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[71] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[71]),
        .Q(dout[71]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[7]),
        .Q(dout[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[8] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[8]),
        .Q(dout[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[9] 
       (.C(clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .D(dout_i[9]),
        .Q(dout[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_bin_cntr
   (clk,
    srst_full_ff_i,
    E,
    Q,
    S,
    \gc0.count_d1_reg[4]_0 ,
    \gcc0.gc0.count_reg[4] );
  input clk;
  input srst_full_ff_i;
  input [0:0]E;
  output [4:0]Q;
  output [4:0]S;
  output [4:0]\gc0.count_d1_reg[4]_0 ;
  input [4:0]\gcc0.gc0.count_reg[4] ;

  wire [0:0]E;
  wire [4:0]Q;
  wire [4:0]S;
  wire clk;
  wire [4:0]\gc0.count_d1_reg[4]_0 ;
  wire [4:0]\gcc0.gc0.count_reg[4] ;
  wire [4:0]plusOp__0;
  wire srst_full_ff_i;

  LUT1 #(
    .INIT(2'h1)) 
    \gc0.count[0]_i_1 
       (.I0(\gc0.count_d1_reg[4]_0 [0]),
        .O(plusOp__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gc0.count[1]_i_1 
       (.I0(\gc0.count_d1_reg[4]_0 [0]),
        .I1(\gc0.count_d1_reg[4]_0 [1]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc0.count[2]_i_1 
       (.I0(\gc0.count_d1_reg[4]_0 [0]),
        .I1(\gc0.count_d1_reg[4]_0 [1]),
        .I2(\gc0.count_d1_reg[4]_0 [2]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc0.count[3]_i_1 
       (.I0(\gc0.count_d1_reg[4]_0 [1]),
        .I1(\gc0.count_d1_reg[4]_0 [0]),
        .I2(\gc0.count_d1_reg[4]_0 [2]),
        .I3(\gc0.count_d1_reg[4]_0 [3]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc0.count[4]_i_1 
       (.I0(\gc0.count_d1_reg[4]_0 [2]),
        .I1(\gc0.count_d1_reg[4]_0 [0]),
        .I2(\gc0.count_d1_reg[4]_0 [1]),
        .I3(\gc0.count_d1_reg[4]_0 [3]),
        .I4(\gc0.count_d1_reg[4]_0 [4]),
        .O(plusOp__0[4]));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_d1_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_d1_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_d1_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_d1_reg[4]_0 [3]),
        .Q(Q[3]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\gc0.count_d1_reg[4]_0 [4]),
        .Q(Q[4]),
        .R(srst_full_ff_i));
  FDSE #(
    .INIT(1'b1)) 
    \gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[0]),
        .Q(\gc0.count_d1_reg[4]_0 [0]),
        .S(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[1]),
        .Q(\gc0.count_d1_reg[4]_0 [1]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[2]),
        .Q(\gc0.count_d1_reg[4]_0 [2]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[3]),
        .Q(\gc0.count_d1_reg[4]_0 [3]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp__0[4]),
        .Q(\gc0.count_d1_reg[4]_0 [4]),
        .R(srst_full_ff_i));
  LUT2 #(
    .INIT(4'h9)) 
    plusOp_carry_i_2
       (.I0(Q[4]),
        .I1(\gcc0.gc0.count_reg[4] [4]),
        .O(S[4]));
  LUT2 #(
    .INIT(4'h9)) 
    plusOp_carry_i_3
       (.I0(Q[3]),
        .I1(\gcc0.gc0.count_reg[4] [3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    plusOp_carry_i_4
       (.I0(Q[2]),
        .I1(\gcc0.gc0.count_reg[4] [2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    plusOp_carry_i_5
       (.I0(Q[1]),
        .I1(\gcc0.gc0.count_reg[4] [1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    plusOp_carry_i_6
       (.I0(Q[0]),
        .I1(\gcc0.gc0.count_reg[4] [0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_fwft
   (clk,
    empty,
    out,
    p_1_out,
    ram_full_fb_i_reg,
    rd_en,
    srst_full_ff_i,
    valid,
    wr_en,
    E,
    \gc0.count_reg[0] ,
    \goreg_dm.dout_i_reg[71] );
  input clk;
  output empty;
  input out;
  output p_1_out;
  input ram_full_fb_i_reg;
  input rd_en;
  input srst_full_ff_i;
  output valid;
  input wr_en;
  output [0:0]E;
  output [0:0]\gc0.count_reg[0] ;
  output [0:0]\goreg_dm.dout_i_reg[71] ;

  wire [0:0]E;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0__1;
  wire clk;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i_reg0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0__1;
  wire [0:0]\gc0.count_reg[0] ;
  wire [0:0]\goreg_dm.dout_i_reg[71] ;
  wire [1:0]next_fwft_state;
  wire out;
  wire p_1_out;
  wire ram_full_fb_i_reg;
  wire rd_en;
  wire srst_full_ff_i;
  (* DONT_TOUCH *) wire user_valid;
  wire wr_en;

  assign empty = empty_fwft_i;
  assign valid = user_valid;
  LUT5 #(
    .INIT(32'hFFCB8000)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(out),
        .I4(aempty_fwft_fb_i),
        .O(aempty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_fb_i),
        .S(srst_full_ff_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(aempty_fwft_i0__1),
        .Q(aempty_fwft_i),
        .S(srst_full_ff_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_i),
        .O(empty_fwft_i0__1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_fb_i),
        .S(srst_full_ff_i));
  LUT4 #(
    .INIT(16'hF320)) 
    empty_fwft_fb_o_i_i_1
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .I3(empty_fwft_fb_o_i),
        .O(empty_fwft_fb_o_i_reg0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i_reg0),
        .Q(empty_fwft_fb_o_i),
        .S(srst_full_ff_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(empty_fwft_i0__1),
        .Q(empty_fwft_i),
        .S(srst_full_ff_i));
  LUT4 #(
    .INIT(16'h4555)) 
    \gc0.count_d1[4]_i_1 
       (.I0(out),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(curr_fwft_state[0]),
        .O(\gc0.count_reg[0] ));
  LUT3 #(
    .INIT(8'hA2)) 
    \goreg_dm.dout_i[71]_i_2 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(\goreg_dm.dout_i_reg[71] ));
  LUT4 #(
    .INIT(16'h00F7)) 
    \gpr1.dout_i[71]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .I3(out),
        .O(E));
  LUT3 #(
    .INIT(8'hBA)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]),
        .R(srst_full_ff_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]),
        .R(srst_full_ff_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(clk),
        .CE(1'b1),
        .D(next_fwft_state[0]),
        .Q(user_valid),
        .R(srst_full_ff_i));
  LUT6 #(
    .INIT(64'h4444444400004000)) 
    plusOp_carry_i_1
       (.I0(ram_full_fb_i_reg),
        .I1(wr_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(rd_en),
        .I5(out),
        .O(p_1_out));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_logic
   (clk,
    empty,
    out,
    p_1_out,
    ram_full_fb_i_reg,
    ram_full_fb_i_reg_0,
    rd_en,
    srst_full_ff_i,
    valid,
    wr_en,
    E,
    Q,
    S,
    \gc0.count_d1_reg[4] ,
    \gc0.count_reg[0] ,
    \gcc0.gc0.count_reg[4] ,
    \goreg_dm.dout_i_reg[71] );
  input clk;
  output empty;
  output out;
  output p_1_out;
  input ram_full_fb_i_reg;
  input ram_full_fb_i_reg_0;
  input rd_en;
  input srst_full_ff_i;
  output valid;
  input wr_en;
  output [0:0]E;
  output [4:0]Q;
  output [4:0]S;
  output [4:0]\gc0.count_d1_reg[4] ;
  output [0:0]\gc0.count_reg[0] ;
  input [4:0]\gcc0.gc0.count_reg[4] ;
  output [0:0]\goreg_dm.dout_i_reg[71] ;

  wire [0:0]E;
  wire [4:0]Q;
  wire [4:0]S;
  wire clk;
  wire empty;
  wire [4:0]\gc0.count_d1_reg[4] ;
  wire [0:0]\gc0.count_reg[0] ;
  wire [4:0]\gcc0.gc0.count_reg[4] ;
  wire [0:0]\goreg_dm.dout_i_reg[71] ;
  wire out;
  wire p_1_out;
  wire ram_full_fb_i_reg;
  wire ram_full_fb_i_reg_0;
  wire rd_en;
  wire srst_full_ff_i;
  wire valid;
  wire wr_en;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_fwft \gr1.gr1_int.rfwft 
       (.E(E),
        .clk(clk),
        .empty(empty),
        .\gc0.count_reg[0] (\gc0.count_reg[0] ),
        .\goreg_dm.dout_i_reg[71] (\goreg_dm.dout_i_reg[71] ),
        .out(out),
        .p_1_out(p_1_out),
        .ram_full_fb_i_reg(ram_full_fb_i_reg_0),
        .rd_en(rd_en),
        .srst_full_ff_i(srst_full_ff_i),
        .valid(valid),
        .wr_en(wr_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_status_flags_ss \grss.rsts 
       (.clk(clk),
        .out(out),
        .ram_full_fb_i_reg(ram_full_fb_i_reg),
        .srst_full_ff_i(srst_full_ff_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_bin_cntr rpntr
       (.E(\gc0.count_reg[0] ),
        .Q(Q),
        .S(S),
        .clk(clk),
        .\gc0.count_d1_reg[4]_0 (\gc0.count_d1_reg[4] ),
        .\gcc0.gc0.count_reg[4] (\gcc0.gc0.count_reg[4] ),
        .srst_full_ff_i(srst_full_ff_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_ss" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_rd_status_flags_ss
   (clk,
    out,
    ram_full_fb_i_reg,
    srst_full_ff_i);
  input clk;
  output out;
  input ram_full_fb_i_reg;
  input srst_full_ff_i;

  wire clk;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_full_fb_i_reg;
  wire srst_full_ff_i;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg),
        .Q(ram_empty_fb_i),
        .S(srst_full_ff_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDSE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_fb_i_reg),
        .Q(ram_empty_i),
        .S(srst_full_ff_i));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_reset_blk_ramfifo
   (clk,
    srst,
    wr_rst_busy,
    SR);
  input clk;
  input srst;
  output wr_rst_busy;
  output [0:0]SR;

  wire [0:0]SR;
  wire clk;
  wire srst;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_bram_fifo_rstlogic \g8serrst.usrst_inst 
       (.SR(SR),
        .clk(clk),
        .srst(srst),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_bin_cntr
   (clk,
    out,
    ram_empty_fb_i_reg_0,
    ram_empty_i_reg,
    ram_full_comb,
    srst_full_ff_i,
    wr_en,
    E,
    Q,
    \gc0.count_d1_reg[4] ,
    \gc0.count_reg[4] ,
    \gpr1.dout_i_reg[1] ,
    ram_empty_fb_i_reg);
  input clk;
  input out;
  input ram_empty_fb_i_reg_0;
  output ram_empty_i_reg;
  output ram_full_comb;
  input srst_full_ff_i;
  input wr_en;
  input [0:0]E;
  output [4:0]Q;
  input [4:0]\gc0.count_d1_reg[4] ;
  input [4:0]\gc0.count_reg[4] ;
  output [4:0]\gpr1.dout_i_reg[1] ;
  input [0:0]ram_empty_fb_i_reg;

  wire [0:0]E;
  wire [4:0]Q;
  wire clk;
  wire [4:0]\gc0.count_d1_reg[4] ;
  wire [4:0]\gc0.count_reg[4] ;
  wire \gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1 ;
  wire [4:0]\gpr1.dout_i_reg[1] ;
  wire \gwss.wsts/comp0 ;
  wire \gwss.wsts/comp1 ;
  wire out;
  wire [4:0]plusOp__1;
  wire ram_empty_fb_i_i_3_n_0;
  wire [0:0]ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_i_reg;
  wire ram_full_comb;
  wire ram_full_fb_i_i_4_n_0;
  wire ram_full_fb_i_i_5_n_0;
  wire srst_full_ff_i;
  wire wr_en;

  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gcc0.gc0.count[0]_i_1 
       (.I0(Q[0]),
        .O(plusOp__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gcc0.gc0.count[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(plusOp__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gcc0.gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(plusOp__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gcc0.gc0.count[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(plusOp__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gcc0.gc0.count[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(plusOp__1[4]));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[0] 
       (.C(clk),
        .CE(E),
        .D(Q[0]),
        .Q(\gpr1.dout_i_reg[1] [0]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[1] 
       (.C(clk),
        .CE(E),
        .D(Q[1]),
        .Q(\gpr1.dout_i_reg[1] [1]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[2] 
       (.C(clk),
        .CE(E),
        .D(Q[2]),
        .Q(\gpr1.dout_i_reg[1] [2]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[3] 
       (.C(clk),
        .CE(E),
        .D(Q[3]),
        .Q(\gpr1.dout_i_reg[1] [3]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_d1_reg[4] 
       (.C(clk),
        .CE(E),
        .D(Q[4]),
        .Q(\gpr1.dout_i_reg[1] [4]),
        .R(srst_full_ff_i));
  FDSE #(
    .INIT(1'b1)) 
    \gcc0.gc0.count_reg[0] 
       (.C(clk),
        .CE(E),
        .D(plusOp__1[0]),
        .Q(Q[0]),
        .S(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[1] 
       (.C(clk),
        .CE(E),
        .D(plusOp__1[1]),
        .Q(Q[1]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[2] 
       (.C(clk),
        .CE(E),
        .D(plusOp__1[2]),
        .Q(Q[2]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[3] 
       (.C(clk),
        .CE(E),
        .D(plusOp__1[3]),
        .Q(Q[3]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gcc0.gc0.count_reg[4] 
       (.C(clk),
        .CE(E),
        .D(plusOp__1[4]),
        .Q(Q[4]),
        .R(srst_full_ff_i));
  LUT6 #(
    .INIT(64'hFF0FFFFF88008888)) 
    ram_empty_fb_i_i_1
       (.I0(ram_empty_fb_i_reg),
        .I1(\gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1 ),
        .I2(\gwss.wsts/comp0 ),
        .I3(out),
        .I4(wr_en),
        .I5(ram_empty_fb_i_reg_0),
        .O(ram_empty_i_reg));
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_empty_fb_i_i_2
       (.I0(\gpr1.dout_i_reg[1] [1]),
        .I1(\gc0.count_reg[4] [1]),
        .I2(\gpr1.dout_i_reg[1] [0]),
        .I3(\gc0.count_reg[4] [0]),
        .I4(ram_empty_fb_i_i_3_n_0),
        .O(\gntv_or_sync_fifo.gl0.rd/grss.rsts/comp1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_fb_i_i_3
       (.I0(\gpr1.dout_i_reg[1] [3]),
        .I1(\gc0.count_reg[4] [3]),
        .I2(\gpr1.dout_i_reg[1] [2]),
        .I3(\gc0.count_reg[4] [2]),
        .I4(\gc0.count_reg[4] [4]),
        .I5(\gpr1.dout_i_reg[1] [4]),
        .O(ram_empty_fb_i_i_3_n_0));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    ram_full_fb_i_i_1
       (.I0(wr_en),
        .I1(\gwss.wsts/comp1 ),
        .I2(\gwss.wsts/comp0 ),
        .I3(ram_empty_fb_i_reg),
        .I4(out),
        .O(ram_full_comb));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_full_fb_i_i_2
       (.I0(Q[1]),
        .I1(\gc0.count_d1_reg[4] [1]),
        .I2(Q[0]),
        .I3(\gc0.count_d1_reg[4] [0]),
        .I4(ram_full_fb_i_i_4_n_0),
        .O(\gwss.wsts/comp1 ));
  LUT5 #(
    .INIT(32'h90090000)) 
    ram_full_fb_i_i_3
       (.I0(\gpr1.dout_i_reg[1] [1]),
        .I1(\gc0.count_d1_reg[4] [1]),
        .I2(\gpr1.dout_i_reg[1] [0]),
        .I3(\gc0.count_d1_reg[4] [0]),
        .I4(ram_full_fb_i_i_5_n_0),
        .O(\gwss.wsts/comp0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_fb_i_i_4
       (.I0(Q[3]),
        .I1(\gc0.count_d1_reg[4] [3]),
        .I2(Q[2]),
        .I3(\gc0.count_d1_reg[4] [2]),
        .I4(\gc0.count_d1_reg[4] [4]),
        .I5(Q[4]),
        .O(ram_full_fb_i_i_4_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_fb_i_i_5
       (.I0(\gpr1.dout_i_reg[1] [3]),
        .I1(\gc0.count_d1_reg[4] [3]),
        .I2(\gpr1.dout_i_reg[1] [2]),
        .I3(\gc0.count_d1_reg[4] [2]),
        .I4(\gc0.count_d1_reg[4] [4]),
        .I5(\gpr1.dout_i_reg[1] [4]),
        .O(ram_full_fb_i_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_logic
   (clk,
    full,
    out,
    p_1_out,
    prog_full,
    ram_empty_fb_i_reg_0,
    ram_empty_i_reg,
    srst_full_ff_i,
    wr_en,
    E,
    Q,
    S,
    \gc0.count_d1_reg[4] ,
    \gc0.count_reg[4] ,
    \gpr1.dout_i_reg[1] ,
    ram_empty_fb_i_reg);
  input clk;
  output full;
  output out;
  input p_1_out;
  output prog_full;
  input ram_empty_fb_i_reg_0;
  output ram_empty_i_reg;
  input srst_full_ff_i;
  input wr_en;
  output [0:0]E;
  output [4:0]Q;
  input [4:0]S;
  input [4:0]\gc0.count_d1_reg[4] ;
  input [4:0]\gc0.count_reg[4] ;
  output [4:0]\gpr1.dout_i_reg[1] ;
  input [0:0]ram_empty_fb_i_reg;

  wire [0:0]E;
  wire [4:0]Q;
  wire [4:0]S;
  wire clk;
  wire full;
  wire [4:0]\gc0.count_d1_reg[4] ;
  wire [4:0]\gc0.count_reg[4] ;
  wire [4:0]\gpr1.dout_i_reg[1] ;
  wire out;
  wire p_1_out;
  wire prog_full;
  wire [0:0]ram_empty_fb_i_reg;
  wire ram_empty_fb_i_reg_0;
  wire ram_empty_i_reg;
  wire ram_full_comb;
  wire srst_full_ff_i;
  wire wr_en;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_pf_ss \gwss.gpf.wrpf 
       (.E(E),
        .Q(Q[3:0]),
        .S(S),
        .clk(clk),
        .p_1_out(p_1_out),
        .prog_full(prog_full),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .srst_full_ff_i(srst_full_ff_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_status_flags_ss \gwss.wsts 
       (.E(E),
        .clk(clk),
        .full(full),
        .out(out),
        .ram_full_comb(ram_full_comb),
        .srst_full_ff_i(srst_full_ff_i),
        .wr_en(wr_en));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_bin_cntr wpntr
       (.E(E),
        .Q(Q),
        .clk(clk),
        .\gc0.count_d1_reg[4] (\gc0.count_d1_reg[4] ),
        .\gc0.count_reg[4] (\gc0.count_reg[4] ),
        .\gpr1.dout_i_reg[1] (\gpr1.dout_i_reg[1] ),
        .out(out),
        .ram_empty_fb_i_reg(ram_empty_fb_i_reg),
        .ram_empty_fb_i_reg_0(ram_empty_fb_i_reg_0),
        .ram_empty_i_reg(ram_empty_i_reg),
        .ram_full_comb(ram_full_comb),
        .srst_full_ff_i(srst_full_ff_i),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "wr_pf_ss" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_pf_ss
   (clk,
    p_1_out,
    prog_full,
    srst_full_ff_i,
    E,
    Q,
    S,
    ram_empty_fb_i_reg);
  input clk;
  input p_1_out;
  output prog_full;
  input srst_full_ff_i;
  input [0:0]E;
  input [3:0]Q;
  input [4:0]S;
  input [0:0]ram_empty_fb_i_reg;

  wire [0:0]E;
  wire [3:0]Q;
  wire [4:0]S;
  wire clk;
  wire [5:1]diff_pntr_pad;
  wire eqOp__3;
  wire \gpfs.prog_full_i_i_1_n_0 ;
  wire p_1_out;
  wire [5:1]plusOp;
  wire plusOp_carry_n_5;
  wire plusOp_carry_n_6;
  wire plusOp_carry_n_7;
  wire prog_full;
  wire [0:0]ram_empty_fb_i_reg;
  wire ram_rd_en_i;
  wire ram_wr_en_i;
  wire srst_full_ff_i;
  wire [7:3]NLW_plusOp_carry_CO_UNCONNECTED;
  wire [7:5]NLW_plusOp_carry_O_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    \gdiff.gcry_1_sym.diff_pntr_pad_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(diff_pntr_pad[1]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.gcry_1_sym.diff_pntr_pad_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(diff_pntr_pad[2]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.gcry_1_sym.diff_pntr_pad_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(diff_pntr_pad[3]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.gcry_1_sym.diff_pntr_pad_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(plusOp[4]),
        .Q(diff_pntr_pad[4]),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \gdiff.gcry_1_sym.diff_pntr_pad_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(plusOp[5]),
        .Q(diff_pntr_pad[5]),
        .R(srst_full_ff_i));
  LUT4 #(
    .INIT(16'hDF40)) 
    \gpfs.prog_full_i_i_1 
       (.I0(ram_rd_en_i),
        .I1(ram_wr_en_i),
        .I2(eqOp__3),
        .I3(prog_full),
        .O(\gpfs.prog_full_i_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \gpfs.prog_full_i_i_2 
       (.I0(diff_pntr_pad[3]),
        .I1(diff_pntr_pad[1]),
        .I2(diff_pntr_pad[2]),
        .I3(diff_pntr_pad[5]),
        .I4(diff_pntr_pad[4]),
        .O(eqOp__3));
  FDRE #(
    .INIT(1'b0)) 
    \gpfs.prog_full_i_reg 
       (.C(clk),
        .CE(1'b1),
        .D(\gpfs.prog_full_i_i_1_n_0 ),
        .Q(prog_full),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \greg.ram_rd_en_i_reg 
       (.C(clk),
        .CE(1'b1),
        .D(ram_empty_fb_i_reg),
        .Q(ram_rd_en_i),
        .R(srst_full_ff_i));
  FDRE #(
    .INIT(1'b0)) 
    \greg.ram_wr_en_i_reg 
       (.C(clk),
        .CE(1'b1),
        .D(E),
        .Q(ram_wr_en_i),
        .R(srst_full_ff_i));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    plusOp_carry
       (.CI(p_1_out),
        .CI_TOP(1'b0),
        .CO({NLW_plusOp_carry_CO_UNCONNECTED[7:3],plusOp_carry_n_5,plusOp_carry_n_6,plusOp_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,Q}),
        .O({NLW_plusOp_carry_O_UNCONNECTED[7:5],plusOp}),
        .S({1'b0,1'b0,1'b0,S}));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_ss" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_72b_fwft_32depth_wr_status_flags_ss
   (clk,
    full,
    out,
    ram_full_comb,
    srst_full_ff_i,
    wr_en,
    E);
  input clk;
  output full;
  output out;
  input ram_full_comb;
  input srst_full_ff_i;
  input wr_en;
  output [0:0]E;

  wire [0:0]E;
  wire clk;
  (* DONT_TOUCH *) wire ram_afull_fb;
  (* DONT_TOUCH *) wire ram_afull_i;
  wire ram_full_comb;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire srst_full_ff_i;
  wire wr_en;

  assign full = ram_full_i;
  assign out = ram_full_fb_i;
  LUT2 #(
    .INIT(4'h2)) 
    \gcc0.gc0.count_d1[4]_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(ram_afull_i));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(ram_afull_fb));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_fb_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_fb_i),
        .R(srst_full_ff_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ram_full_i_reg
       (.C(clk),
        .CE(1'b1),
        .D(ram_full_comb),
        .Q(ram_full_i),
        .R(srst_full_ff_i));
endmodule

(* CHECK_LICENSE_TYPE = "fifo_generator_7b_fwft_512depth,fifo_generator_v13_2_2,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 core_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME core_clk, FREQ_HZ 100000000, PHASE 0.000" *) input clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output prog_full;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  output rd_rst_busy;
  input srst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  output wr_rst_busy;
  input [6:0]din;
  output [6:0]dout;

  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_overflow_UNCONNECTED;
  wire NLW_U0_prog_empty_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_underflow_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "1" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "7" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "7" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "400" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "399" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(clk),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_U0_overflow_UNCONNECTED),
        .prog_empty(NLW_U0_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(prog_full),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(1'b0),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(rd_rst_busy),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(NLW_U0_underflow_UNCONNECTED),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(1'b0),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "builtin_extdepth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_extdepth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [6:0]din;
  output [6:0]dout;

  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  (* async_reg = "true" *) (* msgon = "true" *) wire [1:0]srst_qr;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_prim \gonep.inst_prim 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[1].inst_extdi_0 
       (.I0(1'b1),
        .O(srst_qr[1]));
  LUT1 #(
    .INIT(2'h2)) 
    \rst_val_sym.gextw_sym[1].inst_extdi_1 
       (.I0(1'b1),
        .O(srst_qr[0]));
endmodule

(* ORIG_REF_NAME = "builtin_prim" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_prim
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [6:0]din;
  output [6:0]dout;

  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire \gf18e2_inst.sngfifo18e2_n_0 ;
  wire \gf18e2_inst.sngfifo18e2_n_1 ;
  wire \gf18e2_inst.sngfifo18e2_n_10 ;
  wire \gf18e2_inst.sngfifo18e2_n_100 ;
  wire \gf18e2_inst.sngfifo18e2_n_101 ;
  wire \gf18e2_inst.sngfifo18e2_n_102 ;
  wire \gf18e2_inst.sngfifo18e2_n_103 ;
  wire \gf18e2_inst.sngfifo18e2_n_104 ;
  wire \gf18e2_inst.sngfifo18e2_n_105 ;
  wire \gf18e2_inst.sngfifo18e2_n_106 ;
  wire \gf18e2_inst.sngfifo18e2_n_107 ;
  wire \gf18e2_inst.sngfifo18e2_n_11 ;
  wire \gf18e2_inst.sngfifo18e2_n_12 ;
  wire \gf18e2_inst.sngfifo18e2_n_13 ;
  wire \gf18e2_inst.sngfifo18e2_n_14 ;
  wire \gf18e2_inst.sngfifo18e2_n_15 ;
  wire \gf18e2_inst.sngfifo18e2_n_16 ;
  wire \gf18e2_inst.sngfifo18e2_n_17 ;
  wire \gf18e2_inst.sngfifo18e2_n_18 ;
  wire \gf18e2_inst.sngfifo18e2_n_19 ;
  wire \gf18e2_inst.sngfifo18e2_n_20 ;
  wire \gf18e2_inst.sngfifo18e2_n_21 ;
  wire \gf18e2_inst.sngfifo18e2_n_22 ;
  wire \gf18e2_inst.sngfifo18e2_n_23 ;
  wire \gf18e2_inst.sngfifo18e2_n_24 ;
  wire \gf18e2_inst.sngfifo18e2_n_25 ;
  wire \gf18e2_inst.sngfifo18e2_n_26 ;
  wire \gf18e2_inst.sngfifo18e2_n_27 ;
  wire \gf18e2_inst.sngfifo18e2_n_28 ;
  wire \gf18e2_inst.sngfifo18e2_n_29 ;
  wire \gf18e2_inst.sngfifo18e2_n_30 ;
  wire \gf18e2_inst.sngfifo18e2_n_31 ;
  wire \gf18e2_inst.sngfifo18e2_n_32 ;
  wire \gf18e2_inst.sngfifo18e2_n_33 ;
  wire \gf18e2_inst.sngfifo18e2_n_34 ;
  wire \gf18e2_inst.sngfifo18e2_n_35 ;
  wire \gf18e2_inst.sngfifo18e2_n_36 ;
  wire \gf18e2_inst.sngfifo18e2_n_37 ;
  wire \gf18e2_inst.sngfifo18e2_n_38 ;
  wire \gf18e2_inst.sngfifo18e2_n_39 ;
  wire \gf18e2_inst.sngfifo18e2_n_4 ;
  wire \gf18e2_inst.sngfifo18e2_n_40 ;
  wire \gf18e2_inst.sngfifo18e2_n_41 ;
  wire \gf18e2_inst.sngfifo18e2_n_42 ;
  wire \gf18e2_inst.sngfifo18e2_n_43 ;
  wire \gf18e2_inst.sngfifo18e2_n_44 ;
  wire \gf18e2_inst.sngfifo18e2_n_45 ;
  wire \gf18e2_inst.sngfifo18e2_n_46 ;
  wire \gf18e2_inst.sngfifo18e2_n_47 ;
  wire \gf18e2_inst.sngfifo18e2_n_48 ;
  wire \gf18e2_inst.sngfifo18e2_n_49 ;
  wire \gf18e2_inst.sngfifo18e2_n_50 ;
  wire \gf18e2_inst.sngfifo18e2_n_51 ;
  wire \gf18e2_inst.sngfifo18e2_n_52 ;
  wire \gf18e2_inst.sngfifo18e2_n_53 ;
  wire \gf18e2_inst.sngfifo18e2_n_54 ;
  wire \gf18e2_inst.sngfifo18e2_n_55 ;
  wire \gf18e2_inst.sngfifo18e2_n_56 ;
  wire \gf18e2_inst.sngfifo18e2_n_57 ;
  wire \gf18e2_inst.sngfifo18e2_n_58 ;
  wire \gf18e2_inst.sngfifo18e2_n_59 ;
  wire \gf18e2_inst.sngfifo18e2_n_60 ;
  wire \gf18e2_inst.sngfifo18e2_n_61 ;
  wire \gf18e2_inst.sngfifo18e2_n_62 ;
  wire \gf18e2_inst.sngfifo18e2_n_63 ;
  wire \gf18e2_inst.sngfifo18e2_n_64 ;
  wire \gf18e2_inst.sngfifo18e2_n_65 ;
  wire \gf18e2_inst.sngfifo18e2_n_66 ;
  wire \gf18e2_inst.sngfifo18e2_n_67 ;
  wire \gf18e2_inst.sngfifo18e2_n_68 ;
  wire \gf18e2_inst.sngfifo18e2_n_69 ;
  wire \gf18e2_inst.sngfifo18e2_n_70 ;
  wire \gf18e2_inst.sngfifo18e2_n_71 ;
  wire \gf18e2_inst.sngfifo18e2_n_72 ;
  wire \gf18e2_inst.sngfifo18e2_n_73 ;
  wire \gf18e2_inst.sngfifo18e2_n_74 ;
  wire \gf18e2_inst.sngfifo18e2_n_75 ;
  wire \gf18e2_inst.sngfifo18e2_n_76 ;
  wire \gf18e2_inst.sngfifo18e2_n_77 ;
  wire \gf18e2_inst.sngfifo18e2_n_78 ;
  wire \gf18e2_inst.sngfifo18e2_n_79 ;
  wire \gf18e2_inst.sngfifo18e2_n_80 ;
  wire \gf18e2_inst.sngfifo18e2_n_81 ;
  wire \gf18e2_inst.sngfifo18e2_n_82 ;
  wire \gf18e2_inst.sngfifo18e2_n_83 ;
  wire \gf18e2_inst.sngfifo18e2_n_84 ;
  wire \gf18e2_inst.sngfifo18e2_n_85 ;
  wire \gf18e2_inst.sngfifo18e2_n_86 ;
  wire \gf18e2_inst.sngfifo18e2_n_87 ;
  wire \gf18e2_inst.sngfifo18e2_n_88 ;
  wire \gf18e2_inst.sngfifo18e2_n_89 ;
  wire \gf18e2_inst.sngfifo18e2_n_90 ;
  wire \gf18e2_inst.sngfifo18e2_n_91 ;
  wire \gf18e2_inst.sngfifo18e2_n_92 ;
  wire p_7_out;
  wire p_8_out;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  (* box_type = "PRIMITIVE" *) 
  FIFO18E2 #(
    .CASCADE_ORDER("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .FIRST_WORD_FALL_THROUGH("TRUE"),
    .INIT(36'h000000000),
    .IS_RDCLK_INVERTED(1'b0),
    .IS_RDEN_INVERTED(1'b0),
    .IS_RSTREG_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .IS_WRCLK_INVERTED(1'b0),
    .IS_WREN_INVERTED(1'b0),
    .PROG_EMPTY_THRESH(4),
    .PROG_FULL_THRESH(400),
    .RDCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .READ_WIDTH(36),
    .REGISTER_MODE("REGISTERED"),
    .RSTREG_PRIORITY("REGCE"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL(36'h000000000),
    .WRCOUNT_TYPE("EXTENDED_DATACOUNT"),
    .WRITE_WIDTH(36)) 
    \gf18e2_inst.sngfifo18e2 
       (.CASDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINP({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUX(1'b0),
        .CASDOMUXEN(1'b1),
        .CASDOUT({\gf18e2_inst.sngfifo18e2_n_36 ,\gf18e2_inst.sngfifo18e2_n_37 ,\gf18e2_inst.sngfifo18e2_n_38 ,\gf18e2_inst.sngfifo18e2_n_39 ,\gf18e2_inst.sngfifo18e2_n_40 ,\gf18e2_inst.sngfifo18e2_n_41 ,\gf18e2_inst.sngfifo18e2_n_42 ,\gf18e2_inst.sngfifo18e2_n_43 ,\gf18e2_inst.sngfifo18e2_n_44 ,\gf18e2_inst.sngfifo18e2_n_45 ,\gf18e2_inst.sngfifo18e2_n_46 ,\gf18e2_inst.sngfifo18e2_n_47 ,\gf18e2_inst.sngfifo18e2_n_48 ,\gf18e2_inst.sngfifo18e2_n_49 ,\gf18e2_inst.sngfifo18e2_n_50 ,\gf18e2_inst.sngfifo18e2_n_51 ,\gf18e2_inst.sngfifo18e2_n_52 ,\gf18e2_inst.sngfifo18e2_n_53 ,\gf18e2_inst.sngfifo18e2_n_54 ,\gf18e2_inst.sngfifo18e2_n_55 ,\gf18e2_inst.sngfifo18e2_n_56 ,\gf18e2_inst.sngfifo18e2_n_57 ,\gf18e2_inst.sngfifo18e2_n_58 ,\gf18e2_inst.sngfifo18e2_n_59 ,\gf18e2_inst.sngfifo18e2_n_60 ,\gf18e2_inst.sngfifo18e2_n_61 ,\gf18e2_inst.sngfifo18e2_n_62 ,\gf18e2_inst.sngfifo18e2_n_63 ,\gf18e2_inst.sngfifo18e2_n_64 ,\gf18e2_inst.sngfifo18e2_n_65 ,\gf18e2_inst.sngfifo18e2_n_66 ,\gf18e2_inst.sngfifo18e2_n_67 }),
        .CASDOUTP({\gf18e2_inst.sngfifo18e2_n_100 ,\gf18e2_inst.sngfifo18e2_n_101 ,\gf18e2_inst.sngfifo18e2_n_102 ,\gf18e2_inst.sngfifo18e2_n_103 }),
        .CASNXTEMPTY(\gf18e2_inst.sngfifo18e2_n_0 ),
        .CASNXTRDEN(1'b0),
        .CASOREGIMUX(1'b0),
        .CASOREGIMUXEN(1'b1),
        .CASPRVEMPTY(1'b0),
        .CASPRVRDEN(\gf18e2_inst.sngfifo18e2_n_1 ),
        .DIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din}),
        .DINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUT({\gf18e2_inst.sngfifo18e2_n_68 ,\gf18e2_inst.sngfifo18e2_n_69 ,\gf18e2_inst.sngfifo18e2_n_70 ,\gf18e2_inst.sngfifo18e2_n_71 ,\gf18e2_inst.sngfifo18e2_n_72 ,\gf18e2_inst.sngfifo18e2_n_73 ,\gf18e2_inst.sngfifo18e2_n_74 ,\gf18e2_inst.sngfifo18e2_n_75 ,\gf18e2_inst.sngfifo18e2_n_76 ,\gf18e2_inst.sngfifo18e2_n_77 ,\gf18e2_inst.sngfifo18e2_n_78 ,\gf18e2_inst.sngfifo18e2_n_79 ,\gf18e2_inst.sngfifo18e2_n_80 ,\gf18e2_inst.sngfifo18e2_n_81 ,\gf18e2_inst.sngfifo18e2_n_82 ,\gf18e2_inst.sngfifo18e2_n_83 ,\gf18e2_inst.sngfifo18e2_n_84 ,\gf18e2_inst.sngfifo18e2_n_85 ,\gf18e2_inst.sngfifo18e2_n_86 ,\gf18e2_inst.sngfifo18e2_n_87 ,\gf18e2_inst.sngfifo18e2_n_88 ,\gf18e2_inst.sngfifo18e2_n_89 ,\gf18e2_inst.sngfifo18e2_n_90 ,\gf18e2_inst.sngfifo18e2_n_91 ,\gf18e2_inst.sngfifo18e2_n_92 ,dout}),
        .DOUTP({\gf18e2_inst.sngfifo18e2_n_104 ,\gf18e2_inst.sngfifo18e2_n_105 ,\gf18e2_inst.sngfifo18e2_n_106 ,\gf18e2_inst.sngfifo18e2_n_107 }),
        .EMPTY(empty),
        .FULL(full),
        .PROGEMPTY(\gf18e2_inst.sngfifo18e2_n_4 ),
        .PROGFULL(prog_full),
        .RDCLK(clk),
        .RDCOUNT({\gf18e2_inst.sngfifo18e2_n_10 ,\gf18e2_inst.sngfifo18e2_n_11 ,\gf18e2_inst.sngfifo18e2_n_12 ,\gf18e2_inst.sngfifo18e2_n_13 ,\gf18e2_inst.sngfifo18e2_n_14 ,\gf18e2_inst.sngfifo18e2_n_15 ,\gf18e2_inst.sngfifo18e2_n_16 ,\gf18e2_inst.sngfifo18e2_n_17 ,\gf18e2_inst.sngfifo18e2_n_18 ,\gf18e2_inst.sngfifo18e2_n_19 ,\gf18e2_inst.sngfifo18e2_n_20 ,\gf18e2_inst.sngfifo18e2_n_21 ,\gf18e2_inst.sngfifo18e2_n_22 }),
        .RDEN(rd_en),
        .RDERR(p_7_out),
        .RDRSTBUSY(rd_rst_busy),
        .REGCE(rd_en),
        .RST(srst),
        .RSTREG(srst),
        .SLEEP(1'b0),
        .WRCLK(clk),
        .WRCOUNT({\gf18e2_inst.sngfifo18e2_n_23 ,\gf18e2_inst.sngfifo18e2_n_24 ,\gf18e2_inst.sngfifo18e2_n_25 ,\gf18e2_inst.sngfifo18e2_n_26 ,\gf18e2_inst.sngfifo18e2_n_27 ,\gf18e2_inst.sngfifo18e2_n_28 ,\gf18e2_inst.sngfifo18e2_n_29 ,\gf18e2_inst.sngfifo18e2_n_30 ,\gf18e2_inst.sngfifo18e2_n_31 ,\gf18e2_inst.sngfifo18e2_n_32 ,\gf18e2_inst.sngfifo18e2_n_33 ,\gf18e2_inst.sngfifo18e2_n_34 ,\gf18e2_inst.sngfifo18e2_n_35 }),
        .WREN(wr_en),
        .WRERR(p_8_out),
        .WRRSTBUSY(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "builtin_top" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_top
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [6:0]din;
  output [6:0]dout;

  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_extdepth \rst_val_sym.gextw_sym[1].inst_extd 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_top
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [6:0]din;
  output [6:0]dout;

  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_builtin \gbi.bi 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "8" *) (* C_AXIS_TDEST_WIDTH = "1" *) 
(* C_AXIS_TID_WIDTH = "1" *) (* C_AXIS_TKEEP_WIDTH = "1" *) (* C_AXIS_TSTRB_WIDTH = "1" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "1" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "1" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "9" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "7" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "1" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "7" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynquplus" *) (* C_FULL_FLAGS_RST_VAL = "0" *) (* C_HAS_ALMOST_EMPTY = "0" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "1" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "1" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "1" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "0" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "0" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "1" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "0" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "6" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "4" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x36" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "400" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "399" *) (* C_PROG_FULL_TYPE = "1" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "9" *) 
(* C_RD_DEPTH = "512" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "9" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "2" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "1" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "9" *) 
(* C_WR_DEPTH = "512" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "9" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_2_2" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2
   (almost_empty,
    almost_full,
    axi_ar_dbiterr,
    axi_ar_injectdbiterr,
    axi_ar_injectsbiterr,
    axi_ar_overflow,
    axi_ar_prog_empty,
    axi_ar_prog_full,
    axi_ar_sbiterr,
    axi_ar_underflow,
    axi_aw_dbiterr,
    axi_aw_injectdbiterr,
    axi_aw_injectsbiterr,
    axi_aw_overflow,
    axi_aw_prog_empty,
    axi_aw_prog_full,
    axi_aw_sbiterr,
    axi_aw_underflow,
    axi_b_dbiterr,
    axi_b_injectdbiterr,
    axi_b_injectsbiterr,
    axi_b_overflow,
    axi_b_prog_empty,
    axi_b_prog_full,
    axi_b_sbiterr,
    axi_b_underflow,
    axi_r_dbiterr,
    axi_r_injectdbiterr,
    axi_r_injectsbiterr,
    axi_r_overflow,
    axi_r_prog_empty,
    axi_r_prog_full,
    axi_r_sbiterr,
    axi_r_underflow,
    axi_w_dbiterr,
    axi_w_injectdbiterr,
    axi_w_injectsbiterr,
    axi_w_overflow,
    axi_w_prog_empty,
    axi_w_prog_full,
    axi_w_sbiterr,
    axi_w_underflow,
    axis_dbiterr,
    axis_injectdbiterr,
    axis_injectsbiterr,
    axis_overflow,
    axis_prog_empty,
    axis_prog_full,
    axis_sbiterr,
    axis_underflow,
    backup,
    backup_marker,
    clk,
    dbiterr,
    empty,
    full,
    injectdbiterr,
    injectsbiterr,
    int_clk,
    m_aclk,
    m_aclk_en,
    m_axi_arready,
    m_axi_arvalid,
    m_axi_awready,
    m_axi_awvalid,
    m_axi_bready,
    m_axi_bvalid,
    m_axi_rlast,
    m_axi_rready,
    m_axi_rvalid,
    m_axi_wlast,
    m_axi_wready,
    m_axi_wvalid,
    m_axis_tlast,
    m_axis_tready,
    m_axis_tvalid,
    overflow,
    prog_empty,
    prog_full,
    rd_clk,
    rd_en,
    rd_rst,
    rd_rst_busy,
    rst,
    s_aclk,
    s_aclk_en,
    s_aresetn,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_bready,
    s_axi_bvalid,
    s_axi_rlast,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_wlast,
    s_axi_wready,
    s_axi_wvalid,
    s_axis_tlast,
    s_axis_tready,
    s_axis_tvalid,
    sbiterr,
    sleep,
    srst,
    underflow,
    valid,
    wr_ack,
    wr_clk,
    wr_en,
    wr_rst,
    wr_rst_busy,
    axi_ar_data_count,
    axi_ar_prog_empty_thresh,
    axi_ar_prog_full_thresh,
    axi_ar_rd_data_count,
    axi_ar_wr_data_count,
    axi_aw_data_count,
    axi_aw_prog_empty_thresh,
    axi_aw_prog_full_thresh,
    axi_aw_rd_data_count,
    axi_aw_wr_data_count,
    axi_b_data_count,
    axi_b_prog_empty_thresh,
    axi_b_prog_full_thresh,
    axi_b_rd_data_count,
    axi_b_wr_data_count,
    axi_r_data_count,
    axi_r_prog_empty_thresh,
    axi_r_prog_full_thresh,
    axi_r_rd_data_count,
    axi_r_wr_data_count,
    axi_w_data_count,
    axi_w_prog_empty_thresh,
    axi_w_prog_full_thresh,
    axi_w_rd_data_count,
    axi_w_wr_data_count,
    axis_data_count,
    axis_prog_empty_thresh,
    axis_prog_full_thresh,
    axis_rd_data_count,
    axis_wr_data_count,
    data_count,
    din,
    dout,
    m_axi_araddr,
    m_axi_arburst,
    m_axi_arcache,
    m_axi_arid,
    m_axi_arlen,
    m_axi_arlock,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_arsize,
    m_axi_aruser,
    m_axi_awaddr,
    m_axi_awburst,
    m_axi_awcache,
    m_axi_awid,
    m_axi_awlen,
    m_axi_awlock,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awsize,
    m_axi_awuser,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_rdata,
    m_axi_rid,
    m_axi_rresp,
    m_axi_ruser,
    m_axi_wdata,
    m_axi_wid,
    m_axi_wstrb,
    m_axi_wuser,
    m_axis_tdata,
    m_axis_tdest,
    m_axis_tid,
    m_axis_tkeep,
    m_axis_tstrb,
    m_axis_tuser,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    rd_data_count,
    s_axi_araddr,
    s_axi_arburst,
    s_axi_arcache,
    s_axi_arid,
    s_axi_arlen,
    s_axi_arlock,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_arsize,
    s_axi_aruser,
    s_axi_awaddr,
    s_axi_awburst,
    s_axi_awcache,
    s_axi_awid,
    s_axi_awlen,
    s_axi_awlock,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awsize,
    s_axi_awuser,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_rdata,
    s_axi_rid,
    s_axi_rresp,
    s_axi_ruser,
    s_axi_wdata,
    s_axi_wid,
    s_axi_wstrb,
    s_axi_wuser,
    s_axis_tdata,
    s_axis_tdest,
    s_axis_tid,
    s_axis_tkeep,
    s_axis_tstrb,
    s_axis_tuser,
    wr_data_count);
  output almost_empty;
  output almost_full;
  output axi_ar_dbiterr;
  input axi_ar_injectdbiterr;
  input axi_ar_injectsbiterr;
  output axi_ar_overflow;
  output axi_ar_prog_empty;
  output axi_ar_prog_full;
  output axi_ar_sbiterr;
  output axi_ar_underflow;
  output axi_aw_dbiterr;
  input axi_aw_injectdbiterr;
  input axi_aw_injectsbiterr;
  output axi_aw_overflow;
  output axi_aw_prog_empty;
  output axi_aw_prog_full;
  output axi_aw_sbiterr;
  output axi_aw_underflow;
  output axi_b_dbiterr;
  input axi_b_injectdbiterr;
  input axi_b_injectsbiterr;
  output axi_b_overflow;
  output axi_b_prog_empty;
  output axi_b_prog_full;
  output axi_b_sbiterr;
  output axi_b_underflow;
  output axi_r_dbiterr;
  input axi_r_injectdbiterr;
  input axi_r_injectsbiterr;
  output axi_r_overflow;
  output axi_r_prog_empty;
  output axi_r_prog_full;
  output axi_r_sbiterr;
  output axi_r_underflow;
  output axi_w_dbiterr;
  input axi_w_injectdbiterr;
  input axi_w_injectsbiterr;
  output axi_w_overflow;
  output axi_w_prog_empty;
  output axi_w_prog_full;
  output axi_w_sbiterr;
  output axi_w_underflow;
  output axis_dbiterr;
  input axis_injectdbiterr;
  input axis_injectsbiterr;
  output axis_overflow;
  output axis_prog_empty;
  output axis_prog_full;
  output axis_sbiterr;
  output axis_underflow;
  input backup;
  input backup_marker;
  input clk;
  output dbiterr;
  output empty;
  output full;
  input injectdbiterr;
  input injectsbiterr;
  input int_clk;
  input m_aclk;
  input m_aclk_en;
  input m_axi_arready;
  output m_axi_arvalid;
  input m_axi_awready;
  output m_axi_awvalid;
  output m_axi_bready;
  input m_axi_bvalid;
  input m_axi_rlast;
  output m_axi_rready;
  input m_axi_rvalid;
  output m_axi_wlast;
  input m_axi_wready;
  output m_axi_wvalid;
  output m_axis_tlast;
  input m_axis_tready;
  output m_axis_tvalid;
  output overflow;
  output prog_empty;
  output prog_full;
  input rd_clk;
  input rd_en;
  input rd_rst;
  output rd_rst_busy;
  input rst;
  input s_aclk;
  input s_aclk_en;
  input s_aresetn;
  output s_axi_arready;
  input s_axi_arvalid;
  output s_axi_awready;
  input s_axi_awvalid;
  input s_axi_bready;
  output s_axi_bvalid;
  output s_axi_rlast;
  input s_axi_rready;
  output s_axi_rvalid;
  input s_axi_wlast;
  output s_axi_wready;
  input s_axi_wvalid;
  input s_axis_tlast;
  output s_axis_tready;
  input s_axis_tvalid;
  output sbiterr;
  input sleep;
  input srst;
  output underflow;
  output valid;
  output wr_ack;
  input wr_clk;
  input wr_en;
  input wr_rst;
  output wr_rst_busy;
  output [4:0]axi_ar_data_count;
  input [3:0]axi_ar_prog_empty_thresh;
  input [3:0]axi_ar_prog_full_thresh;
  output [4:0]axi_ar_rd_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_aw_data_count;
  input [3:0]axi_aw_prog_empty_thresh;
  input [3:0]axi_aw_prog_full_thresh;
  output [4:0]axi_aw_rd_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_b_data_count;
  input [3:0]axi_b_prog_empty_thresh;
  input [3:0]axi_b_prog_full_thresh;
  output [4:0]axi_b_rd_data_count;
  output [4:0]axi_b_wr_data_count;
  output [10:0]axi_r_data_count;
  input [9:0]axi_r_prog_empty_thresh;
  input [9:0]axi_r_prog_full_thresh;
  output [10:0]axi_r_rd_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_w_data_count;
  input [9:0]axi_w_prog_empty_thresh;
  input [9:0]axi_w_prog_full_thresh;
  output [10:0]axi_w_rd_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axis_data_count;
  input [9:0]axis_prog_empty_thresh;
  input [9:0]axis_prog_full_thresh;
  output [10:0]axis_rd_data_count;
  output [10:0]axis_wr_data_count;
  output [8:0]data_count;
  input [6:0]din;
  output [6:0]dout;
  output [31:0]m_axi_araddr;
  output [1:0]m_axi_arburst;
  output [3:0]m_axi_arcache;
  output [0:0]m_axi_arid;
  output [7:0]m_axi_arlen;
  output [0:0]m_axi_arlock;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [2:0]m_axi_arsize;
  output [0:0]m_axi_aruser;
  output [31:0]m_axi_awaddr;
  output [1:0]m_axi_awburst;
  output [3:0]m_axi_awcache;
  output [0:0]m_axi_awid;
  output [7:0]m_axi_awlen;
  output [0:0]m_axi_awlock;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [2:0]m_axi_awsize;
  output [0:0]m_axi_awuser;
  input [0:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input [63:0]m_axi_rdata;
  input [0:0]m_axi_rid;
  input [1:0]m_axi_rresp;
  input [0:0]m_axi_ruser;
  output [63:0]m_axi_wdata;
  output [0:0]m_axi_wid;
  output [7:0]m_axi_wstrb;
  output [0:0]m_axi_wuser;
  output [7:0]m_axis_tdata;
  output [0:0]m_axis_tdest;
  output [0:0]m_axis_tid;
  output [0:0]m_axis_tkeep;
  output [0:0]m_axis_tstrb;
  output [3:0]m_axis_tuser;
  input [8:0]prog_empty_thresh;
  input [8:0]prog_empty_thresh_assert;
  input [8:0]prog_empty_thresh_negate;
  input [8:0]prog_full_thresh;
  input [8:0]prog_full_thresh_assert;
  input [8:0]prog_full_thresh_negate;
  output [8:0]rd_data_count;
  input [31:0]s_axi_araddr;
  input [1:0]s_axi_arburst;
  input [3:0]s_axi_arcache;
  input [0:0]s_axi_arid;
  input [7:0]s_axi_arlen;
  input [0:0]s_axi_arlock;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [2:0]s_axi_arsize;
  input [0:0]s_axi_aruser;
  input [31:0]s_axi_awaddr;
  input [1:0]s_axi_awburst;
  input [3:0]s_axi_awcache;
  input [0:0]s_axi_awid;
  input [7:0]s_axi_awlen;
  input [0:0]s_axi_awlock;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [2:0]s_axi_awsize;
  input [0:0]s_axi_awuser;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output [63:0]s_axi_rdata;
  output [0:0]s_axi_rid;
  output [1:0]s_axi_rresp;
  output [0:0]s_axi_ruser;
  input [63:0]s_axi_wdata;
  input [0:0]s_axi_wid;
  input [7:0]s_axi_wstrb;
  input [0:0]s_axi_wuser;
  input [7:0]s_axis_tdata;
  input [0:0]s_axis_tdest;
  input [0:0]s_axis_tid;
  input [0:0]s_axis_tkeep;
  input [0:0]s_axis_tstrb;
  input [3:0]s_axis_tuser;
  output [8:0]wr_data_count;

  wire \<const0> ;
  wire \<const1> ;
  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const1> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const1> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const1> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const1> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const1> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const1> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign rd_data_count[8] = \<const0> ;
  assign rd_data_count[7] = \<const0> ;
  assign rd_data_count[6] = \<const0> ;
  assign rd_data_count[5] = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[8] = \<const0> ;
  assign wr_data_count[7] = \<const0> ;
  assign wr_data_count[6] = \<const0> ;
  assign wr_data_count[5] = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_synth inst_fifo_gen
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_builtin" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_builtin
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [6:0]din;
  output [6:0]dout;

  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_builtin_top \v8_fifo.fblk 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_2_2_synth" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_v13_2_2_synth
   (clk,
    empty,
    full,
    prog_full,
    rd_en,
    rd_rst_busy,
    srst,
    wr_en,
    wr_rst_busy,
    din,
    dout);
  input clk;
  output empty;
  output full;
  output prog_full;
  input rd_en;
  output rd_rst_busy;
  input srst;
  input wr_en;
  output wr_rst_busy;
  input [6:0]din;
  output [6:0]dout;

  wire clk;
  wire [6:0]din;
  wire [6:0]dout;
  wire empty;
  wire full;
  wire prog_full;
  wire rd_en;
  wire rd_rst_busy;
  wire srst;
  wire wr_en;
  wire wr_rst_busy;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth_fifo_generator_top \gconvfifo.rf 
       (.clk(clk),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .prog_full(prog_full),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .srst(srst),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_s_axi_control_to_native
   (active_blocking__0,
    active_blocking_reg,
    active_blocking_reg_0,
    active_blocking_reg_1,
    active_blocking_reg_2,
    active_blocking_reg_3,
    active_blocking_reg_4,
    active_read__0,
    active_read_reg,
    active_runtime,
    active_write__0,
    active_write_reg,
    axi_c_write_valid,
    clk,
    out,
    readDataLast,
    readDataValid,
    read_data_valid,
    reset_cmd_reg,
    rstn,
    s_axi_control_ARREADY,
    s_axi_control_ARVALID,
    s_axi_control_AWREADY,
    s_axi_control_AWVALID,
    s_axi_control_BREADY,
    s_axi_control_BVALID,
    s_axi_control_RREADY,
    s_axi_control_RVALID,
    s_axi_control_WREADY,
    s_axi_control_WVALID,
    writeAbusy,
    CO,
    D,
    E,
    Q,
    SR,
    \axi_c_read_data_reg[31] ,
    \axi_c_read_data_reg[31]_0 ,
    axi_c_read_data_valid_reg,
    countAddrSent0,
    \countAddrSent_reg[31] ,
    \countAddrSent_reg[31]_0 ,
    \countAddrSent_reg[31]_1 ,
    \countAddrToBeSent_reg[38] ,
    countDataReceived0,
    \countDataReceived_reg[31] ,
    \current_cycles_with_no_data_read_reg[31] ,
    \debug_axi_control_reg[0] ,
    \debug_axi_control_reg[31] ,
    \debug_axi_r_control_reg[0] ,
    \debug_axi_r_control_reg[31] ,
    \latency_reg[63] ,
    \max_cycles_with_no_data_read_reg[0] ,
    \max_cycles_with_no_data_read_reg[31] ,
    \max_cycles_with_no_data_read_reg[31]_0 ,
    \read_blocking_ratio_reg[31] ,
    \read_blocking_ratio_reg[31]_0 ,
    \read_burst_size_reg[31] ,
    \read_burst_size_reg[31]_0 ,
    \read_count_bursts_per_reset_reg[31] ,
    \read_count_bursts_per_reset_reg[31]_0 ,
    \read_max_queue_size_reg[31] ,
    \read_max_queue_size_reg[31]_0 ,
    \read_start_DDR_address_reg[63] ,
    \read_start_DDR_address_reg[63]_0 ,
    \read_step_DDR_address_reg[31] ,
    \read_step_DDR_address_reg[31]_0 ,
    \read_ticks_per_burst_reg[31] ,
    \read_ticks_per_burst_reg[31]_0 ,
    runtime0,
    \runtime_reg[63] ,
    s_axi_control_ARADDR,
    s_axi_control_AWADDR,
    s_axi_control_RDATA,
    s_axi_control_WDATA,
    \write_blocking_ratio_reg[31] ,
    \write_blocking_ratio_reg[31]_0 ,
    \write_burst_size_reg[31] ,
    \write_burst_size_reg[31]_0 ,
    \write_count_bursts_per_reset_reg[31] ,
    \write_count_bursts_per_reset_reg[31]_0 ,
    write_data,
    \write_max_queue_size_reg[31] ,
    \write_max_queue_size_reg[31]_0 ,
    \write_start_DDR_address_reg[63] ,
    \write_start_DDR_address_reg[63]_0 ,
    \write_step_DDR_address_reg[31] ,
    \write_step_DDR_address_reg[31]_0 ,
    \write_ticks_per_burst_reg[31] ,
    \write_ticks_per_burst_reg[31]_0 );
  output active_blocking__0;
  input active_blocking_reg;
  input active_blocking_reg_0;
  input active_blocking_reg_1;
  input active_blocking_reg_2;
  input active_blocking_reg_3;
  input active_blocking_reg_4;
  output active_read__0;
  input active_read_reg;
  input active_runtime;
  output active_write__0;
  input active_write_reg;
  output axi_c_write_valid;
  input clk;
  input out;
  input readDataLast;
  input readDataValid;
  input read_data_valid;
  output reset_cmd_reg;
  input rstn;
  output s_axi_control_ARREADY;
  input s_axi_control_ARVALID;
  output s_axi_control_AWREADY;
  input s_axi_control_AWVALID;
  input s_axi_control_BREADY;
  output s_axi_control_BVALID;
  input s_axi_control_RREADY;
  output s_axi_control_RVALID;
  output s_axi_control_WREADY;
  input s_axi_control_WVALID;
  input writeAbusy;
  input [0:0]CO;
  output [63:0]D;
  output [0:0]E;
  input [31:0]Q;
  output [0:0]SR;
  output [31:0]\axi_c_read_data_reg[31] ;
  input [31:0]\axi_c_read_data_reg[31]_0 ;
  output [0:0]axi_c_read_data_valid_reg;
  input [30:0]countAddrSent0;
  output [0:0]\countAddrSent_reg[31] ;
  output [31:0]\countAddrSent_reg[31]_0 ;
  input [31:0]\countAddrSent_reg[31]_1 ;
  input [0:0]\countAddrToBeSent_reg[38] ;
  input [30:0]countDataReceived0;
  output [31:0]\countDataReceived_reg[31] ;
  input [31:0]\current_cycles_with_no_data_read_reg[31] ;
  output [0:0]\debug_axi_control_reg[0] ;
  input [31:0]\debug_axi_control_reg[31] ;
  output [0:0]\debug_axi_r_control_reg[0] ;
  input [31:0]\debug_axi_r_control_reg[31] ;
  input [63:0]\latency_reg[63] ;
  output [0:0]\max_cycles_with_no_data_read_reg[0] ;
  output [31:0]\max_cycles_with_no_data_read_reg[31] ;
  input [31:0]\max_cycles_with_no_data_read_reg[31]_0 ;
  output [31:0]\read_blocking_ratio_reg[31] ;
  input [31:0]\read_blocking_ratio_reg[31]_0 ;
  output [31:0]\read_burst_size_reg[31] ;
  input [31:0]\read_burst_size_reg[31]_0 ;
  output [31:0]\read_count_bursts_per_reset_reg[31] ;
  input [31:0]\read_count_bursts_per_reset_reg[31]_0 ;
  output [31:0]\read_max_queue_size_reg[31] ;
  input [31:0]\read_max_queue_size_reg[31]_0 ;
  output [63:0]\read_start_DDR_address_reg[63] ;
  input [63:0]\read_start_DDR_address_reg[63]_0 ;
  output [31:0]\read_step_DDR_address_reg[31] ;
  input [31:0]\read_step_DDR_address_reg[31]_0 ;
  output [31:0]\read_ticks_per_burst_reg[31] ;
  input [31:0]\read_ticks_per_burst_reg[31]_0 ;
  input [62:0]runtime0;
  input [63:0]\runtime_reg[63] ;
  input [6:0]s_axi_control_ARADDR;
  input [6:0]s_axi_control_AWADDR;
  output [31:0]s_axi_control_RDATA;
  input [31:0]s_axi_control_WDATA;
  output [31:0]\write_blocking_ratio_reg[31] ;
  input [31:0]\write_blocking_ratio_reg[31]_0 ;
  output [31:0]\write_burst_size_reg[31] ;
  input [31:0]\write_burst_size_reg[31]_0 ;
  output [31:0]\write_count_bursts_per_reset_reg[31] ;
  input [31:0]\write_count_bursts_per_reset_reg[31]_0 ;
  output [31:0]write_data;
  output [31:0]\write_max_queue_size_reg[31] ;
  input [31:0]\write_max_queue_size_reg[31]_0 ;
  output [63:0]\write_start_DDR_address_reg[63] ;
  input [63:0]\write_start_DDR_address_reg[63]_0 ;
  output [31:0]\write_step_DDR_address_reg[31] ;
  input [31:0]\write_step_DDR_address_reg[31]_0 ;
  output [31:0]\write_ticks_per_burst_reg[31] ;
  input [31:0]\write_ticks_per_burst_reg[31]_0 ;

  wire [0:0]CO;
  wire [63:0]D;
  wire [0:0]E;
  wire [31:0]Q;
  wire [0:0]SR;
  wire active_blocking__0;
  wire active_blocking_reg;
  wire active_blocking_reg_0;
  wire active_blocking_reg_1;
  wire active_blocking_reg_2;
  wire active_blocking_reg_3;
  wire active_blocking_reg_4;
  wire active_read__0;
  wire active_read_reg;
  wire active_runtime;
  wire active_write__0;
  wire active_write_i_2_n_0;
  wire active_write_i_3_n_0;
  wire active_write_reg;
  wire [6:2]axi_c_read_addr;
  wire \axi_c_read_data[0]_i_10_n_0 ;
  wire \axi_c_read_data[0]_i_11_n_0 ;
  wire \axi_c_read_data[0]_i_3_n_0 ;
  wire \axi_c_read_data[0]_i_4_n_0 ;
  wire \axi_c_read_data[0]_i_5_n_0 ;
  wire \axi_c_read_data[0]_i_8_n_0 ;
  wire \axi_c_read_data[0]_i_9_n_0 ;
  wire \axi_c_read_data[10]_i_10_n_0 ;
  wire \axi_c_read_data[10]_i_11_n_0 ;
  wire \axi_c_read_data[10]_i_3_n_0 ;
  wire \axi_c_read_data[10]_i_4_n_0 ;
  wire \axi_c_read_data[10]_i_7_n_0 ;
  wire \axi_c_read_data[10]_i_8_n_0 ;
  wire \axi_c_read_data[10]_i_9_n_0 ;
  wire \axi_c_read_data[11]_i_10_n_0 ;
  wire \axi_c_read_data[11]_i_11_n_0 ;
  wire \axi_c_read_data[11]_i_3_n_0 ;
  wire \axi_c_read_data[11]_i_4_n_0 ;
  wire \axi_c_read_data[11]_i_7_n_0 ;
  wire \axi_c_read_data[11]_i_8_n_0 ;
  wire \axi_c_read_data[11]_i_9_n_0 ;
  wire \axi_c_read_data[12]_i_10_n_0 ;
  wire \axi_c_read_data[12]_i_11_n_0 ;
  wire \axi_c_read_data[12]_i_3_n_0 ;
  wire \axi_c_read_data[12]_i_4_n_0 ;
  wire \axi_c_read_data[12]_i_7_n_0 ;
  wire \axi_c_read_data[12]_i_8_n_0 ;
  wire \axi_c_read_data[12]_i_9_n_0 ;
  wire \axi_c_read_data[13]_i_10_n_0 ;
  wire \axi_c_read_data[13]_i_11_n_0 ;
  wire \axi_c_read_data[13]_i_3_n_0 ;
  wire \axi_c_read_data[13]_i_4_n_0 ;
  wire \axi_c_read_data[13]_i_7_n_0 ;
  wire \axi_c_read_data[13]_i_8_n_0 ;
  wire \axi_c_read_data[13]_i_9_n_0 ;
  wire \axi_c_read_data[14]_i_10_n_0 ;
  wire \axi_c_read_data[14]_i_11_n_0 ;
  wire \axi_c_read_data[14]_i_3_n_0 ;
  wire \axi_c_read_data[14]_i_4_n_0 ;
  wire \axi_c_read_data[14]_i_7_n_0 ;
  wire \axi_c_read_data[14]_i_8_n_0 ;
  wire \axi_c_read_data[14]_i_9_n_0 ;
  wire \axi_c_read_data[15]_i_10_n_0 ;
  wire \axi_c_read_data[15]_i_11_n_0 ;
  wire \axi_c_read_data[15]_i_3_n_0 ;
  wire \axi_c_read_data[15]_i_4_n_0 ;
  wire \axi_c_read_data[15]_i_7_n_0 ;
  wire \axi_c_read_data[15]_i_8_n_0 ;
  wire \axi_c_read_data[15]_i_9_n_0 ;
  wire \axi_c_read_data[16]_i_10_n_0 ;
  wire \axi_c_read_data[16]_i_11_n_0 ;
  wire \axi_c_read_data[16]_i_3_n_0 ;
  wire \axi_c_read_data[16]_i_4_n_0 ;
  wire \axi_c_read_data[16]_i_7_n_0 ;
  wire \axi_c_read_data[16]_i_8_n_0 ;
  wire \axi_c_read_data[16]_i_9_n_0 ;
  wire \axi_c_read_data[17]_i_10_n_0 ;
  wire \axi_c_read_data[17]_i_11_n_0 ;
  wire \axi_c_read_data[17]_i_3_n_0 ;
  wire \axi_c_read_data[17]_i_4_n_0 ;
  wire \axi_c_read_data[17]_i_7_n_0 ;
  wire \axi_c_read_data[17]_i_8_n_0 ;
  wire \axi_c_read_data[17]_i_9_n_0 ;
  wire \axi_c_read_data[18]_i_10_n_0 ;
  wire \axi_c_read_data[18]_i_11_n_0 ;
  wire \axi_c_read_data[18]_i_3_n_0 ;
  wire \axi_c_read_data[18]_i_4_n_0 ;
  wire \axi_c_read_data[18]_i_7_n_0 ;
  wire \axi_c_read_data[18]_i_8_n_0 ;
  wire \axi_c_read_data[18]_i_9_n_0 ;
  wire \axi_c_read_data[19]_i_10_n_0 ;
  wire \axi_c_read_data[19]_i_11_n_0 ;
  wire \axi_c_read_data[19]_i_3_n_0 ;
  wire \axi_c_read_data[19]_i_4_n_0 ;
  wire \axi_c_read_data[19]_i_7_n_0 ;
  wire \axi_c_read_data[19]_i_8_n_0 ;
  wire \axi_c_read_data[19]_i_9_n_0 ;
  wire \axi_c_read_data[1]_i_10_n_0 ;
  wire \axi_c_read_data[1]_i_11_n_0 ;
  wire \axi_c_read_data[1]_i_3_n_0 ;
  wire \axi_c_read_data[1]_i_4_n_0 ;
  wire \axi_c_read_data[1]_i_5_n_0 ;
  wire \axi_c_read_data[1]_i_8_n_0 ;
  wire \axi_c_read_data[1]_i_9_n_0 ;
  wire \axi_c_read_data[20]_i_10_n_0 ;
  wire \axi_c_read_data[20]_i_11_n_0 ;
  wire \axi_c_read_data[20]_i_3_n_0 ;
  wire \axi_c_read_data[20]_i_4_n_0 ;
  wire \axi_c_read_data[20]_i_7_n_0 ;
  wire \axi_c_read_data[20]_i_8_n_0 ;
  wire \axi_c_read_data[20]_i_9_n_0 ;
  wire \axi_c_read_data[21]_i_10_n_0 ;
  wire \axi_c_read_data[21]_i_11_n_0 ;
  wire \axi_c_read_data[21]_i_3_n_0 ;
  wire \axi_c_read_data[21]_i_4_n_0 ;
  wire \axi_c_read_data[21]_i_7_n_0 ;
  wire \axi_c_read_data[21]_i_8_n_0 ;
  wire \axi_c_read_data[21]_i_9_n_0 ;
  wire \axi_c_read_data[22]_i_10_n_0 ;
  wire \axi_c_read_data[22]_i_11_n_0 ;
  wire \axi_c_read_data[22]_i_3_n_0 ;
  wire \axi_c_read_data[22]_i_4_n_0 ;
  wire \axi_c_read_data[22]_i_7_n_0 ;
  wire \axi_c_read_data[22]_i_8_n_0 ;
  wire \axi_c_read_data[22]_i_9_n_0 ;
  wire \axi_c_read_data[23]_i_10_n_0 ;
  wire \axi_c_read_data[23]_i_11_n_0 ;
  wire \axi_c_read_data[23]_i_3_n_0 ;
  wire \axi_c_read_data[23]_i_4_n_0 ;
  wire \axi_c_read_data[23]_i_7_n_0 ;
  wire \axi_c_read_data[23]_i_8_n_0 ;
  wire \axi_c_read_data[23]_i_9_n_0 ;
  wire \axi_c_read_data[24]_i_10_n_0 ;
  wire \axi_c_read_data[24]_i_11_n_0 ;
  wire \axi_c_read_data[24]_i_3_n_0 ;
  wire \axi_c_read_data[24]_i_4_n_0 ;
  wire \axi_c_read_data[24]_i_7_n_0 ;
  wire \axi_c_read_data[24]_i_8_n_0 ;
  wire \axi_c_read_data[24]_i_9_n_0 ;
  wire \axi_c_read_data[25]_i_10_n_0 ;
  wire \axi_c_read_data[25]_i_11_n_0 ;
  wire \axi_c_read_data[25]_i_3_n_0 ;
  wire \axi_c_read_data[25]_i_4_n_0 ;
  wire \axi_c_read_data[25]_i_7_n_0 ;
  wire \axi_c_read_data[25]_i_8_n_0 ;
  wire \axi_c_read_data[25]_i_9_n_0 ;
  wire \axi_c_read_data[26]_i_10_n_0 ;
  wire \axi_c_read_data[26]_i_11_n_0 ;
  wire \axi_c_read_data[26]_i_3_n_0 ;
  wire \axi_c_read_data[26]_i_4_n_0 ;
  wire \axi_c_read_data[26]_i_7_n_0 ;
  wire \axi_c_read_data[26]_i_8_n_0 ;
  wire \axi_c_read_data[26]_i_9_n_0 ;
  wire \axi_c_read_data[27]_i_10_n_0 ;
  wire \axi_c_read_data[27]_i_11_n_0 ;
  wire \axi_c_read_data[27]_i_3_n_0 ;
  wire \axi_c_read_data[27]_i_4_n_0 ;
  wire \axi_c_read_data[27]_i_7_n_0 ;
  wire \axi_c_read_data[27]_i_8_n_0 ;
  wire \axi_c_read_data[27]_i_9_n_0 ;
  wire \axi_c_read_data[28]_i_10_n_0 ;
  wire \axi_c_read_data[28]_i_11_n_0 ;
  wire \axi_c_read_data[28]_i_3_n_0 ;
  wire \axi_c_read_data[28]_i_4_n_0 ;
  wire \axi_c_read_data[28]_i_7_n_0 ;
  wire \axi_c_read_data[28]_i_8_n_0 ;
  wire \axi_c_read_data[28]_i_9_n_0 ;
  wire \axi_c_read_data[29]_i_10_n_0 ;
  wire \axi_c_read_data[29]_i_11_n_0 ;
  wire \axi_c_read_data[29]_i_3_n_0 ;
  wire \axi_c_read_data[29]_i_4_n_0 ;
  wire \axi_c_read_data[29]_i_7_n_0 ;
  wire \axi_c_read_data[29]_i_8_n_0 ;
  wire \axi_c_read_data[29]_i_9_n_0 ;
  wire \axi_c_read_data[2]_i_10_n_0 ;
  wire \axi_c_read_data[2]_i_11_n_0 ;
  wire \axi_c_read_data[2]_i_3_n_0 ;
  wire \axi_c_read_data[2]_i_4_n_0 ;
  wire \axi_c_read_data[2]_i_5_n_0 ;
  wire \axi_c_read_data[2]_i_8_n_0 ;
  wire \axi_c_read_data[2]_i_9_n_0 ;
  wire \axi_c_read_data[30]_i_10_n_0 ;
  wire \axi_c_read_data[30]_i_11_n_0 ;
  wire \axi_c_read_data[30]_i_3_n_0 ;
  wire \axi_c_read_data[30]_i_4_n_0 ;
  wire \axi_c_read_data[30]_i_7_n_0 ;
  wire \axi_c_read_data[30]_i_8_n_0 ;
  wire \axi_c_read_data[30]_i_9_n_0 ;
  wire \axi_c_read_data[31]_i_10_n_0 ;
  wire \axi_c_read_data[31]_i_11_n_0 ;
  wire \axi_c_read_data[31]_i_3_n_0 ;
  wire \axi_c_read_data[31]_i_4_n_0 ;
  wire \axi_c_read_data[31]_i_7_n_0 ;
  wire \axi_c_read_data[31]_i_8_n_0 ;
  wire \axi_c_read_data[31]_i_9_n_0 ;
  wire \axi_c_read_data[3]_i_10_n_0 ;
  wire \axi_c_read_data[3]_i_11_n_0 ;
  wire \axi_c_read_data[3]_i_12_n_0 ;
  wire \axi_c_read_data[3]_i_13_n_0 ;
  wire \axi_c_read_data[3]_i_3_n_0 ;
  wire \axi_c_read_data[3]_i_4_n_0 ;
  wire \axi_c_read_data[3]_i_5_n_0 ;
  wire \axi_c_read_data[3]_i_6_n_0 ;
  wire \axi_c_read_data[3]_i_7_n_0 ;
  wire \axi_c_read_data[4]_i_10_n_0 ;
  wire \axi_c_read_data[4]_i_11_n_0 ;
  wire \axi_c_read_data[4]_i_2_n_0 ;
  wire \axi_c_read_data[4]_i_3_n_0 ;
  wire \axi_c_read_data[4]_i_4_n_0 ;
  wire \axi_c_read_data[4]_i_7_n_0 ;
  wire \axi_c_read_data[4]_i_8_n_0 ;
  wire \axi_c_read_data[4]_i_9_n_0 ;
  wire \axi_c_read_data[5]_i_10_n_0 ;
  wire \axi_c_read_data[5]_i_11_n_0 ;
  wire \axi_c_read_data[5]_i_3_n_0 ;
  wire \axi_c_read_data[5]_i_4_n_0 ;
  wire \axi_c_read_data[5]_i_7_n_0 ;
  wire \axi_c_read_data[5]_i_8_n_0 ;
  wire \axi_c_read_data[5]_i_9_n_0 ;
  wire \axi_c_read_data[6]_i_10_n_0 ;
  wire \axi_c_read_data[6]_i_11_n_0 ;
  wire \axi_c_read_data[6]_i_3_n_0 ;
  wire \axi_c_read_data[6]_i_4_n_0 ;
  wire \axi_c_read_data[6]_i_7_n_0 ;
  wire \axi_c_read_data[6]_i_8_n_0 ;
  wire \axi_c_read_data[6]_i_9_n_0 ;
  wire \axi_c_read_data[7]_i_10_n_0 ;
  wire \axi_c_read_data[7]_i_11_n_0 ;
  wire \axi_c_read_data[7]_i_3_n_0 ;
  wire \axi_c_read_data[7]_i_4_n_0 ;
  wire \axi_c_read_data[7]_i_7_n_0 ;
  wire \axi_c_read_data[7]_i_8_n_0 ;
  wire \axi_c_read_data[7]_i_9_n_0 ;
  wire \axi_c_read_data[8]_i_10_n_0 ;
  wire \axi_c_read_data[8]_i_11_n_0 ;
  wire \axi_c_read_data[8]_i_3_n_0 ;
  wire \axi_c_read_data[8]_i_4_n_0 ;
  wire \axi_c_read_data[8]_i_7_n_0 ;
  wire \axi_c_read_data[8]_i_8_n_0 ;
  wire \axi_c_read_data[8]_i_9_n_0 ;
  wire \axi_c_read_data[9]_i_10_n_0 ;
  wire \axi_c_read_data[9]_i_11_n_0 ;
  wire \axi_c_read_data[9]_i_3_n_0 ;
  wire \axi_c_read_data[9]_i_4_n_0 ;
  wire \axi_c_read_data[9]_i_7_n_0 ;
  wire \axi_c_read_data[9]_i_8_n_0 ;
  wire \axi_c_read_data[9]_i_9_n_0 ;
  wire \axi_c_read_data_reg[0]_i_2_n_0 ;
  wire \axi_c_read_data_reg[0]_i_6_n_0 ;
  wire \axi_c_read_data_reg[0]_i_7_n_0 ;
  wire \axi_c_read_data_reg[10]_i_2_n_0 ;
  wire \axi_c_read_data_reg[10]_i_5_n_0 ;
  wire \axi_c_read_data_reg[10]_i_6_n_0 ;
  wire \axi_c_read_data_reg[11]_i_2_n_0 ;
  wire \axi_c_read_data_reg[11]_i_5_n_0 ;
  wire \axi_c_read_data_reg[11]_i_6_n_0 ;
  wire \axi_c_read_data_reg[12]_i_2_n_0 ;
  wire \axi_c_read_data_reg[12]_i_5_n_0 ;
  wire \axi_c_read_data_reg[12]_i_6_n_0 ;
  wire \axi_c_read_data_reg[13]_i_2_n_0 ;
  wire \axi_c_read_data_reg[13]_i_5_n_0 ;
  wire \axi_c_read_data_reg[13]_i_6_n_0 ;
  wire \axi_c_read_data_reg[14]_i_2_n_0 ;
  wire \axi_c_read_data_reg[14]_i_5_n_0 ;
  wire \axi_c_read_data_reg[14]_i_6_n_0 ;
  wire \axi_c_read_data_reg[15]_i_2_n_0 ;
  wire \axi_c_read_data_reg[15]_i_5_n_0 ;
  wire \axi_c_read_data_reg[15]_i_6_n_0 ;
  wire \axi_c_read_data_reg[16]_i_2_n_0 ;
  wire \axi_c_read_data_reg[16]_i_5_n_0 ;
  wire \axi_c_read_data_reg[16]_i_6_n_0 ;
  wire \axi_c_read_data_reg[17]_i_2_n_0 ;
  wire \axi_c_read_data_reg[17]_i_5_n_0 ;
  wire \axi_c_read_data_reg[17]_i_6_n_0 ;
  wire \axi_c_read_data_reg[18]_i_2_n_0 ;
  wire \axi_c_read_data_reg[18]_i_5_n_0 ;
  wire \axi_c_read_data_reg[18]_i_6_n_0 ;
  wire \axi_c_read_data_reg[19]_i_2_n_0 ;
  wire \axi_c_read_data_reg[19]_i_5_n_0 ;
  wire \axi_c_read_data_reg[19]_i_6_n_0 ;
  wire \axi_c_read_data_reg[1]_i_2_n_0 ;
  wire \axi_c_read_data_reg[1]_i_6_n_0 ;
  wire \axi_c_read_data_reg[1]_i_7_n_0 ;
  wire \axi_c_read_data_reg[20]_i_2_n_0 ;
  wire \axi_c_read_data_reg[20]_i_5_n_0 ;
  wire \axi_c_read_data_reg[20]_i_6_n_0 ;
  wire \axi_c_read_data_reg[21]_i_2_n_0 ;
  wire \axi_c_read_data_reg[21]_i_5_n_0 ;
  wire \axi_c_read_data_reg[21]_i_6_n_0 ;
  wire \axi_c_read_data_reg[22]_i_2_n_0 ;
  wire \axi_c_read_data_reg[22]_i_5_n_0 ;
  wire \axi_c_read_data_reg[22]_i_6_n_0 ;
  wire \axi_c_read_data_reg[23]_i_2_n_0 ;
  wire \axi_c_read_data_reg[23]_i_5_n_0 ;
  wire \axi_c_read_data_reg[23]_i_6_n_0 ;
  wire \axi_c_read_data_reg[24]_i_2_n_0 ;
  wire \axi_c_read_data_reg[24]_i_5_n_0 ;
  wire \axi_c_read_data_reg[24]_i_6_n_0 ;
  wire \axi_c_read_data_reg[25]_i_2_n_0 ;
  wire \axi_c_read_data_reg[25]_i_5_n_0 ;
  wire \axi_c_read_data_reg[25]_i_6_n_0 ;
  wire \axi_c_read_data_reg[26]_i_2_n_0 ;
  wire \axi_c_read_data_reg[26]_i_5_n_0 ;
  wire \axi_c_read_data_reg[26]_i_6_n_0 ;
  wire \axi_c_read_data_reg[27]_i_2_n_0 ;
  wire \axi_c_read_data_reg[27]_i_5_n_0 ;
  wire \axi_c_read_data_reg[27]_i_6_n_0 ;
  wire \axi_c_read_data_reg[28]_i_2_n_0 ;
  wire \axi_c_read_data_reg[28]_i_5_n_0 ;
  wire \axi_c_read_data_reg[28]_i_6_n_0 ;
  wire \axi_c_read_data_reg[29]_i_2_n_0 ;
  wire \axi_c_read_data_reg[29]_i_5_n_0 ;
  wire \axi_c_read_data_reg[29]_i_6_n_0 ;
  wire \axi_c_read_data_reg[2]_i_2_n_0 ;
  wire \axi_c_read_data_reg[2]_i_6_n_0 ;
  wire \axi_c_read_data_reg[2]_i_7_n_0 ;
  wire \axi_c_read_data_reg[30]_i_2_n_0 ;
  wire \axi_c_read_data_reg[30]_i_5_n_0 ;
  wire \axi_c_read_data_reg[30]_i_6_n_0 ;
  wire [31:0]\axi_c_read_data_reg[31] ;
  wire [31:0]\axi_c_read_data_reg[31]_0 ;
  wire \axi_c_read_data_reg[31]_i_2_n_0 ;
  wire \axi_c_read_data_reg[31]_i_5_n_0 ;
  wire \axi_c_read_data_reg[31]_i_6_n_0 ;
  wire \axi_c_read_data_reg[3]_i_2_n_0 ;
  wire \axi_c_read_data_reg[3]_i_8_n_0 ;
  wire \axi_c_read_data_reg[3]_i_9_n_0 ;
  wire \axi_c_read_data_reg[4]_i_5_n_0 ;
  wire \axi_c_read_data_reg[4]_i_6_n_0 ;
  wire \axi_c_read_data_reg[5]_i_2_n_0 ;
  wire \axi_c_read_data_reg[5]_i_5_n_0 ;
  wire \axi_c_read_data_reg[5]_i_6_n_0 ;
  wire \axi_c_read_data_reg[6]_i_2_n_0 ;
  wire \axi_c_read_data_reg[6]_i_5_n_0 ;
  wire \axi_c_read_data_reg[6]_i_6_n_0 ;
  wire \axi_c_read_data_reg[7]_i_2_n_0 ;
  wire \axi_c_read_data_reg[7]_i_5_n_0 ;
  wire \axi_c_read_data_reg[7]_i_6_n_0 ;
  wire \axi_c_read_data_reg[8]_i_2_n_0 ;
  wire \axi_c_read_data_reg[8]_i_5_n_0 ;
  wire \axi_c_read_data_reg[8]_i_6_n_0 ;
  wire \axi_c_read_data_reg[9]_i_2_n_0 ;
  wire \axi_c_read_data_reg[9]_i_5_n_0 ;
  wire \axi_c_read_data_reg[9]_i_6_n_0 ;
  wire [0:0]axi_c_read_data_valid_reg;
  wire [6:2]axi_c_write_addr;
  wire axi_c_write_valid;
  wire clk;
  wire [30:0]countAddrSent0;
  wire [31:31]countAddrSent__0;
  wire [0:0]\countAddrSent_reg[31] ;
  wire [31:0]\countAddrSent_reg[31]_0 ;
  wire [31:0]\countAddrSent_reg[31]_1 ;
  wire [0:0]\countAddrToBeSent_reg[38] ;
  wire [30:0]countDataReceived0;
  wire \countDataReceived[31]_i_3_n_0 ;
  wire \countDataReceived[31]_i_4_n_0 ;
  wire [31:0]\countDataReceived_reg[31] ;
  wire [31:0]\current_cycles_with_no_data_read_reg[31] ;
  wire [0:0]\debug_axi_control_reg[0] ;
  wire [31:0]\debug_axi_control_reg[31] ;
  wire [0:0]\debug_axi_r_control_reg[0] ;
  wire [31:0]\debug_axi_r_control_reg[31] ;
  wire [63:0]\latency_reg[63] ;
  wire max_cycles_with_no_data_read__0;
  wire [0:0]\max_cycles_with_no_data_read_reg[0] ;
  wire [31:0]\max_cycles_with_no_data_read_reg[31] ;
  wire [31:0]\max_cycles_with_no_data_read_reg[31]_0 ;
  wire out;
  wire readDataLast;
  wire readDataValid;
  wire read_addr_fifo_empty;
  wire read_addr_fifo_full;
  wire read_addr_fifo_n_5;
  wire read_addr_fifo_n_6;
  wire [31:0]\read_blocking_ratio_reg[31] ;
  wire [31:0]\read_blocking_ratio_reg[31]_0 ;
  wire [31:0]\read_burst_size_reg[31] ;
  wire [31:0]\read_burst_size_reg[31]_0 ;
  wire [31:0]\read_count_bursts_per_reset_reg[31] ;
  wire [31:0]\read_count_bursts_per_reset_reg[31]_0 ;
  wire read_data_fifo_empty;
  wire read_data_valid;
  wire \read_max_queue_size[31]_i_2_n_0 ;
  wire \read_max_queue_size[31]_i_3_n_0 ;
  wire [31:0]\read_max_queue_size_reg[31] ;
  wire [31:0]\read_max_queue_size_reg[31]_0 ;
  wire [63:0]\read_start_DDR_address_reg[63] ;
  wire [63:0]\read_start_DDR_address_reg[63]_0 ;
  wire [31:0]\read_step_DDR_address_reg[31] ;
  wire [31:0]\read_step_DDR_address_reg[31]_0 ;
  wire \read_ticks_per_burst[31]_i_2_n_0 ;
  wire \read_ticks_per_burst[31]_i_3_n_0 ;
  wire [31:0]\read_ticks_per_burst_reg[31] ;
  wire [31:0]\read_ticks_per_burst_reg[31]_0 ;
  wire reset_cmd_i_2_n_0;
  wire reset_cmd_reg;
  wire [8:0]respond_count;
  wire \respond_count[7]_i_10_n_0 ;
  wire \respond_count[7]_i_2_n_0 ;
  wire \respond_count[7]_i_3_n_0 ;
  wire \respond_count[7]_i_4_n_0 ;
  wire \respond_count[7]_i_5_n_0 ;
  wire \respond_count[7]_i_6_n_0 ;
  wire \respond_count[7]_i_7_n_0 ;
  wire \respond_count[7]_i_8_n_0 ;
  wire \respond_count[7]_i_9_n_0 ;
  wire \respond_count[8]_i_2_n_0 ;
  wire \respond_count_reg[7]_i_1_n_0 ;
  wire \respond_count_reg[7]_i_1_n_1 ;
  wire \respond_count_reg[7]_i_1_n_2 ;
  wire \respond_count_reg[7]_i_1_n_3 ;
  wire \respond_count_reg[7]_i_1_n_5 ;
  wire \respond_count_reg[7]_i_1_n_6 ;
  wire \respond_count_reg[7]_i_1_n_7 ;
  wire [8:0]respond_count_reg_n_0_;
  wire rstn;
  wire [62:0]runtime0;
  wire \runtime[63]_i_6_n_0 ;
  wire \runtime[63]_i_7_n_0 ;
  wire [63:0]runtime__0;
  wire [63:0]\runtime_reg[63] ;
  wire [6:0]s_axi_control_ARADDR;
  wire s_axi_control_ARREADY;
  wire s_axi_control_ARVALID;
  wire [6:0]s_axi_control_AWADDR;
  wire s_axi_control_AWREADY;
  wire s_axi_control_AWVALID;
  wire s_axi_control_BREADY;
  wire s_axi_control_BVALID;
  wire s_axi_control_BVALID_i_1_n_0;
  wire s_axi_control_BVALID_i_2_n_0;
  wire s_axi_control_BVALID_i_3_n_0;
  wire [31:0]s_axi_control_RDATA;
  wire s_axi_control_RREADY;
  wire s_axi_control_RVALID;
  wire [31:0]s_axi_control_WDATA;
  wire s_axi_control_WREADY;
  wire s_axi_control_WVALID;
  wire writeAbusy;
  wire write_addr_fifo_empty;
  wire write_addr_fifo_full;
  wire write_addr_fifo_n_5;
  wire write_addr_fifo_n_6;
  wire [31:0]\write_blocking_ratio_reg[31] ;
  wire [31:0]\write_blocking_ratio_reg[31]_0 ;
  wire [31:0]\write_burst_size_reg[31] ;
  wire [31:0]\write_burst_size_reg[31]_0 ;
  wire \write_count_bursts_per_reset[15]_i_2_n_0 ;
  wire \write_count_bursts_per_reset[15]_i_3_n_0 ;
  wire \write_count_bursts_per_reset[31]_i_2_n_0 ;
  wire \write_count_bursts_per_reset[31]_i_3_n_0 ;
  wire [31:0]\write_count_bursts_per_reset_reg[31] ;
  wire [31:0]\write_count_bursts_per_reset_reg[31]_0 ;
  wire [31:0]write_data;
  wire write_data_fifo_empty;
  wire write_data_fifo_full;
  wire [31:0]\write_max_queue_size_reg[31] ;
  wire [31:0]\write_max_queue_size_reg[31]_0 ;
  wire [63:0]\write_start_DDR_address_reg[63] ;
  wire [63:0]\write_start_DDR_address_reg[63]_0 ;
  wire [31:0]\write_step_DDR_address_reg[31] ;
  wire [31:0]\write_step_DDR_address_reg[31]_0 ;
  wire [31:0]\write_ticks_per_burst_reg[31] ;
  wire [31:0]\write_ticks_per_burst_reg[31]_0 ;
  wire NLW_read_addr_fifo_full_UNCONNECTED;
  wire NLW_read_addr_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_read_addr_fifo_wr_rst_busy_UNCONNECTED;
  wire NLW_read_data_fifo_full_UNCONNECTED;
  wire NLW_read_data_fifo_prog_full_UNCONNECTED;
  wire NLW_read_data_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_read_data_fifo_wr_rst_busy_UNCONNECTED;
  wire [3:3]\NLW_respond_count_reg[7]_i_1_CO_UNCONNECTED ;
  wire [7:0]\NLW_respond_count_reg[8]_i_1_CO_UNCONNECTED ;
  wire [7:1]\NLW_respond_count_reg[8]_i_1_O_UNCONNECTED ;
  wire NLW_write_addr_fifo_full_UNCONNECTED;
  wire NLW_write_addr_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_write_addr_fifo_wr_rst_busy_UNCONNECTED;
  wire NLW_write_data_fifo_full_UNCONNECTED;
  wire NLW_write_data_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_write_data_fifo_wr_rst_busy_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    active_blocking_i_1
       (.I0(axi_c_write_addr[5]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[3]),
        .I4(axi_c_write_addr[6]),
        .I5(active_blocking_reg_4),
        .O(active_blocking__0));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    active_read_i_1
       (.I0(axi_c_write_addr[5]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[0]),
        .I4(axi_c_write_addr[6]),
        .I5(active_read_reg),
        .O(active_read__0));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    active_write_i_1
       (.I0(axi_c_write_addr[5]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[1]),
        .I4(axi_c_write_addr[6]),
        .I5(active_write_reg),
        .O(active_write__0));
  LUT2 #(
    .INIT(4'hE)) 
    active_write_i_2
       (.I0(axi_c_write_addr[3]),
        .I1(axi_c_write_addr[4]),
        .O(active_write_i_2_n_0));
  LUT3 #(
    .INIT(8'hBA)) 
    active_write_i_3
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[3]),
        .I2(axi_c_write_addr[2]),
        .O(active_write_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[0]_i_1 
       (.I0(\axi_c_read_data_reg[0]_i_2_n_0 ),
        .I1(\axi_c_read_data[0]_i_3_n_0 ),
        .I2(\axi_c_read_data[3]_i_4_n_0 ),
        .I3(\axi_c_read_data[0]_i_4_n_0 ),
        .I4(\axi_c_read_data[3]_i_6_n_0 ),
        .I5(\axi_c_read_data[0]_i_5_n_0 ),
        .O(\axi_c_read_data_reg[31] [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[0]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [0]),
        .I1(\read_step_DDR_address_reg[31]_0 [0]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [0]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [32]),
        .O(\axi_c_read_data[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[0]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [0]),
        .I1(\read_max_queue_size_reg[31]_0 [0]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [0]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [0]),
        .O(\axi_c_read_data[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[0]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [0]),
        .I1(\read_blocking_ratio_reg[31]_0 [0]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [0]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[0]_i_4 
       (.I0(\latency_reg[63] [0]),
        .I1(\latency_reg[63] [32]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[0]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [0]),
        .O(\axi_c_read_data[0]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_c_read_data[0]_i_5 
       (.I0(\runtime_reg[63] [0]),
        .I1(\runtime_reg[63] [32]),
        .I2(axi_c_read_addr[3]),
        .I3(active_read_reg),
        .I4(axi_c_read_addr[2]),
        .O(\axi_c_read_data[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[0]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [0]),
        .I1(\write_step_DDR_address_reg[31]_0 [0]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [0]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [32]),
        .O(\axi_c_read_data[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[0]_i_9 
       (.I0(\debug_axi_control_reg[31] [0]),
        .I1(\write_max_queue_size_reg[31]_0 [0]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [0]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [0]),
        .O(\axi_c_read_data[0]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[10]_i_1 
       (.I0(\axi_c_read_data_reg[10]_i_2_n_0 ),
        .I1(\axi_c_read_data[10]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[10]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[10]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [10]),
        .I1(\read_step_DDR_address_reg[31]_0 [10]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [10]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [42]),
        .O(\axi_c_read_data[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[10]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [10]),
        .I1(\read_max_queue_size_reg[31]_0 [10]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [10]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [10]),
        .O(\axi_c_read_data[10]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[10]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [10]),
        .I1(\read_blocking_ratio_reg[31]_0 [10]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [10]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[10]_i_4 
       (.I0(\axi_c_read_data[10]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [42]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [10]),
        .O(\axi_c_read_data[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[10]_i_7 
       (.I0(\latency_reg[63] [10]),
        .I1(\latency_reg[63] [42]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[10]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [10]),
        .O(\axi_c_read_data[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[10]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [10]),
        .I1(\write_step_DDR_address_reg[31]_0 [10]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [10]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [42]),
        .O(\axi_c_read_data[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[10]_i_9 
       (.I0(\debug_axi_control_reg[31] [10]),
        .I1(\write_max_queue_size_reg[31]_0 [10]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [10]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [10]),
        .O(\axi_c_read_data[10]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[11]_i_1 
       (.I0(\axi_c_read_data_reg[11]_i_2_n_0 ),
        .I1(\axi_c_read_data[11]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[11]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[11]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [11]),
        .I1(\read_step_DDR_address_reg[31]_0 [11]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [11]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [43]),
        .O(\axi_c_read_data[11]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[11]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [11]),
        .I1(\read_max_queue_size_reg[31]_0 [11]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [11]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [11]),
        .O(\axi_c_read_data[11]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[11]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [11]),
        .I1(\read_blocking_ratio_reg[31]_0 [11]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [11]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[11]_i_4 
       (.I0(\axi_c_read_data[11]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [43]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [11]),
        .O(\axi_c_read_data[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[11]_i_7 
       (.I0(\latency_reg[63] [11]),
        .I1(\latency_reg[63] [43]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[11]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [11]),
        .O(\axi_c_read_data[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[11]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [11]),
        .I1(\write_step_DDR_address_reg[31]_0 [11]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [11]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [43]),
        .O(\axi_c_read_data[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[11]_i_9 
       (.I0(\debug_axi_control_reg[31] [11]),
        .I1(\write_max_queue_size_reg[31]_0 [11]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [11]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [11]),
        .O(\axi_c_read_data[11]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[12]_i_1 
       (.I0(\axi_c_read_data_reg[12]_i_2_n_0 ),
        .I1(\axi_c_read_data[12]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[12]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[12]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [12]),
        .I1(\read_step_DDR_address_reg[31]_0 [12]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [12]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [44]),
        .O(\axi_c_read_data[12]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[12]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [12]),
        .I1(\read_max_queue_size_reg[31]_0 [12]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [12]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [12]),
        .O(\axi_c_read_data[12]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[12]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [12]),
        .I1(\read_blocking_ratio_reg[31]_0 [12]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [12]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[12]_i_4 
       (.I0(\axi_c_read_data[12]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [44]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [12]),
        .O(\axi_c_read_data[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[12]_i_7 
       (.I0(\latency_reg[63] [12]),
        .I1(\latency_reg[63] [44]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[12]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [12]),
        .O(\axi_c_read_data[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[12]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [12]),
        .I1(\write_step_DDR_address_reg[31]_0 [12]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [12]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [44]),
        .O(\axi_c_read_data[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[12]_i_9 
       (.I0(\debug_axi_control_reg[31] [12]),
        .I1(\write_max_queue_size_reg[31]_0 [12]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [12]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [12]),
        .O(\axi_c_read_data[12]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[13]_i_1 
       (.I0(\axi_c_read_data_reg[13]_i_2_n_0 ),
        .I1(\axi_c_read_data[13]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[13]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[13]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [13]),
        .I1(\read_step_DDR_address_reg[31]_0 [13]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [13]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [45]),
        .O(\axi_c_read_data[13]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[13]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [13]),
        .I1(\read_max_queue_size_reg[31]_0 [13]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [13]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [13]),
        .O(\axi_c_read_data[13]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[13]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [13]),
        .I1(\read_blocking_ratio_reg[31]_0 [13]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [13]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[13]_i_4 
       (.I0(\axi_c_read_data[13]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [45]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [13]),
        .O(\axi_c_read_data[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[13]_i_7 
       (.I0(\latency_reg[63] [13]),
        .I1(\latency_reg[63] [45]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[13]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [13]),
        .O(\axi_c_read_data[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[13]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [13]),
        .I1(\write_step_DDR_address_reg[31]_0 [13]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [13]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [45]),
        .O(\axi_c_read_data[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[13]_i_9 
       (.I0(\debug_axi_control_reg[31] [13]),
        .I1(\write_max_queue_size_reg[31]_0 [13]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [13]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [13]),
        .O(\axi_c_read_data[13]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[14]_i_1 
       (.I0(\axi_c_read_data_reg[14]_i_2_n_0 ),
        .I1(\axi_c_read_data[14]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[14]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[14]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [14]),
        .I1(\read_step_DDR_address_reg[31]_0 [14]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [14]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [46]),
        .O(\axi_c_read_data[14]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[14]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [14]),
        .I1(\read_max_queue_size_reg[31]_0 [14]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [14]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [14]),
        .O(\axi_c_read_data[14]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[14]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [14]),
        .I1(\read_blocking_ratio_reg[31]_0 [14]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [14]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[14]_i_4 
       (.I0(\axi_c_read_data[14]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [46]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [14]),
        .O(\axi_c_read_data[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[14]_i_7 
       (.I0(\latency_reg[63] [14]),
        .I1(\latency_reg[63] [46]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[14]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [14]),
        .O(\axi_c_read_data[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[14]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [14]),
        .I1(\write_step_DDR_address_reg[31]_0 [14]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [14]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [46]),
        .O(\axi_c_read_data[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[14]_i_9 
       (.I0(\debug_axi_control_reg[31] [14]),
        .I1(\write_max_queue_size_reg[31]_0 [14]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [14]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [14]),
        .O(\axi_c_read_data[14]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[15]_i_1 
       (.I0(\axi_c_read_data_reg[15]_i_2_n_0 ),
        .I1(\axi_c_read_data[15]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[15]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[15]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [15]),
        .I1(\read_step_DDR_address_reg[31]_0 [15]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [15]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [47]),
        .O(\axi_c_read_data[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[15]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [15]),
        .I1(\read_max_queue_size_reg[31]_0 [15]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [15]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [15]),
        .O(\axi_c_read_data[15]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[15]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [15]),
        .I1(\read_blocking_ratio_reg[31]_0 [15]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [15]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[15]_i_4 
       (.I0(\axi_c_read_data[15]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [47]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [15]),
        .O(\axi_c_read_data[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[15]_i_7 
       (.I0(\latency_reg[63] [15]),
        .I1(\latency_reg[63] [47]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[15]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [15]),
        .O(\axi_c_read_data[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[15]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [15]),
        .I1(\write_step_DDR_address_reg[31]_0 [15]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [15]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [47]),
        .O(\axi_c_read_data[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[15]_i_9 
       (.I0(\debug_axi_control_reg[31] [15]),
        .I1(\write_max_queue_size_reg[31]_0 [15]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [15]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [15]),
        .O(\axi_c_read_data[15]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[16]_i_1 
       (.I0(\axi_c_read_data_reg[16]_i_2_n_0 ),
        .I1(\axi_c_read_data[16]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[16]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[16]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [16]),
        .I1(\read_step_DDR_address_reg[31]_0 [16]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [16]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [48]),
        .O(\axi_c_read_data[16]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[16]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [16]),
        .I1(\read_max_queue_size_reg[31]_0 [16]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [16]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [16]),
        .O(\axi_c_read_data[16]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[16]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [16]),
        .I1(\read_blocking_ratio_reg[31]_0 [16]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [16]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[16]_i_4 
       (.I0(\axi_c_read_data[16]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [48]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [16]),
        .O(\axi_c_read_data[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[16]_i_7 
       (.I0(\latency_reg[63] [16]),
        .I1(\latency_reg[63] [48]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[16]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [16]),
        .O(\axi_c_read_data[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[16]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [16]),
        .I1(\write_step_DDR_address_reg[31]_0 [16]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [16]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [48]),
        .O(\axi_c_read_data[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[16]_i_9 
       (.I0(\debug_axi_control_reg[31] [16]),
        .I1(\write_max_queue_size_reg[31]_0 [16]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [16]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [16]),
        .O(\axi_c_read_data[16]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[17]_i_1 
       (.I0(\axi_c_read_data_reg[17]_i_2_n_0 ),
        .I1(\axi_c_read_data[17]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[17]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[17]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [17]),
        .I1(\read_step_DDR_address_reg[31]_0 [17]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [17]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [49]),
        .O(\axi_c_read_data[17]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[17]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [17]),
        .I1(\read_max_queue_size_reg[31]_0 [17]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [17]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [17]),
        .O(\axi_c_read_data[17]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[17]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [17]),
        .I1(\read_blocking_ratio_reg[31]_0 [17]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [17]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[17]_i_4 
       (.I0(\axi_c_read_data[17]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [49]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [17]),
        .O(\axi_c_read_data[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[17]_i_7 
       (.I0(\latency_reg[63] [17]),
        .I1(\latency_reg[63] [49]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[17]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [17]),
        .O(\axi_c_read_data[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[17]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [17]),
        .I1(\write_step_DDR_address_reg[31]_0 [17]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [17]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [49]),
        .O(\axi_c_read_data[17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[17]_i_9 
       (.I0(\debug_axi_control_reg[31] [17]),
        .I1(\write_max_queue_size_reg[31]_0 [17]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [17]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [17]),
        .O(\axi_c_read_data[17]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[18]_i_1 
       (.I0(\axi_c_read_data_reg[18]_i_2_n_0 ),
        .I1(\axi_c_read_data[18]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[18]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[18]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [18]),
        .I1(\read_step_DDR_address_reg[31]_0 [18]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [18]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [50]),
        .O(\axi_c_read_data[18]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[18]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [18]),
        .I1(\read_max_queue_size_reg[31]_0 [18]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [18]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [18]),
        .O(\axi_c_read_data[18]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[18]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [18]),
        .I1(\read_blocking_ratio_reg[31]_0 [18]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [18]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[18]_i_4 
       (.I0(\axi_c_read_data[18]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [50]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [18]),
        .O(\axi_c_read_data[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[18]_i_7 
       (.I0(\latency_reg[63] [18]),
        .I1(\latency_reg[63] [50]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[18]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [18]),
        .O(\axi_c_read_data[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[18]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [18]),
        .I1(\write_step_DDR_address_reg[31]_0 [18]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [18]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [50]),
        .O(\axi_c_read_data[18]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[18]_i_9 
       (.I0(\debug_axi_control_reg[31] [18]),
        .I1(\write_max_queue_size_reg[31]_0 [18]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [18]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [18]),
        .O(\axi_c_read_data[18]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[19]_i_1 
       (.I0(\axi_c_read_data_reg[19]_i_2_n_0 ),
        .I1(\axi_c_read_data[19]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[19]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[19]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [19]),
        .I1(\read_step_DDR_address_reg[31]_0 [19]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [19]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [51]),
        .O(\axi_c_read_data[19]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[19]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [19]),
        .I1(\read_max_queue_size_reg[31]_0 [19]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [19]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [19]),
        .O(\axi_c_read_data[19]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[19]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [19]),
        .I1(\read_blocking_ratio_reg[31]_0 [19]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [19]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[19]_i_4 
       (.I0(\axi_c_read_data[19]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [51]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [19]),
        .O(\axi_c_read_data[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[19]_i_7 
       (.I0(\latency_reg[63] [19]),
        .I1(\latency_reg[63] [51]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[19]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [19]),
        .O(\axi_c_read_data[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[19]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [19]),
        .I1(\write_step_DDR_address_reg[31]_0 [19]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [19]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [51]),
        .O(\axi_c_read_data[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[19]_i_9 
       (.I0(\debug_axi_control_reg[31] [19]),
        .I1(\write_max_queue_size_reg[31]_0 [19]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [19]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [19]),
        .O(\axi_c_read_data[19]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[1]_i_1 
       (.I0(\axi_c_read_data_reg[1]_i_2_n_0 ),
        .I1(\axi_c_read_data[1]_i_3_n_0 ),
        .I2(\axi_c_read_data[3]_i_4_n_0 ),
        .I3(\axi_c_read_data[1]_i_4_n_0 ),
        .I4(\axi_c_read_data[3]_i_6_n_0 ),
        .I5(\axi_c_read_data[1]_i_5_n_0 ),
        .O(\axi_c_read_data_reg[31] [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[1]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [1]),
        .I1(\read_step_DDR_address_reg[31]_0 [1]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [1]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [33]),
        .O(\axi_c_read_data[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[1]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [1]),
        .I1(\read_max_queue_size_reg[31]_0 [1]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [1]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [1]),
        .O(\axi_c_read_data[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[1]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [1]),
        .I1(\read_blocking_ratio_reg[31]_0 [1]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [1]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[1]_i_4 
       (.I0(\latency_reg[63] [1]),
        .I1(\latency_reg[63] [33]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[1]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [1]),
        .O(\axi_c_read_data[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_c_read_data[1]_i_5 
       (.I0(\runtime_reg[63] [1]),
        .I1(\runtime_reg[63] [33]),
        .I2(axi_c_read_addr[3]),
        .I3(active_write_reg),
        .I4(axi_c_read_addr[2]),
        .O(\axi_c_read_data[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[1]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [1]),
        .I1(\write_step_DDR_address_reg[31]_0 [1]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [1]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [33]),
        .O(\axi_c_read_data[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[1]_i_9 
       (.I0(\debug_axi_control_reg[31] [1]),
        .I1(\write_max_queue_size_reg[31]_0 [1]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [1]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [1]),
        .O(\axi_c_read_data[1]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[20]_i_1 
       (.I0(\axi_c_read_data_reg[20]_i_2_n_0 ),
        .I1(\axi_c_read_data[20]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[20]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[20]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [20]),
        .I1(\read_step_DDR_address_reg[31]_0 [20]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [20]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [52]),
        .O(\axi_c_read_data[20]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[20]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [20]),
        .I1(\read_max_queue_size_reg[31]_0 [20]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [20]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [20]),
        .O(\axi_c_read_data[20]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[20]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [20]),
        .I1(\read_blocking_ratio_reg[31]_0 [20]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [20]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[20]_i_4 
       (.I0(\axi_c_read_data[20]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [52]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [20]),
        .O(\axi_c_read_data[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[20]_i_7 
       (.I0(\latency_reg[63] [20]),
        .I1(\latency_reg[63] [52]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[20]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [20]),
        .O(\axi_c_read_data[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[20]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [20]),
        .I1(\write_step_DDR_address_reg[31]_0 [20]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [20]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [52]),
        .O(\axi_c_read_data[20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[20]_i_9 
       (.I0(\debug_axi_control_reg[31] [20]),
        .I1(\write_max_queue_size_reg[31]_0 [20]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [20]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [20]),
        .O(\axi_c_read_data[20]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[21]_i_1 
       (.I0(\axi_c_read_data_reg[21]_i_2_n_0 ),
        .I1(\axi_c_read_data[21]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[21]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[21]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [21]),
        .I1(\read_step_DDR_address_reg[31]_0 [21]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [21]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [53]),
        .O(\axi_c_read_data[21]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[21]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [21]),
        .I1(\read_max_queue_size_reg[31]_0 [21]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [21]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [21]),
        .O(\axi_c_read_data[21]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[21]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [21]),
        .I1(\read_blocking_ratio_reg[31]_0 [21]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [21]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[21]_i_4 
       (.I0(\axi_c_read_data[21]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [53]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [21]),
        .O(\axi_c_read_data[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[21]_i_7 
       (.I0(\latency_reg[63] [21]),
        .I1(\latency_reg[63] [53]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[21]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [21]),
        .O(\axi_c_read_data[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[21]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [21]),
        .I1(\write_step_DDR_address_reg[31]_0 [21]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [21]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [53]),
        .O(\axi_c_read_data[21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[21]_i_9 
       (.I0(\debug_axi_control_reg[31] [21]),
        .I1(\write_max_queue_size_reg[31]_0 [21]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [21]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [21]),
        .O(\axi_c_read_data[21]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[22]_i_1 
       (.I0(\axi_c_read_data_reg[22]_i_2_n_0 ),
        .I1(\axi_c_read_data[22]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[22]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[22]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [22]),
        .I1(\read_step_DDR_address_reg[31]_0 [22]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [22]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [54]),
        .O(\axi_c_read_data[22]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[22]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [22]),
        .I1(\read_max_queue_size_reg[31]_0 [22]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [22]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [22]),
        .O(\axi_c_read_data[22]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[22]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [22]),
        .I1(\read_blocking_ratio_reg[31]_0 [22]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [22]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[22]_i_4 
       (.I0(\axi_c_read_data[22]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [54]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [22]),
        .O(\axi_c_read_data[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[22]_i_7 
       (.I0(\latency_reg[63] [22]),
        .I1(\latency_reg[63] [54]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[22]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [22]),
        .O(\axi_c_read_data[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[22]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [22]),
        .I1(\write_step_DDR_address_reg[31]_0 [22]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [22]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [54]),
        .O(\axi_c_read_data[22]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[22]_i_9 
       (.I0(\debug_axi_control_reg[31] [22]),
        .I1(\write_max_queue_size_reg[31]_0 [22]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [22]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [22]),
        .O(\axi_c_read_data[22]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[23]_i_1 
       (.I0(\axi_c_read_data_reg[23]_i_2_n_0 ),
        .I1(\axi_c_read_data[23]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[23]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[23]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [23]),
        .I1(\read_step_DDR_address_reg[31]_0 [23]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [23]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [55]),
        .O(\axi_c_read_data[23]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[23]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [23]),
        .I1(\read_max_queue_size_reg[31]_0 [23]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [23]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [23]),
        .O(\axi_c_read_data[23]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[23]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [23]),
        .I1(\read_blocking_ratio_reg[31]_0 [23]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [23]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[23]_i_4 
       (.I0(\axi_c_read_data[23]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [55]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [23]),
        .O(\axi_c_read_data[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[23]_i_7 
       (.I0(\latency_reg[63] [23]),
        .I1(\latency_reg[63] [55]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[23]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [23]),
        .O(\axi_c_read_data[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[23]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [23]),
        .I1(\write_step_DDR_address_reg[31]_0 [23]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [23]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [55]),
        .O(\axi_c_read_data[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[23]_i_9 
       (.I0(\debug_axi_control_reg[31] [23]),
        .I1(\write_max_queue_size_reg[31]_0 [23]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [23]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [23]),
        .O(\axi_c_read_data[23]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[24]_i_1 
       (.I0(\axi_c_read_data_reg[24]_i_2_n_0 ),
        .I1(\axi_c_read_data[24]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[24]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[24]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [24]),
        .I1(\read_step_DDR_address_reg[31]_0 [24]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [24]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [56]),
        .O(\axi_c_read_data[24]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[24]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [24]),
        .I1(\read_max_queue_size_reg[31]_0 [24]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [24]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [24]),
        .O(\axi_c_read_data[24]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[24]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [24]),
        .I1(\read_blocking_ratio_reg[31]_0 [24]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [24]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[24]_i_4 
       (.I0(\axi_c_read_data[24]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [56]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [24]),
        .O(\axi_c_read_data[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[24]_i_7 
       (.I0(\latency_reg[63] [24]),
        .I1(\latency_reg[63] [56]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[24]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [24]),
        .O(\axi_c_read_data[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[24]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [24]),
        .I1(\write_step_DDR_address_reg[31]_0 [24]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [24]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [56]),
        .O(\axi_c_read_data[24]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[24]_i_9 
       (.I0(\debug_axi_control_reg[31] [24]),
        .I1(\write_max_queue_size_reg[31]_0 [24]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [24]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [24]),
        .O(\axi_c_read_data[24]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[25]_i_1 
       (.I0(\axi_c_read_data_reg[25]_i_2_n_0 ),
        .I1(\axi_c_read_data[25]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[25]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[25]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [25]),
        .I1(\read_step_DDR_address_reg[31]_0 [25]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [25]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [57]),
        .O(\axi_c_read_data[25]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[25]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [25]),
        .I1(\read_max_queue_size_reg[31]_0 [25]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [25]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [25]),
        .O(\axi_c_read_data[25]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[25]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [25]),
        .I1(\read_blocking_ratio_reg[31]_0 [25]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [25]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[25]_i_4 
       (.I0(\axi_c_read_data[25]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [57]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [25]),
        .O(\axi_c_read_data[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[25]_i_7 
       (.I0(\latency_reg[63] [25]),
        .I1(\latency_reg[63] [57]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[25]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [25]),
        .O(\axi_c_read_data[25]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[25]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [25]),
        .I1(\write_step_DDR_address_reg[31]_0 [25]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [25]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [57]),
        .O(\axi_c_read_data[25]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[25]_i_9 
       (.I0(\debug_axi_control_reg[31] [25]),
        .I1(\write_max_queue_size_reg[31]_0 [25]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [25]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [25]),
        .O(\axi_c_read_data[25]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[26]_i_1 
       (.I0(\axi_c_read_data_reg[26]_i_2_n_0 ),
        .I1(\axi_c_read_data[26]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[26]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[26]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [26]),
        .I1(\read_step_DDR_address_reg[31]_0 [26]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [26]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [58]),
        .O(\axi_c_read_data[26]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[26]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [26]),
        .I1(\read_max_queue_size_reg[31]_0 [26]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [26]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [26]),
        .O(\axi_c_read_data[26]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[26]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [26]),
        .I1(\read_blocking_ratio_reg[31]_0 [26]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [26]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[26]_i_4 
       (.I0(\axi_c_read_data[26]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [58]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [26]),
        .O(\axi_c_read_data[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[26]_i_7 
       (.I0(\latency_reg[63] [26]),
        .I1(\latency_reg[63] [58]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[26]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [26]),
        .O(\axi_c_read_data[26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[26]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [26]),
        .I1(\write_step_DDR_address_reg[31]_0 [26]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [26]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [58]),
        .O(\axi_c_read_data[26]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[26]_i_9 
       (.I0(\debug_axi_control_reg[31] [26]),
        .I1(\write_max_queue_size_reg[31]_0 [26]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [26]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [26]),
        .O(\axi_c_read_data[26]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[27]_i_1 
       (.I0(\axi_c_read_data_reg[27]_i_2_n_0 ),
        .I1(\axi_c_read_data[27]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[27]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[27]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [27]),
        .I1(\read_step_DDR_address_reg[31]_0 [27]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [27]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [59]),
        .O(\axi_c_read_data[27]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[27]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [27]),
        .I1(\read_max_queue_size_reg[31]_0 [27]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [27]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [27]),
        .O(\axi_c_read_data[27]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[27]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [27]),
        .I1(\read_blocking_ratio_reg[31]_0 [27]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [27]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[27]_i_4 
       (.I0(\axi_c_read_data[27]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [59]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [27]),
        .O(\axi_c_read_data[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[27]_i_7 
       (.I0(\latency_reg[63] [27]),
        .I1(\latency_reg[63] [59]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[27]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [27]),
        .O(\axi_c_read_data[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[27]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [27]),
        .I1(\write_step_DDR_address_reg[31]_0 [27]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [27]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [59]),
        .O(\axi_c_read_data[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[27]_i_9 
       (.I0(\debug_axi_control_reg[31] [27]),
        .I1(\write_max_queue_size_reg[31]_0 [27]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [27]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [27]),
        .O(\axi_c_read_data[27]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[28]_i_1 
       (.I0(\axi_c_read_data_reg[28]_i_2_n_0 ),
        .I1(\axi_c_read_data[28]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[28]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[28]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [28]),
        .I1(\read_step_DDR_address_reg[31]_0 [28]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [28]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [60]),
        .O(\axi_c_read_data[28]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[28]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [28]),
        .I1(\read_max_queue_size_reg[31]_0 [28]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [28]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [28]),
        .O(\axi_c_read_data[28]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[28]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [28]),
        .I1(\read_blocking_ratio_reg[31]_0 [28]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [28]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[28]_i_4 
       (.I0(\axi_c_read_data[28]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [60]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [28]),
        .O(\axi_c_read_data[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[28]_i_7 
       (.I0(\latency_reg[63] [28]),
        .I1(\latency_reg[63] [60]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[28]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [28]),
        .O(\axi_c_read_data[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[28]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [28]),
        .I1(\write_step_DDR_address_reg[31]_0 [28]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [28]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [60]),
        .O(\axi_c_read_data[28]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[28]_i_9 
       (.I0(\debug_axi_control_reg[31] [28]),
        .I1(\write_max_queue_size_reg[31]_0 [28]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [28]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [28]),
        .O(\axi_c_read_data[28]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[29]_i_1 
       (.I0(\axi_c_read_data_reg[29]_i_2_n_0 ),
        .I1(\axi_c_read_data[29]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[29]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[29]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [29]),
        .I1(\read_step_DDR_address_reg[31]_0 [29]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [29]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [61]),
        .O(\axi_c_read_data[29]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[29]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [29]),
        .I1(\read_max_queue_size_reg[31]_0 [29]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [29]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [29]),
        .O(\axi_c_read_data[29]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[29]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [29]),
        .I1(\read_blocking_ratio_reg[31]_0 [29]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [29]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[29]_i_4 
       (.I0(\axi_c_read_data[29]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [61]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [29]),
        .O(\axi_c_read_data[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[29]_i_7 
       (.I0(\latency_reg[63] [29]),
        .I1(\latency_reg[63] [61]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[29]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [29]),
        .O(\axi_c_read_data[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[29]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [29]),
        .I1(\write_step_DDR_address_reg[31]_0 [29]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [29]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [61]),
        .O(\axi_c_read_data[29]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[29]_i_9 
       (.I0(\debug_axi_control_reg[31] [29]),
        .I1(\write_max_queue_size_reg[31]_0 [29]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [29]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [29]),
        .O(\axi_c_read_data[29]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[2]_i_1 
       (.I0(\axi_c_read_data_reg[2]_i_2_n_0 ),
        .I1(\axi_c_read_data[2]_i_3_n_0 ),
        .I2(\axi_c_read_data[3]_i_4_n_0 ),
        .I3(\axi_c_read_data[2]_i_4_n_0 ),
        .I4(\axi_c_read_data[3]_i_6_n_0 ),
        .I5(\axi_c_read_data[2]_i_5_n_0 ),
        .O(\axi_c_read_data_reg[31] [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[2]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [2]),
        .I1(\read_step_DDR_address_reg[31]_0 [2]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [2]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [34]),
        .O(\axi_c_read_data[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[2]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [2]),
        .I1(\read_max_queue_size_reg[31]_0 [2]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [2]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [2]),
        .O(\axi_c_read_data[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[2]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [2]),
        .I1(\read_blocking_ratio_reg[31]_0 [2]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [2]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[2]_i_4 
       (.I0(\latency_reg[63] [2]),
        .I1(\latency_reg[63] [34]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[2]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [2]),
        .O(\axi_c_read_data[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_c_read_data[2]_i_5 
       (.I0(\runtime_reg[63] [2]),
        .I1(\runtime_reg[63] [34]),
        .I2(axi_c_read_addr[3]),
        .I3(out),
        .I4(axi_c_read_addr[2]),
        .O(\axi_c_read_data[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[2]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [2]),
        .I1(\write_step_DDR_address_reg[31]_0 [2]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [2]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [34]),
        .O(\axi_c_read_data[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[2]_i_9 
       (.I0(\debug_axi_control_reg[31] [2]),
        .I1(\write_max_queue_size_reg[31]_0 [2]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [2]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [2]),
        .O(\axi_c_read_data[2]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[30]_i_1 
       (.I0(\axi_c_read_data_reg[30]_i_2_n_0 ),
        .I1(\axi_c_read_data[30]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[30]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[30]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [30]),
        .I1(\read_step_DDR_address_reg[31]_0 [30]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [30]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [62]),
        .O(\axi_c_read_data[30]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[30]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [30]),
        .I1(\read_max_queue_size_reg[31]_0 [30]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [30]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [30]),
        .O(\axi_c_read_data[30]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[30]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [30]),
        .I1(\read_blocking_ratio_reg[31]_0 [30]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [30]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[30]_i_4 
       (.I0(\axi_c_read_data[30]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [62]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [30]),
        .O(\axi_c_read_data[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[30]_i_7 
       (.I0(\latency_reg[63] [30]),
        .I1(\latency_reg[63] [62]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[30]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [30]),
        .O(\axi_c_read_data[30]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[30]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [30]),
        .I1(\write_step_DDR_address_reg[31]_0 [30]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [30]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [62]),
        .O(\axi_c_read_data[30]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[30]_i_9 
       (.I0(\debug_axi_control_reg[31] [30]),
        .I1(\write_max_queue_size_reg[31]_0 [30]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [30]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [30]),
        .O(\axi_c_read_data[30]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[31]_i_1 
       (.I0(\axi_c_read_data_reg[31]_i_2_n_0 ),
        .I1(\axi_c_read_data[31]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[31]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[31]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [31]),
        .I1(\read_step_DDR_address_reg[31]_0 [31]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [31]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [63]),
        .O(\axi_c_read_data[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[31]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [31]),
        .I1(\read_max_queue_size_reg[31]_0 [31]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [31]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [31]),
        .O(\axi_c_read_data[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[31]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [31]),
        .I1(\read_blocking_ratio_reg[31]_0 [31]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [31]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[31]_i_4 
       (.I0(\axi_c_read_data[31]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [63]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [31]),
        .O(\axi_c_read_data[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[31]_i_7 
       (.I0(\latency_reg[63] [31]),
        .I1(\latency_reg[63] [63]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[31]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [31]),
        .O(\axi_c_read_data[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[31]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [31]),
        .I1(\write_step_DDR_address_reg[31]_0 [31]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [31]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [63]),
        .O(\axi_c_read_data[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[31]_i_9 
       (.I0(\debug_axi_control_reg[31] [31]),
        .I1(\write_max_queue_size_reg[31]_0 [31]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [31]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [31]),
        .O(\axi_c_read_data[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[3]_i_1 
       (.I0(\axi_c_read_data_reg[3]_i_2_n_0 ),
        .I1(\axi_c_read_data[3]_i_3_n_0 ),
        .I2(\axi_c_read_data[3]_i_4_n_0 ),
        .I3(\axi_c_read_data[3]_i_5_n_0 ),
        .I4(\axi_c_read_data[3]_i_6_n_0 ),
        .I5(\axi_c_read_data[3]_i_7_n_0 ),
        .O(\axi_c_read_data_reg[31] [3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[3]_i_10 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [3]),
        .I1(\write_step_DDR_address_reg[31]_0 [3]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [3]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [35]),
        .O(\axi_c_read_data[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[3]_i_11 
       (.I0(\debug_axi_control_reg[31] [3]),
        .I1(\write_max_queue_size_reg[31]_0 [3]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [3]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [3]),
        .O(\axi_c_read_data[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[3]_i_12 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [3]),
        .I1(\read_step_DDR_address_reg[31]_0 [3]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [3]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [35]),
        .O(\axi_c_read_data[3]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[3]_i_13 
       (.I0(\debug_axi_r_control_reg[31] [3]),
        .I1(\read_max_queue_size_reg[31]_0 [3]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [3]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [3]),
        .O(\axi_c_read_data[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[3]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [3]),
        .I1(\read_blocking_ratio_reg[31]_0 [3]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [3]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \axi_c_read_data[3]_i_4 
       (.I0(axi_c_read_addr[5]),
        .I1(axi_c_read_addr[6]),
        .O(\axi_c_read_data[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[3]_i_5 
       (.I0(\latency_reg[63] [3]),
        .I1(\latency_reg[63] [35]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[3]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [3]),
        .O(\axi_c_read_data[3]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h5D)) 
    \axi_c_read_data[3]_i_6 
       (.I0(axi_c_read_addr[6]),
        .I1(axi_c_read_addr[4]),
        .I2(axi_c_read_addr[5]),
        .O(\axi_c_read_data[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_c_read_data[3]_i_7 
       (.I0(\runtime_reg[63] [3]),
        .I1(\runtime_reg[63] [35]),
        .I2(axi_c_read_addr[3]),
        .I3(active_blocking_reg_4),
        .I4(axi_c_read_addr[2]),
        .O(\axi_c_read_data[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBA8ABABABA8A8A8A)) 
    \axi_c_read_data[4]_i_1 
       (.I0(\axi_c_read_data[4]_i_2_n_0 ),
        .I1(axi_c_read_addr[5]),
        .I2(axi_c_read_addr[6]),
        .I3(\axi_c_read_data[4]_i_3_n_0 ),
        .I4(axi_c_read_addr[4]),
        .I5(\axi_c_read_data[4]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[4]_i_10 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [4]),
        .I1(\write_step_DDR_address_reg[31]_0 [4]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [4]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [36]),
        .O(\axi_c_read_data[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[4]_i_11 
       (.I0(\debug_axi_control_reg[31] [4]),
        .I1(\write_max_queue_size_reg[31]_0 [4]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [4]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [4]),
        .O(\axi_c_read_data[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \axi_c_read_data[4]_i_2 
       (.I0(\axi_c_read_data_reg[4]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[4]_i_6_n_0 ),
        .I2(axi_c_read_addr[6]),
        .I3(axi_c_read_addr[4]),
        .I4(axi_c_read_addr[5]),
        .I5(\axi_c_read_data[4]_i_7_n_0 ),
        .O(\axi_c_read_data[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[4]_i_3 
       (.I0(\latency_reg[63] [4]),
        .I1(\latency_reg[63] [36]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[4]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [4]),
        .O(\axi_c_read_data[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    \axi_c_read_data[4]_i_4 
       (.I0(\runtime_reg[63] [4]),
        .I1(\runtime_reg[63] [36]),
        .I2(axi_c_read_addr[3]),
        .I3(active_runtime),
        .I4(axi_c_read_addr[2]),
        .O(\axi_c_read_data[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[4]_i_7 
       (.I0(\write_blocking_ratio_reg[31]_0 [4]),
        .I1(\read_blocking_ratio_reg[31]_0 [4]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [4]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[4]_i_8 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [4]),
        .I1(\read_step_DDR_address_reg[31]_0 [4]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [4]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [36]),
        .O(\axi_c_read_data[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[4]_i_9 
       (.I0(\debug_axi_r_control_reg[31] [4]),
        .I1(\read_max_queue_size_reg[31]_0 [4]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [4]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [4]),
        .O(\axi_c_read_data[4]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[5]_i_1 
       (.I0(\axi_c_read_data_reg[5]_i_2_n_0 ),
        .I1(\axi_c_read_data[5]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[5]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[5]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [5]),
        .I1(\read_step_DDR_address_reg[31]_0 [5]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [5]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [37]),
        .O(\axi_c_read_data[5]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[5]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [5]),
        .I1(\read_max_queue_size_reg[31]_0 [5]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [5]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [5]),
        .O(\axi_c_read_data[5]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[5]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [5]),
        .I1(\read_blocking_ratio_reg[31]_0 [5]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [5]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[5]_i_4 
       (.I0(\axi_c_read_data[5]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [37]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [5]),
        .O(\axi_c_read_data[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[5]_i_7 
       (.I0(\latency_reg[63] [5]),
        .I1(\latency_reg[63] [37]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[5]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [5]),
        .O(\axi_c_read_data[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[5]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [5]),
        .I1(\write_step_DDR_address_reg[31]_0 [5]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [5]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [37]),
        .O(\axi_c_read_data[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[5]_i_9 
       (.I0(\debug_axi_control_reg[31] [5]),
        .I1(\write_max_queue_size_reg[31]_0 [5]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [5]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [5]),
        .O(\axi_c_read_data[5]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[6]_i_1 
       (.I0(\axi_c_read_data_reg[6]_i_2_n_0 ),
        .I1(\axi_c_read_data[6]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[6]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[6]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [6]),
        .I1(\read_step_DDR_address_reg[31]_0 [6]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [6]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [38]),
        .O(\axi_c_read_data[6]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[6]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [6]),
        .I1(\read_max_queue_size_reg[31]_0 [6]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [6]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [6]),
        .O(\axi_c_read_data[6]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[6]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [6]),
        .I1(\read_blocking_ratio_reg[31]_0 [6]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [6]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[6]_i_4 
       (.I0(\axi_c_read_data[6]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [38]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [6]),
        .O(\axi_c_read_data[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[6]_i_7 
       (.I0(\latency_reg[63] [6]),
        .I1(\latency_reg[63] [38]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[6]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [6]),
        .O(\axi_c_read_data[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[6]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [6]),
        .I1(\write_step_DDR_address_reg[31]_0 [6]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [6]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [38]),
        .O(\axi_c_read_data[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[6]_i_9 
       (.I0(\debug_axi_control_reg[31] [6]),
        .I1(\write_max_queue_size_reg[31]_0 [6]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [6]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [6]),
        .O(\axi_c_read_data[6]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[7]_i_1 
       (.I0(\axi_c_read_data_reg[7]_i_2_n_0 ),
        .I1(\axi_c_read_data[7]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[7]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[7]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [7]),
        .I1(\read_step_DDR_address_reg[31]_0 [7]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [7]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [39]),
        .O(\axi_c_read_data[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[7]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [7]),
        .I1(\read_max_queue_size_reg[31]_0 [7]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [7]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [7]),
        .O(\axi_c_read_data[7]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[7]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [7]),
        .I1(\read_blocking_ratio_reg[31]_0 [7]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [7]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[7]_i_4 
       (.I0(\axi_c_read_data[7]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [39]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [7]),
        .O(\axi_c_read_data[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[7]_i_7 
       (.I0(\latency_reg[63] [7]),
        .I1(\latency_reg[63] [39]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[7]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [7]),
        .O(\axi_c_read_data[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[7]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [7]),
        .I1(\write_step_DDR_address_reg[31]_0 [7]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [7]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [39]),
        .O(\axi_c_read_data[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[7]_i_9 
       (.I0(\debug_axi_control_reg[31] [7]),
        .I1(\write_max_queue_size_reg[31]_0 [7]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [7]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [7]),
        .O(\axi_c_read_data[7]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[8]_i_1 
       (.I0(\axi_c_read_data_reg[8]_i_2_n_0 ),
        .I1(\axi_c_read_data[8]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[8]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[8]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [8]),
        .I1(\read_step_DDR_address_reg[31]_0 [8]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [8]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [40]),
        .O(\axi_c_read_data[8]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[8]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [8]),
        .I1(\read_max_queue_size_reg[31]_0 [8]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [8]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [8]),
        .O(\axi_c_read_data[8]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[8]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [8]),
        .I1(\read_blocking_ratio_reg[31]_0 [8]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [8]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[8]_i_4 
       (.I0(\axi_c_read_data[8]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [40]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [8]),
        .O(\axi_c_read_data[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[8]_i_7 
       (.I0(\latency_reg[63] [8]),
        .I1(\latency_reg[63] [40]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[8]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [8]),
        .O(\axi_c_read_data[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[8]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [8]),
        .I1(\write_step_DDR_address_reg[31]_0 [8]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [8]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [40]),
        .O(\axi_c_read_data[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[8]_i_9 
       (.I0(\debug_axi_control_reg[31] [8]),
        .I1(\write_max_queue_size_reg[31]_0 [8]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [8]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [8]),
        .O(\axi_c_read_data[8]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hCFAAC0AA)) 
    \axi_c_read_data[9]_i_1 
       (.I0(\axi_c_read_data_reg[9]_i_2_n_0 ),
        .I1(\axi_c_read_data[9]_i_3_n_0 ),
        .I2(axi_c_read_addr[5]),
        .I3(axi_c_read_addr[6]),
        .I4(\axi_c_read_data[9]_i_4_n_0 ),
        .O(\axi_c_read_data_reg[31] [9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[9]_i_10 
       (.I0(\read_count_bursts_per_reset_reg[31]_0 [9]),
        .I1(\read_step_DDR_address_reg[31]_0 [9]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_start_DDR_address_reg[63]_0 [9]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_start_DDR_address_reg[63]_0 [41]),
        .O(\axi_c_read_data[9]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[9]_i_11 
       (.I0(\debug_axi_r_control_reg[31] [9]),
        .I1(\read_max_queue_size_reg[31]_0 [9]),
        .I2(axi_c_read_addr[3]),
        .I3(\read_ticks_per_burst_reg[31]_0 [9]),
        .I4(axi_c_read_addr[2]),
        .I5(\read_burst_size_reg[31]_0 [9]),
        .O(\axi_c_read_data[9]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hC0A0C0A0000F0000)) 
    \axi_c_read_data[9]_i_3 
       (.I0(\write_blocking_ratio_reg[31]_0 [9]),
        .I1(\read_blocking_ratio_reg[31]_0 [9]),
        .I2(axi_c_read_addr[4]),
        .I3(axi_c_read_addr[2]),
        .I4(\max_cycles_with_no_data_read_reg[31]_0 [9]),
        .I5(axi_c_read_addr[3]),
        .O(\axi_c_read_data[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8888888B888)) 
    \axi_c_read_data[9]_i_4 
       (.I0(\axi_c_read_data[9]_i_7_n_0 ),
        .I1(\axi_c_read_data[3]_i_6_n_0 ),
        .I2(axi_c_read_addr[3]),
        .I3(\runtime_reg[63] [41]),
        .I4(axi_c_read_addr[2]),
        .I5(\runtime_reg[63] [9]),
        .O(\axi_c_read_data[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[9]_i_7 
       (.I0(\latency_reg[63] [9]),
        .I1(\latency_reg[63] [41]),
        .I2(axi_c_read_addr[3]),
        .I3(Q[9]),
        .I4(axi_c_read_addr[2]),
        .I5(\countAddrSent_reg[31]_1 [9]),
        .O(\axi_c_read_data[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[9]_i_8 
       (.I0(\write_count_bursts_per_reset_reg[31]_0 [9]),
        .I1(\write_step_DDR_address_reg[31]_0 [9]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_start_DDR_address_reg[63]_0 [9]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_start_DDR_address_reg[63]_0 [41]),
        .O(\axi_c_read_data[9]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \axi_c_read_data[9]_i_9 
       (.I0(\debug_axi_control_reg[31] [9]),
        .I1(\write_max_queue_size_reg[31]_0 [9]),
        .I2(axi_c_read_addr[3]),
        .I3(\write_ticks_per_burst_reg[31]_0 [9]),
        .I4(axi_c_read_addr[2]),
        .I5(\write_burst_size_reg[31]_0 [9]),
        .O(\axi_c_read_data[9]_i_9_n_0 ));
  MUXF8 \axi_c_read_data_reg[0]_i_2 
       (.I0(\axi_c_read_data_reg[0]_i_6_n_0 ),
        .I1(\axi_c_read_data_reg[0]_i_7_n_0 ),
        .O(\axi_c_read_data_reg[0]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[0]_i_6 
       (.I0(\axi_c_read_data[0]_i_8_n_0 ),
        .I1(\axi_c_read_data[0]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[0]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[0]_i_7 
       (.I0(\axi_c_read_data[0]_i_10_n_0 ),
        .I1(\axi_c_read_data[0]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[0]_i_7_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[10]_i_2 
       (.I0(\axi_c_read_data_reg[10]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[10]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[10]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[10]_i_5 
       (.I0(\axi_c_read_data[10]_i_8_n_0 ),
        .I1(\axi_c_read_data[10]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[10]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[10]_i_6 
       (.I0(\axi_c_read_data[10]_i_10_n_0 ),
        .I1(\axi_c_read_data[10]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[10]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[11]_i_2 
       (.I0(\axi_c_read_data_reg[11]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[11]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[11]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[11]_i_5 
       (.I0(\axi_c_read_data[11]_i_8_n_0 ),
        .I1(\axi_c_read_data[11]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[11]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[11]_i_6 
       (.I0(\axi_c_read_data[11]_i_10_n_0 ),
        .I1(\axi_c_read_data[11]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[11]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[12]_i_2 
       (.I0(\axi_c_read_data_reg[12]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[12]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[12]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[12]_i_5 
       (.I0(\axi_c_read_data[12]_i_8_n_0 ),
        .I1(\axi_c_read_data[12]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[12]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[12]_i_6 
       (.I0(\axi_c_read_data[12]_i_10_n_0 ),
        .I1(\axi_c_read_data[12]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[12]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[13]_i_2 
       (.I0(\axi_c_read_data_reg[13]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[13]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[13]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[13]_i_5 
       (.I0(\axi_c_read_data[13]_i_8_n_0 ),
        .I1(\axi_c_read_data[13]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[13]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[13]_i_6 
       (.I0(\axi_c_read_data[13]_i_10_n_0 ),
        .I1(\axi_c_read_data[13]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[13]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[14]_i_2 
       (.I0(\axi_c_read_data_reg[14]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[14]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[14]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[14]_i_5 
       (.I0(\axi_c_read_data[14]_i_8_n_0 ),
        .I1(\axi_c_read_data[14]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[14]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[14]_i_6 
       (.I0(\axi_c_read_data[14]_i_10_n_0 ),
        .I1(\axi_c_read_data[14]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[14]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[15]_i_2 
       (.I0(\axi_c_read_data_reg[15]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[15]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[15]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[15]_i_5 
       (.I0(\axi_c_read_data[15]_i_8_n_0 ),
        .I1(\axi_c_read_data[15]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[15]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[15]_i_6 
       (.I0(\axi_c_read_data[15]_i_10_n_0 ),
        .I1(\axi_c_read_data[15]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[15]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[16]_i_2 
       (.I0(\axi_c_read_data_reg[16]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[16]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[16]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[16]_i_5 
       (.I0(\axi_c_read_data[16]_i_8_n_0 ),
        .I1(\axi_c_read_data[16]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[16]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[16]_i_6 
       (.I0(\axi_c_read_data[16]_i_10_n_0 ),
        .I1(\axi_c_read_data[16]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[16]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[17]_i_2 
       (.I0(\axi_c_read_data_reg[17]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[17]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[17]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[17]_i_5 
       (.I0(\axi_c_read_data[17]_i_8_n_0 ),
        .I1(\axi_c_read_data[17]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[17]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[17]_i_6 
       (.I0(\axi_c_read_data[17]_i_10_n_0 ),
        .I1(\axi_c_read_data[17]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[17]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[18]_i_2 
       (.I0(\axi_c_read_data_reg[18]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[18]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[18]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[18]_i_5 
       (.I0(\axi_c_read_data[18]_i_8_n_0 ),
        .I1(\axi_c_read_data[18]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[18]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[18]_i_6 
       (.I0(\axi_c_read_data[18]_i_10_n_0 ),
        .I1(\axi_c_read_data[18]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[18]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[19]_i_2 
       (.I0(\axi_c_read_data_reg[19]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[19]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[19]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[19]_i_5 
       (.I0(\axi_c_read_data[19]_i_8_n_0 ),
        .I1(\axi_c_read_data[19]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[19]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[19]_i_6 
       (.I0(\axi_c_read_data[19]_i_10_n_0 ),
        .I1(\axi_c_read_data[19]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[19]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[1]_i_2 
       (.I0(\axi_c_read_data_reg[1]_i_6_n_0 ),
        .I1(\axi_c_read_data_reg[1]_i_7_n_0 ),
        .O(\axi_c_read_data_reg[1]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[1]_i_6 
       (.I0(\axi_c_read_data[1]_i_8_n_0 ),
        .I1(\axi_c_read_data[1]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[1]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[1]_i_7 
       (.I0(\axi_c_read_data[1]_i_10_n_0 ),
        .I1(\axi_c_read_data[1]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[1]_i_7_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[20]_i_2 
       (.I0(\axi_c_read_data_reg[20]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[20]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[20]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[20]_i_5 
       (.I0(\axi_c_read_data[20]_i_8_n_0 ),
        .I1(\axi_c_read_data[20]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[20]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[20]_i_6 
       (.I0(\axi_c_read_data[20]_i_10_n_0 ),
        .I1(\axi_c_read_data[20]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[20]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[21]_i_2 
       (.I0(\axi_c_read_data_reg[21]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[21]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[21]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[21]_i_5 
       (.I0(\axi_c_read_data[21]_i_8_n_0 ),
        .I1(\axi_c_read_data[21]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[21]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[21]_i_6 
       (.I0(\axi_c_read_data[21]_i_10_n_0 ),
        .I1(\axi_c_read_data[21]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[21]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[22]_i_2 
       (.I0(\axi_c_read_data_reg[22]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[22]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[22]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[22]_i_5 
       (.I0(\axi_c_read_data[22]_i_8_n_0 ),
        .I1(\axi_c_read_data[22]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[22]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[22]_i_6 
       (.I0(\axi_c_read_data[22]_i_10_n_0 ),
        .I1(\axi_c_read_data[22]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[22]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[23]_i_2 
       (.I0(\axi_c_read_data_reg[23]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[23]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[23]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[23]_i_5 
       (.I0(\axi_c_read_data[23]_i_8_n_0 ),
        .I1(\axi_c_read_data[23]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[23]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[23]_i_6 
       (.I0(\axi_c_read_data[23]_i_10_n_0 ),
        .I1(\axi_c_read_data[23]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[23]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[24]_i_2 
       (.I0(\axi_c_read_data_reg[24]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[24]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[24]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[24]_i_5 
       (.I0(\axi_c_read_data[24]_i_8_n_0 ),
        .I1(\axi_c_read_data[24]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[24]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[24]_i_6 
       (.I0(\axi_c_read_data[24]_i_10_n_0 ),
        .I1(\axi_c_read_data[24]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[24]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[25]_i_2 
       (.I0(\axi_c_read_data_reg[25]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[25]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[25]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[25]_i_5 
       (.I0(\axi_c_read_data[25]_i_8_n_0 ),
        .I1(\axi_c_read_data[25]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[25]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[25]_i_6 
       (.I0(\axi_c_read_data[25]_i_10_n_0 ),
        .I1(\axi_c_read_data[25]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[25]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[26]_i_2 
       (.I0(\axi_c_read_data_reg[26]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[26]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[26]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[26]_i_5 
       (.I0(\axi_c_read_data[26]_i_8_n_0 ),
        .I1(\axi_c_read_data[26]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[26]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[26]_i_6 
       (.I0(\axi_c_read_data[26]_i_10_n_0 ),
        .I1(\axi_c_read_data[26]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[26]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[27]_i_2 
       (.I0(\axi_c_read_data_reg[27]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[27]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[27]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[27]_i_5 
       (.I0(\axi_c_read_data[27]_i_8_n_0 ),
        .I1(\axi_c_read_data[27]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[27]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[27]_i_6 
       (.I0(\axi_c_read_data[27]_i_10_n_0 ),
        .I1(\axi_c_read_data[27]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[27]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[28]_i_2 
       (.I0(\axi_c_read_data_reg[28]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[28]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[28]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[28]_i_5 
       (.I0(\axi_c_read_data[28]_i_8_n_0 ),
        .I1(\axi_c_read_data[28]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[28]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[28]_i_6 
       (.I0(\axi_c_read_data[28]_i_10_n_0 ),
        .I1(\axi_c_read_data[28]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[28]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[29]_i_2 
       (.I0(\axi_c_read_data_reg[29]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[29]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[29]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[29]_i_5 
       (.I0(\axi_c_read_data[29]_i_8_n_0 ),
        .I1(\axi_c_read_data[29]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[29]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[29]_i_6 
       (.I0(\axi_c_read_data[29]_i_10_n_0 ),
        .I1(\axi_c_read_data[29]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[29]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[2]_i_2 
       (.I0(\axi_c_read_data_reg[2]_i_6_n_0 ),
        .I1(\axi_c_read_data_reg[2]_i_7_n_0 ),
        .O(\axi_c_read_data_reg[2]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[2]_i_6 
       (.I0(\axi_c_read_data[2]_i_8_n_0 ),
        .I1(\axi_c_read_data[2]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[2]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[2]_i_7 
       (.I0(\axi_c_read_data[2]_i_10_n_0 ),
        .I1(\axi_c_read_data[2]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[2]_i_7_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[30]_i_2 
       (.I0(\axi_c_read_data_reg[30]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[30]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[30]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[30]_i_5 
       (.I0(\axi_c_read_data[30]_i_8_n_0 ),
        .I1(\axi_c_read_data[30]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[30]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[30]_i_6 
       (.I0(\axi_c_read_data[30]_i_10_n_0 ),
        .I1(\axi_c_read_data[30]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[30]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[31]_i_2 
       (.I0(\axi_c_read_data_reg[31]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[31]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[31]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[31]_i_5 
       (.I0(\axi_c_read_data[31]_i_8_n_0 ),
        .I1(\axi_c_read_data[31]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[31]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[31]_i_6 
       (.I0(\axi_c_read_data[31]_i_10_n_0 ),
        .I1(\axi_c_read_data[31]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[31]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[3]_i_2 
       (.I0(\axi_c_read_data_reg[3]_i_8_n_0 ),
        .I1(\axi_c_read_data_reg[3]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[3]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[3]_i_8 
       (.I0(\axi_c_read_data[3]_i_10_n_0 ),
        .I1(\axi_c_read_data[3]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[3]_i_8_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[3]_i_9 
       (.I0(\axi_c_read_data[3]_i_12_n_0 ),
        .I1(\axi_c_read_data[3]_i_13_n_0 ),
        .O(\axi_c_read_data_reg[3]_i_9_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[4]_i_5 
       (.I0(\axi_c_read_data[4]_i_8_n_0 ),
        .I1(\axi_c_read_data[4]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[4]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[4]_i_6 
       (.I0(\axi_c_read_data[4]_i_10_n_0 ),
        .I1(\axi_c_read_data[4]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[4]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[5]_i_2 
       (.I0(\axi_c_read_data_reg[5]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[5]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[5]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[5]_i_5 
       (.I0(\axi_c_read_data[5]_i_8_n_0 ),
        .I1(\axi_c_read_data[5]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[5]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[5]_i_6 
       (.I0(\axi_c_read_data[5]_i_10_n_0 ),
        .I1(\axi_c_read_data[5]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[5]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[6]_i_2 
       (.I0(\axi_c_read_data_reg[6]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[6]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[6]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[6]_i_5 
       (.I0(\axi_c_read_data[6]_i_8_n_0 ),
        .I1(\axi_c_read_data[6]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[6]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[6]_i_6 
       (.I0(\axi_c_read_data[6]_i_10_n_0 ),
        .I1(\axi_c_read_data[6]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[6]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[7]_i_2 
       (.I0(\axi_c_read_data_reg[7]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[7]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[7]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[7]_i_5 
       (.I0(\axi_c_read_data[7]_i_8_n_0 ),
        .I1(\axi_c_read_data[7]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[7]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[7]_i_6 
       (.I0(\axi_c_read_data[7]_i_10_n_0 ),
        .I1(\axi_c_read_data[7]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[7]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[8]_i_2 
       (.I0(\axi_c_read_data_reg[8]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[8]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[8]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[8]_i_5 
       (.I0(\axi_c_read_data[8]_i_8_n_0 ),
        .I1(\axi_c_read_data[8]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[8]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[8]_i_6 
       (.I0(\axi_c_read_data[8]_i_10_n_0 ),
        .I1(\axi_c_read_data[8]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[8]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF8 \axi_c_read_data_reg[9]_i_2 
       (.I0(\axi_c_read_data_reg[9]_i_5_n_0 ),
        .I1(\axi_c_read_data_reg[9]_i_6_n_0 ),
        .O(\axi_c_read_data_reg[9]_i_2_n_0 ),
        .S(axi_c_read_addr[5]));
  MUXF7 \axi_c_read_data_reg[9]_i_5 
       (.I0(\axi_c_read_data[9]_i_8_n_0 ),
        .I1(\axi_c_read_data[9]_i_9_n_0 ),
        .O(\axi_c_read_data_reg[9]_i_5_n_0 ),
        .S(axi_c_read_addr[4]));
  MUXF7 \axi_c_read_data_reg[9]_i_6 
       (.I0(\axi_c_read_data[9]_i_10_n_0 ),
        .I1(\axi_c_read_data[9]_i_11_n_0 ),
        .O(\axi_c_read_data_reg[9]_i_6_n_0 ),
        .S(axi_c_read_addr[4]));
  LUT6 #(
    .INIT(64'h888808A8CCCC0CFC)) 
    \countAddrSent[0]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[0]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(\countAddrSent_reg[31]_1 [0]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [0]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[10]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[10]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[9]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [10]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[11]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[11]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[10]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [11]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[12]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[12]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[11]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [12]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[13]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[13]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[12]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [13]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[14]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[14]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[13]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [14]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[15]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[15]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[14]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [15]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[16]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[16]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[15]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [16]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[17]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[17]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[16]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [17]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[18]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[18]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[17]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [18]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[19]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[19]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[18]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [19]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[1]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[1]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[0]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [1]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[20]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[20]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[19]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [20]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[21]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[21]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[20]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [21]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[22]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[22]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[21]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [22]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[23]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[23]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[22]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [23]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[24]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[24]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[23]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [24]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[25]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[25]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[24]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [25]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[26]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[26]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[25]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [26]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[27]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[27]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[26]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [27]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[28]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[28]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[27]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [28]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[29]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[29]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[28]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [29]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[2]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[2]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[1]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [2]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[30]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(write_data[30]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[29]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [30]));
  LUT5 #(
    .INIT(32'hF4F4FFF4)) 
    \countAddrSent[31]_i_1 
       (.I0(active_blocking_reg_2),
        .I1(out),
        .I2(countAddrSent__0),
        .I3(\countAddrToBeSent_reg[38] ),
        .I4(writeAbusy),
        .O(\countAddrSent_reg[31] ));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[31]_i_2 
       (.I0(active_blocking_reg_2),
        .I1(write_data[31]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[30]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [31]));
  LUT5 #(
    .INIT(32'h00000008)) 
    \countAddrSent[31]_i_4 
       (.I0(axi_c_write_valid),
        .I1(axi_c_write_addr[6]),
        .I2(axi_c_write_addr[5]),
        .I3(axi_c_write_addr[2]),
        .I4(\read_ticks_per_burst[31]_i_2_n_0 ),
        .O(countAddrSent__0));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[3]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[3]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[2]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [3]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[4]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[4]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[3]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [4]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[5]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[5]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[4]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [5]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[6]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[6]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[5]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [6]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[7]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[7]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[6]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [7]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[8]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[8]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[7]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [8]));
  LUT6 #(
    .INIT(64'h8888A808CCCCFC0C)) 
    \countAddrSent[9]_i_1 
       (.I0(active_blocking_reg_3),
        .I1(write_data[9]),
        .I2(\countAddrToBeSent_reg[38] ),
        .I3(countAddrSent0[8]),
        .I4(writeAbusy),
        .I5(out),
        .O(\countAddrSent_reg[31]_0 [9]));
  LUT6 #(
    .INIT(64'h0888A8880CCCFCCC)) 
    \countDataReceived[0]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[0]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(Q[0]),
        .I5(out),
        .O(\countDataReceived_reg[31] [0]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[10]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[10]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[9]),
        .I5(out),
        .O(\countDataReceived_reg[31] [10]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[11]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[11]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[10]),
        .I5(out),
        .O(\countDataReceived_reg[31] [11]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[12]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[12]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[11]),
        .I5(out),
        .O(\countDataReceived_reg[31] [12]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[13]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[13]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[12]),
        .I5(out),
        .O(\countDataReceived_reg[31] [13]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[14]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[14]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[13]),
        .I5(out),
        .O(\countDataReceived_reg[31] [14]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[15]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[15]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[14]),
        .I5(out),
        .O(\countDataReceived_reg[31] [15]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[16]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[16]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[15]),
        .I5(out),
        .O(\countDataReceived_reg[31] [16]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[17]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[17]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[16]),
        .I5(out),
        .O(\countDataReceived_reg[31] [17]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[18]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[18]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[17]),
        .I5(out),
        .O(\countDataReceived_reg[31] [18]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[19]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[19]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[18]),
        .I5(out),
        .O(\countDataReceived_reg[31] [19]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[1]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[1]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[0]),
        .I5(out),
        .O(\countDataReceived_reg[31] [1]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[20]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[20]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[19]),
        .I5(out),
        .O(\countDataReceived_reg[31] [20]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[21]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[21]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[20]),
        .I5(out),
        .O(\countDataReceived_reg[31] [21]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[22]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[22]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[21]),
        .I5(out),
        .O(\countDataReceived_reg[31] [22]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[23]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[23]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[22]),
        .I5(out),
        .O(\countDataReceived_reg[31] [23]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[24]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[24]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[23]),
        .I5(out),
        .O(\countDataReceived_reg[31] [24]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[25]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[25]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[24]),
        .I5(out),
        .O(\countDataReceived_reg[31] [25]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[26]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[26]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[25]),
        .I5(out),
        .O(\countDataReceived_reg[31] [26]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[27]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[27]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[26]),
        .I5(out),
        .O(\countDataReceived_reg[31] [27]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[28]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[28]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[27]),
        .I5(out),
        .O(\countDataReceived_reg[31] [28]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[29]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[29]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[28]),
        .I5(out),
        .O(\countDataReceived_reg[31] [29]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[2]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[2]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[1]),
        .I5(out),
        .O(\countDataReceived_reg[31] [2]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[30]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[30]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[29]),
        .I5(out),
        .O(\countDataReceived_reg[31] [30]));
  LUT3 #(
    .INIT(8'hF4)) 
    \countDataReceived[31]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(out),
        .I2(\countDataReceived[31]_i_3_n_0 ),
        .O(E));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[31]_i_2 
       (.I0(active_blocking_reg_0),
        .I1(write_data[31]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[30]),
        .I5(out),
        .O(\countDataReceived_reg[31] [31]));
  LUT5 #(
    .INIT(32'h8F888888)) 
    \countDataReceived[31]_i_3 
       (.I0(readDataLast),
        .I1(readDataValid),
        .I2(\countDataReceived[31]_i_4_n_0 ),
        .I3(axi_c_write_valid),
        .I4(axi_c_write_addr[2]),
        .O(\countDataReceived[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \countDataReceived[31]_i_4 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[6]),
        .I2(axi_c_write_addr[3]),
        .I3(axi_c_write_addr[5]),
        .O(\countDataReceived[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[3]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[3]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[2]),
        .I5(out),
        .O(\countDataReceived_reg[31] [3]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[4]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[4]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[3]),
        .I5(out),
        .O(\countDataReceived_reg[31] [4]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[5]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[5]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[4]),
        .I5(out),
        .O(\countDataReceived_reg[31] [5]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[6]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[6]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[5]),
        .I5(out),
        .O(\countDataReceived_reg[31] [6]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[7]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[7]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[6]),
        .I5(out),
        .O(\countDataReceived_reg[31] [7]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[8]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[8]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[7]),
        .I5(out),
        .O(\countDataReceived_reg[31] [8]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \countDataReceived[9]_i_1 
       (.I0(active_blocking_reg_0),
        .I1(write_data[9]),
        .I2(readDataLast),
        .I3(readDataValid),
        .I4(countDataReceived0[8]),
        .I5(out),
        .O(\countDataReceived_reg[31] [9]));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    \debug_axi_control[21]_i_1 
       (.I0(axi_c_write_valid),
        .I1(axi_c_write_addr[4]),
        .I2(axi_c_write_addr[6]),
        .I3(axi_c_write_addr[2]),
        .I4(axi_c_write_addr[3]),
        .I5(axi_c_write_addr[5]),
        .O(\debug_axi_control_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    \debug_axi_r_control[21]_i_1 
       (.I0(axi_c_write_valid),
        .I1(axi_c_write_addr[4]),
        .I2(axi_c_write_addr[5]),
        .I3(axi_c_write_addr[2]),
        .I4(axi_c_write_addr[3]),
        .I5(axi_c_write_addr[6]),
        .O(\debug_axi_r_control_reg[0] ));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[0]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[0]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [0]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [0]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[10]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[10]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [10]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [10]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[11]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[11]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [11]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [11]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[12]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[12]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [12]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [12]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[13]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[13]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [13]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [13]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[14]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[14]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [14]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [14]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[15]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[15]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [15]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [15]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[16]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[16]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [16]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [16]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[17]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[17]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [17]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [17]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[18]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[18]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [18]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [18]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[19]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[19]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [19]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [19]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[1]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[1]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [1]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [1]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[20]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[20]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [20]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [20]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[21]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[21]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [21]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [21]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[22]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[22]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [22]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [22]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[23]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[23]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [23]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [23]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[24]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[24]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [24]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [24]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[25]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[25]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [25]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [25]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[26]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[26]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [26]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [26]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[27]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[27]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [27]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [27]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[28]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[28]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [28]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [28]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[29]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[29]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [29]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [29]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[2]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[2]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [2]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [2]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[30]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[30]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [30]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [30]));
  LUT5 #(
    .INIT(32'hFFF4F4F4)) 
    \max_cycles_with_no_data_read[31]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(out),
        .I2(max_cycles_with_no_data_read__0),
        .I3(readDataValid),
        .I4(CO),
        .O(\max_cycles_with_no_data_read_reg[0] ));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[31]_i_2 
       (.I0(active_blocking_reg_1),
        .I1(write_data[31]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [31]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [31]));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \max_cycles_with_no_data_read[31]_i_3 
       (.I0(axi_c_write_valid),
        .I1(axi_c_write_addr[2]),
        .I2(axi_c_write_addr[3]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[4]),
        .I5(axi_c_write_addr[6]),
        .O(max_cycles_with_no_data_read__0));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[3]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[3]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [3]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [3]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[4]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[4]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [4]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [4]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[5]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[5]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [5]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [5]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[6]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[6]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [6]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [6]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[7]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[7]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [7]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [7]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[8]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[8]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [8]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [8]));
  LUT6 #(
    .INIT(64'hA8880888FCCC0CCC)) 
    \max_cycles_with_no_data_read[9]_i_1 
       (.I0(active_blocking_reg_1),
        .I1(write_data[9]),
        .I2(readDataValid),
        .I3(CO),
        .I4(\current_cycles_with_no_data_read_reg[31] [9]),
        .I5(out),
        .O(\max_cycles_with_no_data_read_reg[31] [9]));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth read_addr_fifo
       (.clk(clk),
        .din(s_axi_control_ARADDR),
        .dout({axi_c_read_addr,read_addr_fifo_n_5,read_addr_fifo_n_6}),
        .empty(read_addr_fifo_empty),
        .full(NLW_read_addr_fifo_full_UNCONNECTED),
        .prog_full(read_addr_fifo_full),
        .rd_en(axi_c_read_data_valid_reg),
        .rd_rst_busy(NLW_read_addr_fifo_rd_rst_busy_UNCONNECTED),
        .srst(SR),
        .wr_en(s_axi_control_ARVALID),
        .wr_rst_busy(NLW_read_addr_fifo_wr_rst_busy_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    read_addr_fifo_i_1
       (.I0(read_addr_fifo_empty),
        .O(axi_c_read_data_valid_reg));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[0]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[0]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [0]),
        .O(\read_blocking_ratio_reg[31] [0]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[10]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[10]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [10]),
        .O(\read_blocking_ratio_reg[31] [10]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[11]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[11]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [11]),
        .O(\read_blocking_ratio_reg[31] [11]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[12]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[12]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [12]),
        .O(\read_blocking_ratio_reg[31] [12]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[13]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[13]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [13]),
        .O(\read_blocking_ratio_reg[31] [13]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[14]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[14]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [14]),
        .O(\read_blocking_ratio_reg[31] [14]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[15]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[15]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [15]),
        .O(\read_blocking_ratio_reg[31] [15]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[16]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[16]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [16]),
        .O(\read_blocking_ratio_reg[31] [16]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[17]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[17]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [17]),
        .O(\read_blocking_ratio_reg[31] [17]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[18]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[18]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [18]),
        .O(\read_blocking_ratio_reg[31] [18]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[19]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[19]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [19]),
        .O(\read_blocking_ratio_reg[31] [19]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[1]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[1]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [1]),
        .O(\read_blocking_ratio_reg[31] [1]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[20]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[20]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [20]),
        .O(\read_blocking_ratio_reg[31] [20]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[21]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[21]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [21]),
        .O(\read_blocking_ratio_reg[31] [21]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[22]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[22]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [22]),
        .O(\read_blocking_ratio_reg[31] [22]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[23]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[23]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [23]),
        .O(\read_blocking_ratio_reg[31] [23]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[24]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[24]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [24]),
        .O(\read_blocking_ratio_reg[31] [24]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[25]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[25]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [25]),
        .O(\read_blocking_ratio_reg[31] [25]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[26]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[26]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [26]),
        .O(\read_blocking_ratio_reg[31] [26]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[27]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[27]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [27]),
        .O(\read_blocking_ratio_reg[31] [27]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[28]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[28]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [28]),
        .O(\read_blocking_ratio_reg[31] [28]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[29]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[29]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [29]),
        .O(\read_blocking_ratio_reg[31] [29]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[2]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[2]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [2]),
        .O(\read_blocking_ratio_reg[31] [2]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[30]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[30]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [30]),
        .O(\read_blocking_ratio_reg[31] [30]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[31]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[31]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [31]),
        .O(\read_blocking_ratio_reg[31] [31]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[3]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[3]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [3]),
        .O(\read_blocking_ratio_reg[31] [3]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[4]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[4]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [4]),
        .O(\read_blocking_ratio_reg[31] [4]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[5]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[5]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [5]),
        .O(\read_blocking_ratio_reg[31] [5]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[6]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[6]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [6]),
        .O(\read_blocking_ratio_reg[31] [6]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[7]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[7]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [7]),
        .O(\read_blocking_ratio_reg[31] [7]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[8]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[8]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [8]),
        .O(\read_blocking_ratio_reg[31] [8]));
  LUT6 #(
    .INIT(64'hEFFFFFFF40000000)) 
    \read_blocking_ratio[9]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(write_data[9]),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\read_blocking_ratio_reg[31]_0 [9]),
        .O(\read_blocking_ratio_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[0]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [0]),
        .O(\read_burst_size_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[10]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [10]),
        .O(\read_burst_size_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[11]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [11]),
        .O(\read_burst_size_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[12]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [12]),
        .O(\read_burst_size_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[13]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [13]),
        .O(\read_burst_size_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[14]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [14]),
        .O(\read_burst_size_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[15]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [15]),
        .O(\read_burst_size_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[16]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [16]),
        .O(\read_burst_size_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[17]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [17]),
        .O(\read_burst_size_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[18]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [18]),
        .O(\read_burst_size_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[19]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [19]),
        .O(\read_burst_size_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[1]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [1]),
        .O(\read_burst_size_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[20]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [20]),
        .O(\read_burst_size_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[21]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [21]),
        .O(\read_burst_size_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[22]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [22]),
        .O(\read_burst_size_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[23]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [23]),
        .O(\read_burst_size_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[24]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [24]),
        .O(\read_burst_size_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[25]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [25]),
        .O(\read_burst_size_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[26]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [26]),
        .O(\read_burst_size_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[27]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [27]),
        .O(\read_burst_size_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[28]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [28]),
        .O(\read_burst_size_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[29]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [29]),
        .O(\read_burst_size_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[2]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [2]),
        .O(\read_burst_size_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[30]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [30]),
        .O(\read_burst_size_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[31]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [31]),
        .O(\read_burst_size_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[3]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [3]),
        .O(\read_burst_size_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[4]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [4]),
        .O(\read_burst_size_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[5]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [5]),
        .O(\read_burst_size_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[6]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [6]),
        .O(\read_burst_size_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[7]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [7]),
        .O(\read_burst_size_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[8]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [8]),
        .O(\read_burst_size_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_burst_size[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I3(write_data[9]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_burst_size_reg[31]_0 [9]),
        .O(\read_burst_size_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[0]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [0]),
        .O(\read_count_bursts_per_reset_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[10]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [10]),
        .O(\read_count_bursts_per_reset_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[11]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [11]),
        .O(\read_count_bursts_per_reset_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[12]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [12]),
        .O(\read_count_bursts_per_reset_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[13]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [13]),
        .O(\read_count_bursts_per_reset_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[14]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [14]),
        .O(\read_count_bursts_per_reset_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[15]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [15]),
        .O(\read_count_bursts_per_reset_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[16]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [16]),
        .O(\read_count_bursts_per_reset_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[17]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [17]),
        .O(\read_count_bursts_per_reset_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[18]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [18]),
        .O(\read_count_bursts_per_reset_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[19]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [19]),
        .O(\read_count_bursts_per_reset_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[1]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [1]),
        .O(\read_count_bursts_per_reset_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[20]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [20]),
        .O(\read_count_bursts_per_reset_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[21]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [21]),
        .O(\read_count_bursts_per_reset_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[22]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [22]),
        .O(\read_count_bursts_per_reset_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[23]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [23]),
        .O(\read_count_bursts_per_reset_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[24]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [24]),
        .O(\read_count_bursts_per_reset_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[25]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [25]),
        .O(\read_count_bursts_per_reset_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[26]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [26]),
        .O(\read_count_bursts_per_reset_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[27]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [27]),
        .O(\read_count_bursts_per_reset_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[28]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [28]),
        .O(\read_count_bursts_per_reset_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[29]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [29]),
        .O(\read_count_bursts_per_reset_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[2]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [2]),
        .O(\read_count_bursts_per_reset_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[30]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [30]),
        .O(\read_count_bursts_per_reset_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(write_data[31]),
        .I3(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [31]),
        .O(\read_count_bursts_per_reset_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[3]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [3]),
        .O(\read_count_bursts_per_reset_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[4]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [4]),
        .O(\read_count_bursts_per_reset_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[5]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [5]),
        .O(\read_count_bursts_per_reset_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[6]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [6]),
        .O(\read_count_bursts_per_reset_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[7]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [7]),
        .O(\read_count_bursts_per_reset_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[8]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [8]),
        .O(\read_count_bursts_per_reset_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_count_bursts_per_reset[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(write_data[9]),
        .I3(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_count_bursts_per_reset_reg[31]_0 [9]),
        .O(\read_count_bursts_per_reset_reg[31] [9]));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth read_data_fifo
       (.clk(clk),
        .din(\axi_c_read_data_reg[31]_0 ),
        .dout(s_axi_control_RDATA),
        .empty(read_data_fifo_empty),
        .full(NLW_read_data_fifo_full_UNCONNECTED),
        .prog_full(NLW_read_data_fifo_prog_full_UNCONNECTED),
        .rd_en(s_axi_control_RVALID),
        .rd_rst_busy(NLW_read_data_fifo_rd_rst_busy_UNCONNECTED),
        .srst(SR),
        .wr_en(read_data_valid),
        .wr_rst_busy(NLW_read_data_fifo_wr_rst_busy_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    read_data_fifo_i_1
       (.I0(rstn),
        .O(SR));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[0]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [0]),
        .O(\read_max_queue_size_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[10]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [10]),
        .O(\read_max_queue_size_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[11]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [11]),
        .O(\read_max_queue_size_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[12]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [12]),
        .O(\read_max_queue_size_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[13]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [13]),
        .O(\read_max_queue_size_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[14]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [14]),
        .O(\read_max_queue_size_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[15]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [15]),
        .O(\read_max_queue_size_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[16]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [16]),
        .O(\read_max_queue_size_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[17]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [17]),
        .O(\read_max_queue_size_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[18]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [18]),
        .O(\read_max_queue_size_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[19]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [19]),
        .O(\read_max_queue_size_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[1]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [1]),
        .O(\read_max_queue_size_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[20]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [20]),
        .O(\read_max_queue_size_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[21]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [21]),
        .O(\read_max_queue_size_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[22]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [22]),
        .O(\read_max_queue_size_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[23]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [23]),
        .O(\read_max_queue_size_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[24]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [24]),
        .O(\read_max_queue_size_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[25]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [25]),
        .O(\read_max_queue_size_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[26]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [26]),
        .O(\read_max_queue_size_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[27]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [27]),
        .O(\read_max_queue_size_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[28]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [28]),
        .O(\read_max_queue_size_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[29]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [29]),
        .O(\read_max_queue_size_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[2]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [2]),
        .O(\read_max_queue_size_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[30]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [30]),
        .O(\read_max_queue_size_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[31]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [31]),
        .O(\read_max_queue_size_reg[31] [31]));
  LUT2 #(
    .INIT(4'h7)) 
    \read_max_queue_size[31]_i_2 
       (.I0(axi_c_write_addr[3]),
        .I1(axi_c_write_addr[4]),
        .O(\read_max_queue_size[31]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hD5)) 
    \read_max_queue_size[31]_i_3 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[3]),
        .I2(axi_c_write_addr[2]),
        .O(\read_max_queue_size[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[3]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [3]),
        .O(\read_max_queue_size_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[4]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [4]),
        .O(\read_max_queue_size_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[5]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [5]),
        .O(\read_max_queue_size_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[6]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [6]),
        .O(\read_max_queue_size_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[7]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [7]),
        .O(\read_max_queue_size_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[8]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [8]),
        .O(\read_max_queue_size_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_max_queue_size[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_max_queue_size[31]_i_2_n_0 ),
        .I2(\read_max_queue_size[31]_i_3_n_0 ),
        .I3(write_data[9]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_max_queue_size_reg[31]_0 [9]),
        .O(\read_max_queue_size_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[0]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [0]),
        .O(\read_start_DDR_address_reg[63] [0]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[10]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [10]),
        .O(\read_start_DDR_address_reg[63] [10]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[11]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [11]),
        .O(\read_start_DDR_address_reg[63] [11]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[12]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [12]),
        .O(\read_start_DDR_address_reg[63] [12]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[13]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [13]),
        .O(\read_start_DDR_address_reg[63] [13]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[14]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [14]),
        .O(\read_start_DDR_address_reg[63] [14]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[15]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [15]),
        .O(\read_start_DDR_address_reg[63] [15]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[16]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [16]),
        .O(\read_start_DDR_address_reg[63] [16]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[17]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [17]),
        .O(\read_start_DDR_address_reg[63] [17]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[18]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [18]),
        .O(\read_start_DDR_address_reg[63] [18]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[19]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [19]),
        .O(\read_start_DDR_address_reg[63] [19]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[1]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [1]),
        .O(\read_start_DDR_address_reg[63] [1]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[20]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [20]),
        .O(\read_start_DDR_address_reg[63] [20]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[21]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [21]),
        .O(\read_start_DDR_address_reg[63] [21]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[22]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [22]),
        .O(\read_start_DDR_address_reg[63] [22]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[23]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [23]),
        .O(\read_start_DDR_address_reg[63] [23]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[24]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [24]),
        .O(\read_start_DDR_address_reg[63] [24]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[25]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [25]),
        .O(\read_start_DDR_address_reg[63] [25]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[26]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [26]),
        .O(\read_start_DDR_address_reg[63] [26]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[27]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [27]),
        .O(\read_start_DDR_address_reg[63] [27]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[28]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [28]),
        .O(\read_start_DDR_address_reg[63] [28]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[29]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [29]),
        .O(\read_start_DDR_address_reg[63] [29]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[2]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [2]),
        .O(\read_start_DDR_address_reg[63] [2]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[30]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [30]),
        .O(\read_start_DDR_address_reg[63] [30]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[31]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [31]),
        .O(\read_start_DDR_address_reg[63] [31]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[32]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[0]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [32]),
        .O(\read_start_DDR_address_reg[63] [32]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[33]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[1]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [33]),
        .O(\read_start_DDR_address_reg[63] [33]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[34]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[2]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [34]),
        .O(\read_start_DDR_address_reg[63] [34]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[35]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[3]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [35]),
        .O(\read_start_DDR_address_reg[63] [35]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[36]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[4]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [36]),
        .O(\read_start_DDR_address_reg[63] [36]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[37]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[5]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [37]),
        .O(\read_start_DDR_address_reg[63] [37]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[38]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[6]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [38]),
        .O(\read_start_DDR_address_reg[63] [38]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[39]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[7]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [39]),
        .O(\read_start_DDR_address_reg[63] [39]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[3]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [3]),
        .O(\read_start_DDR_address_reg[63] [3]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[40]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[8]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [40]),
        .O(\read_start_DDR_address_reg[63] [40]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[41]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[9]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [41]),
        .O(\read_start_DDR_address_reg[63] [41]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[42]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[10]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [42]),
        .O(\read_start_DDR_address_reg[63] [42]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[43]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[11]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [43]),
        .O(\read_start_DDR_address_reg[63] [43]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[44]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[12]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [44]),
        .O(\read_start_DDR_address_reg[63] [44]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[45]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[13]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [45]),
        .O(\read_start_DDR_address_reg[63] [45]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[46]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[14]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [46]),
        .O(\read_start_DDR_address_reg[63] [46]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[47]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[15]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [47]),
        .O(\read_start_DDR_address_reg[63] [47]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[48]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[16]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [48]),
        .O(\read_start_DDR_address_reg[63] [48]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[49]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[17]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [49]),
        .O(\read_start_DDR_address_reg[63] [49]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[4]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [4]),
        .O(\read_start_DDR_address_reg[63] [4]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[50]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[18]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [50]),
        .O(\read_start_DDR_address_reg[63] [50]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[51]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[19]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [51]),
        .O(\read_start_DDR_address_reg[63] [51]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[52]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[20]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [52]),
        .O(\read_start_DDR_address_reg[63] [52]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[53]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[21]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [53]),
        .O(\read_start_DDR_address_reg[63] [53]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[54]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[22]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [54]),
        .O(\read_start_DDR_address_reg[63] [54]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[55]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[23]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [55]),
        .O(\read_start_DDR_address_reg[63] [55]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[56]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[24]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [56]),
        .O(\read_start_DDR_address_reg[63] [56]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[57]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[25]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [57]),
        .O(\read_start_DDR_address_reg[63] [57]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[58]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[26]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [58]),
        .O(\read_start_DDR_address_reg[63] [58]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[59]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[27]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [59]),
        .O(\read_start_DDR_address_reg[63] [59]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[5]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [5]),
        .O(\read_start_DDR_address_reg[63] [5]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[60]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[28]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [60]),
        .O(\read_start_DDR_address_reg[63] [60]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[61]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[29]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [61]),
        .O(\read_start_DDR_address_reg[63] [61]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[62]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[30]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [62]),
        .O(\read_start_DDR_address_reg[63] [62]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_start_DDR_address[63]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[31]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [63]),
        .O(\read_start_DDR_address_reg[63] [63]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[6]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [6]),
        .O(\read_start_DDR_address_reg[63] [6]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[7]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [7]),
        .O(\read_start_DDR_address_reg[63] [7]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[8]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [8]),
        .O(\read_start_DDR_address_reg[63] [8]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_start_DDR_address[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(active_write_i_2_n_0),
        .I2(write_data[9]),
        .I3(active_write_i_3_n_0),
        .I4(axi_c_write_addr[5]),
        .I5(\read_start_DDR_address_reg[63]_0 [9]),
        .O(\read_start_DDR_address_reg[63] [9]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[0]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [0]),
        .O(\read_step_DDR_address_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[10]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [10]),
        .O(\read_step_DDR_address_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[11]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [11]),
        .O(\read_step_DDR_address_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[12]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [12]),
        .O(\read_step_DDR_address_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[13]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [13]),
        .O(\read_step_DDR_address_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[14]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [14]),
        .O(\read_step_DDR_address_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[15]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [15]),
        .O(\read_step_DDR_address_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[16]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [16]),
        .O(\read_step_DDR_address_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[17]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [17]),
        .O(\read_step_DDR_address_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[18]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [18]),
        .O(\read_step_DDR_address_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[19]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [19]),
        .O(\read_step_DDR_address_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[1]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [1]),
        .O(\read_step_DDR_address_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[20]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [20]),
        .O(\read_step_DDR_address_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[21]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [21]),
        .O(\read_step_DDR_address_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[22]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [22]),
        .O(\read_step_DDR_address_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[23]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [23]),
        .O(\read_step_DDR_address_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[24]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [24]),
        .O(\read_step_DDR_address_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[25]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [25]),
        .O(\read_step_DDR_address_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[26]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [26]),
        .O(\read_step_DDR_address_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[27]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [27]),
        .O(\read_step_DDR_address_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[28]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [28]),
        .O(\read_step_DDR_address_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[29]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [29]),
        .O(\read_step_DDR_address_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[2]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [2]),
        .O(\read_step_DDR_address_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[30]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [30]),
        .O(\read_step_DDR_address_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I3(write_data[31]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [31]),
        .O(\read_step_DDR_address_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[3]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [3]),
        .O(\read_step_DDR_address_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[4]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [4]),
        .O(\read_step_DDR_address_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[5]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [5]),
        .O(\read_step_DDR_address_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[6]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [6]),
        .O(\read_step_DDR_address_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[7]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [7]),
        .O(\read_step_DDR_address_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[8]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [8]),
        .O(\read_step_DDR_address_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \read_step_DDR_address[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I2(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I3(write_data[9]),
        .I4(axi_c_write_addr[5]),
        .I5(\read_step_DDR_address_reg[31]_0 [9]),
        .O(\read_step_DDR_address_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[0]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [0]),
        .O(\read_ticks_per_burst_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[10]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [10]),
        .O(\read_ticks_per_burst_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[11]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [11]),
        .O(\read_ticks_per_burst_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[12]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [12]),
        .O(\read_ticks_per_burst_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[13]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [13]),
        .O(\read_ticks_per_burst_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[14]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [14]),
        .O(\read_ticks_per_burst_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[15]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [15]),
        .O(\read_ticks_per_burst_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[16]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [16]),
        .O(\read_ticks_per_burst_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[17]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [17]),
        .O(\read_ticks_per_burst_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[18]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [18]),
        .O(\read_ticks_per_burst_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[19]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [19]),
        .O(\read_ticks_per_burst_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[1]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [1]),
        .O(\read_ticks_per_burst_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[20]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [20]),
        .O(\read_ticks_per_burst_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[21]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [21]),
        .O(\read_ticks_per_burst_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[22]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [22]),
        .O(\read_ticks_per_burst_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[23]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [23]),
        .O(\read_ticks_per_burst_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[24]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [24]),
        .O(\read_ticks_per_burst_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[25]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [25]),
        .O(\read_ticks_per_burst_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[26]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [26]),
        .O(\read_ticks_per_burst_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[27]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [27]),
        .O(\read_ticks_per_burst_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[28]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [28]),
        .O(\read_ticks_per_burst_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[29]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [29]),
        .O(\read_ticks_per_burst_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[2]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [2]),
        .O(\read_ticks_per_burst_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[30]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [30]),
        .O(\read_ticks_per_burst_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[31]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [31]),
        .O(\read_ticks_per_burst_reg[31] [31]));
  LUT2 #(
    .INIT(4'hB)) 
    \read_ticks_per_burst[31]_i_2 
       (.I0(axi_c_write_addr[3]),
        .I1(axi_c_write_addr[4]),
        .O(\read_ticks_per_burst[31]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \read_ticks_per_burst[31]_i_3 
       (.I0(axi_c_write_addr[3]),
        .I1(axi_c_write_addr[2]),
        .I2(axi_c_write_addr[4]),
        .O(\read_ticks_per_burst[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[3]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [3]),
        .O(\read_ticks_per_burst_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[4]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [4]),
        .O(\read_ticks_per_burst_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[5]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [5]),
        .O(\read_ticks_per_burst_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[6]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [6]),
        .O(\read_ticks_per_burst_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[7]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [7]),
        .O(\read_ticks_per_burst_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[8]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [8]),
        .O(\read_ticks_per_burst_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \read_ticks_per_burst[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I2(write_data[9]),
        .I3(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I4(axi_c_write_addr[5]),
        .I5(\read_ticks_per_burst_reg[31]_0 [9]),
        .O(\read_ticks_per_burst_reg[31] [9]));
  LUT4 #(
    .INIT(16'hB808)) 
    reset_cmd_i_1
       (.I0(reset_cmd_i_2_n_0),
        .I1(axi_c_write_valid),
        .I2(out),
        .I3(active_runtime),
        .O(reset_cmd_reg));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    reset_cmd_i_2
       (.I0(axi_c_write_addr[5]),
        .I1(active_write_i_2_n_0),
        .I2(active_write_i_3_n_0),
        .I3(write_data[2]),
        .I4(axi_c_write_addr[6]),
        .I5(out),
        .O(reset_cmd_i_2_n_0));
  LUT5 #(
    .INIT(32'h77878878)) 
    \respond_count[7]_i_10 
       (.I0(s_axi_control_BVALID),
        .I1(s_axi_control_BREADY),
        .I2(s_axi_control_WVALID),
        .I3(write_data_fifo_full),
        .I4(respond_count_reg_n_0_[0]),
        .O(\respond_count[7]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h5DFF)) 
    \respond_count[7]_i_2 
       (.I0(s_axi_control_BVALID),
        .I1(s_axi_control_WVALID),
        .I2(write_data_fifo_full),
        .I3(s_axi_control_BREADY),
        .O(\respond_count[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \respond_count[7]_i_3 
       (.I0(respond_count_reg_n_0_[6]),
        .I1(respond_count_reg_n_0_[7]),
        .O(\respond_count[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \respond_count[7]_i_4 
       (.I0(respond_count_reg_n_0_[5]),
        .I1(respond_count_reg_n_0_[6]),
        .O(\respond_count[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \respond_count[7]_i_5 
       (.I0(respond_count_reg_n_0_[4]),
        .I1(respond_count_reg_n_0_[5]),
        .O(\respond_count[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \respond_count[7]_i_6 
       (.I0(respond_count_reg_n_0_[3]),
        .I1(respond_count_reg_n_0_[4]),
        .O(\respond_count[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \respond_count[7]_i_7 
       (.I0(respond_count_reg_n_0_[2]),
        .I1(respond_count_reg_n_0_[3]),
        .O(\respond_count[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \respond_count[7]_i_8 
       (.I0(respond_count_reg_n_0_[1]),
        .I1(respond_count_reg_n_0_[2]),
        .O(\respond_count[7]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h75FF8A00)) 
    \respond_count[7]_i_9 
       (.I0(s_axi_control_BREADY),
        .I1(write_data_fifo_full),
        .I2(s_axi_control_WVALID),
        .I3(s_axi_control_BVALID),
        .I4(respond_count_reg_n_0_[1]),
        .O(\respond_count[7]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \respond_count[8]_i_2 
       (.I0(respond_count_reg_n_0_[7]),
        .I1(respond_count_reg_n_0_[8]),
        .O(\respond_count[8]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[0] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[0]),
        .Q(respond_count_reg_n_0_[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[1] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[1]),
        .Q(respond_count_reg_n_0_[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[2] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[2]),
        .Q(respond_count_reg_n_0_[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[3] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[3]),
        .Q(respond_count_reg_n_0_[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[4] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[4]),
        .Q(respond_count_reg_n_0_[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[5] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[5]),
        .Q(respond_count_reg_n_0_[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[6] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[6]),
        .Q(respond_count_reg_n_0_[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[7] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[7]),
        .Q(respond_count_reg_n_0_[7]),
        .R(SR));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \respond_count_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\respond_count_reg[7]_i_1_n_0 ,\respond_count_reg[7]_i_1_n_1 ,\respond_count_reg[7]_i_1_n_2 ,\respond_count_reg[7]_i_1_n_3 ,\NLW_respond_count_reg[7]_i_1_CO_UNCONNECTED [3],\respond_count_reg[7]_i_1_n_5 ,\respond_count_reg[7]_i_1_n_6 ,\respond_count_reg[7]_i_1_n_7 }),
        .DI({respond_count_reg_n_0_[6:1],\respond_count[7]_i_2_n_0 ,respond_count_reg_n_0_[0]}),
        .O(respond_count[7:0]),
        .S({\respond_count[7]_i_3_n_0 ,\respond_count[7]_i_4_n_0 ,\respond_count[7]_i_5_n_0 ,\respond_count[7]_i_6_n_0 ,\respond_count[7]_i_7_n_0 ,\respond_count[7]_i_8_n_0 ,\respond_count[7]_i_9_n_0 ,\respond_count[7]_i_10_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \respond_count_reg[8] 
       (.C(clk),
        .CE(rstn),
        .D(respond_count[8]),
        .Q(respond_count_reg_n_0_[8]),
        .R(SR));
  CARRY8 #(
    .CARRY_TYPE("SINGLE_CY8")) 
    \respond_count_reg[8]_i_1 
       (.CI(\respond_count_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO(\NLW_respond_count_reg[8]_i_1_CO_UNCONNECTED [7:0]),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_respond_count_reg[8]_i_1_O_UNCONNECTED [7:1],respond_count[8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\respond_count[8]_i_2_n_0 }));
  LUT4 #(
    .INIT(16'h45EA)) 
    \runtime[0]_i_1 
       (.I0(active_blocking_reg),
        .I1(runtime__0[0]),
        .I2(axi_c_write_valid),
        .I3(\runtime_reg[63] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[0]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[0]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [0]),
        .O(runtime__0[0]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[10]_i_1 
       (.I0(runtime0[9]),
        .I1(active_blocking_reg),
        .I2(runtime__0[10]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [10]),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[10]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[10]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [10]),
        .O(runtime__0[10]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[11]_i_1 
       (.I0(runtime0[10]),
        .I1(active_blocking_reg),
        .I2(runtime__0[11]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [11]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[11]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[11]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [11]),
        .O(runtime__0[11]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[12]_i_1 
       (.I0(runtime0[11]),
        .I1(active_blocking_reg),
        .I2(runtime__0[12]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [12]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[12]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[12]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [12]),
        .O(runtime__0[12]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[13]_i_1 
       (.I0(runtime0[12]),
        .I1(active_blocking_reg),
        .I2(runtime__0[13]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [13]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[13]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[13]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [13]),
        .O(runtime__0[13]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[14]_i_1 
       (.I0(runtime0[13]),
        .I1(active_blocking_reg),
        .I2(runtime__0[14]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [14]),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[14]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[14]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [14]),
        .O(runtime__0[14]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[15]_i_1 
       (.I0(runtime0[14]),
        .I1(active_blocking_reg),
        .I2(runtime__0[15]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [15]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[15]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[15]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [15]),
        .O(runtime__0[15]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[16]_i_1 
       (.I0(runtime0[15]),
        .I1(active_blocking_reg),
        .I2(runtime__0[16]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [16]),
        .O(D[16]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[16]_i_3 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[16]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [16]),
        .O(runtime__0[16]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[17]_i_1 
       (.I0(runtime0[16]),
        .I1(active_blocking_reg),
        .I2(runtime__0[17]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [17]),
        .O(D[17]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[17]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[17]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [17]),
        .O(runtime__0[17]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[18]_i_1 
       (.I0(runtime0[17]),
        .I1(active_blocking_reg),
        .I2(runtime__0[18]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [18]),
        .O(D[18]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[18]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[18]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [18]),
        .O(runtime__0[18]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[19]_i_1 
       (.I0(runtime0[18]),
        .I1(active_blocking_reg),
        .I2(runtime__0[19]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [19]),
        .O(D[19]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[19]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[19]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [19]),
        .O(runtime__0[19]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[1]_i_1 
       (.I0(runtime0[0]),
        .I1(active_blocking_reg),
        .I2(runtime__0[1]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[1]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[1]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [1]),
        .O(runtime__0[1]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[20]_i_1 
       (.I0(runtime0[19]),
        .I1(active_blocking_reg),
        .I2(runtime__0[20]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [20]),
        .O(D[20]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[20]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[20]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [20]),
        .O(runtime__0[20]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[21]_i_1 
       (.I0(runtime0[20]),
        .I1(active_blocking_reg),
        .I2(runtime__0[21]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [21]),
        .O(D[21]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[21]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[21]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [21]),
        .O(runtime__0[21]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[22]_i_1 
       (.I0(runtime0[21]),
        .I1(active_blocking_reg),
        .I2(runtime__0[22]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [22]),
        .O(D[22]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[22]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[22]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [22]),
        .O(runtime__0[22]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[23]_i_1 
       (.I0(runtime0[22]),
        .I1(active_blocking_reg),
        .I2(runtime__0[23]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [23]),
        .O(D[23]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[23]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[23]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [23]),
        .O(runtime__0[23]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[24]_i_1 
       (.I0(runtime0[23]),
        .I1(active_blocking_reg),
        .I2(runtime__0[24]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [24]),
        .O(D[24]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[24]_i_3 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[24]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [24]),
        .O(runtime__0[24]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[25]_i_1 
       (.I0(runtime0[24]),
        .I1(active_blocking_reg),
        .I2(runtime__0[25]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [25]),
        .O(D[25]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[25]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[25]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [25]),
        .O(runtime__0[25]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[26]_i_1 
       (.I0(runtime0[25]),
        .I1(active_blocking_reg),
        .I2(runtime__0[26]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [26]),
        .O(D[26]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[26]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[26]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [26]),
        .O(runtime__0[26]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[27]_i_1 
       (.I0(runtime0[26]),
        .I1(active_blocking_reg),
        .I2(runtime__0[27]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [27]),
        .O(D[27]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[27]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[27]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [27]),
        .O(runtime__0[27]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[28]_i_1 
       (.I0(runtime0[27]),
        .I1(active_blocking_reg),
        .I2(runtime__0[28]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [28]),
        .O(D[28]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[28]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[28]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [28]),
        .O(runtime__0[28]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[29]_i_1 
       (.I0(runtime0[28]),
        .I1(active_blocking_reg),
        .I2(runtime__0[29]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [29]),
        .O(D[29]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[29]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[29]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [29]),
        .O(runtime__0[29]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[2]_i_1 
       (.I0(runtime0[1]),
        .I1(active_blocking_reg),
        .I2(runtime__0[2]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [2]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[2]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[2]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [2]),
        .O(runtime__0[2]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[30]_i_1 
       (.I0(runtime0[29]),
        .I1(active_blocking_reg),
        .I2(runtime__0[30]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [30]),
        .O(D[30]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[30]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[30]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [30]),
        .O(runtime__0[30]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[31]_i_1 
       (.I0(runtime0[30]),
        .I1(active_blocking_reg),
        .I2(runtime__0[31]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [31]),
        .O(D[31]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[31]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[31]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [31]),
        .O(runtime__0[31]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[32]_i_1 
       (.I0(runtime0[31]),
        .I1(active_blocking_reg),
        .I2(runtime__0[32]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [32]),
        .O(D[32]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[32]_i_3 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[0]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [32]),
        .O(runtime__0[32]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[33]_i_1 
       (.I0(runtime0[32]),
        .I1(active_blocking_reg),
        .I2(runtime__0[33]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [33]),
        .O(D[33]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[33]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[1]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [33]),
        .O(runtime__0[33]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[34]_i_1 
       (.I0(runtime0[33]),
        .I1(active_blocking_reg),
        .I2(runtime__0[34]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [34]),
        .O(D[34]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[34]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[2]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [34]),
        .O(runtime__0[34]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[35]_i_1 
       (.I0(runtime0[34]),
        .I1(active_blocking_reg),
        .I2(runtime__0[35]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [35]),
        .O(D[35]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[35]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[3]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [35]),
        .O(runtime__0[35]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[36]_i_1 
       (.I0(runtime0[35]),
        .I1(active_blocking_reg),
        .I2(runtime__0[36]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [36]),
        .O(D[36]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[36]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[4]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [36]),
        .O(runtime__0[36]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[37]_i_1 
       (.I0(runtime0[36]),
        .I1(active_blocking_reg),
        .I2(runtime__0[37]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [37]),
        .O(D[37]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[37]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [37]),
        .O(runtime__0[37]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[38]_i_1 
       (.I0(runtime0[37]),
        .I1(active_blocking_reg),
        .I2(runtime__0[38]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [38]),
        .O(D[38]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[38]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[6]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [38]),
        .O(runtime__0[38]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[39]_i_1 
       (.I0(runtime0[38]),
        .I1(active_blocking_reg),
        .I2(runtime__0[39]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [39]),
        .O(D[39]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[39]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[7]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [39]),
        .O(runtime__0[39]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[3]_i_1 
       (.I0(runtime0[2]),
        .I1(active_blocking_reg),
        .I2(runtime__0[3]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [3]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[3]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[3]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [3]),
        .O(runtime__0[3]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[40]_i_1 
       (.I0(runtime0[39]),
        .I1(active_blocking_reg),
        .I2(runtime__0[40]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [40]),
        .O(D[40]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[40]_i_3 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[8]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [40]),
        .O(runtime__0[40]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[41]_i_1 
       (.I0(runtime0[40]),
        .I1(active_blocking_reg),
        .I2(runtime__0[41]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [41]),
        .O(D[41]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[41]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[9]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [41]),
        .O(runtime__0[41]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[42]_i_1 
       (.I0(runtime0[41]),
        .I1(active_blocking_reg),
        .I2(runtime__0[42]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [42]),
        .O(D[42]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[42]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[10]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [42]),
        .O(runtime__0[42]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[43]_i_1 
       (.I0(runtime0[42]),
        .I1(active_blocking_reg),
        .I2(runtime__0[43]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [43]),
        .O(D[43]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[43]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[11]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [43]),
        .O(runtime__0[43]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[44]_i_1 
       (.I0(runtime0[43]),
        .I1(active_blocking_reg),
        .I2(runtime__0[44]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [44]),
        .O(D[44]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[44]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[12]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [44]),
        .O(runtime__0[44]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[45]_i_1 
       (.I0(runtime0[44]),
        .I1(active_blocking_reg),
        .I2(runtime__0[45]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [45]),
        .O(D[45]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[45]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[13]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [45]),
        .O(runtime__0[45]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[46]_i_1 
       (.I0(runtime0[45]),
        .I1(active_blocking_reg),
        .I2(runtime__0[46]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [46]),
        .O(D[46]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[46]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[14]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [46]),
        .O(runtime__0[46]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[47]_i_1 
       (.I0(runtime0[46]),
        .I1(active_blocking_reg),
        .I2(runtime__0[47]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [47]),
        .O(D[47]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[47]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[15]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [47]),
        .O(runtime__0[47]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[48]_i_1 
       (.I0(runtime0[47]),
        .I1(active_blocking_reg),
        .I2(runtime__0[48]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [48]),
        .O(D[48]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[48]_i_3 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[16]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [48]),
        .O(runtime__0[48]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[49]_i_1 
       (.I0(runtime0[48]),
        .I1(active_blocking_reg),
        .I2(runtime__0[49]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [49]),
        .O(D[49]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[49]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[17]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [49]),
        .O(runtime__0[49]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[4]_i_1 
       (.I0(runtime0[3]),
        .I1(active_blocking_reg),
        .I2(runtime__0[4]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[4]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[4]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [4]),
        .O(runtime__0[4]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[50]_i_1 
       (.I0(runtime0[49]),
        .I1(active_blocking_reg),
        .I2(runtime__0[50]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [50]),
        .O(D[50]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[50]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[18]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [50]),
        .O(runtime__0[50]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[51]_i_1 
       (.I0(runtime0[50]),
        .I1(active_blocking_reg),
        .I2(runtime__0[51]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [51]),
        .O(D[51]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[51]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[19]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [51]),
        .O(runtime__0[51]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[52]_i_1 
       (.I0(runtime0[51]),
        .I1(active_blocking_reg),
        .I2(runtime__0[52]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [52]),
        .O(D[52]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[52]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[20]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [52]),
        .O(runtime__0[52]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[53]_i_1 
       (.I0(runtime0[52]),
        .I1(active_blocking_reg),
        .I2(runtime__0[53]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [53]),
        .O(D[53]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[53]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[21]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [53]),
        .O(runtime__0[53]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[54]_i_1 
       (.I0(runtime0[53]),
        .I1(active_blocking_reg),
        .I2(runtime__0[54]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [54]),
        .O(D[54]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[54]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[22]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [54]),
        .O(runtime__0[54]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[55]_i_1 
       (.I0(runtime0[54]),
        .I1(active_blocking_reg),
        .I2(runtime__0[55]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [55]),
        .O(D[55]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[55]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[23]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [55]),
        .O(runtime__0[55]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[56]_i_1 
       (.I0(runtime0[55]),
        .I1(active_blocking_reg),
        .I2(runtime__0[56]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [56]),
        .O(D[56]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[56]_i_3 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[24]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [56]),
        .O(runtime__0[56]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[57]_i_1 
       (.I0(runtime0[56]),
        .I1(active_blocking_reg),
        .I2(runtime__0[57]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [57]),
        .O(D[57]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[57]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[25]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [57]),
        .O(runtime__0[57]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[58]_i_1 
       (.I0(runtime0[57]),
        .I1(active_blocking_reg),
        .I2(runtime__0[58]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [58]),
        .O(D[58]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[58]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[26]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [58]),
        .O(runtime__0[58]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[59]_i_1 
       (.I0(runtime0[58]),
        .I1(active_blocking_reg),
        .I2(runtime__0[59]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [59]),
        .O(D[59]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[59]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[27]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [59]),
        .O(runtime__0[59]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[5]_i_1 
       (.I0(runtime0[4]),
        .I1(active_blocking_reg),
        .I2(runtime__0[5]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [5]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[5]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[5]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [5]),
        .O(runtime__0[5]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[60]_i_1 
       (.I0(runtime0[59]),
        .I1(active_blocking_reg),
        .I2(runtime__0[60]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [60]),
        .O(D[60]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[60]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[28]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [60]),
        .O(runtime__0[60]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[61]_i_1 
       (.I0(runtime0[60]),
        .I1(active_blocking_reg),
        .I2(runtime__0[61]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [61]),
        .O(D[61]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[61]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[29]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [61]),
        .O(runtime__0[61]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[62]_i_1 
       (.I0(runtime0[61]),
        .I1(active_blocking_reg),
        .I2(runtime__0[62]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [62]),
        .O(D[62]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[62]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[30]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [62]),
        .O(runtime__0[62]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[63]_i_2 
       (.I0(runtime0[62]),
        .I1(active_blocking_reg),
        .I2(runtime__0[63]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [63]),
        .O(D[63]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \runtime[63]_i_5 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(\runtime[63]_i_7_n_0 ),
        .I3(write_data[31]),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [63]),
        .O(runtime__0[63]));
  LUT2 #(
    .INIT(4'hB)) 
    \runtime[63]_i_6 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[3]),
        .O(\runtime[63]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \runtime[63]_i_7 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[2]),
        .I2(axi_c_write_addr[3]),
        .O(\runtime[63]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[6]_i_1 
       (.I0(runtime0[5]),
        .I1(active_blocking_reg),
        .I2(runtime__0[6]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [6]),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[6]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[6]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [6]),
        .O(runtime__0[6]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[7]_i_1 
       (.I0(runtime0[6]),
        .I1(active_blocking_reg),
        .I2(runtime__0[7]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [7]),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[7]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[7]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [7]),
        .O(runtime__0[7]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[8]_i_1 
       (.I0(runtime0[7]),
        .I1(active_blocking_reg),
        .I2(runtime__0[8]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [8]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[8]_i_3 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[8]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [8]),
        .O(runtime__0[8]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \runtime[9]_i_1 
       (.I0(runtime0[8]),
        .I1(active_blocking_reg),
        .I2(runtime__0[9]),
        .I3(axi_c_write_valid),
        .I4(\runtime_reg[63] [9]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \runtime[9]_i_2 
       (.I0(axi_c_write_addr[5]),
        .I1(\runtime[63]_i_6_n_0 ),
        .I2(write_data[9]),
        .I3(\runtime[63]_i_7_n_0 ),
        .I4(axi_c_write_addr[6]),
        .I5(\runtime_reg[63] [9]),
        .O(runtime__0[9]));
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_control_ARREADY_INST_0
       (.I0(read_addr_fifo_full),
        .O(s_axi_control_ARREADY));
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_control_AWREADY_INST_0
       (.I0(write_addr_fifo_full),
        .O(s_axi_control_AWREADY));
  LUT5 #(
    .INIT(32'hDEEE0000)) 
    s_axi_control_BVALID_i_1
       (.I0(respond_count_reg_n_0_[0]),
        .I1(s_axi_control_BVALID_i_2_n_0),
        .I2(s_axi_control_BREADY),
        .I3(s_axi_control_BVALID),
        .I4(rstn),
        .O(s_axi_control_BVALID_i_1_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    s_axi_control_BVALID_i_2
       (.I0(respond_count_reg_n_0_[8]),
        .I1(s_axi_control_BVALID_i_3_n_0),
        .I2(respond_count_reg_n_0_[7]),
        .O(s_axi_control_BVALID_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    s_axi_control_BVALID_i_3
       (.I0(respond_count_reg_n_0_[4]),
        .I1(respond_count_reg_n_0_[1]),
        .I2(respond_count_reg_n_0_[3]),
        .I3(respond_count_reg_n_0_[2]),
        .I4(respond_count_reg_n_0_[5]),
        .I5(respond_count_reg_n_0_[6]),
        .O(s_axi_control_BVALID_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_control_BVALID_reg
       (.C(clk),
        .CE(1'b1),
        .D(s_axi_control_BVALID_i_1_n_0),
        .Q(s_axi_control_BVALID),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_control_RVALID_INST_0
       (.I0(s_axi_control_RREADY),
        .I1(read_data_fifo_empty),
        .O(s_axi_control_RVALID));
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_control_WREADY_INST_0
       (.I0(write_data_fifo_full),
        .O(s_axi_control_WREADY));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_7b_fwft_512depth write_addr_fifo
       (.clk(clk),
        .din(s_axi_control_AWADDR),
        .dout({axi_c_write_addr,write_addr_fifo_n_5,write_addr_fifo_n_6}),
        .empty(write_addr_fifo_empty),
        .full(NLW_write_addr_fifo_full_UNCONNECTED),
        .prog_full(write_addr_fifo_full),
        .rd_en(axi_c_write_valid),
        .rd_rst_busy(NLW_write_addr_fifo_rd_rst_busy_UNCONNECTED),
        .srst(SR),
        .wr_en(s_axi_control_AWVALID),
        .wr_rst_busy(NLW_write_addr_fifo_wr_rst_busy_UNCONNECTED));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[0]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[0]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [0]),
        .O(\write_blocking_ratio_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[10]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[10]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [10]),
        .O(\write_blocking_ratio_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[11]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[11]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [11]),
        .O(\write_blocking_ratio_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[12]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[12]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [12]),
        .O(\write_blocking_ratio_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[13]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[13]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [13]),
        .O(\write_blocking_ratio_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[14]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[14]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [14]),
        .O(\write_blocking_ratio_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[15]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[15]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [15]),
        .O(\write_blocking_ratio_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[16]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[16]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [16]),
        .O(\write_blocking_ratio_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[17]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[17]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [17]),
        .O(\write_blocking_ratio_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[18]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[18]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [18]),
        .O(\write_blocking_ratio_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[19]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[19]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [19]),
        .O(\write_blocking_ratio_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[1]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[1]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [1]),
        .O(\write_blocking_ratio_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[20]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[20]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [20]),
        .O(\write_blocking_ratio_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[21]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[21]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [21]),
        .O(\write_blocking_ratio_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[22]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[22]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [22]),
        .O(\write_blocking_ratio_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[23]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[23]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [23]),
        .O(\write_blocking_ratio_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[24]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[24]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [24]),
        .O(\write_blocking_ratio_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[25]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[25]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [25]),
        .O(\write_blocking_ratio_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[26]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[26]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [26]),
        .O(\write_blocking_ratio_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[27]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[27]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [27]),
        .O(\write_blocking_ratio_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[28]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[28]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [28]),
        .O(\write_blocking_ratio_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[29]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[29]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [29]),
        .O(\write_blocking_ratio_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[2]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[2]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [2]),
        .O(\write_blocking_ratio_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[30]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[30]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [30]),
        .O(\write_blocking_ratio_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[31]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[31]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [31]),
        .O(\write_blocking_ratio_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[3]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[3]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [3]),
        .O(\write_blocking_ratio_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[4]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[4]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [4]),
        .O(\write_blocking_ratio_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[5]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[5]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [5]),
        .O(\write_blocking_ratio_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[6]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[6]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [6]),
        .O(\write_blocking_ratio_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[7]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[7]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [7]),
        .O(\write_blocking_ratio_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[8]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[8]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [8]),
        .O(\write_blocking_ratio_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFEFFFFFF10000000)) 
    \write_blocking_ratio[9]_i_1 
       (.I0(\read_max_queue_size[31]_i_2_n_0 ),
        .I1(\read_max_queue_size[31]_i_3_n_0 ),
        .I2(write_data[9]),
        .I3(axi_c_write_addr[5]),
        .I4(axi_c_write_addr[6]),
        .I5(\write_blocking_ratio_reg[31]_0 [9]),
        .O(\write_blocking_ratio_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [0]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[0]),
        .O(\write_burst_size_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [10]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[10]),
        .O(\write_burst_size_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [11]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[11]),
        .O(\write_burst_size_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [12]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[12]),
        .O(\write_burst_size_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [13]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[13]),
        .O(\write_burst_size_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [14]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[14]),
        .O(\write_burst_size_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [15]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[15]),
        .O(\write_burst_size_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [16]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[16]),
        .O(\write_burst_size_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [17]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[17]),
        .O(\write_burst_size_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [18]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[18]),
        .O(\write_burst_size_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [19]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[19]),
        .O(\write_burst_size_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [1]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[1]),
        .O(\write_burst_size_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [20]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[20]),
        .O(\write_burst_size_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [21]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[21]),
        .O(\write_burst_size_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [22]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[22]),
        .O(\write_burst_size_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [23]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[23]),
        .O(\write_burst_size_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [24]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[24]),
        .O(\write_burst_size_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [25]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[25]),
        .O(\write_burst_size_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [26]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[26]),
        .O(\write_burst_size_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [27]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[27]),
        .O(\write_burst_size_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [28]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[28]),
        .O(\write_burst_size_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [29]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[29]),
        .O(\write_burst_size_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [2]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[2]),
        .O(\write_burst_size_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [30]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[30]),
        .O(\write_burst_size_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [31]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[31]),
        .O(\write_burst_size_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [3]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[3]),
        .O(\write_burst_size_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [4]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[4]),
        .O(\write_burst_size_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [5]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[5]),
        .O(\write_burst_size_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [6]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[6]),
        .O(\write_burst_size_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [7]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[7]),
        .O(\write_burst_size_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [8]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[8]),
        .O(\write_burst_size_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_burst_size[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(\write_burst_size_reg[31]_0 [9]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(write_data[9]),
        .O(\write_burst_size_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[0]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [0]),
        .O(\write_count_bursts_per_reset_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[10]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [10]),
        .O(\write_count_bursts_per_reset_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[11]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [11]),
        .O(\write_count_bursts_per_reset_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[12]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [12]),
        .O(\write_count_bursts_per_reset_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[13]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [13]),
        .O(\write_count_bursts_per_reset_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[14]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [14]),
        .O(\write_count_bursts_per_reset_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[15]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [15]),
        .O(\write_count_bursts_per_reset_reg[31] [15]));
  LUT2 #(
    .INIT(4'hB)) 
    \write_count_bursts_per_reset[15]_i_2 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[3]),
        .O(\write_count_bursts_per_reset[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \write_count_bursts_per_reset[15]_i_3 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[2]),
        .I2(axi_c_write_addr[3]),
        .O(\write_count_bursts_per_reset[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[16]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [16]),
        .O(\write_count_bursts_per_reset_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[17]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [17]),
        .O(\write_count_bursts_per_reset_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[18]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [18]),
        .O(\write_count_bursts_per_reset_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[19]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [19]),
        .O(\write_count_bursts_per_reset_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[1]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [1]),
        .O(\write_count_bursts_per_reset_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[20]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [20]),
        .O(\write_count_bursts_per_reset_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[21]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [21]),
        .O(\write_count_bursts_per_reset_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[22]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [22]),
        .O(\write_count_bursts_per_reset_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[23]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [23]),
        .O(\write_count_bursts_per_reset_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[24]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [24]),
        .O(\write_count_bursts_per_reset_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[25]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [25]),
        .O(\write_count_bursts_per_reset_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[26]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [26]),
        .O(\write_count_bursts_per_reset_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[27]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [27]),
        .O(\write_count_bursts_per_reset_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[28]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [28]),
        .O(\write_count_bursts_per_reset_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[29]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [29]),
        .O(\write_count_bursts_per_reset_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[2]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [2]),
        .O(\write_count_bursts_per_reset_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[30]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [30]),
        .O(\write_count_bursts_per_reset_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(write_data[31]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [31]),
        .O(\write_count_bursts_per_reset_reg[31] [31]));
  LUT2 #(
    .INIT(4'hB)) 
    \write_count_bursts_per_reset[31]_i_2 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[3]),
        .O(\write_count_bursts_per_reset[31]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \write_count_bursts_per_reset[31]_i_3 
       (.I0(axi_c_write_addr[4]),
        .I1(axi_c_write_addr[2]),
        .I2(axi_c_write_addr[3]),
        .O(\write_count_bursts_per_reset[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[3]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [3]),
        .O(\write_count_bursts_per_reset_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[4]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [4]),
        .O(\write_count_bursts_per_reset_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[5]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [5]),
        .O(\write_count_bursts_per_reset_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[6]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [6]),
        .O(\write_count_bursts_per_reset_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[7]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [7]),
        .O(\write_count_bursts_per_reset_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[8]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [8]),
        .O(\write_count_bursts_per_reset_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_count_bursts_per_reset[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(write_data[9]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(\write_count_bursts_per_reset_reg[31]_0 [9]),
        .O(\write_count_bursts_per_reset_reg[31] [9]));
  (* x_core_info = "fifo_generator_v13_2_2,Vivado 2018.2.1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_fifo_generator_32b_fwft_512depth write_data_fifo
       (.clk(clk),
        .din(s_axi_control_WDATA),
        .dout(write_data),
        .empty(write_data_fifo_empty),
        .full(NLW_write_data_fifo_full_UNCONNECTED),
        .prog_full(write_data_fifo_full),
        .rd_en(axi_c_write_valid),
        .rd_rst_busy(NLW_write_data_fifo_rd_rst_busy_UNCONNECTED),
        .srst(SR),
        .wr_en(s_axi_control_WVALID),
        .wr_rst_busy(NLW_write_data_fifo_wr_rst_busy_UNCONNECTED));
  LUT2 #(
    .INIT(4'h1)) 
    write_data_fifo_i_1
       (.I0(write_data_fifo_empty),
        .I1(write_addr_fifo_empty),
        .O(axi_c_write_valid));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [0]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[0]),
        .O(\write_max_queue_size_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [10]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[10]),
        .O(\write_max_queue_size_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [11]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[11]),
        .O(\write_max_queue_size_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [12]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[12]),
        .O(\write_max_queue_size_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [13]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[13]),
        .O(\write_max_queue_size_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [14]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[14]),
        .O(\write_max_queue_size_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [15]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[15]),
        .O(\write_max_queue_size_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [16]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[16]),
        .O(\write_max_queue_size_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [17]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[17]),
        .O(\write_max_queue_size_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [18]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[18]),
        .O(\write_max_queue_size_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [19]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[19]),
        .O(\write_max_queue_size_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [1]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[1]),
        .O(\write_max_queue_size_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [20]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[20]),
        .O(\write_max_queue_size_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [21]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[21]),
        .O(\write_max_queue_size_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [22]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[22]),
        .O(\write_max_queue_size_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [23]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[23]),
        .O(\write_max_queue_size_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [24]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[24]),
        .O(\write_max_queue_size_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [25]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[25]),
        .O(\write_max_queue_size_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [26]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[26]),
        .O(\write_max_queue_size_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [27]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[27]),
        .O(\write_max_queue_size_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [28]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[28]),
        .O(\write_max_queue_size_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [29]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[29]),
        .O(\write_max_queue_size_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [2]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[2]),
        .O(\write_max_queue_size_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [30]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[30]),
        .O(\write_max_queue_size_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [31]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[31]),
        .O(\write_max_queue_size_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [3]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[3]),
        .O(\write_max_queue_size_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [4]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[4]),
        .O(\write_max_queue_size_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [5]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[5]),
        .O(\write_max_queue_size_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [6]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[6]),
        .O(\write_max_queue_size_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [7]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[7]),
        .O(\write_max_queue_size_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [8]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[8]),
        .O(\write_max_queue_size_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_max_queue_size[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_max_queue_size[31]_i_2_n_0 ),
        .I3(\write_max_queue_size_reg[31]_0 [9]),
        .I4(\read_max_queue_size[31]_i_3_n_0 ),
        .I5(write_data[9]),
        .O(\write_max_queue_size_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[0]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [0]),
        .O(\write_start_DDR_address_reg[63] [0]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[10]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [10]),
        .O(\write_start_DDR_address_reg[63] [10]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[11]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [11]),
        .O(\write_start_DDR_address_reg[63] [11]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[12]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [12]),
        .O(\write_start_DDR_address_reg[63] [12]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[13]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [13]),
        .O(\write_start_DDR_address_reg[63] [13]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[14]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [14]),
        .O(\write_start_DDR_address_reg[63] [14]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[15]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [15]),
        .O(\write_start_DDR_address_reg[63] [15]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[16]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [16]),
        .O(\write_start_DDR_address_reg[63] [16]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[17]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [17]),
        .O(\write_start_DDR_address_reg[63] [17]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[18]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [18]),
        .O(\write_start_DDR_address_reg[63] [18]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[19]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [19]),
        .O(\write_start_DDR_address_reg[63] [19]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[1]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [1]),
        .O(\write_start_DDR_address_reg[63] [1]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[20]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [20]),
        .O(\write_start_DDR_address_reg[63] [20]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[21]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [21]),
        .O(\write_start_DDR_address_reg[63] [21]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[22]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [22]),
        .O(\write_start_DDR_address_reg[63] [22]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[23]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [23]),
        .O(\write_start_DDR_address_reg[63] [23]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[24]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [24]),
        .O(\write_start_DDR_address_reg[63] [24]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[25]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [25]),
        .O(\write_start_DDR_address_reg[63] [25]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[26]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [26]),
        .O(\write_start_DDR_address_reg[63] [26]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[27]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [27]),
        .O(\write_start_DDR_address_reg[63] [27]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[28]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [28]),
        .O(\write_start_DDR_address_reg[63] [28]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[29]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [29]),
        .O(\write_start_DDR_address_reg[63] [29]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[2]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [2]),
        .O(\write_start_DDR_address_reg[63] [2]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[30]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [30]),
        .O(\write_start_DDR_address_reg[63] [30]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[31]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [31]),
        .O(\write_start_DDR_address_reg[63] [31]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[32]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [32]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[0]),
        .O(\write_start_DDR_address_reg[63] [32]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[33]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [33]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[1]),
        .O(\write_start_DDR_address_reg[63] [33]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[34]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [34]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[2]),
        .O(\write_start_DDR_address_reg[63] [34]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[35]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [35]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[3]),
        .O(\write_start_DDR_address_reg[63] [35]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[36]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [36]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[4]),
        .O(\write_start_DDR_address_reg[63] [36]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[37]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [37]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[5]),
        .O(\write_start_DDR_address_reg[63] [37]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[38]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [38]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[6]),
        .O(\write_start_DDR_address_reg[63] [38]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[39]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [39]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[7]),
        .O(\write_start_DDR_address_reg[63] [39]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[3]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [3]),
        .O(\write_start_DDR_address_reg[63] [3]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[40]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [40]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[8]),
        .O(\write_start_DDR_address_reg[63] [40]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[41]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [41]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[9]),
        .O(\write_start_DDR_address_reg[63] [41]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[42]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [42]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[10]),
        .O(\write_start_DDR_address_reg[63] [42]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[43]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [43]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[11]),
        .O(\write_start_DDR_address_reg[63] [43]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[44]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [44]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[12]),
        .O(\write_start_DDR_address_reg[63] [44]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[45]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [45]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[13]),
        .O(\write_start_DDR_address_reg[63] [45]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[46]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [46]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[14]),
        .O(\write_start_DDR_address_reg[63] [46]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[47]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [47]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[15]),
        .O(\write_start_DDR_address_reg[63] [47]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[48]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [48]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[16]),
        .O(\write_start_DDR_address_reg[63] [48]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[49]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [49]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[17]),
        .O(\write_start_DDR_address_reg[63] [49]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[4]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [4]),
        .O(\write_start_DDR_address_reg[63] [4]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[50]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [50]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[18]),
        .O(\write_start_DDR_address_reg[63] [50]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[51]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [51]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[19]),
        .O(\write_start_DDR_address_reg[63] [51]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[52]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [52]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[20]),
        .O(\write_start_DDR_address_reg[63] [52]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[53]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [53]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[21]),
        .O(\write_start_DDR_address_reg[63] [53]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[54]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [54]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[22]),
        .O(\write_start_DDR_address_reg[63] [54]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[55]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [55]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[23]),
        .O(\write_start_DDR_address_reg[63] [55]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[56]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [56]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[24]),
        .O(\write_start_DDR_address_reg[63] [56]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[57]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [57]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[25]),
        .O(\write_start_DDR_address_reg[63] [57]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[58]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [58]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[26]),
        .O(\write_start_DDR_address_reg[63] [58]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[59]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [59]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[27]),
        .O(\write_start_DDR_address_reg[63] [59]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[5]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [5]),
        .O(\write_start_DDR_address_reg[63] [5]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[60]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [60]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[28]),
        .O(\write_start_DDR_address_reg[63] [60]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[61]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [61]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[29]),
        .O(\write_start_DDR_address_reg[63] [61]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[62]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [62]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[30]),
        .O(\write_start_DDR_address_reg[63] [62]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_start_DDR_address[63]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(\write_start_DDR_address_reg[63]_0 [63]),
        .I4(active_write_i_3_n_0),
        .I5(write_data[31]),
        .O(\write_start_DDR_address_reg[63] [63]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[6]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [6]),
        .O(\write_start_DDR_address_reg[63] [6]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[7]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [7]),
        .O(\write_start_DDR_address_reg[63] [7]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[8]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [8]),
        .O(\write_start_DDR_address_reg[63] [8]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_start_DDR_address[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(active_write_i_2_n_0),
        .I3(write_data[9]),
        .I4(active_write_i_3_n_0),
        .I5(\write_start_DDR_address_reg[63]_0 [9]),
        .O(\write_start_DDR_address_reg[63] [9]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [0]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[0]),
        .O(\write_step_DDR_address_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [10]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[10]),
        .O(\write_step_DDR_address_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [11]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[11]),
        .O(\write_step_DDR_address_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [12]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[12]),
        .O(\write_step_DDR_address_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [13]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[13]),
        .O(\write_step_DDR_address_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [14]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[14]),
        .O(\write_step_DDR_address_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [15]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[15]),
        .O(\write_step_DDR_address_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [16]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[16]),
        .O(\write_step_DDR_address_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [17]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[17]),
        .O(\write_step_DDR_address_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [18]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[18]),
        .O(\write_step_DDR_address_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [19]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[19]),
        .O(\write_step_DDR_address_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [1]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[1]),
        .O(\write_step_DDR_address_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [20]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[20]),
        .O(\write_step_DDR_address_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [21]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[21]),
        .O(\write_step_DDR_address_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [22]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[22]),
        .O(\write_step_DDR_address_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [23]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[23]),
        .O(\write_step_DDR_address_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [24]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[24]),
        .O(\write_step_DDR_address_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [25]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[25]),
        .O(\write_step_DDR_address_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [26]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[26]),
        .O(\write_step_DDR_address_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [27]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[27]),
        .O(\write_step_DDR_address_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [28]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[28]),
        .O(\write_step_DDR_address_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [29]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[29]),
        .O(\write_step_DDR_address_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [2]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[2]),
        .O(\write_step_DDR_address_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [30]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[30]),
        .O(\write_step_DDR_address_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[31]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [31]),
        .I4(\write_count_bursts_per_reset[31]_i_3_n_0 ),
        .I5(write_data[31]),
        .O(\write_step_DDR_address_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [3]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[3]),
        .O(\write_step_DDR_address_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [4]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[4]),
        .O(\write_step_DDR_address_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [5]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[5]),
        .O(\write_step_DDR_address_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [6]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[6]),
        .O(\write_step_DDR_address_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [7]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[7]),
        .O(\write_step_DDR_address_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [8]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[8]),
        .O(\write_step_DDR_address_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \write_step_DDR_address[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\write_count_bursts_per_reset[15]_i_2_n_0 ),
        .I3(\write_step_DDR_address_reg[31]_0 [9]),
        .I4(\write_count_bursts_per_reset[15]_i_3_n_0 ),
        .I5(write_data[9]),
        .O(\write_step_DDR_address_reg[31] [9]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[0]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[0]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [0]),
        .O(\write_ticks_per_burst_reg[31] [0]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[10]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[10]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [10]),
        .O(\write_ticks_per_burst_reg[31] [10]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[11]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[11]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [11]),
        .O(\write_ticks_per_burst_reg[31] [11]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[12]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[12]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [12]),
        .O(\write_ticks_per_burst_reg[31] [12]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[13]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[13]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [13]),
        .O(\write_ticks_per_burst_reg[31] [13]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[14]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[14]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [14]),
        .O(\write_ticks_per_burst_reg[31] [14]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[15]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[15]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [15]),
        .O(\write_ticks_per_burst_reg[31] [15]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[16]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[16]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [16]),
        .O(\write_ticks_per_burst_reg[31] [16]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[17]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[17]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [17]),
        .O(\write_ticks_per_burst_reg[31] [17]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[18]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[18]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [18]),
        .O(\write_ticks_per_burst_reg[31] [18]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[19]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[19]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [19]),
        .O(\write_ticks_per_burst_reg[31] [19]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[1]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[1]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [1]),
        .O(\write_ticks_per_burst_reg[31] [1]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[20]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[20]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [20]),
        .O(\write_ticks_per_burst_reg[31] [20]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[21]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[21]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [21]),
        .O(\write_ticks_per_burst_reg[31] [21]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[22]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[22]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [22]),
        .O(\write_ticks_per_burst_reg[31] [22]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[23]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[23]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [23]),
        .O(\write_ticks_per_burst_reg[31] [23]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[24]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[24]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [24]),
        .O(\write_ticks_per_burst_reg[31] [24]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[25]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[25]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [25]),
        .O(\write_ticks_per_burst_reg[31] [25]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[26]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[26]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [26]),
        .O(\write_ticks_per_burst_reg[31] [26]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[27]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[27]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [27]),
        .O(\write_ticks_per_burst_reg[31] [27]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[28]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[28]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [28]),
        .O(\write_ticks_per_burst_reg[31] [28]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[29]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[29]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [29]),
        .O(\write_ticks_per_burst_reg[31] [29]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[2]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[2]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [2]),
        .O(\write_ticks_per_burst_reg[31] [2]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[30]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[30]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [30]),
        .O(\write_ticks_per_burst_reg[31] [30]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[31]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[31]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [31]),
        .O(\write_ticks_per_burst_reg[31] [31]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[3]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[3]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [3]),
        .O(\write_ticks_per_burst_reg[31] [3]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[4]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[4]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [4]),
        .O(\write_ticks_per_burst_reg[31] [4]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[5]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[5]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [5]),
        .O(\write_ticks_per_burst_reg[31] [5]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[6]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[6]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [6]),
        .O(\write_ticks_per_burst_reg[31] [6]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[7]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[7]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [7]),
        .O(\write_ticks_per_burst_reg[31] [7]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[8]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[8]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [8]),
        .O(\write_ticks_per_burst_reg[31] [8]));
  LUT6 #(
    .INIT(64'hFFFEFFFF01000000)) 
    \write_ticks_per_burst[9]_i_1 
       (.I0(axi_c_write_addr[6]),
        .I1(axi_c_write_addr[5]),
        .I2(\read_ticks_per_burst[31]_i_2_n_0 ),
        .I3(write_data[9]),
        .I4(\read_ticks_per_burst[31]_i_3_n_0 ),
        .I5(\write_ticks_per_burst_reg[31]_0 [9]),
        .O(\write_ticks_per_burst_reg[31] [9]));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
